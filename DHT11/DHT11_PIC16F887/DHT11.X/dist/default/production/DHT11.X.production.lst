

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Mar 17 20:39:55 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0088                     	;# 
   258  0089                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  008F                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  009F                     	;# 
   281  0105                     	;# 
   282  0107                     	;# 
   283  0108                     	;# 
   284  0109                     	;# 
   285  010C                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  0185                     	;# 
   291  0187                     	;# 
   292  0188                     	;# 
   293  0189                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001D                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0086                     	;# 
   334  0087                     	;# 
   335  0088                     	;# 
   336  0089                     	;# 
   337  008C                     	;# 
   338  008D                     	;# 
   339  008E                     	;# 
   340  008F                     	;# 
   341  0090                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0094                     	;# 
   348  0095                     	;# 
   349  0096                     	;# 
   350  0097                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009A                     	;# 
   354  009B                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  0105                     	;# 
   360  0107                     	;# 
   361  0108                     	;# 
   362  0109                     	;# 
   363  010C                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  010F                     	;# 
   368  0185                     	;# 
   369  0187                     	;# 
   370  0188                     	;# 
   371  0189                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374                           
   375                           	psect	strings
   376  0003                     __pstrings:
   377  0003                     stringtab:
   378  0003                     __stringtab:
   379  0003                     stringcode:	
   380                           ;	String table - string pointers are 1 byte each
   381                           
   382  0003                     stringdir:
   383  0003  3000               	movlw	high stringdir
   384  0004  008A               	movwf	10
   385  0005  0804               	movf	4,w
   386  0006  0A84               	incf	4,f
   387  0007  0782               	addwf	2,f
   388  0008                     __stringbase:
   389  0008  3400               	retlw	0
   390  0009                     __end_of__stringtab:
   391  0009                     _dpowers:
   392  0009  3401               	retlw	1
   393  000A  3400               	retlw	0
   394  000B  340A               	retlw	10
   395  000C  3400               	retlw	0
   396  000D  3464               	retlw	100
   397  000E  3400               	retlw	0
   398  000F  34E8               	retlw	232
   399  0010  3403               	retlw	3
   400  0011  3410               	retlw	16
   401  0012  3427               	retlw	39
   402  0013                     __end_of_dpowers:
   403  001A                     _RCREG	set	26
   404  0019                     _TXREG	set	25
   405  0018                     _RCSTAbits	set	24
   406  0008                     _PORTDbits	set	8
   407  0088                     _TRISDbits	set	136
   408  0098                     _TXSTAbits	set	152
   409  0099                     _SPBRG	set	153
   410  0087                     _TRISCbits	set	135
   411  0088                     _TRISD	set	136
   412  0013                     STR_1:
   413  0013  3454               	retlw	84	;'T'
   414  0014  343A               	retlw	58	;':'
   415  0015  3420               	retlw	32	;' '
   416  0016  3425               	retlw	37	;'%'
   417  0017  3464               	retlw	100	;'d'
   418  0018  342C               	retlw	44	;','
   419  0019  3420               	retlw	32	;' '
   420  001A  3448               	retlw	72	;'H'
   421  001B  343A               	retlw	58	;':'
   422  001C  3425               	retlw	37	;'%'
   423  001D  3464               	retlw	100	;'d'
   424  001E  340A               	retlw	10
   425  001F  3400               	retlw	0
   426                           
   427                           	psect	cinit
   428  07EB                     start_initialization:	
   429                           ; #config settings
   430                           
   431  07EB                     __initialization:
   432                           
   433                           ; Clear objects allocated to BANK0
   434  07EB  1383               	bcf	3,7	;select IRP bank0
   435  07EC  303D               	movlw	low __pbssBANK0
   436  07ED  0084               	movwf	4
   437  07EE  3051               	movlw	low (__pbssBANK0+20)
   438  07EF  120A  118A  2491  120A  118A  	fcall	clear_ram0
   439                           
   440                           ; Clear objects allocated to BANK1
   441  07F4  30A0               	movlw	low __pbssBANK1
   442  07F5  0084               	movwf	4
   443  07F6  30C8               	movlw	low (__pbssBANK1+40)
   444  07F7  120A  118A  2491  120A  118A  	fcall	clear_ram0
   445  07FC                     end_of_initialization:	
   446                           ;End of C runtime variable initialization code
   447                           
   448  07FC                     __end_of__initialization:
   449  07FC  0183               	clrf	3
   450  07FD  120A  118A  2CE5   	ljmp	_main	;jump to C main() function
   451                           
   452                           	psect	bssBANK0
   453  003D                     __pbssBANK0:
   454  003D                     _measure:
   455  003D                     	ds	20
   456                           
   457                           	psect	bssBANK1
   458  00A0                     __pbssBANK1:
   459  00A0                     _buffer:
   460  00A0                     	ds	40
   461                           
   462                           	psect	clrtext
   463  0491                     clear_ram0:	
   464                           ;	Called with FSR containing the base address, and
   465                           ;	W with the last address+1
   466                           
   467  0491  0064               	clrwdt	;clear the watchdog before getting into this loop
   468  0492                     clrloop0:
   469  0492  0180               	clrf	0	;clear RAM location pointed to by FSR
   470  0493  0A84               	incf	4,f	;increment pointer
   471  0494  0604               	xorwf	4,w	;XOR with final address
   472  0495  1903               	btfsc	3,2	;have we reached the end yet?
   473  0496  3400               	retlw	0	;all done for this memory range, return
   474  0497  0604               	xorwf	4,w	;XOR again to restore value
   475  0498  2C92               	goto	clrloop0	;do the next byte
   476                           
   477                           	psect	cstackCOMMON
   478  0070                     __pcstackCOMMON:
   479  0070                     ?_DHT11_read:
   480  0070                     ?_drive_OW_high:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ??_drive_OW_high:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ?_drive_OW_low:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ??_drive_OW_low:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ?_slaveRespond:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ??_slaveRespond:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ?_DHT11_readByte:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ??_DHT11_readByte:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ?_main:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?_usart_Tx:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ??_usart_Tx:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ?_usart_TxStr:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_DHT11_start:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ??_DHT11_start:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?___lwdiv:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?___aldiv:	
   526                           ; 2 bytes @ 0x0
   527                           
   528  0070                     usart_Tx@send:	
   529                           ; 4 bytes @ 0x0
   530                           
   531  0070                     ___lwdiv@divisor:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ___aldiv@divisor:	
   535                           ; 2 bytes @ 0x0
   536                           
   537                           
   538                           ; 4 bytes @ 0x0
   539  0070                     	ds	1
   540  0071                     ??_usart_TxStr:
   541  0071                     usart_TxStr@str:	
   542                           ; 1 bytes @ 0x1
   543                           
   544  0071                     DHT11_readByte@i:	
   545                           ; 1 bytes @ 0x1
   546                           
   547                           
   548                           ; 2 bytes @ 0x1
   549  0071                     	ds	1
   550  0072                     ___lwdiv@dividend:
   551                           
   552                           ; 2 bytes @ 0x2
   553  0072                     	ds	1
   554  0073                     DHT11_readByte@dataByte:
   555                           
   556                           ; 1 bytes @ 0x3
   557  0073                     	ds	1
   558  0074                     ??___lwdiv:
   559  0074                     ___lwdiv@quotient:	
   560                           ; 1 bytes @ 0x4
   561                           
   562  0074                     ___aldiv@dividend:	
   563                           ; 2 bytes @ 0x4
   564                           
   565                           
   566                           ; 4 bytes @ 0x4
   567  0074                     	ds	2
   568  0076                     ___lwdiv@counter:
   569                           
   570                           ; 1 bytes @ 0x6
   571  0076                     	ds	1
   572  0077                     ?___lwmod:
   573  0077                     ___lwmod@divisor:	
   574                           ; 2 bytes @ 0x7
   575                           
   576                           
   577                           ; 2 bytes @ 0x7
   578  0077                     	ds	1
   579  0078                     ??___aldiv:
   580                           
   581                           ; 1 bytes @ 0x8
   582  0078                     	ds	1
   583  0079                     ??_usart_init:
   584  0079                     ___lwmod@dividend:	
   585                           ; 1 bytes @ 0x9
   586                           
   587  0079                     _usart_init$946:	
   588                           ; 2 bytes @ 0x9
   589                           
   590                           
   591                           ; 4 bytes @ 0x9
   592  0079                     	ds	2
   593  007B                     ??___lwmod:
   594  007B                     ___lwmod@counter:	
   595                           ; 1 bytes @ 0xB
   596                           
   597                           
   598                           ; 1 bytes @ 0xB
   599  007B                     	ds	2
   600                           
   601                           	psect	cstackBANK0
   602  0020                     __pcstackBANK0:
   603  0020                     ?_sprintf:
   604  0020                     sprintf@f:	
   605                           ; 2 bytes @ 0x0
   606                           
   607  0020                     ___aldiv@counter:	
   608                           ; 1 bytes @ 0x0
   609                           
   610                           
   611                           ; 1 bytes @ 0x0
   612  0020                     	ds	1
   613  0021                     ___aldiv@sign:
   614                           
   615                           ; 1 bytes @ 0x1
   616  0021                     	ds	1
   617  0022                     ___aldiv@quotient:
   618                           
   619                           ; 4 bytes @ 0x2
   620  0022                     	ds	3
   621  0025                     ??_sprintf:
   622                           
   623                           ; 1 bytes @ 0x5
   624  0025                     	ds	1
   625  0026                     ?_usart_init:
   626  0026                     usart_init@BAUD:	
   627                           ; 1 bytes @ 0x6
   628                           
   629                           
   630                           ; 4 bytes @ 0x6
   631  0026                     	ds	2
   632  0028                     sprintf@ap:
   633                           
   634                           ; 1 bytes @ 0x8
   635  0028                     	ds	1
   636  0029                     sprintf@flag:
   637                           
   638                           ; 1 bytes @ 0x9
   639  0029                     	ds	1
   640  002A                     sprintf@prec:
   641                           
   642                           ; 1 bytes @ 0xA
   643  002A                     	ds	1
   644  002B                     sprintf@val:
   645                           
   646                           ; 2 bytes @ 0xB
   647  002B                     	ds	2
   648  002D                     sprintf@sp:
   649                           
   650                           ; 1 bytes @ 0xD
   651  002D                     	ds	1
   652  002E                     sprintf@c:
   653                           
   654                           ; 1 bytes @ 0xE
   655  002E                     	ds	1
   656  002F                     ??_DHT11_read:
   657                           
   658                           ; 1 bytes @ 0xF
   659  002F                     	ds	4
   660  0033                     DHT11_read@info:
   661                           
   662                           ; 5 bytes @ 0x13
   663  0033                     	ds	5
   664  0038                     DHT11_read@temp:
   665                           
   666                           ; 1 bytes @ 0x18
   667  0038                     	ds	1
   668  0039                     DHT11_read@hum:
   669                           
   670                           ; 1 bytes @ 0x19
   671  0039                     	ds	1
   672  003A                     ??_main:
   673                           
   674                           ; 1 bytes @ 0x1A
   675  003A                     	ds	3
   676                           
   677                           	psect	maintext
   678  04E5                     __pmaintext:	
   679 ;;
   680 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   681 ;;
   682 ;; *************** function _main *****************
   683 ;; Defined at:
   684 ;;		line 21 in file "main.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;		None
   687 ;; Auto vars:     Size  Location     Type
   688 ;;		None
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : B00/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   698 ;;      Params:         0       0       0       0       0
   699 ;;      Locals:         0       0       0       0       0
   700 ;;      Temps:          0       3       0       0       0
   701 ;;      Totals:         0       3       0       0       0
   702 ;;Total ram usage:        3 bytes
   703 ;; Hardware stack levels required when called:    3
   704 ;; This function calls:
   705 ;;		_DHT11_read
   706 ;;		_usart_init
   707 ;; This function is called by:
   708 ;;		Startup code after reset
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           
   713                           ;psect for function _main
   714  04E5                     _main:
   715  04E5                     l1274:	
   716                           ;incstack = 0
   717                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   718                           
   719                           
   720                           ;main.c: 23:     TRISD = 0x00;
   721  04E5  1683               	bsf	3,5	;RP0=1, select bank1
   722  04E6  1303               	bcf	3,6	;RP1=0, select bank1
   723  04E7  0188               	clrf	8	;volatile
   724  04E8                     l1276:
   725                           
   726                           ;main.c: 24:     usart_init(9600);
   727  04E8  3000               	movlw	0
   728  04E9  1283               	bcf	3,5	;RP0=0, select bank0
   729  04EA  1303               	bcf	3,6	;RP1=0, select bank0
   730  04EB  00A9               	movwf	usart_init@BAUD+3
   731  04EC  3000               	movlw	0
   732  04ED  00A8               	movwf	usart_init@BAUD+2
   733  04EE  3025               	movlw	37
   734  04EF  00A7               	movwf	usart_init@BAUD+1
   735  04F0  3080               	movlw	128
   736  04F1  00A6               	movwf	usart_init@BAUD
   737  04F2  120A  118A  25C0  120A  118A  	fcall	_usart_init
   738  04F7                     l1278:
   739                           
   740                           ;main.c: 27:         DHT11_read();
   741  04F7  120A  118A  260B  120A  118A  	fcall	_DHT11_read
   742  04FC                     l1280:
   743                           
   744                           ;main.c: 28:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   745  04FC  300B               	movlw	11
   746  04FD  1283               	bcf	3,5	;RP0=0, select bank0
   747  04FE  1303               	bcf	3,6	;RP1=0, select bank0
   748  04FF  00BC               	movwf	??_main+2
   749  0500  3026               	movlw	38
   750  0501  00BB               	movwf	??_main+1
   751  0502  305D               	movlw	93
   752  0503  00BA               	movwf	??_main
   753  0504                     u817:
   754  0504  0BBA               	decfsz	??_main,f
   755  0505  2D04               	goto	u817
   756  0506  0BBB               	decfsz	??_main+1,f
   757  0507  2D04               	goto	u817
   758  0508  0BBC               	decfsz	??_main+2,f
   759  0509  2D04               	goto	u817
   760  050A  2CF7               	goto	l1278
   761  050B  120A  118A  2800   	ljmp	start
   762  050E                     __end_of_main:
   763                           
   764                           	psect	text1
   765  05C0                     __ptext1:	
   766 ;; *************** function _usart_init *****************
   767 ;; Defined at:
   768 ;;		line 14 in file "usart.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;  BAUD            4    6[BANK0 ] long 
   771 ;; Auto vars:     Size  Location     Type
   772 ;;		None
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   782 ;;      Params:         0       4       0       0       0
   783 ;;      Locals:         4       0       0       0       0
   784 ;;      Temps:          0       0       0       0       0
   785 ;;      Totals:         4       4       0       0       0
   786 ;;Total ram usage:        8 bytes
   787 ;; Hardware stack levels used:    1
   788 ;; Hardware stack levels required when called:    1
   789 ;; This function calls:
   790 ;;		___aldiv
   791 ;; This function is called by:
   792 ;;		_main
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           
   797                           ;psect for function _usart_init
   798  05C0                     _usart_init:
   799  05C0                     l1236:	
   800                           ;incstack = 0
   801                           ; Regs used in _usart_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   802                           
   803                           
   804                           ;usart.c: 16:     TRISCbits.TRISC6 = 0;
   805  05C0  1683               	bsf	3,5	;RP0=1, select bank1
   806  05C1  1303               	bcf	3,6	;RP1=0, select bank1
   807  05C2  1307               	bcf	7,6	;volatile
   808                           
   809                           ;usart.c: 17:     TRISCbits.TRISC7 = 1;
   810  05C3  1787               	bsf	7,7	;volatile
   811  05C4                     l1238:
   812                           
   813                           ;usart.c: 18:     SPBRG = (unsigned char)(((8000000/BAUD)/64) - 1);
   814  05C4  1283               	bcf	3,5	;RP0=0, select bank0
   815  05C5  1303               	bcf	3,6	;RP1=0, select bank0
   816  05C6  0829               	movf	usart_init@BAUD+3,w
   817  05C7  00F3               	movwf	___aldiv@divisor+3
   818  05C8  0828               	movf	usart_init@BAUD+2,w
   819  05C9  00F2               	movwf	___aldiv@divisor+2
   820  05CA  0827               	movf	usart_init@BAUD+1,w
   821  05CB  00F1               	movwf	___aldiv@divisor+1
   822  05CC  0826               	movf	usart_init@BAUD,w
   823  05CD  00F0               	movwf	___aldiv@divisor
   824  05CE  3000               	movlw	0
   825  05CF  00F7               	movwf	___aldiv@dividend+3
   826  05D0  307A               	movlw	122
   827  05D1  00F6               	movwf	___aldiv@dividend+2
   828  05D2  3012               	movlw	18
   829  05D3  00F5               	movwf	___aldiv@dividend+1
   830  05D4  3000               	movlw	0
   831  05D5  00F4               	movwf	___aldiv@dividend
   832  05D6  120A  118A  2666  120A  118A  	fcall	___aldiv
   833  05DB  0873               	movf	?___aldiv+3,w
   834  05DC  00FC               	movwf	_usart_init$946+3
   835  05DD  0872               	movf	?___aldiv+2,w
   836  05DE  00FB               	movwf	_usart_init$946+2
   837  05DF  0871               	movf	?___aldiv+1,w
   838  05E0  00FA               	movwf	_usart_init$946+1
   839  05E1  0870               	movf	?___aldiv,w
   840  05E2  00F9               	movwf	_usart_init$946
   841                           
   842                           ;usart.c: 18:     SPBRG = (unsigned char)(((8000000/BAUD)/64) - 1);
   843  05E3  3000               	movlw	0
   844  05E4  00F3               	movwf	___aldiv@divisor+3
   845  05E5  3000               	movlw	0
   846  05E6  00F2               	movwf	___aldiv@divisor+2
   847  05E7  3000               	movlw	0
   848  05E8  00F1               	movwf	___aldiv@divisor+1
   849  05E9  3040               	movlw	64
   850  05EA  00F0               	movwf	___aldiv@divisor
   851  05EB  087C               	movf	_usart_init$946+3,w
   852  05EC  00F7               	movwf	___aldiv@dividend+3
   853  05ED  087B               	movf	_usart_init$946+2,w
   854  05EE  00F6               	movwf	___aldiv@dividend+2
   855  05EF  087A               	movf	_usart_init$946+1,w
   856  05F0  00F5               	movwf	___aldiv@dividend+1
   857  05F1  0879               	movf	_usart_init$946,w
   858  05F2  00F4               	movwf	___aldiv@dividend
   859  05F3  120A  118A  2666  120A  118A  	fcall	___aldiv
   860  05F8  0870               	movf	?___aldiv,w
   861  05F9  3EFF               	addlw	255
   862  05FA  1683               	bsf	3,5	;RP0=1, select bank1
   863  05FB  1303               	bcf	3,6	;RP1=0, select bank1
   864  05FC  0099               	movwf	25	;volatile
   865  05FD                     l1240:
   866                           
   867                           ;usart.c: 19:     TXSTAbits.BRGH = 0;
   868  05FD  1118               	bcf	24,2	;volatile
   869  05FE                     l1242:
   870                           
   871                           ;usart.c: 20:     TXSTAbits.SYNC = 0;
   872  05FE  1218               	bcf	24,4	;volatile
   873  05FF                     l1244:
   874                           
   875                           ;usart.c: 21:     RCSTAbits.SPEN = 1;
   876  05FF  1283               	bcf	3,5	;RP0=0, select bank0
   877  0600  1303               	bcf	3,6	;RP1=0, select bank0
   878  0601  1798               	bsf	24,7	;volatile
   879  0602                     l1246:
   880                           
   881                           ;usart.c: 24:     TXSTAbits.TX9 = 0;
   882  0602  1683               	bsf	3,5	;RP0=1, select bank1
   883  0603  1303               	bcf	3,6	;RP1=0, select bank1
   884  0604  1318               	bcf	24,6	;volatile
   885  0605                     l1248:
   886                           
   887                           ;usart.c: 25:     TXSTAbits.TXEN = 1;
   888  0605  1698               	bsf	24,5	;volatile
   889  0606                     l1250:
   890                           
   891                           ;usart.c: 28:     RCSTAbits.RC9 = 0;
   892  0606  1283               	bcf	3,5	;RP0=0, select bank0
   893  0607  1303               	bcf	3,6	;RP1=0, select bank0
   894  0608  1318               	bcf	24,6	;volatile
   895  0609                     l1252:
   896                           
   897                           ;usart.c: 29:     RCSTAbits.CREN = 1;
   898  0609  1618               	bsf	24,4	;volatile
   899  060A                     l40:
   900  060A  0008               	return
   901  060B                     __end_of_usart_init:
   902                           
   903                           	psect	text2
   904  0666                     __ptext2:	
   905 ;; *************** function ___aldiv *****************
   906 ;; Defined at:
   907 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\aldiv.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;  divisor         4    0[COMMON] long 
   910 ;;  dividend        4    4[COMMON] long 
   911 ;; Auto vars:     Size  Location     Type
   912 ;;  quotient        4    2[BANK0 ] long 
   913 ;;  sign            1    1[BANK0 ] unsigned char 
   914 ;;  counter         1    0[BANK0 ] unsigned char 
   915 ;; Return value:  Size  Location     Type
   916 ;;                  4    0[COMMON] long 
   917 ;; Registers used:
   918 ;;		wreg, status,2, status,0, btemp+1
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   924 ;;      Params:         8       0       0       0       0
   925 ;;      Locals:         0       6       0       0       0
   926 ;;      Temps:          1       0       0       0       0
   927 ;;      Totals:         9       6       0       0       0
   928 ;;Total ram usage:       15 bytes
   929 ;; Hardware stack levels used:    1
   930 ;; This function calls:
   931 ;;		Nothing
   932 ;; This function is called by:
   933 ;;		_usart_init
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           
   938                           ;psect for function ___aldiv
   939  0666                     ___aldiv:
   940  0666                     l1194:	
   941                           ;incstack = 0
   942                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
   943                           
   944  0666  1283               	bcf	3,5	;RP0=0, select bank0
   945  0667  1303               	bcf	3,6	;RP1=0, select bank0
   946  0668  01A1               	clrf	___aldiv@sign
   947  0669                     l1196:
   948  0669  1FF3               	btfss	___aldiv@divisor+3,7
   949  066A  2E6C               	goto	u711
   950  066B  2E6D               	goto	u710
   951  066C                     u711:
   952  066C  2E7A               	goto	l300
   953  066D                     u710:
   954  066D                     l1198:
   955  066D  09F0               	comf	___aldiv@divisor,f
   956  066E  09F1               	comf	___aldiv@divisor+1,f
   957  066F  09F2               	comf	___aldiv@divisor+2,f
   958  0670  09F3               	comf	___aldiv@divisor+3,f
   959  0671  0AF0               	incf	___aldiv@divisor,f
   960  0672  1903               	skipnz
   961  0673  0AF1               	incf	___aldiv@divisor+1,f
   962  0674  1903               	skipnz
   963  0675  0AF2               	incf	___aldiv@divisor+2,f
   964  0676  1903               	skipnz
   965  0677  0AF3               	incf	___aldiv@divisor+3,f
   966  0678  01A1               	clrf	___aldiv@sign
   967  0679  0AA1               	incf	___aldiv@sign,f
   968  067A                     l300:
   969  067A  1FF7               	btfss	___aldiv@dividend+3,7
   970  067B  2E7D               	goto	u721
   971  067C  2E7E               	goto	u720
   972  067D                     u721:
   973  067D  2E8D               	goto	l1204
   974  067E                     u720:
   975  067E                     l1200:
   976  067E  09F4               	comf	___aldiv@dividend,f
   977  067F  09F5               	comf	___aldiv@dividend+1,f
   978  0680  09F6               	comf	___aldiv@dividend+2,f
   979  0681  09F7               	comf	___aldiv@dividend+3,f
   980  0682  0AF4               	incf	___aldiv@dividend,f
   981  0683  1903               	skipnz
   982  0684  0AF5               	incf	___aldiv@dividend+1,f
   983  0685  1903               	skipnz
   984  0686  0AF6               	incf	___aldiv@dividend+2,f
   985  0687  1903               	skipnz
   986  0688  0AF7               	incf	___aldiv@dividend+3,f
   987  0689                     l1202:
   988  0689  3001               	movlw	1
   989  068A  00FF               	movwf	btemp+1
   990  068B  087F               	movf	btemp+1,w
   991  068C  06A1               	xorwf	___aldiv@sign,f
   992  068D                     l1204:
   993  068D  3000               	movlw	0
   994  068E  00A5               	movwf	___aldiv@quotient+3
   995  068F  3000               	movlw	0
   996  0690  00A4               	movwf	___aldiv@quotient+2
   997  0691  3000               	movlw	0
   998  0692  00A3               	movwf	___aldiv@quotient+1
   999  0693  3000               	movlw	0
  1000  0694  00A2               	movwf	___aldiv@quotient
  1001  0695                     l1206:
  1002  0695  0873               	movf	___aldiv@divisor+3,w
  1003  0696  0472               	iorwf	___aldiv@divisor+2,w
  1004  0697  0471               	iorwf	___aldiv@divisor+1,w
  1005  0698  0470               	iorwf	___aldiv@divisor,w
  1006  0699  1903               	skipnz
  1007  069A  2E9C               	goto	u731
  1008  069B  2E9D               	goto	u730
  1009  069C                     u731:
  1010  069C  2EEA               	goto	l1228
  1011  069D                     u730:
  1012  069D                     l1208:
  1013  069D  01A0               	clrf	___aldiv@counter
  1014  069E  0AA0               	incf	___aldiv@counter,f
  1015  069F  2EAD               	goto	l1214
  1016  06A0                     l1210:
  1017  06A0  3001               	movlw	1
  1018  06A1  00F8               	movwf	??___aldiv
  1019  06A2                     u745:
  1020  06A2  1003               	clrc
  1021  06A3  0DF0               	rlf	___aldiv@divisor,f
  1022  06A4  0DF1               	rlf	___aldiv@divisor+1,f
  1023  06A5  0DF2               	rlf	___aldiv@divisor+2,f
  1024  06A6  0DF3               	rlf	___aldiv@divisor+3,f
  1025  06A7  0BF8               	decfsz	??___aldiv,f
  1026  06A8  2EA2               	goto	u745
  1027  06A9                     l1212:
  1028  06A9  3001               	movlw	1
  1029  06AA  00FF               	movwf	btemp+1
  1030  06AB  087F               	movf	btemp+1,w
  1031  06AC  07A0               	addwf	___aldiv@counter,f
  1032  06AD                     l1214:
  1033  06AD  1FF3               	btfss	___aldiv@divisor+3,7
  1034  06AE  2EB0               	goto	u751
  1035  06AF  2EB1               	goto	u750
  1036  06B0                     u751:
  1037  06B0  2EA0               	goto	l1210
  1038  06B1                     u750:
  1039  06B1                     l1216:
  1040  06B1  3001               	movlw	1
  1041  06B2  00F8               	movwf	??___aldiv
  1042  06B3                     u765:
  1043  06B3  1003               	clrc
  1044  06B4  0DA2               	rlf	___aldiv@quotient,f
  1045  06B5  0DA3               	rlf	___aldiv@quotient+1,f
  1046  06B6  0DA4               	rlf	___aldiv@quotient+2,f
  1047  06B7  0DA5               	rlf	___aldiv@quotient+3,f
  1048  06B8  0BF8               	decfsz	??___aldiv,f
  1049  06B9  2EB3               	goto	u765
  1050  06BA                     l1218:
  1051  06BA  0873               	movf	___aldiv@divisor+3,w
  1052  06BB  0277               	subwf	___aldiv@dividend+3,w
  1053  06BC  1D03               	skipz
  1054  06BD  2EC8               	goto	u775
  1055  06BE  0872               	movf	___aldiv@divisor+2,w
  1056  06BF  0276               	subwf	___aldiv@dividend+2,w
  1057  06C0  1D03               	skipz
  1058  06C1  2EC8               	goto	u775
  1059  06C2  0871               	movf	___aldiv@divisor+1,w
  1060  06C3  0275               	subwf	___aldiv@dividend+1,w
  1061  06C4  1D03               	skipz
  1062  06C5  2EC8               	goto	u775
  1063  06C6  0870               	movf	___aldiv@divisor,w
  1064  06C7  0274               	subwf	___aldiv@dividend,w
  1065  06C8                     u775:
  1066  06C8  1C03               	skipc
  1067  06C9  2ECB               	goto	u771
  1068  06CA  2ECC               	goto	u770
  1069  06CB                     u771:
  1070  06CB  2EDB               	goto	l1224
  1071  06CC                     u770:
  1072  06CC                     l1220:
  1073  06CC  0870               	movf	___aldiv@divisor,w
  1074  06CD  02F4               	subwf	___aldiv@dividend,f
  1075  06CE  0871               	movf	___aldiv@divisor+1,w
  1076  06CF  1C03               	skipc
  1077  06D0  0F71               	incfsz	___aldiv@divisor+1,w
  1078  06D1  02F5               	subwf	___aldiv@dividend+1,f
  1079  06D2  0872               	movf	___aldiv@divisor+2,w
  1080  06D3  1C03               	skipc
  1081  06D4  0F72               	incfsz	___aldiv@divisor+2,w
  1082  06D5  02F6               	subwf	___aldiv@dividend+2,f
  1083  06D6  0873               	movf	___aldiv@divisor+3,w
  1084  06D7  1C03               	skipc
  1085  06D8  0F73               	incfsz	___aldiv@divisor+3,w
  1086  06D9  02F7               	subwf	___aldiv@dividend+3,f
  1087  06DA                     l1222:
  1088  06DA  1422               	bsf	___aldiv@quotient,0
  1089  06DB                     l1224:
  1090  06DB  3001               	movlw	1
  1091  06DC                     u785:
  1092  06DC  1003               	clrc
  1093  06DD  0CF3               	rrf	___aldiv@divisor+3,f
  1094  06DE  0CF2               	rrf	___aldiv@divisor+2,f
  1095  06DF  0CF1               	rrf	___aldiv@divisor+1,f
  1096  06E0  0CF0               	rrf	___aldiv@divisor,f
  1097  06E1  3EFF               	addlw	-1
  1098  06E2  1D03               	skipz
  1099  06E3  2EDC               	goto	u785
  1100  06E4                     l1226:
  1101  06E4  3001               	movlw	1
  1102  06E5  02A0               	subwf	___aldiv@counter,f
  1103  06E6  1D03               	btfss	3,2
  1104  06E7  2EE9               	goto	u791
  1105  06E8  2EEA               	goto	u790
  1106  06E9                     u791:
  1107  06E9  2EB1               	goto	l1216
  1108  06EA                     u790:
  1109  06EA                     l1228:
  1110  06EA  0821               	movf	___aldiv@sign,w
  1111  06EB  1903               	btfsc	3,2
  1112  06EC  2EEE               	goto	u801
  1113  06ED  2EEF               	goto	u800
  1114  06EE                     u801:
  1115  06EE  2EFA               	goto	l1232
  1116  06EF                     u800:
  1117  06EF                     l1230:
  1118  06EF  09A2               	comf	___aldiv@quotient,f
  1119  06F0  09A3               	comf	___aldiv@quotient+1,f
  1120  06F1  09A4               	comf	___aldiv@quotient+2,f
  1121  06F2  09A5               	comf	___aldiv@quotient+3,f
  1122  06F3  0AA2               	incf	___aldiv@quotient,f
  1123  06F4  1903               	skipnz
  1124  06F5  0AA3               	incf	___aldiv@quotient+1,f
  1125  06F6  1903               	skipnz
  1126  06F7  0AA4               	incf	___aldiv@quotient+2,f
  1127  06F8  1903               	skipnz
  1128  06F9  0AA5               	incf	___aldiv@quotient+3,f
  1129  06FA                     l1232:
  1130  06FA  0825               	movf	___aldiv@quotient+3,w
  1131  06FB  00F3               	movwf	?___aldiv+3
  1132  06FC  0824               	movf	___aldiv@quotient+2,w
  1133  06FD  00F2               	movwf	?___aldiv+2
  1134  06FE  0823               	movf	___aldiv@quotient+1,w
  1135  06FF  00F1               	movwf	?___aldiv+1
  1136  0700  0822               	movf	___aldiv@quotient,w
  1137  0701  00F0               	movwf	?___aldiv
  1138  0702                     l310:
  1139  0702  0008               	return
  1140  0703                     __end_of___aldiv:
  1141                           
  1142                           	psect	text3
  1143  060B                     __ptext3:	
  1144 ;; *************** function _DHT11_read *****************
  1145 ;; Defined at:
  1146 ;;		line 26 in file "oneWire.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;		None
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;  info            5   19[BANK0 ] unsigned char [5]
  1151 ;;  hum             1   25[BANK0 ] unsigned char 
  1152 ;;  temp            1   24[BANK0 ] unsigned char 
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  1    wreg      unsigned char 
  1155 ;; Registers used:
  1156 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1162 ;;      Params:         0       0       0       0       0
  1163 ;;      Locals:         0       7       0       0       0
  1164 ;;      Temps:          0       4       0       0       0
  1165 ;;      Totals:         0      11       0       0       0
  1166 ;;Total ram usage:       11 bytes
  1167 ;; Hardware stack levels used:    1
  1168 ;; Hardware stack levels required when called:    2
  1169 ;; This function calls:
  1170 ;;		_DHT11_readByte
  1171 ;;		_DHT11_start
  1172 ;;		_slaveRespond
  1173 ;;		_sprintf
  1174 ;;		_usart_TxStr
  1175 ;; This function is called by:
  1176 ;;		_main
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           
  1181                           ;psect for function _DHT11_read
  1182  060B                     _DHT11_read:
  1183  060B                     l1254:	
  1184                           ;incstack = 0
  1185                           ; Regs used in _DHT11_read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1186                           
  1187                           
  1188                           ;oneWire.c: 27:     char info[5];;oneWire.c: 28:     char temp, hum;;oneWire.c: 29:     
      +                          DHT11_start();
  1189  060B  120A  118A  24CB  120A  118A  	fcall	_DHT11_start
  1190  0610                     l1256:
  1191                           
  1192                           ;oneWire.c: 30:     slaveRespond();
  1193  0610  120A  118A  24A5  120A  118A  	fcall	_slaveRespond
  1194  0615                     l1258:
  1195                           
  1196                           ;oneWire.c: 31:     hum = DHT11_readByte();
  1197  0615  120A  118A  250E  120A  118A  	fcall	_DHT11_readByte
  1198  061A  00FF               	movwf	btemp+1
  1199  061B  087F               	movf	btemp+1,w
  1200  061C  1283               	bcf	3,5	;RP0=0, select bank0
  1201  061D  1303               	bcf	3,6	;RP1=0, select bank0
  1202  061E  00B9               	movwf	DHT11_read@hum
  1203  061F                     l1260:
  1204                           
  1205                           ;oneWire.c: 32:     info[1] = DHT11_readByte();
  1206  061F  120A  118A  250E  120A  118A  	fcall	_DHT11_readByte
  1207  0624  00FF               	movwf	btemp+1
  1208  0625  087F               	movf	btemp+1,w
  1209  0626  1283               	bcf	3,5	;RP0=0, select bank0
  1210  0627  1303               	bcf	3,6	;RP1=0, select bank0
  1211  0628  00B4               	movwf	DHT11_read@info+1
  1212  0629                     l1262:
  1213                           
  1214                           ;oneWire.c: 33:     temp = DHT11_readByte();
  1215  0629  120A  118A  250E  120A  118A  	fcall	_DHT11_readByte
  1216  062E  00FF               	movwf	btemp+1
  1217  062F  087F               	movf	btemp+1,w
  1218  0630  1283               	bcf	3,5	;RP0=0, select bank0
  1219  0631  1303               	bcf	3,6	;RP1=0, select bank0
  1220  0632  00B8               	movwf	DHT11_read@temp
  1221  0633                     l1264:
  1222                           
  1223                           ;oneWire.c: 34:     info[3] = DHT11_readByte();
  1224  0633  120A  118A  250E  120A  118A  	fcall	_DHT11_readByte
  1225  0638  00FF               	movwf	btemp+1
  1226  0639  087F               	movf	btemp+1,w
  1227  063A  1283               	bcf	3,5	;RP0=0, select bank0
  1228  063B  1303               	bcf	3,6	;RP1=0, select bank0
  1229  063C  00B6               	movwf	DHT11_read@info+3
  1230  063D                     l1266:
  1231                           
  1232                           ;oneWire.c: 35:     info[4] = DHT11_readByte();
  1233  063D  120A  118A  250E  120A  118A  	fcall	_DHT11_readByte
  1234  0642  00FF               	movwf	btemp+1
  1235  0643  087F               	movf	btemp+1,w
  1236  0644  1283               	bcf	3,5	;RP0=0, select bank0
  1237  0645  1303               	bcf	3,6	;RP1=0, select bank0
  1238  0646  00B7               	movwf	DHT11_read@info+4
  1239  0647                     l1268:
  1240                           
  1241                           ;oneWire.c: 36:     sprintf(measure, "T: %d, H:%d\n",hum,temp);
  1242  0647  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1243  0648  00FF               	movwf	btemp+1
  1244  0649  087F               	movf	btemp+1,w
  1245  064A  00A0               	movwf	sprintf@f
  1246  064B  0839               	movf	DHT11_read@hum,w
  1247  064C  00AF               	movwf	??_DHT11_read
  1248  064D  01B0               	clrf	??_DHT11_read+1
  1249  064E  082F               	movf	??_DHT11_read,w
  1250  064F  00A1               	movwf	?_sprintf+1
  1251  0650  0830               	movf	??_DHT11_read+1,w
  1252  0651  00A2               	movwf	?_sprintf+2
  1253  0652  0838               	movf	DHT11_read@temp,w
  1254  0653  00B1               	movwf	??_DHT11_read+2
  1255  0654  01B2               	clrf	??_DHT11_read+3
  1256  0655  0831               	movf	??_DHT11_read+2,w
  1257  0656  00A3               	movwf	?_sprintf+3
  1258  0657  0832               	movf	??_DHT11_read+3,w
  1259  0658  00A4               	movwf	?_sprintf+4
  1260  0659  303D               	movlw	(low (_measure| 0))& (0+255)
  1261  065A  120A  118A  2703  120A  118A  	fcall	_sprintf
  1262  065F                     l1270:
  1263                           
  1264                           ;oneWire.c: 37:     usart_TxStr(measure);
  1265  065F  303D               	movlw	(low (_measure| 0))& (0+255)
  1266  0660  120A  118A  24B4  120A  118A  	fcall	_usart_TxStr
  1267  0665                     l90:
  1268  0665  0008               	return
  1269  0666                     __end_of_DHT11_read:
  1270                           
  1271                           	psect	text4
  1272  04B4                     __ptext4:	
  1273 ;; *************** function _usart_TxStr *****************
  1274 ;; Defined at:
  1275 ;;		line 43 in file "usart.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;  str             1    wreg     PTR unsigned char 
  1278 ;;		 -> measure(20), 
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;  str             1    1[COMMON] PTR unsigned char 
  1281 ;;		 -> measure(20), 
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  1    wreg      void 
  1284 ;; Registers used:
  1285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1291 ;;      Params:         0       0       0       0       0
  1292 ;;      Locals:         1       0       0       0       0
  1293 ;;      Temps:          0       0       0       0       0
  1294 ;;      Totals:         1       0       0       0       0
  1295 ;;Total ram usage:        1 bytes
  1296 ;; Hardware stack levels used:    1
  1297 ;; Hardware stack levels required when called:    1
  1298 ;; This function calls:
  1299 ;;		_usart_Tx
  1300 ;; This function is called by:
  1301 ;;		_DHT11_read
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           
  1306                           ;psect for function _usart_TxStr
  1307  04B4                     _usart_TxStr:
  1308                           
  1309                           ;incstack = 0
  1310                           ; Regs used in _usart_TxStr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1311                           ;usart_TxStr@str stored from wreg
  1312  04B4  00F1               	movwf	usart_TxStr@str
  1313  04B5                     l1088:
  1314                           
  1315                           ;usart.c: 44:     while(*str != '\0'){
  1316  04B5  2CC2               	goto	l1094
  1317  04B6                     l1090:
  1318                           
  1319                           ;usart.c: 45:         usart_Tx(*str);
  1320  04B6  0871               	movf	usart_TxStr@str,w
  1321  04B7  0084               	movwf	4
  1322  04B8  0800               	movf	0,w
  1323  04B9  120A  118A  2499  120A  118A  	fcall	_usart_Tx
  1324  04BE                     l1092:
  1325                           
  1326                           ;usart.c: 46:         str++;
  1327  04BE  3001               	movlw	1
  1328  04BF  00FF               	movwf	btemp+1
  1329  04C0  087F               	movf	btemp+1,w
  1330  04C1  07F1               	addwf	usart_TxStr@str,f
  1331  04C2                     l1094:
  1332                           
  1333                           ;usart.c: 44:     while(*str != '\0'){
  1334  04C2  0871               	movf	usart_TxStr@str,w
  1335  04C3  0084               	movwf	4
  1336  04C4  1383               	bcf	3,7	;select IRP bank0
  1337  04C5  0800               	movf	0,w
  1338  04C6  1D03               	btfss	3,2
  1339  04C7  2CC9               	goto	u561
  1340  04C8  2CCA               	goto	u560
  1341  04C9                     u561:
  1342  04C9  2CB6               	goto	l1090
  1343  04CA                     u560:
  1344  04CA                     l55:
  1345  04CA  0008               	return
  1346  04CB                     __end_of_usart_TxStr:
  1347                           
  1348                           	psect	text5
  1349  0499                     __ptext5:	
  1350 ;; *************** function _usart_Tx *****************
  1351 ;; Defined at:
  1352 ;;		line 33 in file "usart.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;  send            1    wreg     unsigned char 
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;  send            1    0[COMMON] unsigned char 
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      void 
  1359 ;; Registers used:
  1360 ;;		wreg
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1366 ;;      Params:         0       0       0       0       0
  1367 ;;      Locals:         1       0       0       0       0
  1368 ;;      Temps:          0       0       0       0       0
  1369 ;;      Totals:         1       0       0       0       0
  1370 ;;Total ram usage:        1 bytes
  1371 ;; Hardware stack levels used:    1
  1372 ;; This function calls:
  1373 ;;		Nothing
  1374 ;; This function is called by:
  1375 ;;		_usart_TxStr
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           
  1380                           ;psect for function _usart_Tx
  1381  0499                     _usart_Tx:
  1382                           
  1383                           ;incstack = 0
  1384                           ; Regs used in _usart_Tx: [wreg]
  1385                           ;usart_Tx@send stored from wreg
  1386  0499  00F0               	movwf	usart_Tx@send
  1387  049A                     l1034:
  1388                           
  1389                           ;usart.c: 34:     TXREG = send;
  1390  049A  0870               	movf	usart_Tx@send,w
  1391  049B  1283               	bcf	3,5	;RP0=0, select bank0
  1392  049C  1303               	bcf	3,6	;RP1=0, select bank0
  1393  049D  0099               	movwf	25	;volatile
  1394  049E                     l43:	
  1395                           ;usart.c: 35:     while (!TXSTAbits.TRMT);
  1396                           
  1397  049E  1683               	bsf	3,5	;RP0=1, select bank1
  1398  049F  1303               	bcf	3,6	;RP1=0, select bank1
  1399  04A0  1C98               	btfss	24,1	;volatile
  1400  04A1  2CA3               	goto	u421
  1401  04A2  2CA4               	goto	u420
  1402  04A3                     u421:
  1403  04A3  2C9E               	goto	l43
  1404  04A4                     u420:
  1405  04A4                     l46:
  1406  04A4  0008               	return
  1407  04A5                     __end_of_usart_Tx:
  1408                           
  1409                           	psect	text6
  1410  0703                     __ptext6:	
  1411 ;; *************** function _sprintf *****************
  1412 ;; Defined at:
  1413 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  sp              1    wreg     PTR unsigned char 
  1416 ;;		 -> measure(20), 
  1417 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1418 ;;		 -> STR_1(13), 
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;  sp              1   13[BANK0 ] PTR unsigned char 
  1421 ;;		 -> measure(20), 
  1422 ;;  tmpval          4    0        struct .
  1423 ;;  val             2   11[BANK0 ] unsigned int 
  1424 ;;  cp              2    0        PTR const unsigned char 
  1425 ;;  len             2    0        unsigned int 
  1426 ;;  c               1   14[BANK0 ] unsigned char 
  1427 ;;  prec            1   10[BANK0 ] char 
  1428 ;;  flag            1    9[BANK0 ] unsigned char 
  1429 ;;  ap              1    8[BANK0 ] PTR void [1]
  1430 ;;		 -> ?_sprintf(2), 
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  2    0[BANK0 ] int 
  1433 ;; Registers used:
  1434 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1440 ;;      Params:         0       5       0       0       0
  1441 ;;      Locals:         0       7       0       0       0
  1442 ;;      Temps:          0       3       0       0       0
  1443 ;;      Totals:         0      15       0       0       0
  1444 ;;Total ram usage:       15 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; Hardware stack levels required when called:    1
  1447 ;; This function calls:
  1448 ;;		___lwdiv
  1449 ;;		___lwmod
  1450 ;; This function is called by:
  1451 ;;		_DHT11_read
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           
  1456                           ;psect for function _sprintf
  1457  0703                     _sprintf:
  1458                           
  1459                           ;incstack = 0
  1460                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1461                           ;sprintf@sp stored from wreg
  1462  0703  1283               	bcf	3,5	;RP0=0, select bank0
  1463  0704  1303               	bcf	3,6	;RP1=0, select bank0
  1464  0705  00AD               	movwf	sprintf@sp
  1465  0706                     l1130:
  1466                           
  1467                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1468  0706  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1469  0707  00FF               	movwf	btemp+1
  1470  0708  087F               	movf	btemp+1,w
  1471  0709  00A8               	movwf	sprintf@ap
  1472                           
  1473                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1474  070A  2FD4               	goto	l1184
  1475  070B                     l1132:
  1476                           
  1477                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1478  070B  3025               	movlw	37
  1479  070C  062E               	xorwf	sprintf@c,w
  1480  070D  1903               	btfsc	3,2
  1481  070E  2F10               	goto	u641
  1482  070F  2F11               	goto	u640
  1483  0710                     u641:
  1484  0710  2F1D               	goto	l1138
  1485  0711                     u640:
  1486  0711                     l1134:
  1487                           
  1488                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1489  0711  082E               	movf	sprintf@c,w
  1490  0712  00FF               	movwf	btemp+1
  1491  0713  082D               	movf	sprintf@sp,w
  1492  0714  0084               	movwf	4
  1493  0715  087F               	movf	btemp+1,w
  1494  0716  1383               	bcf	3,7	;select IRP bank0
  1495  0717  0080               	movwf	0
  1496  0718                     l1136:
  1497  0718  3001               	movlw	1
  1498  0719  00FF               	movwf	btemp+1
  1499  071A  087F               	movf	btemp+1,w
  1500  071B  07AD               	addwf	sprintf@sp,f
  1501                           
  1502                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 559:    continue;
  1503  071C  2FD4               	goto	l1184
  1504  071D                     l1138:
  1505                           
  1506                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1507  071D  01A9               	clrf	sprintf@flag
  1508  071E                     l1142:	
  1509                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1510                           
  1511  071E  3001               	movlw	1
  1512  071F  07A0               	addwf	sprintf@f,f
  1513  0720  30FF               	movlw	-1
  1514  0721  0720               	addwf	sprintf@f,w
  1515  0722  0084               	movwf	4
  1516  0723  120A  118A  2003  120A  118A  	fcall	stringdir
  1517  0728  00AE               	movwf	sprintf@c
  1518  0729  00A5               	movwf	??_sprintf
  1519  072A  01A6               	clrf	??_sprintf+1
  1520                           
  1521                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1522                           ; Switch size 1, requested type "simple"
  1523                           ; Number of cases is 1, Range of values is 0 to 0
  1524                           ; switch strategies available:
  1525                           ; Name         Instructions Cycles
  1526                           ; simple_byte            4     3 (average)
  1527                           ; direct_byte           11     8 (fixed)
  1528                           ; jumptable            260     6 (fixed)
  1529                           ;	Chosen strategy is simple_byte
  1530  072B  0826               	movf	??_sprintf+1,w
  1531  072C  3A00               	xorlw	0	; case 0
  1532  072D  1903               	skipnz
  1533  072E  2F30               	goto	l1302
  1534  072F  2FD4               	goto	l1184
  1535  0730                     l1302:
  1536                           
  1537                           ; Switch size 1, requested type "simple"
  1538                           ; Number of cases is 3, Range of values is 0 to 105
  1539                           ; switch strategies available:
  1540                           ; Name         Instructions Cycles
  1541                           ; simple_byte           10     6 (average)
  1542                           ; jumptable            260     6 (fixed)
  1543                           ;	Chosen strategy is simple_byte
  1544  0730  0825               	movf	??_sprintf,w
  1545  0731  3A00               	xorlw	0	; case 0
  1546  0732  1903               	skipnz
  1547  0733  2FE6               	goto	l1186
  1548  0734  3A64               	xorlw	100	; case 100
  1549  0735  1903               	skipnz
  1550  0736  2F3B               	goto	l1144
  1551  0737  3A0D               	xorlw	13	; case 105
  1552  0738  1903               	skipnz
  1553  0739  2F3B               	goto	l1144
  1554  073A  2FD4               	goto	l1184
  1555  073B                     l1144:
  1556                           
  1557                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1558  073B  0828               	movf	sprintf@ap,w
  1559  073C  0084               	movwf	4
  1560  073D  1383               	bcf	3,7	;select IRP bank0
  1561  073E  0800               	movf	0,w
  1562  073F  00AB               	movwf	sprintf@val
  1563  0740  0A84               	incf	4,f
  1564  0741  0800               	movf	0,w
  1565  0742  00AC               	movwf	sprintf@val+1
  1566  0743                     l1146:
  1567  0743  3002               	movlw	2
  1568  0744  00FF               	movwf	btemp+1
  1569  0745  087F               	movf	btemp+1,w
  1570  0746  07A8               	addwf	sprintf@ap,f
  1571  0747                     l1148:
  1572                           
  1573                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1574  0747  1FAC               	btfss	sprintf@val+1,7
  1575  0748  2F4A               	goto	u651
  1576  0749  2F4B               	goto	u650
  1577  074A                     u651:
  1578  074A  2F54               	goto	l1154
  1579  074B                     u650:
  1580  074B                     l1150:
  1581                           
  1582                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1583  074B  3003               	movlw	3
  1584  074C  00FF               	movwf	btemp+1
  1585  074D  087F               	movf	btemp+1,w
  1586  074E  04A9               	iorwf	sprintf@flag,f
  1587  074F                     l1152:
  1588                           
  1589                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1590  074F  09AB               	comf	sprintf@val,f
  1591  0750  09AC               	comf	sprintf@val+1,f
  1592  0751  0AAB               	incf	sprintf@val,f
  1593  0752  1903               	skipnz
  1594  0753  0AAC               	incf	sprintf@val+1,f
  1595  0754                     l1154:
  1596                           
  1597                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1598  0754  01AE               	clrf	sprintf@c
  1599  0755  0AAE               	incf	sprintf@c,f
  1600  0756                     l1160:
  1601                           
  1602                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1603  0756  082E               	movf	sprintf@c,w
  1604  0757  00A5               	movwf	??_sprintf
  1605  0758  0725               	addwf	??_sprintf,w
  1606  0759  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1607  075A  0084               	movwf	4
  1608  075B  120A  118A  2003  120A  118A  	fcall	stringdir
  1609  0760  00A6               	movwf	??_sprintf+1
  1610  0761  120A  118A  2003  120A  118A  	fcall	stringdir
  1611  0766  00A7               	movwf	??_sprintf+2
  1612  0767  0827               	movf	??_sprintf+2,w
  1613  0768  022C               	subwf	sprintf@val+1,w
  1614  0769  1D03               	skipz
  1615  076A  2F6D               	goto	u665
  1616  076B  0826               	movf	??_sprintf+1,w
  1617  076C  022B               	subwf	sprintf@val,w
  1618  076D                     u665:
  1619  076D  1803               	skipnc
  1620  076E  2F70               	goto	u661
  1621  076F  2F71               	goto	u660
  1622  0770                     u661:
  1623  0770  2F72               	goto	l1164
  1624  0771                     u660:
  1625  0771  2F7C               	goto	l1168
  1626  0772                     l1164:
  1627  0772  3001               	movlw	1
  1628  0773  00FF               	movwf	btemp+1
  1629  0774  087F               	movf	btemp+1,w
  1630  0775  07AE               	addwf	sprintf@c,f
  1631  0776                     l1166:
  1632  0776  3005               	movlw	5
  1633  0777  062E               	xorwf	sprintf@c,w
  1634  0778  1D03               	btfss	3,2
  1635  0779  2F7B               	goto	u671
  1636  077A  2F7C               	goto	u670
  1637  077B                     u671:
  1638  077B  2F56               	goto	l1160
  1639  077C                     u670:
  1640  077C                     l1168:
  1641                           
  1642                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1643  077C  0829               	movf	sprintf@flag,w
  1644  077D  3903               	andlw	3
  1645  077E  1903               	btfsc	3,2
  1646  077F  2F81               	goto	u681
  1647  0780  2F82               	goto	u680
  1648  0781                     u681:
  1649  0781  2F8D               	goto	l1174
  1650  0782                     u680:
  1651  0782                     l1170:
  1652                           
  1653                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1654  0782  302D               	movlw	45
  1655  0783  00FF               	movwf	btemp+1
  1656  0784  082D               	movf	sprintf@sp,w
  1657  0785  0084               	movwf	4
  1658  0786  087F               	movf	btemp+1,w
  1659  0787  1383               	bcf	3,7	;select IRP bank0
  1660  0788  0080               	movwf	0
  1661  0789                     l1172:
  1662  0789  3001               	movlw	1
  1663  078A  00FF               	movwf	btemp+1
  1664  078B  087F               	movf	btemp+1,w
  1665  078C  07AD               	addwf	sprintf@sp,f
  1666  078D                     l1174:
  1667                           
  1668                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1669  078D  082E               	movf	sprintf@c,w
  1670  078E  00FF               	movwf	btemp+1
  1671  078F  087F               	movf	btemp+1,w
  1672  0790  00AA               	movwf	sprintf@prec
  1673                           
  1674                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1675  0791  2FCB               	goto	l1182
  1676  0792                     l1176:
  1677                           
  1678                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1679  0792  300A               	movlw	10
  1680  0793  00F7               	movwf	___lwmod@divisor
  1681  0794  3000               	movlw	0
  1682  0795  00F8               	movwf	___lwmod@divisor+1
  1683  0796  082A               	movf	sprintf@prec,w
  1684  0797  00A5               	movwf	??_sprintf
  1685  0798  0725               	addwf	??_sprintf,w
  1686  0799  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1687  079A  0084               	movwf	4
  1688  079B  120A  118A  2003  120A  118A  	fcall	stringdir
  1689  07A0  00F0               	movwf	___lwdiv@divisor
  1690  07A1  120A  118A  2003  120A  118A  	fcall	stringdir
  1691  07A6  00F1               	movwf	___lwdiv@divisor+1
  1692  07A7  082C               	movf	sprintf@val+1,w
  1693  07A8  00F3               	movwf	___lwdiv@dividend+1
  1694  07A9  082B               	movf	sprintf@val,w
  1695  07AA  00F2               	movwf	___lwdiv@dividend
  1696  07AB  120A  118A  257C  120A  118A  	fcall	___lwdiv
  1697  07B0  0871               	movf	?___lwdiv+1,w
  1698  07B1  00FA               	movwf	___lwmod@dividend+1
  1699  07B2  0870               	movf	?___lwdiv,w
  1700  07B3  00F9               	movwf	___lwmod@dividend
  1701  07B4  120A  118A  2542  120A  118A  	fcall	___lwmod
  1702  07B9  0877               	movf	?___lwmod,w
  1703  07BA  3E30               	addlw	48
  1704  07BB  00FF               	movwf	btemp+1
  1705  07BC  087F               	movf	btemp+1,w
  1706  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  1707  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  1708  07BF  00AE               	movwf	sprintf@c
  1709  07C0                     l1178:
  1710                           
  1711                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1712  07C0  082E               	movf	sprintf@c,w
  1713  07C1  00FF               	movwf	btemp+1
  1714  07C2  082D               	movf	sprintf@sp,w
  1715  07C3  0084               	movwf	4
  1716  07C4  087F               	movf	btemp+1,w
  1717  07C5  1383               	bcf	3,7	;select IRP bank0
  1718  07C6  0080               	movwf	0
  1719  07C7                     l1180:
  1720  07C7  3001               	movlw	1
  1721  07C8  00FF               	movwf	btemp+1
  1722  07C9  087F               	movf	btemp+1,w
  1723  07CA  07AD               	addwf	sprintf@sp,f
  1724  07CB                     l1182:
  1725                           
  1726                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1727  07CB  30FF               	movlw	255
  1728  07CC  00FF               	movwf	btemp+1
  1729  07CD  087F               	movf	btemp+1,w
  1730  07CE  07AA               	addwf	sprintf@prec,f
  1731  07CF  0A2A               	incf	sprintf@prec,w
  1732  07D0  1D03               	btfss	3,2
  1733  07D1  2FD3               	goto	u691
  1734  07D2  2FD4               	goto	u690
  1735  07D3                     u691:
  1736  07D3  2F92               	goto	l1176
  1737  07D4                     u690:
  1738  07D4                     l1184:
  1739                           
  1740                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1741  07D4  3001               	movlw	1
  1742  07D5  07A0               	addwf	sprintf@f,f
  1743  07D6  30FF               	movlw	-1
  1744  07D7  0720               	addwf	sprintf@f,w
  1745  07D8  0084               	movwf	4
  1746  07D9  120A  118A  2003  120A  118A  	fcall	stringdir
  1747  07DE  00FF               	movwf	btemp+1
  1748  07DF  087F               	movf	btemp+1,w
  1749  07E0  00AE               	movwf	sprintf@c
  1750  07E1  082E               	movf	sprintf@c,w
  1751  07E2  1D03               	btfss	3,2
  1752  07E3  2FE5               	goto	u701
  1753  07E4  2FE6               	goto	u700
  1754  07E5                     u701:
  1755  07E5  2F0B               	goto	l1132
  1756  07E6                     u700:
  1757  07E6                     l1186:
  1758                           
  1759                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1760  07E6  082D               	movf	sprintf@sp,w
  1761  07E7  0084               	movwf	4
  1762  07E8  1383               	bcf	3,7	;select IRP bank0
  1763  07E9  0180               	clrf	0
  1764  07EA                     l231:
  1765  07EA  0008               	return
  1766  07EB                     __end_of_sprintf:
  1767                           
  1768                           	psect	text7
  1769  0542                     __ptext7:	
  1770 ;; *************** function ___lwmod *****************
  1771 ;; Defined at:
  1772 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;  divisor         2    7[COMMON] unsigned int 
  1775 ;;  dividend        2    9[COMMON] unsigned int 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  counter         1   11[COMMON] unsigned char 
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  2    7[COMMON] unsigned int 
  1780 ;; Registers used:
  1781 ;;		wreg, status,2, status,0, btemp+1
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1787 ;;      Params:         4       0       0       0       0
  1788 ;;      Locals:         1       0       0       0       0
  1789 ;;      Temps:          0       0       0       0       0
  1790 ;;      Totals:         5       0       0       0       0
  1791 ;;Total ram usage:        5 bytes
  1792 ;; Hardware stack levels used:    1
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_sprintf
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           
  1801                           ;psect for function ___lwmod
  1802  0542                     ___lwmod:
  1803  0542                     l1066:	
  1804                           ;incstack = 0
  1805                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1806                           
  1807  0542  0877               	movf	___lwmod@divisor,w
  1808  0543  0478               	iorwf	___lwmod@divisor+1,w
  1809  0544  1903               	btfsc	3,2
  1810  0545  2D47               	goto	u501
  1811  0546  2D48               	goto	u500
  1812  0547                     u501:
  1813  0547  2D77               	goto	l1084
  1814  0548                     u500:
  1815  0548                     l1068:
  1816  0548  01FB               	clrf	___lwmod@counter
  1817  0549  0AFB               	incf	___lwmod@counter,f
  1818  054A  2D56               	goto	l1074
  1819  054B                     l1070:
  1820  054B  3001               	movlw	1
  1821  054C                     u515:
  1822  054C  1003               	clrc
  1823  054D  0DF7               	rlf	___lwmod@divisor,f
  1824  054E  0DF8               	rlf	___lwmod@divisor+1,f
  1825  054F  3EFF               	addlw	-1
  1826  0550  1D03               	skipz
  1827  0551  2D4C               	goto	u515
  1828  0552                     l1072:
  1829  0552  3001               	movlw	1
  1830  0553  00FF               	movwf	btemp+1
  1831  0554  087F               	movf	btemp+1,w
  1832  0555  07FB               	addwf	___lwmod@counter,f
  1833  0556                     l1074:
  1834  0556  1FF8               	btfss	___lwmod@divisor+1,7
  1835  0557  2D59               	goto	u521
  1836  0558  2D5A               	goto	u520
  1837  0559                     u521:
  1838  0559  2D4B               	goto	l1070
  1839  055A                     u520:
  1840  055A                     l1076:
  1841  055A  0878               	movf	___lwmod@divisor+1,w
  1842  055B  027A               	subwf	___lwmod@dividend+1,w
  1843  055C  1D03               	skipz
  1844  055D  2D60               	goto	u535
  1845  055E  0877               	movf	___lwmod@divisor,w
  1846  055F  0279               	subwf	___lwmod@dividend,w
  1847  0560                     u535:
  1848  0560  1C03               	skipc
  1849  0561  2D63               	goto	u531
  1850  0562  2D64               	goto	u530
  1851  0563                     u531:
  1852  0563  2D6A               	goto	l1080
  1853  0564                     u530:
  1854  0564                     l1078:
  1855  0564  0877               	movf	___lwmod@divisor,w
  1856  0565  02F9               	subwf	___lwmod@dividend,f
  1857  0566  0878               	movf	___lwmod@divisor+1,w
  1858  0567  1C03               	skipc
  1859  0568  03FA               	decf	___lwmod@dividend+1,f
  1860  0569  02FA               	subwf	___lwmod@dividend+1,f
  1861  056A                     l1080:
  1862  056A  3001               	movlw	1
  1863  056B                     u545:
  1864  056B  1003               	clrc
  1865  056C  0CF8               	rrf	___lwmod@divisor+1,f
  1866  056D  0CF7               	rrf	___lwmod@divisor,f
  1867  056E  3EFF               	addlw	-1
  1868  056F  1D03               	skipz
  1869  0570  2D6B               	goto	u545
  1870  0571                     l1082:
  1871  0571  3001               	movlw	1
  1872  0572  02FB               	subwf	___lwmod@counter,f
  1873  0573  1D03               	btfss	3,2
  1874  0574  2D76               	goto	u551
  1875  0575  2D77               	goto	u550
  1876  0576                     u551:
  1877  0576  2D5A               	goto	l1076
  1878  0577                     u550:
  1879  0577                     l1084:
  1880  0577  087A               	movf	___lwmod@dividend+1,w
  1881  0578  00F8               	movwf	?___lwmod+1
  1882  0579  0879               	movf	___lwmod@dividend,w
  1883  057A  00F7               	movwf	?___lwmod
  1884  057B                     l517:
  1885  057B  0008               	return
  1886  057C                     __end_of___lwmod:
  1887                           
  1888                           	psect	text8
  1889  057C                     __ptext8:	
  1890 ;; *************** function ___lwdiv *****************
  1891 ;; Defined at:
  1892 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  divisor         2    0[COMMON] unsigned int 
  1895 ;;  dividend        2    2[COMMON] unsigned int 
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  quotient        2    4[COMMON] unsigned int 
  1898 ;;  counter         1    6[COMMON] unsigned char 
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  2    0[COMMON] unsigned int 
  1901 ;; Registers used:
  1902 ;;		wreg, status,2, status,0, btemp+1
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1908 ;;      Params:         4       0       0       0       0
  1909 ;;      Locals:         3       0       0       0       0
  1910 ;;      Temps:          0       0       0       0       0
  1911 ;;      Totals:         7       0       0       0       0
  1912 ;;Total ram usage:        7 bytes
  1913 ;; Hardware stack levels used:    1
  1914 ;; This function calls:
  1915 ;;		Nothing
  1916 ;; This function is called by:
  1917 ;;		_sprintf
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           
  1922                           ;psect for function ___lwdiv
  1923  057C                     ___lwdiv:
  1924  057C                     l1040:	
  1925                           ;incstack = 0
  1926                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1927                           
  1928  057C  01F4               	clrf	___lwdiv@quotient
  1929  057D  01F5               	clrf	___lwdiv@quotient+1
  1930  057E                     l1042:
  1931  057E  0870               	movf	___lwdiv@divisor,w
  1932  057F  0471               	iorwf	___lwdiv@divisor+1,w
  1933  0580  1903               	btfsc	3,2
  1934  0581  2D83               	goto	u431
  1935  0582  2D84               	goto	u430
  1936  0583                     u431:
  1937  0583  2DBB               	goto	l1062
  1938  0584                     u430:
  1939  0584                     l1044:
  1940  0584  01F6               	clrf	___lwdiv@counter
  1941  0585  0AF6               	incf	___lwdiv@counter,f
  1942  0586  2D92               	goto	l1050
  1943  0587                     l1046:
  1944  0587  3001               	movlw	1
  1945  0588                     u445:
  1946  0588  1003               	clrc
  1947  0589  0DF0               	rlf	___lwdiv@divisor,f
  1948  058A  0DF1               	rlf	___lwdiv@divisor+1,f
  1949  058B  3EFF               	addlw	-1
  1950  058C  1D03               	skipz
  1951  058D  2D88               	goto	u445
  1952  058E                     l1048:
  1953  058E  3001               	movlw	1
  1954  058F  00FF               	movwf	btemp+1
  1955  0590  087F               	movf	btemp+1,w
  1956  0591  07F6               	addwf	___lwdiv@counter,f
  1957  0592                     l1050:
  1958  0592  1FF1               	btfss	___lwdiv@divisor+1,7
  1959  0593  2D95               	goto	u451
  1960  0594  2D96               	goto	u450
  1961  0595                     u451:
  1962  0595  2D87               	goto	l1046
  1963  0596                     u450:
  1964  0596                     l1052:
  1965  0596  3001               	movlw	1
  1966  0597                     u465:
  1967  0597  1003               	clrc
  1968  0598  0DF4               	rlf	___lwdiv@quotient,f
  1969  0599  0DF5               	rlf	___lwdiv@quotient+1,f
  1970  059A  3EFF               	addlw	-1
  1971  059B  1D03               	skipz
  1972  059C  2D97               	goto	u465
  1973  059D  0871               	movf	___lwdiv@divisor+1,w
  1974  059E  0273               	subwf	___lwdiv@dividend+1,w
  1975  059F  1D03               	skipz
  1976  05A0  2DA3               	goto	u475
  1977  05A1  0870               	movf	___lwdiv@divisor,w
  1978  05A2  0272               	subwf	___lwdiv@dividend,w
  1979  05A3                     u475:
  1980  05A3  1C03               	skipc
  1981  05A4  2DA6               	goto	u471
  1982  05A5  2DA7               	goto	u470
  1983  05A6                     u471:
  1984  05A6  2DAE               	goto	l1058
  1985  05A7                     u470:
  1986  05A7                     l1054:
  1987  05A7  0870               	movf	___lwdiv@divisor,w
  1988  05A8  02F2               	subwf	___lwdiv@dividend,f
  1989  05A9  0871               	movf	___lwdiv@divisor+1,w
  1990  05AA  1C03               	skipc
  1991  05AB  03F3               	decf	___lwdiv@dividend+1,f
  1992  05AC  02F3               	subwf	___lwdiv@dividend+1,f
  1993  05AD                     l1056:
  1994  05AD  1474               	bsf	___lwdiv@quotient,0
  1995  05AE                     l1058:
  1996  05AE  3001               	movlw	1
  1997  05AF                     u485:
  1998  05AF  1003               	clrc
  1999  05B0  0CF1               	rrf	___lwdiv@divisor+1,f
  2000  05B1  0CF0               	rrf	___lwdiv@divisor,f
  2001  05B2  3EFF               	addlw	-1
  2002  05B3  1D03               	skipz
  2003  05B4  2DAF               	goto	u485
  2004  05B5                     l1060:
  2005  05B5  3001               	movlw	1
  2006  05B6  02F6               	subwf	___lwdiv@counter,f
  2007  05B7  1D03               	btfss	3,2
  2008  05B8  2DBA               	goto	u491
  2009  05B9  2DBB               	goto	u490
  2010  05BA                     u491:
  2011  05BA  2D96               	goto	l1052
  2012  05BB                     u490:
  2013  05BB                     l1062:
  2014  05BB  0875               	movf	___lwdiv@quotient+1,w
  2015  05BC  00F1               	movwf	?___lwdiv+1
  2016  05BD  0874               	movf	___lwdiv@quotient,w
  2017  05BE  00F0               	movwf	?___lwdiv
  2018  05BF                     l507:
  2019  05BF  0008               	return
  2020  05C0                     __end_of___lwdiv:
  2021                           
  2022                           	psect	text9
  2023  04A5                     __ptext9:	
  2024 ;; *************** function _slaveRespond *****************
  2025 ;; Defined at:
  2026 ;;		line 41 in file "oneWire.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;		None
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;		None
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  1    wreg      void 
  2033 ;; Registers used:
  2034 ;;		None
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2040 ;;      Params:         0       0       0       0       0
  2041 ;;      Locals:         0       0       0       0       0
  2042 ;;      Temps:          0       0       0       0       0
  2043 ;;      Totals:         0       0       0       0       0
  2044 ;;Total ram usage:        0 bytes
  2045 ;; Hardware stack levels used:    1
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		_DHT11_read
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           
  2054                           ;psect for function _slaveRespond
  2055  04A5                     _slaveRespond:
  2056  04A5                     l1106:	
  2057                           ;incstack = 0
  2058                           ; Regs used in _slaveRespond: []
  2059                           
  2060  04A5                     l93:	
  2061                           ;oneWire.c: 42:     while(PORTDbits.RD0);
  2062                           
  2063  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  2064  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  2065  04A7  1808               	btfsc	8,0	;volatile
  2066  04A8  2CAA               	goto	u571
  2067  04A9  2CAB               	goto	u570
  2068  04AA                     u571:
  2069  04AA  2CA5               	goto	l93
  2070  04AB                     u570:
  2071  04AB                     l96:
  2072  04AB  1C08               	btfss	8,0	;volatile
  2073  04AC  2CAE               	goto	u581
  2074  04AD  2CAF               	goto	u580
  2075  04AE                     u581:
  2076  04AE  2CAB               	goto	l96
  2077  04AF                     u580:
  2078  04AF                     l99:
  2079  04AF  1808               	btfsc	8,0	;volatile
  2080  04B0  2CB2               	goto	u591
  2081  04B1  2CB3               	goto	u590
  2082  04B2                     u591:
  2083  04B2  2CAF               	goto	l99
  2084  04B3                     u590:
  2085  04B3                     l102:
  2086  04B3  0008               	return
  2087  04B4                     __end_of_slaveRespond:
  2088                           
  2089                           	psect	text10
  2090  04CB                     __ptext10:	
  2091 ;; *************** function _DHT11_start *****************
  2092 ;; Defined at:
  2093 ;;		line 17 in file "oneWire.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;		None
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;		None
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  1    wreg      void 
  2100 ;; Registers used:
  2101 ;;		wreg, status,2, status,0, pclath, cstack
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2107 ;;      Params:         0       0       0       0       0
  2108 ;;      Locals:         0       0       0       0       0
  2109 ;;      Temps:          2       0       0       0       0
  2110 ;;      Totals:         2       0       0       0       0
  2111 ;;Total ram usage:        2 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; Hardware stack levels required when called:    1
  2114 ;; This function calls:
  2115 ;;		_drive_OW_high
  2116 ;;		_drive_OW_low
  2117 ;; This function is called by:
  2118 ;;		_DHT11_read
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           
  2123                           ;psect for function _DHT11_start
  2124  04CB                     _DHT11_start:
  2125  04CB                     l1096:	
  2126                           ;incstack = 0
  2127                           ; Regs used in _DHT11_start: [wreg+status,2+status,0+pclath+cstack]
  2128                           
  2129                           
  2130                           ;oneWire.c: 18:     drive_OW_high();
  2131  04CB  120A  118A  2483  120A  118A  	fcall	_drive_OW_high
  2132  04D0                     l1098:
  2133                           
  2134                           ;oneWire.c: 19:     PORTDbits.RD0 = 0;
  2135  04D0  1283               	bcf	3,5	;RP0=0, select bank0
  2136  04D1  1303               	bcf	3,6	;RP1=0, select bank0
  2137  04D2  1008               	bcf	8,0	;volatile
  2138  04D3                     l1100:
  2139                           
  2140                           ;oneWire.c: 20:     _delay((unsigned long)((18)*(8000000/4000.0)));
  2141  04D3  302F               	movlw	47
  2142  04D4  00F1               	movwf	??_DHT11_start+1
  2143  04D5  30BF               	movlw	191
  2144  04D6  00F0               	movwf	??_DHT11_start
  2145  04D7                     u827:
  2146  04D7  0BF0               	decfsz	??_DHT11_start,f
  2147  04D8  2CD7               	goto	u827
  2148  04D9  0BF1               	decfsz	??_DHT11_start+1,f
  2149  04DA  2CD7               	goto	u827
  2150  04DB  2CDC               	nop2
  2151  04DC                     l1102:
  2152                           
  2153                           ;oneWire.c: 21:     PORTDbits.RD0 = 1;
  2154  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  2155  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  2156  04DE  1408               	bsf	8,0	;volatile
  2157  04DF                     l1104:
  2158                           
  2159                           ;oneWire.c: 23:     drive_OW_low();
  2160  04DF  120A  118A  248A  120A  118A  	fcall	_drive_OW_low
  2161  04E4                     l87:
  2162  04E4  0008               	return
  2163  04E5                     __end_of_DHT11_start:
  2164                           
  2165                           	psect	text11
  2166  048A                     __ptext11:	
  2167 ;; *************** function _drive_OW_low *****************
  2168 ;; Defined at:
  2169 ;;		line 63 in file "oneWire.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;		None
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;		None
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		None
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2183 ;;      Params:         0       0       0       0       0
  2184 ;;      Locals:         0       0       0       0       0
  2185 ;;      Temps:          0       0       0       0       0
  2186 ;;      Totals:         0       0       0       0       0
  2187 ;;Total ram usage:        0 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; This function calls:
  2190 ;;		Nothing
  2191 ;; This function is called by:
  2192 ;;		_DHT11_start
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           
  2197                           ;psect for function _drive_OW_low
  2198  048A                     _drive_OW_low:
  2199  048A                     l1038:	
  2200                           ;incstack = 0
  2201                           ; Regs used in _drive_OW_low: []
  2202                           
  2203                           
  2204                           ;oneWire.c: 65:     TRISDbits.TRISD0 = 1;
  2205  048A  1683               	bsf	3,5	;RP0=1, select bank1
  2206  048B  1303               	bcf	3,6	;RP1=0, select bank1
  2207  048C  1408               	bsf	8,0	;volatile
  2208                           
  2209                           ;oneWire.c: 66:     PORTDbits.RD0 = 0;
  2210  048D  1283               	bcf	3,5	;RP0=0, select bank0
  2211  048E  1303               	bcf	3,6	;RP1=0, select bank0
  2212  048F  1008               	bcf	8,0	;volatile
  2213  0490                     l118:
  2214  0490  0008               	return
  2215  0491                     __end_of_drive_OW_low:
  2216                           
  2217                           	psect	text12
  2218  0483                     __ptext12:	
  2219 ;; *************** function _drive_OW_high *****************
  2220 ;; Defined at:
  2221 ;;		line 69 in file "oneWire.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;		None
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;		None
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  1    wreg      void 
  2228 ;; Registers used:
  2229 ;;		None
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2235 ;;      Params:         0       0       0       0       0
  2236 ;;      Locals:         0       0       0       0       0
  2237 ;;      Temps:          0       0       0       0       0
  2238 ;;      Totals:         0       0       0       0       0
  2239 ;;Total ram usage:        0 bytes
  2240 ;; Hardware stack levels used:    1
  2241 ;; This function calls:
  2242 ;;		Nothing
  2243 ;; This function is called by:
  2244 ;;		_DHT11_start
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           
  2249                           ;psect for function _drive_OW_high
  2250  0483                     _drive_OW_high:
  2251  0483                     l1036:	
  2252                           ;incstack = 0
  2253                           ; Regs used in _drive_OW_high: []
  2254                           
  2255                           
  2256                           ;oneWire.c: 70:     TRISDbits.TRISD0 = 0;
  2257  0483  1683               	bsf	3,5	;RP0=1, select bank1
  2258  0484  1303               	bcf	3,6	;RP1=0, select bank1
  2259  0485  1008               	bcf	8,0	;volatile
  2260                           
  2261                           ;oneWire.c: 71:     PORTDbits.RD0 = 1;
  2262  0486  1283               	bcf	3,5	;RP0=0, select bank0
  2263  0487  1303               	bcf	3,6	;RP1=0, select bank0
  2264  0488  1408               	bsf	8,0	;volatile
  2265  0489                     l121:
  2266  0489  0008               	return
  2267  048A                     __end_of_drive_OW_high:
  2268                           
  2269                           	psect	text13
  2270  050E                     __ptext13:	
  2271 ;; *************** function _DHT11_readByte *****************
  2272 ;; Defined at:
  2273 ;;		line 47 in file "oneWire.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;		None
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;  i               2    1[COMMON] int 
  2278 ;;  dataByte        1    3[COMMON] unsigned char 
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      unsigned char 
  2281 ;; Registers used:
  2282 ;;		wreg, status,2, status,0, btemp+1
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2288 ;;      Params:         0       0       0       0       0
  2289 ;;      Locals:         3       0       0       0       0
  2290 ;;      Temps:          1       0       0       0       0
  2291 ;;      Totals:         4       0       0       0       0
  2292 ;;Total ram usage:        4 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; This function calls:
  2295 ;;		Nothing
  2296 ;; This function is called by:
  2297 ;;		_DHT11_read
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301                           
  2302                           ;psect for function _DHT11_readByte
  2303  050E                     _DHT11_readByte:
  2304  050E                     l1108:	
  2305                           ;incstack = 0
  2306                           ; Regs used in _DHT11_readByte: [wreg+status,2+status,0+btemp+1]
  2307                           
  2308                           
  2309                           ;oneWire.c: 48:     char dataByte;;oneWire.c: 49:     for(int i = 0; i < 8;i++){
  2310  050E  01F1               	clrf	DHT11_readByte@i
  2311  050F  01F2               	clrf	DHT11_readByte@i+1
  2312  0510                     l107:
  2313  0510  1283               	bcf	3,5	;RP0=0, select bank0
  2314  0511  1303               	bcf	3,6	;RP1=0, select bank0
  2315  0512  1C08               	btfss	8,0	;volatile
  2316  0513  2D15               	goto	u601
  2317  0514  2D16               	goto	u600
  2318  0515                     u601:
  2319  0515  2D10               	goto	l107
  2320  0516                     u600:
  2321  0516                     l1114:
  2322                           
  2323                           ;oneWire.c: 51:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2324  0516  3021               	movlw	33
  2325  0517  00F0               	movwf	??_DHT11_readByte
  2326  0518                     u837:
  2327  0518  0BF0               	decfsz	??_DHT11_readByte,f
  2328  0519  2D18               	goto	u837
  2329  051A                     l1116:
  2330                           
  2331                           ;oneWire.c: 52:         if(PORTDbits.RD0){
  2332  051A  1283               	bcf	3,5	;RP0=0, select bank0
  2333  051B  1303               	bcf	3,6	;RP1=0, select bank0
  2334  051C  1C08               	btfss	8,0	;volatile
  2335  051D  2D1F               	goto	u611
  2336  051E  2D20               	goto	u610
  2337  051F                     u611:
  2338  051F  2D23               	goto	l1120
  2339  0520                     u610:
  2340  0520                     l1118:
  2341                           
  2342                           ;oneWire.c: 53:            dataByte = ((dataByte << 1) | 1);
  2343  0520  1403               	setc
  2344  0521  0DF3               	rlf	DHT11_readByte@dataByte,f
  2345                           
  2346                           ;oneWire.c: 54:         }
  2347  0522  2D29               	goto	l112
  2348  0523                     l1120:
  2349                           
  2350                           ;oneWire.c: 56:            dataByte = (dataByte << 1);
  2351  0523  0873               	movf	DHT11_readByte@dataByte,w
  2352  0524  00F0               	movwf	??_DHT11_readByte
  2353  0525  0770               	addwf	??_DHT11_readByte,w
  2354  0526  00FF               	movwf	btemp+1
  2355  0527  087F               	movf	btemp+1,w
  2356  0528  00F3               	movwf	DHT11_readByte@dataByte
  2357  0529                     l112:
  2358  0529  1808               	btfsc	8,0	;volatile
  2359  052A  2D2C               	goto	u621
  2360  052B  2D2D               	goto	u620
  2361  052C                     u621:
  2362  052C  2D29               	goto	l112
  2363  052D                     u620:
  2364  052D                     l1122:
  2365                           
  2366                           ;oneWire.c: 59:    }
  2367  052D  3001               	movlw	1
  2368  052E  07F1               	addwf	DHT11_readByte@i,f
  2369  052F  1803               	skipnc
  2370  0530  0AF2               	incf	DHT11_readByte@i+1,f
  2371  0531  3000               	movlw	0
  2372  0532  07F2               	addwf	DHT11_readByte@i+1,f
  2373  0533                     l1124:
  2374  0533  0872               	movf	DHT11_readByte@i+1,w
  2375  0534  3A80               	xorlw	128
  2376  0535  00FF               	movwf	btemp+1
  2377  0536  3080               	movlw	128
  2378  0537  027F               	subwf	btemp+1,w
  2379  0538  1D03               	skipz
  2380  0539  2D3C               	goto	u635
  2381  053A  3008               	movlw	8
  2382  053B  0271               	subwf	DHT11_readByte@i,w
  2383  053C                     u635:
  2384  053C  1C03               	skipc
  2385  053D  2D3F               	goto	u631
  2386  053E  2D40               	goto	u630
  2387  053F                     u631:
  2388  053F  2D10               	goto	l107
  2389  0540                     u630:
  2390  0540                     l1126:
  2391                           
  2392                           ;oneWire.c: 60:     return dataByte;
  2393  0540  0873               	movf	DHT11_readByte@dataByte,w
  2394  0541                     l115:
  2395  0541  0008               	return
  2396  0542                     __end_of_DHT11_readByte:
  2397  007E                     btemp	set	126	;btemp
  2398  007E                     wtemp0	set	126
  2399                           
  2400                           	psect	config
  2401                           
  2402                           ;Config register CONFIG1 @ 0x2007
  2403                           ;	Oscillator Selection bits
  2404                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2405                           ;	Watchdog Timer Enable bit
  2406                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2407                           ;	Power-up Timer Enable bit
  2408                           ;	PWRTE = OFF, PWRT disabled
  2409                           ;	RE3/MCLR pin function select bit
  2410                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2411                           ;	Code Protection bit
  2412                           ;	CP = OFF, Program memory code protection is disabled
  2413                           ;	Data Code Protection bit
  2414                           ;	CPD = OFF, Data memory code protection is disabled
  2415                           ;	Brown Out Reset Selection bits
  2416                           ;	BOREN = ON, BOR enabled
  2417                           ;	Internal External Switchover bit
  2418                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2419                           ;	Fail-Safe Clock Monitor Enabled bit
  2420                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2421                           ;	Low Voltage Programming Enable bit
  2422                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2423                           ;	In-Circuit Debugger Mode bit
  2424                           ;	DEBUG = 0x1, unprogrammed default
  2425  2007                     	org	8199
  2426  2007  2FF2               	dw	12274
  2427                           
  2428                           ;Config register CONFIG2 @ 0x2008
  2429                           ;	Brown-out Reset Selection bit
  2430                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2431                           ;	Flash Program Memory Self Write Enable bits
  2432                           ;	WRT = OFF, Write protection off
  2433  2008                     	org	8200
  2434  2008  3FFF               	dw	16383

Data Sizes:
    Strings     13
    Constant    10
    Data        0
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     29      49
    BANK1            80      0      40
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> measure(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    usart_TxStr@str	PTR unsigned char  size(1) Largest target is 20
		 -> measure(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_usart_init
    _usart_init->___aldiv
    _usart_TxStr->_usart_Tx
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    _main->_DHT11_read
    _usart_init->___aldiv
    _DHT11_read->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2268
                                             26 BANK0      3     3      0
                         _DHT11_read
                         _usart_init
 ---------------------------------------------------------------------------------
 (1) _usart_init                                           8     4      4     725
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_read                                          11    11      0    1543
                                             15 BANK0     11    11      0
                     _DHT11_readByte
                        _DHT11_start
                       _slaveRespond
                            _sprintf
                        _usart_TxStr
 ---------------------------------------------------------------------------------
 (2) _usart_TxStr                                          1     1      0     100
                                              1 COMMON     1     1      0
                           _usart_Tx
 ---------------------------------------------------------------------------------
 (3) _usart_Tx                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    18      5    1211
                                              0 BANK0     15    10      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _slaveRespond                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DHT11_start                                          2     2      0       0
                                              0 COMMON     2     2      0
                      _drive_OW_high
                       _drive_OW_low
 ---------------------------------------------------------------------------------
 (3) _drive_OW_low                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _drive_OW_high                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DHT11_readByte                                       4     4      0     114
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_read
     _DHT11_readByte
     _DHT11_start
       _drive_OW_high
       _drive_OW_low
     _slaveRespond
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _usart_TxStr
       _usart_Tx
   _usart_init
     ___aldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      66       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1D      31       5       61.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      28       7       50.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      66      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Mar 17 20:39:55 2021

                      pc 0002                       l40 060A                       l43 049E  
                     l46 04A4                       l55 04CA                       l90 0665  
                     l93 04A5                       l87 04E4                       l96 04AB  
                     l99 04AF                       fsr 0004                      l102 04B3  
                    l112 0529                      l121 0489                      l115 0541  
                    l107 0510                      l300 067A                      l118 0490  
                    l310 0702                      l231 07EA                      l507 05BF  
                    l517 057B            DHT11_read@hum 0039                      u500 0548  
                    u420 04A4                      u501 0547                      u421 04A3  
                    u430 0584                      u431 0583                      u600 0516  
                    u520 055A                      u601 0515                      u521 0559  
                    u610 0520                      u450 0596                      u530 0564  
                    u611 051F                      u451 0595                      u531 0563  
                    u515 054C                      u620 052D                      u700 07E6  
                    u621 052C                      u445 0588                      u701 07E5  
                    u630 0540                      u470 05A7                      u550 0577  
                    u710 066D                      u631 053F                      u471 05A6  
                    u551 0576                      u535 0560                      u711 066C  
                    u640 0711                      u560 04CA                      u800 06EF  
                    u720 067E                      u465 0597                      u545 056B  
                    u641 0710                      u561 04C9                      u801 06EE  
                    u721 067D                      u570 04AB                      u490 05BB  
                    u650 074B                      u730 069D                      u635 053C  
                    u571 04AA                      u491 05BA                      u475 05A3  
                    u651 074A                      u731 069C                      u580 04AF  
                    u660 0771                      u581 04AE                      u485 05AF  
                    u661 0770                      u590 04B3                      u670 077C  
                    u750 06B1                      u591 04B2                      u671 077B  
                    u751 06B0                      u680 0782                      u681 0781  
                    u665 076D                      u745 06A2                      u817 0504  
                    u690 07D4                      u770 06CC                      u827 04D7  
                    u691 07D3                      u771 06CB                      u837 0518  
                    u765 06B3                      u790 06EA                      u791 06E9  
                    u775 06C8                      u785 06DC                      fsr0 0004  
                    indf 0000      __size_of_DHT11_read 005B                     l1100 04D3  
                   l1102 04DC                     l1120 0523                     l1104 04DF  
                   l1040 057C                     l1200 067E                     l1122 052D  
                   l1114 0516                     l1106 04A5                     l1050 0592  
                   l1042 057E                     l1130 0706                     l1034 049A  
                   l1210 06A0                     l1202 0689                     l1124 0533  
                   l1116 051A                     l1108 050E                     l1036 0483  
                   l1060 05B5                     l1052 0596                     l1044 0584  
                   l1132 070B                     l1220 06CC                     l1212 06A9  
                   l1204 068D                     l1126 0540                     l1118 0520  
                   l1038 048A                     l1054 05A7                     l1046 0587  
                   l1062 05BB                     l1070 054B                     l1150 074B  
                   l1302 0730                     l1142 071E                     l1134 0711  
                   l1230 06EF                     l1222 06DA                     l1214 06AD  
                   l1206 0695                     l1056 05AD                     l1048 058E  
                   l1080 056A                     l1072 0552                     l1160 0756  
                   l1152 074F                     l1144 073B                     l1136 0718  
                   l1232 06FA                     l1224 06DB                     l1216 06B1  
                   l1208 069D                     l1240 05FD                     l1058 05AE  
                   l1082 0571                     l1074 0556                     l1066 0542  
                   l1170 0782                     l1154 0754                     l1146 0743  
                   l1138 071D                     l1090 04B6                     l1226 06E4  
                   l1218 06BA                     l1250 0606                     l1242 05FE  
                   l1076 055A                     l1068 0548                     l1084 0577  
                   l1180 07C7                     l1172 0789                     l1164 0772  
                   l1148 0747                     l1092 04BE                     l1260 061F  
                   l1228 06EA                     l1252 0609                     l1244 05FF  
                   l1236 05C0                     l1078 0564                     l1182 07CB  
                   l1174 078D                     l1166 0776                     l1094 04C2  
                   l1270 065F                     l1262 0629                     l1254 060B  
                   l1246 0602                     l1238 05C4                     l1096 04CB  
                   l1176 0792                     l1168 077C                     l1184 07D4  
                   l1088 04B5                     l1264 0633                     l1256 0610  
                   l1248 0605                     l1280 04FC                     l1098 04D0  
                   l1178 07C0                     l1186 07E6                     l1266 063D  
                   l1258 0615                     l1194 0666                     l1274 04E5  
                   l1268 0647                     l1196 0669                     l1276 04E8  
                   l1198 066D                     l1278 04F7                     STR_1 0013  
         DHT11_read@info 0033           DHT11_read@temp 0038              _usart_TxStr 04B4  
                   _main 04E5                     btemp 007E                     start 0000  
   __size_of_DHT11_start 001A            ?_drive_OW_low 0070            _drive_OW_high 0483  
        __end_of___aldiv 0703                    ?_main 0070          __end_of___lwdiv 05C0  
        __end_of___lwmod 057C                    _RCREG 001A                    _SPBRG 0099  
        DHT11_readByte@i 0071                    _TRISD 0088                    _TXREG 0019  
        __end_of_dpowers 0013                    pclath 000A                    status 0003  
                  wtemp0 007E          __end_of_sprintf 07EB         ??_DHT11_readByte 0070  
        __initialization 07EB           ??_drive_OW_low 0070             __end_of_main 050E  
         ?_drive_OW_high 0070                   ??_main 003A             ??_DHT11_read 002F  
              ??___aldiv 0078                ??___lwdiv 0074                ??___lwmod 007B  
                 _buffer 00A0       __end_of_DHT11_read 0666                ??_sprintf 0025  
       __end_of_usart_Tx 04A5  __end_of__initialization 07FC           __pcstackCOMMON 0070  
         usart_TxStr@str 0071          ??_drive_OW_high 0070     __end_of_drive_OW_low 0491  
           ?_usart_TxStr 0070               __pbssBANK0 003D               __pbssBANK1 00A0  
           usart_Tx@send 0070               __pmaintext 04E5           usart_init@BAUD 0026  
             __stringtab 0003            ??_DHT11_start 0070           _usart_init$946 0079  
                ___aldiv 0666                  ___lwdiv 057C                  ___lwmod 0542  
              ?_usart_Tx 0070                  __ptext1 05C0                  __ptext2 0666  
                __ptext3 060B                  __ptext4 04B4                  __ptext5 0499  
                __ptext6 0703                  __ptext7 0542                  __ptext8 057C  
                __ptext9 04A5            ?_slaveRespond 0070                  _dpowers 0009  
                _measure 003D         ___aldiv@dividend 0074                  _sprintf 0703  
                clrloop0 0492     end_of_initialization 07FC                _RCSTAbits 0018  
       ___aldiv@quotient 0022      __end_of_DHT11_start 04E5               ??_usart_Tx 0070  
         ??_slaveRespond 0070                _PORTDbits 0008    __size_of_drive_OW_low 0007  
              _TRISCbits 0087                _TRISDbits 0088     __size_of_usart_TxStr 0017  
              _TXSTAbits 0098               _usart_init 05C0             _drive_OW_low 048A  
__size_of_DHT11_readByte 0034      start_initialization 07EB              _DHT11_start 04CB  
  __end_of_drive_OW_high 048A                ___latbits 0002            __pcstackBANK0 0020  
            sprintf@flag 0029     __end_of_slaveRespond 04B4              sprintf@prec 002A  
            ?_usart_init 0026         ___lwdiv@dividend 0072                 ?___aldiv 0070  
               ?___lwdiv 0070                 ?___lwmod 0077                __pstrings 0003  
      __size_of_usart_Tx 000C         ___lwdiv@quotient 0074                 ?_sprintf 0020  
        ___aldiv@divisor 0070          ___aldiv@counter 0020                clear_ram0 0491  
            __stringbase 0008           _DHT11_readByte 050E      __size_of_usart_init 004B  
             _DHT11_read 060B         __size_of___aldiv 009D   __end_of_DHT11_readByte 0542  
       __size_of___lwdiv 0044         __size_of___lwmod 003A       __end_of__stringtab 0009  
             sprintf@val 002B          ___lwdiv@divisor 0070          ___lwdiv@counter 0076  
               __ptext10 04CB                 __ptext11 048A                 __ptext12 0483  
               __ptext13 050E    __size_of_slaveRespond 000F            ??_usart_TxStr 0071  
       __size_of_sprintf 00E8            __size_of_main 0029             ?_DHT11_start 0070  
        ?_DHT11_readByte 0070                 _usart_Tx 0499   DHT11_readByte@dataByte 0073  
           _slaveRespond 04A5                sprintf@ap 0028                sprintf@sp 002D  
       ___lwmod@dividend 0079             ??_usart_init 0079      __end_of_usart_TxStr 04CB  
              stringcode 0003              ?_DHT11_read 0070                 sprintf@c 002E  
               sprintf@f 0020          ___lwmod@divisor 0077          ___lwmod@counter 007B  
               stringdir 0003                 stringtab 0003             ___aldiv@sign 0021  
     __end_of_usart_init 060B   __size_of_drive_OW_high 0007  
