

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Feb 28 19:31:44 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  001A                     _RCREG	set	26
   284  0019                     _TXREG	set	25
   285  0018                     _RCSTAbits	set	24
   286  0008                     _PORTDbits	set	8
   287  0098                     _TXSTAbits	set	152
   288  0099                     _SPBRG	set	153
   289  0087                     _TRISCbits	set	135
   290  0088                     _TRISD	set	136
   291                           
   292                           	psect	cinit
   293  07FC                     start_initialization:	
   294                           ; #config settings
   295                           
   296  07FC                     __initialization:
   297  07FC                     end_of_initialization:	
   298                           ;End of C runtime variable initialization code
   299                           
   300  07FC                     __end_of__initialization:
   301  07FC  0183               	clrf	3
   302  07FD  120A  118A  2EDA   	ljmp	_main	;jump to C main() function
   303                           
   304                           	psect	cstackCOMMON
   305  0070                     __pcstackCOMMON:
   306  0070                     ?_blink:
   307  0070                     ??_blink:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_usart_Tx:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ??_usart_Tx:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?_main:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ?___aldiv:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     usart_Tx@send:	
   323                           ; 4 bytes @ 0x0
   324                           
   325  0070                     ___aldiv@divisor:	
   326                           ; 1 bytes @ 0x0
   327                           
   328                           
   329                           ; 4 bytes @ 0x0
   330  0070                     	ds	4
   331  0074                     ___aldiv@dividend:
   332                           
   333                           ; 4 bytes @ 0x4
   334  0074                     	ds	4
   335  0078                     ??___aldiv:
   336                           
   337                           ; 1 bytes @ 0x8
   338  0078                     	ds	1
   339  0079                     ??_usart_init:
   340  0079                     _usart_init$838:	
   341                           ; 1 bytes @ 0x9
   342                           
   343                           
   344                           ; 4 bytes @ 0x9
   345  0079                     	ds	4
   346  007D                     ??_main:
   347                           
   348                           	psect	cstackBANK0
   349  0020                     __pcstackBANK0:	
   350                           ; 1 bytes @ 0xD
   351                           
   352  0020                     ___aldiv@counter:
   353                           
   354                           ; 1 bytes @ 0x0
   355  0020                     	ds	1
   356  0021                     ___aldiv@sign:
   357                           
   358                           ; 1 bytes @ 0x1
   359  0021                     	ds	1
   360  0022                     ___aldiv@quotient:
   361                           
   362                           ; 4 bytes @ 0x2
   363  0022                     	ds	4
   364  0026                     ?_usart_init:
   365  0026                     usart_init@BAUD:	
   366                           ; 1 bytes @ 0x6
   367                           
   368                           
   369                           ; 4 bytes @ 0x6
   370  0026                     	ds	4
   371  002A                     main@i:
   372                           
   373                           ; 2 bytes @ 0xA
   374  002A                     	ds	2
   375                           
   376                           	psect	maintext
   377  06DA                     __pmaintext:	
   378 ;;
   379 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   380 ;;
   381 ;; *************** function _main *****************
   382 ;; Defined at:
   383 ;;		line 16 in file "main.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;  i               2   10[BANK0 ] int 
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : B00/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   397 ;;      Params:         0       0       0       0       0
   398 ;;      Locals:         0       2       0       0       0
   399 ;;      Temps:          0       0       0       0       0
   400 ;;      Totals:         0       2       0       0       0
   401 ;;Total ram usage:        2 bytes
   402 ;; Hardware stack levels required when called:    2
   403 ;; This function calls:
   404 ;;		_blink
   405 ;;		_usart_Tx
   406 ;;		_usart_init
   407 ;; This function is called by:
   408 ;;		Startup code after reset
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           
   413                           ;psect for function _main
   414  06DA                     _main:
   415  06DA                     l839:	
   416                           ;incstack = 0
   417                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   418                           
   419                           
   420                           ;main.c: 17:     TRISD = 0x00;
   421  06DA  1683               	bsf	3,5	;RP0=1, select bank1
   422  06DB  1303               	bcf	3,6	;RP1=0, select bank1
   423  06DC  0188               	clrf	8	;volatile
   424  06DD                     l841:
   425                           
   426                           ;main.c: 18:     usart_init(9600);
   427  06DD  3000               	movlw	0
   428  06DE  1283               	bcf	3,5	;RP0=0, select bank0
   429  06DF  1303               	bcf	3,6	;RP1=0, select bank0
   430  06E0  00A9               	movwf	usart_init@BAUD+3
   431  06E1  3000               	movlw	0
   432  06E2  00A8               	movwf	usart_init@BAUD+2
   433  06E3  3025               	movlw	37
   434  06E4  00A7               	movwf	usart_init@BAUD+1
   435  06E5  3080               	movlw	128
   436  06E6  00A6               	movwf	usart_init@BAUD
   437  06E7  120A  118A  2714  120A  118A  	fcall	_usart_init
   438  06EC                     l843:
   439                           
   440                           ;main.c: 21:         for(int i = 0; i < 255;i++){
   441  06EC  1283               	bcf	3,5	;RP0=0, select bank0
   442  06ED  1303               	bcf	3,6	;RP1=0, select bank0
   443  06EE  01AA               	clrf	main@i
   444  06EF  01AB               	clrf	main@i+1
   445  06F0                     l849:
   446                           
   447                           ;main.c: 22:             blink();
   448  06F0  120A  118A  26B9  120A  118A  	fcall	_blink
   449                           
   450                           ;main.c: 23:             usart_Tx('H');
   451  06F5  3048               	movlw	72
   452  06F6  120A  118A  26AD  120A  118A  	fcall	_usart_Tx
   453  06FB                     l851:
   454                           
   455                           ;main.c: 24:         }
   456  06FB  3001               	movlw	1
   457  06FC  1283               	bcf	3,5	;RP0=0, select bank0
   458  06FD  1303               	bcf	3,6	;RP1=0, select bank0
   459  06FE  07AA               	addwf	main@i,f
   460  06FF  1803               	skipnc
   461  0700  0AAB               	incf	main@i+1,f
   462  0701  3000               	movlw	0
   463  0702  07AB               	addwf	main@i+1,f
   464  0703                     l853:
   465  0703  082B               	movf	main@i+1,w
   466  0704  3A80               	xorlw	128
   467  0705  00FF               	movwf	btemp+1
   468  0706  3080               	movlw	128
   469  0707  027F               	subwf	btemp+1,w
   470  0708  1D03               	skipz
   471  0709  2F0C               	goto	u275
   472  070A  30FF               	movlw	255
   473  070B  022A               	subwf	main@i,w
   474  070C                     u275:
   475  070C  1C03               	skipc
   476  070D  2F0F               	goto	u271
   477  070E  2F10               	goto	u270
   478  070F                     u271:
   479  070F  2EF0               	goto	l849
   480  0710                     u270:
   481  0710  2EEC               	goto	l843
   482  0711  120A  118A  2800   	ljmp	start
   483  0714                     __end_of_main:
   484                           
   485                           	psect	text1
   486  0714                     __ptext1:	
   487 ;; *************** function _usart_init *****************
   488 ;; Defined at:
   489 ;;		line 14 in file "usart.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;  BAUD            4    6[BANK0 ] long 
   492 ;; Auto vars:     Size  Location     Type
   493 ;;		None
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   503 ;;      Params:         0       4       0       0       0
   504 ;;      Locals:         4       0       0       0       0
   505 ;;      Temps:          0       0       0       0       0
   506 ;;      Totals:         4       4       0       0       0
   507 ;;Total ram usage:        8 bytes
   508 ;; Hardware stack levels used:    1
   509 ;; Hardware stack levels required when called:    1
   510 ;; This function calls:
   511 ;;		___aldiv
   512 ;; This function is called by:
   513 ;;		_main
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517                           
   518                           ;psect for function _usart_init
   519  0714                     _usart_init:
   520  0714                     l813:	
   521                           ;incstack = 0
   522                           ; Regs used in _usart_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   523                           
   524                           
   525                           ;usart.c: 16:     TRISCbits.TRISC6 = 0;
   526  0714  1683               	bsf	3,5	;RP0=1, select bank1
   527  0715  1303               	bcf	3,6	;RP1=0, select bank1
   528  0716  1307               	bcf	7,6	;volatile
   529                           
   530                           ;usart.c: 17:     TRISCbits.TRISC7 = 1;
   531  0717  1787               	bsf	7,7	;volatile
   532  0718                     l815:
   533                           
   534                           ;usart.c: 18:     SPBRG = (unsigned char)(((8000000/BAUD)/64) - 1);
   535  0718  1283               	bcf	3,5	;RP0=0, select bank0
   536  0719  1303               	bcf	3,6	;RP1=0, select bank0
   537  071A  0829               	movf	usart_init@BAUD+3,w
   538  071B  00F3               	movwf	___aldiv@divisor+3
   539  071C  0828               	movf	usart_init@BAUD+2,w
   540  071D  00F2               	movwf	___aldiv@divisor+2
   541  071E  0827               	movf	usart_init@BAUD+1,w
   542  071F  00F1               	movwf	___aldiv@divisor+1
   543  0720  0826               	movf	usart_init@BAUD,w
   544  0721  00F0               	movwf	___aldiv@divisor
   545  0722  3000               	movlw	0
   546  0723  00F7               	movwf	___aldiv@dividend+3
   547  0724  307A               	movlw	122
   548  0725  00F6               	movwf	___aldiv@dividend+2
   549  0726  3012               	movlw	18
   550  0727  00F5               	movwf	___aldiv@dividend+1
   551  0728  3000               	movlw	0
   552  0729  00F4               	movwf	___aldiv@dividend
   553  072A  120A  118A  275F  120A  118A  	fcall	___aldiv
   554  072F  0873               	movf	?___aldiv+3,w
   555  0730  00FC               	movwf	_usart_init$838+3
   556  0731  0872               	movf	?___aldiv+2,w
   557  0732  00FB               	movwf	_usart_init$838+2
   558  0733  0871               	movf	?___aldiv+1,w
   559  0734  00FA               	movwf	_usart_init$838+1
   560  0735  0870               	movf	?___aldiv,w
   561  0736  00F9               	movwf	_usart_init$838
   562                           
   563                           ;usart.c: 18:     SPBRG = (unsigned char)(((8000000/BAUD)/64) - 1);
   564  0737  3000               	movlw	0
   565  0738  00F3               	movwf	___aldiv@divisor+3
   566  0739  3000               	movlw	0
   567  073A  00F2               	movwf	___aldiv@divisor+2
   568  073B  3000               	movlw	0
   569  073C  00F1               	movwf	___aldiv@divisor+1
   570  073D  3040               	movlw	64
   571  073E  00F0               	movwf	___aldiv@divisor
   572  073F  087C               	movf	_usart_init$838+3,w
   573  0740  00F7               	movwf	___aldiv@dividend+3
   574  0741  087B               	movf	_usart_init$838+2,w
   575  0742  00F6               	movwf	___aldiv@dividend+2
   576  0743  087A               	movf	_usart_init$838+1,w
   577  0744  00F5               	movwf	___aldiv@dividend+1
   578  0745  0879               	movf	_usart_init$838,w
   579  0746  00F4               	movwf	___aldiv@dividend
   580  0747  120A  118A  275F  120A  118A  	fcall	___aldiv
   581  074C  0870               	movf	?___aldiv,w
   582  074D  3EFF               	addlw	255
   583  074E  1683               	bsf	3,5	;RP0=1, select bank1
   584  074F  1303               	bcf	3,6	;RP1=0, select bank1
   585  0750  0099               	movwf	25	;volatile
   586  0751                     l817:
   587                           
   588                           ;usart.c: 19:     TXSTAbits.BRGH = 0;
   589  0751  1118               	bcf	24,2	;volatile
   590  0752                     l819:
   591                           
   592                           ;usart.c: 20:     TXSTAbits.SYNC = 0;
   593  0752  1218               	bcf	24,4	;volatile
   594  0753                     l821:
   595                           
   596                           ;usart.c: 21:     RCSTAbits.SPEN = 1;
   597  0753  1283               	bcf	3,5	;RP0=0, select bank0
   598  0754  1303               	bcf	3,6	;RP1=0, select bank0
   599  0755  1798               	bsf	24,7	;volatile
   600  0756                     l823:
   601                           
   602                           ;usart.c: 24:     TXSTAbits.TX9 = 0;
   603  0756  1683               	bsf	3,5	;RP0=1, select bank1
   604  0757  1303               	bcf	3,6	;RP1=0, select bank1
   605  0758  1318               	bcf	24,6	;volatile
   606  0759                     l825:
   607                           
   608                           ;usart.c: 25:     TXSTAbits.TXEN = 1;
   609  0759  1698               	bsf	24,5	;volatile
   610  075A                     l827:
   611                           
   612                           ;usart.c: 28:     RCSTAbits.RC9 = 0;
   613  075A  1283               	bcf	3,5	;RP0=0, select bank0
   614  075B  1303               	bcf	3,6	;RP1=0, select bank0
   615  075C  1318               	bcf	24,6	;volatile
   616  075D                     l829:
   617                           
   618                           ;usart.c: 29:     RCSTAbits.CREN = 1;
   619  075D  1618               	bsf	24,4	;volatile
   620  075E                     l44:
   621  075E  0008               	return
   622  075F                     __end_of_usart_init:
   623                           
   624                           	psect	text2
   625  075F                     __ptext2:	
   626 ;; *************** function ___aldiv *****************
   627 ;; Defined at:
   628 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\aldiv.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;  divisor         4    0[COMMON] long 
   631 ;;  dividend        4    4[COMMON] long 
   632 ;; Auto vars:     Size  Location     Type
   633 ;;  quotient        4    2[BANK0 ] long 
   634 ;;  sign            1    1[BANK0 ] unsigned char 
   635 ;;  counter         1    0[BANK0 ] unsigned char 
   636 ;; Return value:  Size  Location     Type
   637 ;;                  4    0[COMMON] long 
   638 ;; Registers used:
   639 ;;		wreg, status,2, status,0, btemp+1
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   645 ;;      Params:         8       0       0       0       0
   646 ;;      Locals:         0       6       0       0       0
   647 ;;      Temps:          1       0       0       0       0
   648 ;;      Totals:         9       6       0       0       0
   649 ;;Total ram usage:       15 bytes
   650 ;; Hardware stack levels used:    1
   651 ;; This function calls:
   652 ;;		Nothing
   653 ;; This function is called by:
   654 ;;		_usart_init
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658                           
   659                           ;psect for function ___aldiv
   660  075F                     ___aldiv:
   661  075F                     l771:	
   662                           ;incstack = 0
   663                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
   664                           
   665  075F  1283               	bcf	3,5	;RP0=0, select bank0
   666  0760  1303               	bcf	3,6	;RP1=0, select bank0
   667  0761  01A1               	clrf	___aldiv@sign
   668  0762                     l773:
   669  0762  1FF3               	btfss	___aldiv@divisor+3,7
   670  0763  2F65               	goto	u161
   671  0764  2F66               	goto	u160
   672  0765                     u161:
   673  0765  2F73               	goto	l217
   674  0766                     u160:
   675  0766                     l775:
   676  0766  09F0               	comf	___aldiv@divisor,f
   677  0767  09F1               	comf	___aldiv@divisor+1,f
   678  0768  09F2               	comf	___aldiv@divisor+2,f
   679  0769  09F3               	comf	___aldiv@divisor+3,f
   680  076A  0AF0               	incf	___aldiv@divisor,f
   681  076B  1903               	skipnz
   682  076C  0AF1               	incf	___aldiv@divisor+1,f
   683  076D  1903               	skipnz
   684  076E  0AF2               	incf	___aldiv@divisor+2,f
   685  076F  1903               	skipnz
   686  0770  0AF3               	incf	___aldiv@divisor+3,f
   687  0771  01A1               	clrf	___aldiv@sign
   688  0772  0AA1               	incf	___aldiv@sign,f
   689  0773                     l217:
   690  0773  1FF7               	btfss	___aldiv@dividend+3,7
   691  0774  2F76               	goto	u171
   692  0775  2F77               	goto	u170
   693  0776                     u171:
   694  0776  2F86               	goto	l781
   695  0777                     u170:
   696  0777                     l777:
   697  0777  09F4               	comf	___aldiv@dividend,f
   698  0778  09F5               	comf	___aldiv@dividend+1,f
   699  0779  09F6               	comf	___aldiv@dividend+2,f
   700  077A  09F7               	comf	___aldiv@dividend+3,f
   701  077B  0AF4               	incf	___aldiv@dividend,f
   702  077C  1903               	skipnz
   703  077D  0AF5               	incf	___aldiv@dividend+1,f
   704  077E  1903               	skipnz
   705  077F  0AF6               	incf	___aldiv@dividend+2,f
   706  0780  1903               	skipnz
   707  0781  0AF7               	incf	___aldiv@dividend+3,f
   708  0782                     l779:
   709  0782  3001               	movlw	1
   710  0783  00FF               	movwf	btemp+1
   711  0784  087F               	movf	btemp+1,w
   712  0785  06A1               	xorwf	___aldiv@sign,f
   713  0786                     l781:
   714  0786  3000               	movlw	0
   715  0787  00A5               	movwf	___aldiv@quotient+3
   716  0788  3000               	movlw	0
   717  0789  00A4               	movwf	___aldiv@quotient+2
   718  078A  3000               	movlw	0
   719  078B  00A3               	movwf	___aldiv@quotient+1
   720  078C  3000               	movlw	0
   721  078D  00A2               	movwf	___aldiv@quotient
   722  078E                     l783:
   723  078E  0873               	movf	___aldiv@divisor+3,w
   724  078F  0472               	iorwf	___aldiv@divisor+2,w
   725  0790  0471               	iorwf	___aldiv@divisor+1,w
   726  0791  0470               	iorwf	___aldiv@divisor,w
   727  0792  1903               	skipnz
   728  0793  2F95               	goto	u181
   729  0794  2F96               	goto	u180
   730  0795                     u181:
   731  0795  2FE3               	goto	l805
   732  0796                     u180:
   733  0796                     l785:
   734  0796  01A0               	clrf	___aldiv@counter
   735  0797  0AA0               	incf	___aldiv@counter,f
   736  0798  2FA6               	goto	l791
   737  0799                     l787:
   738  0799  3001               	movlw	1
   739  079A  00F8               	movwf	??___aldiv
   740  079B                     u195:
   741  079B  1003               	clrc
   742  079C  0DF0               	rlf	___aldiv@divisor,f
   743  079D  0DF1               	rlf	___aldiv@divisor+1,f
   744  079E  0DF2               	rlf	___aldiv@divisor+2,f
   745  079F  0DF3               	rlf	___aldiv@divisor+3,f
   746  07A0  0BF8               	decfsz	??___aldiv,f
   747  07A1  2F9B               	goto	u195
   748  07A2                     l789:
   749  07A2  3001               	movlw	1
   750  07A3  00FF               	movwf	btemp+1
   751  07A4  087F               	movf	btemp+1,w
   752  07A5  07A0               	addwf	___aldiv@counter,f
   753  07A6                     l791:
   754  07A6  1FF3               	btfss	___aldiv@divisor+3,7
   755  07A7  2FA9               	goto	u201
   756  07A8  2FAA               	goto	u200
   757  07A9                     u201:
   758  07A9  2F99               	goto	l787
   759  07AA                     u200:
   760  07AA                     l793:
   761  07AA  3001               	movlw	1
   762  07AB  00F8               	movwf	??___aldiv
   763  07AC                     u215:
   764  07AC  1003               	clrc
   765  07AD  0DA2               	rlf	___aldiv@quotient,f
   766  07AE  0DA3               	rlf	___aldiv@quotient+1,f
   767  07AF  0DA4               	rlf	___aldiv@quotient+2,f
   768  07B0  0DA5               	rlf	___aldiv@quotient+3,f
   769  07B1  0BF8               	decfsz	??___aldiv,f
   770  07B2  2FAC               	goto	u215
   771  07B3                     l795:
   772  07B3  0873               	movf	___aldiv@divisor+3,w
   773  07B4  0277               	subwf	___aldiv@dividend+3,w
   774  07B5  1D03               	skipz
   775  07B6  2FC1               	goto	u225
   776  07B7  0872               	movf	___aldiv@divisor+2,w
   777  07B8  0276               	subwf	___aldiv@dividend+2,w
   778  07B9  1D03               	skipz
   779  07BA  2FC1               	goto	u225
   780  07BB  0871               	movf	___aldiv@divisor+1,w
   781  07BC  0275               	subwf	___aldiv@dividend+1,w
   782  07BD  1D03               	skipz
   783  07BE  2FC1               	goto	u225
   784  07BF  0870               	movf	___aldiv@divisor,w
   785  07C0  0274               	subwf	___aldiv@dividend,w
   786  07C1                     u225:
   787  07C1  1C03               	skipc
   788  07C2  2FC4               	goto	u221
   789  07C3  2FC5               	goto	u220
   790  07C4                     u221:
   791  07C4  2FD4               	goto	l801
   792  07C5                     u220:
   793  07C5                     l797:
   794  07C5  0870               	movf	___aldiv@divisor,w
   795  07C6  02F4               	subwf	___aldiv@dividend,f
   796  07C7  0871               	movf	___aldiv@divisor+1,w
   797  07C8  1C03               	skipc
   798  07C9  0F71               	incfsz	___aldiv@divisor+1,w
   799  07CA  02F5               	subwf	___aldiv@dividend+1,f
   800  07CB  0872               	movf	___aldiv@divisor+2,w
   801  07CC  1C03               	skipc
   802  07CD  0F72               	incfsz	___aldiv@divisor+2,w
   803  07CE  02F6               	subwf	___aldiv@dividend+2,f
   804  07CF  0873               	movf	___aldiv@divisor+3,w
   805  07D0  1C03               	skipc
   806  07D1  0F73               	incfsz	___aldiv@divisor+3,w
   807  07D2  02F7               	subwf	___aldiv@dividend+3,f
   808  07D3                     l799:
   809  07D3  1422               	bsf	___aldiv@quotient,0
   810  07D4                     l801:
   811  07D4  3001               	movlw	1
   812  07D5                     u235:
   813  07D5  1003               	clrc
   814  07D6  0CF3               	rrf	___aldiv@divisor+3,f
   815  07D7  0CF2               	rrf	___aldiv@divisor+2,f
   816  07D8  0CF1               	rrf	___aldiv@divisor+1,f
   817  07D9  0CF0               	rrf	___aldiv@divisor,f
   818  07DA  3EFF               	addlw	-1
   819  07DB  1D03               	skipz
   820  07DC  2FD5               	goto	u235
   821  07DD                     l803:
   822  07DD  3001               	movlw	1
   823  07DE  02A0               	subwf	___aldiv@counter,f
   824  07DF  1D03               	btfss	3,2
   825  07E0  2FE2               	goto	u241
   826  07E1  2FE3               	goto	u240
   827  07E2                     u241:
   828  07E2  2FAA               	goto	l793
   829  07E3                     u240:
   830  07E3                     l805:
   831  07E3  0821               	movf	___aldiv@sign,w
   832  07E4  1903               	btfsc	3,2
   833  07E5  2FE7               	goto	u251
   834  07E6  2FE8               	goto	u250
   835  07E7                     u251:
   836  07E7  2FF3               	goto	l809
   837  07E8                     u250:
   838  07E8                     l807:
   839  07E8  09A2               	comf	___aldiv@quotient,f
   840  07E9  09A3               	comf	___aldiv@quotient+1,f
   841  07EA  09A4               	comf	___aldiv@quotient+2,f
   842  07EB  09A5               	comf	___aldiv@quotient+3,f
   843  07EC  0AA2               	incf	___aldiv@quotient,f
   844  07ED  1903               	skipnz
   845  07EE  0AA3               	incf	___aldiv@quotient+1,f
   846  07EF  1903               	skipnz
   847  07F0  0AA4               	incf	___aldiv@quotient+2,f
   848  07F1  1903               	skipnz
   849  07F2  0AA5               	incf	___aldiv@quotient+3,f
   850  07F3                     l809:
   851  07F3  0825               	movf	___aldiv@quotient+3,w
   852  07F4  00F3               	movwf	?___aldiv+3
   853  07F5  0824               	movf	___aldiv@quotient+2,w
   854  07F6  00F2               	movwf	?___aldiv+2
   855  07F7  0823               	movf	___aldiv@quotient+1,w
   856  07F8  00F1               	movwf	?___aldiv+1
   857  07F9  0822               	movf	___aldiv@quotient,w
   858  07FA  00F0               	movwf	?___aldiv
   859  07FB                     l227:
   860  07FB  0008               	return
   861  07FC                     __end_of___aldiv:
   862                           
   863                           	psect	text3
   864  06AD                     __ptext3:	
   865 ;; *************** function _usart_Tx *****************
   866 ;; Defined at:
   867 ;;		line 33 in file "usart.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;  send            1    wreg     unsigned char 
   870 ;; Auto vars:     Size  Location     Type
   871 ;;  send            1    0[COMMON] unsigned char 
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      void 
   874 ;; Registers used:
   875 ;;		wreg
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   881 ;;      Params:         0       0       0       0       0
   882 ;;      Locals:         1       0       0       0       0
   883 ;;      Temps:          0       0       0       0       0
   884 ;;      Totals:         1       0       0       0       0
   885 ;;Total ram usage:        1 bytes
   886 ;; Hardware stack levels used:    1
   887 ;; This function calls:
   888 ;;		Nothing
   889 ;; This function is called by:
   890 ;;		_main
   891 ;;		_usart_TxStr
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           
   896                           ;psect for function _usart_Tx
   897  06AD                     _usart_Tx:
   898                           
   899                           ;incstack = 0
   900                           ; Regs used in _usart_Tx: [wreg]
   901                           ;usart_Tx@send stored from wreg
   902  06AD  00F0               	movwf	usart_Tx@send
   903  06AE                     l837:
   904                           
   905                           ;usart.c: 34:     TXREG = send;
   906  06AE  0870               	movf	usart_Tx@send,w
   907  06AF  1283               	bcf	3,5	;RP0=0, select bank0
   908  06B0  1303               	bcf	3,6	;RP1=0, select bank0
   909  06B1  0099               	movwf	25	;volatile
   910  06B2                     l47:	
   911                           ;usart.c: 35:     while (!TXSTAbits.TRMT);
   912                           
   913  06B2  1683               	bsf	3,5	;RP0=1, select bank1
   914  06B3  1303               	bcf	3,6	;RP1=0, select bank1
   915  06B4  1C98               	btfss	24,1	;volatile
   916  06B5  2EB7               	goto	u261
   917  06B6  2EB8               	goto	u260
   918  06B7                     u261:
   919  06B7  2EB2               	goto	l47
   920  06B8                     u260:
   921  06B8                     l50:
   922  06B8  0008               	return
   923  06B9                     __end_of_usart_Tx:
   924                           
   925                           	psect	text4
   926  06B9                     __ptext4:	
   927 ;; *************** function _blink *****************
   928 ;; Defined at:
   929 ;;		line 30 in file "main.c"
   930 ;; Parameters:    Size  Location     Type
   931 ;;		None
   932 ;; Auto vars:     Size  Location     Type
   933 ;;		None
   934 ;; Return value:  Size  Location     Type
   935 ;;                  1    wreg      void 
   936 ;; Registers used:
   937 ;;		wreg
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   943 ;;      Params:         0       0       0       0       0
   944 ;;      Locals:         0       0       0       0       0
   945 ;;      Temps:          3       0       0       0       0
   946 ;;      Totals:         3       0       0       0       0
   947 ;;Total ram usage:        3 bytes
   948 ;; Hardware stack levels used:    1
   949 ;; This function calls:
   950 ;;		Nothing
   951 ;; This function is called by:
   952 ;;		_main
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           
   957                           ;psect for function _blink
   958  06B9                     _blink:
   959  06B9                     l831:	
   960                           ;incstack = 0
   961                           ; Regs used in _blink: [wreg]
   962                           
   963                           
   964                           ;main.c: 31:     PORTDbits.RD0 = 1;
   965  06B9  1283               	bcf	3,5	;RP0=0, select bank0
   966  06BA  1303               	bcf	3,6	;RP1=0, select bank0
   967  06BB  1408               	bsf	8,0	;volatile
   968  06BC                     l833:
   969                           
   970                           ;main.c: 32:     _delay((unsigned long)((1000)*(8000000/4000.0)));
   971  06BC  300B               	movlw	11
   972  06BD  00F2               	movwf	??_blink+2
   973  06BE  3026               	movlw	38
   974  06BF  00F1               	movwf	??_blink+1
   975  06C0  305D               	movlw	93
   976  06C1  00F0               	movwf	??_blink
   977  06C2                     u297:
   978  06C2  0BF0               	decfsz	??_blink,f
   979  06C3  2EC2               	goto	u297
   980  06C4  0BF1               	decfsz	??_blink+1,f
   981  06C5  2EC2               	goto	u297
   982  06C6  0BF2               	decfsz	??_blink+2,f
   983  06C7  2EC2               	goto	u297
   984  06C8  2EC9               	nop2
   985  06C9                     l835:
   986                           
   987                           ;main.c: 33:     PORTDbits.RD0 = 0;
   988  06C9  1283               	bcf	3,5	;RP0=0, select bank0
   989  06CA  1303               	bcf	3,6	;RP1=0, select bank0
   990  06CB  1008               	bcf	8,0	;volatile
   991                           
   992                           ;main.c: 34:     _delay((unsigned long)((1000)*(8000000/4000.0)));
   993  06CC  300B               	movlw	11
   994  06CD  00F2               	movwf	??_blink+2
   995  06CE  3026               	movlw	38
   996  06CF  00F1               	movwf	??_blink+1
   997  06D0  305D               	movlw	93
   998  06D1  00F0               	movwf	??_blink
   999  06D2                     u307:
  1000  06D2  0BF0               	decfsz	??_blink,f
  1001  06D3  2ED2               	goto	u307
  1002  06D4  0BF1               	decfsz	??_blink+1,f
  1003  06D5  2ED2               	goto	u307
  1004  06D6  0BF2               	decfsz	??_blink+2,f
  1005  06D7  2ED2               	goto	u307
  1006  06D8  2ED9               	nop2
  1007  06D9                     l25:
  1008  06D9  0008               	return
  1009  06DA                     __end_of_blink:
  1010  007E                     btemp	set	126	;btemp
  1011  007E                     wtemp0	set	126
  1012                           
  1013                           	psect	config
  1014                           
  1015                           ;Config register CONFIG1 @ 0x2007
  1016                           ;	Oscillator Selection bits
  1017                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1018                           ;	Watchdog Timer Enable bit
  1019                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1020                           ;	Power-up Timer Enable bit
  1021                           ;	PWRTE = OFF, PWRT disabled
  1022                           ;	RE3/MCLR pin function select bit
  1023                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1024                           ;	Code Protection bit
  1025                           ;	CP = OFF, Program memory code protection is disabled
  1026                           ;	Data Code Protection bit
  1027                           ;	CPD = OFF, Data memory code protection is disabled
  1028                           ;	Brown Out Reset Selection bits
  1029                           ;	BOREN = ON, BOR enabled
  1030                           ;	Internal External Switchover bit
  1031                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1032                           ;	Fail-Safe Clock Monitor Enabled bit
  1033                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1034                           ;	Low Voltage Programming Enable bit
  1035                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1036                           ;	In-Circuit Debugger Mode bit
  1037                           ;	DEBUG = 0x1, unprogrammed default
  1038  2007                     	org	8199
  1039  2007  2FF2               	dw	12274
  1040                           
  1041                           ;Config register CONFIG2 @ 0x2008
  1042                           ;	Brown-out Reset Selection bit
  1043                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1044                           ;	Flash Program Memory Self Write Enable bits
  1045                           ;	WRT = OFF, Write protection off
  1046  2008                     	org	8200
  1047  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     12      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_usart_init
    _usart_init->___aldiv

Critical Paths under _main in BANK0

    _main->_usart_init
    _usart_init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     793
                                             10 BANK0      2     2      0
                              _blink
                           _usart_Tx
                         _usart_init
 ---------------------------------------------------------------------------------
 (1) _usart_init                                           8     4      4     725
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _usart_Tx                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _blink                                                3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _blink
   _usart_Tx
   _usart_init
     ___aldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Feb 28 19:31:44 2021

                     l25 06D9                       l50 06B8                       l44 075E  
                     l47 06B2                      l217 0773                      l227 07FB  
                    l801 07D4                      l803 07DD                      l805 07E3  
                    l821 0753                      l813 0714                      l831 06B9  
                    l807 07E8                      l823 0756                      l815 0718  
                    l833 06BC                      l809 07F3                      l825 0759  
                    l817 0751                      l841 06DD                      l835 06C9  
                    l771 075F                      l827 075A                      l819 0752  
                    l851 06FB                      l843 06EC                      l837 06AE  
                    l781 0786                      l773 0762                      l829 075D  
                    l853 0703                      l791 07A6                      l783 078E  
                    l775 0766                      l839 06DA                      l793 07AA  
                    l785 0796                      l777 0777                      l849 06F0  
                    l795 07B3                      l787 0799                      l779 0782  
                    l797 07C5                      l789 07A2                      l799 07D3  
                    u200 07AA                      u201 07A9                      u220 07C5  
                    u221 07C4                      u215 07AC                      u240 07E3  
                    u160 0766                      u241 07E2                      u225 07C1  
                    u161 0765                      u250 07E8                      u170 0777  
                    u307 06D2                      u251 07E7                      u235 07D5  
                    u171 0776                      u260 06B8                      u180 0796  
                    u261 06B7                      u181 0795                      u270 0710  
                    u271 070F                      u195 079B                      u275 070C  
                    u297 06C2                     _main 06DA                     btemp 007E  
                   start 0000          __end_of___aldiv 07FC                    ?_main 0070  
                  _RCREG 001A                    _SPBRG 0099                    _TRISD 0088  
                  _TXREG 0019                    _blink 06B9                    main@i 002A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 0714                   ??_main 007D                   ?_blink 0070  
              ??___aldiv 0078         __end_of_usart_Tx 06B9  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_blink 06DA                  ??_blink 0070  
           usart_Tx@send 0070               __pmaintext 06DA           usart_init@BAUD 0026  
         _usart_init$838 0079                  ___aldiv 075F                ?_usart_Tx 0070  
                __ptext1 0714                  __ptext2 075F                  __ptext3 06AD  
                __ptext4 06B9         ___aldiv@dividend 0074     end_of_initialization 07FC  
              _RCSTAbits 0018         ___aldiv@quotient 0022               ??_usart_Tx 0070  
              _PORTDbits 0008                _TRISCbits 0087                _TXSTAbits 0098  
             _usart_init 0714      start_initialization 07FC                ___latbits 0002  
          __pcstackBANK0 0020              ?_usart_init 0026                 ?___aldiv 0070  
      __size_of_usart_Tx 000C           __size_of_blink 0021          ___aldiv@divisor 0070  
        ___aldiv@counter 0020      __size_of_usart_init 004B         __size_of___aldiv 009D  
          __size_of_main 003A                 _usart_Tx 06AD             ??_usart_init 0079  
           ___aldiv@sign 0021       __end_of_usart_init 075F  
