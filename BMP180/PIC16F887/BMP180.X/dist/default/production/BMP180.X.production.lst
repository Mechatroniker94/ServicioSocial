

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Feb 27 21:45:48 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	functab,global,class=ENTRY,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.20
    47                           ; Generated 12/02/2020 GMT
    48                           ; 
    49                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F887 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0088                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0095                     	;# 
   133  0096                     	;# 
   134  0097                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  0105                     	;# 
   144  0107                     	;# 
   145  0108                     	;# 
   146  0109                     	;# 
   147  010C                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0185                     	;# 
   153  0187                     	;# 
   154  0188                     	;# 
   155  0189                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0008                     	;# 
   167  0009                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000D                     	;# 
   172  000E                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0013                     	;# 
   179  0014                     	;# 
   180  0015                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001B                     	;# 
   188  001B                     	;# 
   189  001C                     	;# 
   190  001D                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  0081                     	;# 
   194  0085                     	;# 
   195  0086                     	;# 
   196  0087                     	;# 
   197  0088                     	;# 
   198  0089                     	;# 
   199  008C                     	;# 
   200  008D                     	;# 
   201  008E                     	;# 
   202  008F                     	;# 
   203  0090                     	;# 
   204  0091                     	;# 
   205  0092                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0094                     	;# 
   210  0095                     	;# 
   211  0096                     	;# 
   212  0097                     	;# 
   213  0098                     	;# 
   214  0099                     	;# 
   215  009A                     	;# 
   216  009B                     	;# 
   217  009C                     	;# 
   218  009D                     	;# 
   219  009E                     	;# 
   220  009F                     	;# 
   221  0105                     	;# 
   222  0107                     	;# 
   223  0108                     	;# 
   224  0109                     	;# 
   225  010C                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  0185                     	;# 
   231  0187                     	;# 
   232  0188                     	;# 
   233  0189                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  000E                     	;# 
   251  000E                     	;# 
   252  000F                     	;# 
   253  0010                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0013                     	;# 
   257  0014                     	;# 
   258  0015                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001D                     	;# 
   269  001E                     	;# 
   270  001F                     	;# 
   271  0081                     	;# 
   272  0085                     	;# 
   273  0086                     	;# 
   274  0087                     	;# 
   275  0088                     	;# 
   276  0089                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  008E                     	;# 
   280  008F                     	;# 
   281  0090                     	;# 
   282  0091                     	;# 
   283  0092                     	;# 
   284  0093                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0094                     	;# 
   288  0095                     	;# 
   289  0096                     	;# 
   290  0097                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009A                     	;# 
   294  009B                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009E                     	;# 
   298  009F                     	;# 
   299  0105                     	;# 
   300  0107                     	;# 
   301  0108                     	;# 
   302  0109                     	;# 
   303  010C                     	;# 
   304  010C                     	;# 
   305  010D                     	;# 
   306  010E                     	;# 
   307  010F                     	;# 
   308  0185                     	;# 
   309  0187                     	;# 
   310  0188                     	;# 
   311  0189                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000D                     	;# 
   328  000E                     	;# 
   329  000E                     	;# 
   330  000F                     	;# 
   331  0010                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0014                     	;# 
   336  0015                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  001D                     	;# 
   347  001E                     	;# 
   348  001F                     	;# 
   349  0081                     	;# 
   350  0085                     	;# 
   351  0086                     	;# 
   352  0087                     	;# 
   353  0088                     	;# 
   354  0089                     	;# 
   355  008C                     	;# 
   356  008D                     	;# 
   357  008E                     	;# 
   358  008F                     	;# 
   359  0090                     	;# 
   360  0091                     	;# 
   361  0092                     	;# 
   362  0093                     	;# 
   363  0093                     	;# 
   364  0093                     	;# 
   365  0094                     	;# 
   366  0095                     	;# 
   367  0096                     	;# 
   368  0097                     	;# 
   369  0098                     	;# 
   370  0099                     	;# 
   371  009A                     	;# 
   372  009B                     	;# 
   373  009C                     	;# 
   374  009D                     	;# 
   375  009E                     	;# 
   376  009F                     	;# 
   377  0105                     	;# 
   378  0107                     	;# 
   379  0108                     	;# 
   380  0109                     	;# 
   381  010C                     	;# 
   382  010C                     	;# 
   383  010D                     	;# 
   384  010E                     	;# 
   385  010F                     	;# 
   386  0185                     	;# 
   387  0187                     	;# 
   388  0188                     	;# 
   389  0189                     	;# 
   390  018C                     	;# 
   391  018D                     	;# 
   392  0000                     	;# 
   393  0001                     	;# 
   394  0002                     	;# 
   395  0003                     	;# 
   396  0004                     	;# 
   397  0005                     	;# 
   398  0006                     	;# 
   399  0007                     	;# 
   400  0008                     	;# 
   401  0009                     	;# 
   402  000A                     	;# 
   403  000B                     	;# 
   404  000C                     	;# 
   405  000D                     	;# 
   406  000E                     	;# 
   407  000E                     	;# 
   408  000F                     	;# 
   409  0010                     	;# 
   410  0011                     	;# 
   411  0012                     	;# 
   412  0013                     	;# 
   413  0014                     	;# 
   414  0015                     	;# 
   415  0015                     	;# 
   416  0016                     	;# 
   417  0017                     	;# 
   418  0018                     	;# 
   419  0019                     	;# 
   420  001A                     	;# 
   421  001B                     	;# 
   422  001B                     	;# 
   423  001C                     	;# 
   424  001D                     	;# 
   425  001E                     	;# 
   426  001F                     	;# 
   427  0081                     	;# 
   428  0085                     	;# 
   429  0086                     	;# 
   430  0087                     	;# 
   431  0088                     	;# 
   432  0089                     	;# 
   433  008C                     	;# 
   434  008D                     	;# 
   435  008E                     	;# 
   436  008F                     	;# 
   437  0090                     	;# 
   438  0091                     	;# 
   439  0092                     	;# 
   440  0093                     	;# 
   441  0093                     	;# 
   442  0093                     	;# 
   443  0094                     	;# 
   444  0095                     	;# 
   445  0096                     	;# 
   446  0097                     	;# 
   447  0098                     	;# 
   448  0099                     	;# 
   449  009A                     	;# 
   450  009B                     	;# 
   451  009C                     	;# 
   452  009D                     	;# 
   453  009E                     	;# 
   454  009F                     	;# 
   455  0105                     	;# 
   456  0107                     	;# 
   457  0108                     	;# 
   458  0109                     	;# 
   459  010C                     	;# 
   460  010C                     	;# 
   461  010D                     	;# 
   462  010E                     	;# 
   463  010F                     	;# 
   464  0185                     	;# 
   465  0187                     	;# 
   466  0188                     	;# 
   467  0189                     	;# 
   468  018C                     	;# 
   469  018D                     	;# 
   470                           
   471                           	psect	idataBANK0
   472  17F3                     __pidataBANK0:
   473                           
   474                           ;initializer for _adressW
   475  17F3  34EE               	retlw	238
   476  17F4  3400               	retlw	0
   477                           
   478                           ;initializer for _adressR
   479  17F5  34EF               	retlw	239
   480  17F6  3400               	retlw	0
   481                           
   482                           	psect	strings
   483  0800                     __pstrings:
   484  0800                     stringtab:
   485  0800                     __stringtab:
   486  0800                     stringcode:	
   487                           ;	String table - string pointers are 1 byte each
   488                           
   489  0800                     stringdir:
   490  0800  3008               	movlw	high stringdir
   491  0801  008A               	movwf	10
   492  0802  0804               	movf	4,w
   493  0803  0A84               	incf	4,f
   494  0804  0782               	addwf	2,f
   495  0805                     __stringbase:
   496  0805  3400               	retlw	0
   497  0806                     __end_of__stringtab:
   498  0806                     _dpowers:
   499  0806  3401               	retlw	1
   500  0807  3400               	retlw	0
   501  0808  3400               	retlw	0
   502  0809  3400               	retlw	0
   503  080A  340A               	retlw	10
   504  080B  3400               	retlw	0
   505  080C  3400               	retlw	0
   506  080D  3400               	retlw	0
   507  080E  3464               	retlw	100
   508  080F  3400               	retlw	0
   509  0810  3400               	retlw	0
   510  0811  3400               	retlw	0
   511  0812  34E8               	retlw	232
   512  0813  3403               	retlw	3
   513  0814  3400               	retlw	0
   514  0815  3400               	retlw	0
   515  0816  3410               	retlw	16
   516  0817  3427               	retlw	39
   517  0818  3400               	retlw	0
   518  0819  3400               	retlw	0
   519  081A  34A0               	retlw	160
   520  081B  3486               	retlw	134
   521  081C  3401               	retlw	1
   522  081D  3400               	retlw	0
   523  081E  3440               	retlw	64
   524  081F  3442               	retlw	66
   525  0820  340F               	retlw	15
   526  0821  3400               	retlw	0
   527  0822  3480               	retlw	128
   528  0823  3496               	retlw	150
   529  0824  3498               	retlw	152
   530  0825  3400               	retlw	0
   531  0826  3400               	retlw	0
   532  0827  34E1               	retlw	225
   533  0828  34F5               	retlw	245
   534  0829  3405               	retlw	5
   535  082A  3400               	retlw	0
   536  082B  34CA               	retlw	202
   537  082C  349A               	retlw	154
   538  082D  343B               	retlw	59
   539  082E                     __end_of_dpowers:
   540  0008                     _PORTD	set	8
   541  0006                     _PORTBbits	set	6
   542  0013                     _SSPBUF	set	19
   543  0014                     _SSPCON	set	20
   544  0063                     _SSPIF	set	99
   545  0094                     _SSPSTATbits	set	148
   546  0091                     _SSPCON2bits	set	145
   547  0091                     _SSPCON2	set	145
   548  0094                     _SSPSTAT	set	148
   549  0093                     _SSPADD	set	147
   550  0087                     _TRISCbits	set	135
   551  0086                     _TRISB	set	134
   552  0088                     _TRISD	set	136
   553  0189                     _ANSELH	set	393
   554  082E                     STR_3:
   555  082E  3478               	retlw	120	;'x'
   556  082F  3433               	retlw	51	;'3'
   557  0830  3420               	retlw	32	;' '
   558  0831  343D               	retlw	61	;'='
   559  0832  3420               	retlw	32	;' '
   560  0833  3425               	retlw	37	;'%'
   561  0834  346C               	retlw	108	;'l'
   562  0835  3464               	retlw	100	;'d'
   563  0836  340A               	retlw	10
   564  0837  3400               	retlw	0
   565  0838                     STR_2:
   566  0838  3450               	retlw	80	;'P'
   567  0839  3420               	retlw	32	;' '
   568  083A  343D               	retlw	61	;'='
   569  083B  3420               	retlw	32	;' '
   570  083C  3425               	retlw	37	;'%'
   571  083D  346C               	retlw	108	;'l'
   572  083E  3464               	retlw	100	;'d'
   573  083F  3400               	retlw	0
   574  0840                     STR_1:
   575  0840  3454               	retlw	84	;'T'
   576  0841  3420               	retlw	32	;' '
   577  0842  343D               	retlw	61	;'='
   578  0843  3420               	retlw	32	;' '
   579  0844  3425               	retlw	37	;'%'
   580  0845  346C               	retlw	108	;'l'
   581  0846  3464               	retlw	100	;'d'
   582  0847  3400               	retlw	0
   583                           
   584                           	psect	cinit
   585  07D2                     start_initialization:	
   586                           ; #config settings
   587                           
   588  07D2                     __initialization:
   589                           
   590                           ; Initialize objects allocated to BANK0
   591  07D2  160A  118A  27F3  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   592  07D7  00E7               	movwf	__pdataBANK0& (0+127)
   593  07D8  160A  118A  27F4  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   594  07DD  00E8               	movwf	(__pdataBANK0+1)& (0+127)
   595  07DE  160A  118A  27F5  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   596  07E3  00E9               	movwf	(__pdataBANK0+2)& (0+127)
   597  07E4  160A  118A  27F6  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   598  07E9  00EA               	movwf	(__pdataBANK0+3)& (0+127)
   599                           
   600                           ; Clear objects allocated to BANK3
   601  07EA  1783               	bsf	3,7	;select IRP bank2
   602  07EB  3090               	movlw	low __pbssBANK3
   603  07EC  0084               	movwf	4
   604  07ED  30BC               	movlw	low (__pbssBANK3+44)
   605  07EE  120A  158A  2048  120A  118A  	fcall	clear_ram0
   606                           
   607                           ; Clear objects allocated to BANK0
   608  07F3  1383               	bcf	3,7	;select IRP bank0
   609  07F4  3057               	movlw	low __pbssBANK0
   610  07F5  0084               	movwf	4
   611  07F6  3067               	movlw	low (__pbssBANK0+16)
   612  07F7  120A  158A  2048  120A  118A  	fcall	clear_ram0
   613  07FC                     end_of_initialization:	
   614                           ;End of C runtime variable initialization code
   615                           
   616  07FC                     __end_of__initialization:
   617  07FC  0183               	clrf	3
   618  07FD  120A  158A  2BA4   	ljmp	_main	;jump to C main() function
   619                           
   620                           	psect	bssBANK0
   621  0057                     __pbssBANK0:
   622  0057                     _te:
   623  0057                     	ds	4
   624  005B                     _B5:
   625  005B                     	ds	4
   626  005F                     _x2:
   627  005F                     	ds	4
   628  0063                     _x1:
   629  0063                     	ds	4
   630                           
   631                           	psect	dataBANK0
   632  0067                     __pdataBANK0:
   633  0067                     _adressW:
   634  0067                     	ds	2
   635  0069                     _adressR:
   636  0069                     	ds	2
   637                           
   638                           	psect	bssBANK3
   639  0190                     __pbssBANK3:
   640  0190                     _dataEprom:
   641  0190                     	ds	44
   642                           
   643                           	psect	clrtext
   644  0848                     clear_ram0:	
   645                           ;	Called with FSR containing the base address, and
   646                           ;	W with the last address+1
   647                           
   648  0848  0064               	clrwdt	;clear the watchdog before getting into this loop
   649  0849                     clrloop0:
   650  0849  0180               	clrf	0	;clear RAM location pointed to by FSR
   651  084A  0A84               	incf	4,f	;increment pointer
   652  084B  0604               	xorwf	4,w	;XOR with final address
   653  084C  1903               	btfsc	3,2	;have we reached the end yet?
   654  084D  3400               	retlw	0	;all done for this memory range, return
   655  084E  0604               	xorwf	4,w	;XOR again to restore value
   656  084F  2849               	goto	clrloop0	;do the next byte
   657                           
   658                           	psect	cstackBANK1
   659  00A0                     __pcstackBANK1:
   660  00A0                     BMP180_readPreassure@B3:
   661                           
   662                           ; 4 bytes @ 0x0
   663  00A0                     	ds	4
   664  00A4                     BMP180_readPreassure@pres:
   665                           
   666                           ; 4 bytes @ 0x4
   667  00A4                     	ds	4
   668  00A8                     BMP180_readPreassure@p1:
   669                           
   670                           ; 4 bytes @ 0x8
   671  00A8                     	ds	4
   672  00AC                     BMP180_readPreassure@p2:
   673                           
   674                           ; 2 bytes @ 0xC
   675  00AC                     	ds	2
   676  00AE                     BMP180_readPreassure@p3:
   677                           
   678                           ; 1 bytes @ 0xE
   679  00AE                     	ds	1
   680  00AF                     BMP180_readPreassure@B4:
   681                           
   682                           ; 4 bytes @ 0xF
   683  00AF                     	ds	4
   684  00B3                     _BMP180_readPreassure$1065:
   685                           
   686                           ; 4 bytes @ 0x13
   687  00B3                     	ds	4
   688  00B7                     BMP180_readPreassure@B7:
   689                           
   690                           ; 4 bytes @ 0x17
   691  00B7                     	ds	4
   692  00BB                     BMP180_readPreassure@x3:
   693                           
   694                           ; 4 bytes @ 0x1B
   695  00BB                     	ds	4
   696  00BF                     BMP180_readPreassure@x2:
   697                           
   698                           ; 4 bytes @ 0x1F
   699  00BF                     	ds	4
   700  00C3                     BMP180_readPreassure@x1:
   701                           
   702                           ; 4 bytes @ 0x23
   703  00C3                     	ds	4
   704  00C7                     BMP180_readPreassure@p:
   705                           
   706                           ; 4 bytes @ 0x27
   707  00C7                     	ds	4
   708  00CB                     BMP180_readPreassure@B6:
   709                           
   710                           ; 4 bytes @ 0x2B
   711  00CB                     	ds	4
   712  00CF                     main@buffer:
   713                           
   714                           ; 25 bytes @ 0x2F
   715  00CF                     	ds	25
   716  00E8                     main@temperatura:
   717                           
   718                           ; 4 bytes @ 0x48
   719  00E8                     	ds	4
   720  00EC                     main@press:
   721                           
   722                           ; 4 bytes @ 0x4C
   723  00EC                     	ds	4
   724                           
   725                           	psect	cstackCOMMON
   726  0070                     __pcstackCOMMON:
   727  0070                     ?_lcd_init:
   728  0070                     ?_lcd_clear:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_BMP180_init:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?_lcd_string:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_i2c_idle:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ??_i2c_idle:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?_BMP180_wait:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ??_BMP180_wait:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ?_lcd_cmd:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ??_lcd_cmd:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ?_putch:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?_main:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ?_i2c_init:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ??_i2c_init:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ?_i2c_start:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ??_i2c_start:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ?_i2c_restart:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ??_i2c_restart:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     ?_i2c_stop:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0070                     ??_i2c_stop:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0070                     ?_i2c_read:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0070                     ??_i2c_read:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0070                     ?_i2c_write:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0070                     ??_i2c_write:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0070                     ?_i2c_sendNACK:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0070                     ??_i2c_sendNACK:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0070                     ?_i2c_sendACK:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0070                     ??_i2c_sendACK:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0070                     ?_lcd_write:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0070                     ??_lcd_write:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0070                     ?___awdiv:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0070                     ?___lmul:	
   819                           ; 2 bytes @ 0x0
   820                           
   821  0070                     ?___lldiv:	
   822                           ; 4 bytes @ 0x0
   823                           
   824  0070                     i2c_write@dato:	
   825                           ; 4 bytes @ 0x0
   826                           
   827  0070                     putch@c:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     ___awdiv@divisor:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     ___lmul@multiplier:	
   834                           ; 2 bytes @ 0x0
   835                           
   836  0070                     ___lldiv@divisor:	
   837                           ; 4 bytes @ 0x0
   838                           
   839                           
   840                           ; 4 bytes @ 0x0
   841  0070                     	ds	1
   842  0071                     ??_BMP180_init:
   843  0071                     ??_putch:	
   844                           ; 1 bytes @ 0x1
   845                           
   846  0071                     lcd_write@c:	
   847                           ; 1 bytes @ 0x1
   848                           
   849                           
   850                           ; 1 bytes @ 0x1
   851  0071                     	ds	1
   852  0072                     ??_lcd_string:
   853  0072                     lcd_cmd@c:	
   854                           ; 1 bytes @ 0x2
   855                           
   856  0072                     lcd_string@c:	
   857                           ; 1 bytes @ 0x2
   858                           
   859  0072                     ___awdiv@dividend:	
   860                           ; 1 bytes @ 0x2
   861                           
   862                           
   863                           ; 2 bytes @ 0x2
   864  0072                     	ds	1
   865  0073                     ??_lcd_init:
   866  0073                     ??_lcd_clear:	
   867                           ; 1 bytes @ 0x3
   868                           
   869                           
   870                           ; 1 bytes @ 0x3
   871  0073                     	ds	1
   872  0074                     ??___awdiv:
   873  0074                     ___awdiv@counter:	
   874                           ; 1 bytes @ 0x4
   875                           
   876  0074                     ___lmul@multiplicand:	
   877                           ; 1 bytes @ 0x4
   878                           
   879  0074                     ___lldiv@dividend:	
   880                           ; 4 bytes @ 0x4
   881                           
   882                           
   883                           ; 4 bytes @ 0x4
   884  0074                     	ds	1
   885  0075                     ___awdiv@sign:
   886                           
   887                           ; 1 bytes @ 0x5
   888  0075                     	ds	1
   889  0076                     ___awdiv@quotient:
   890                           
   891                           ; 2 bytes @ 0x6
   892  0076                     	ds	1
   893  0077                     BMP180_init@aux:
   894                           
   895                           ; 2 bytes @ 0x7
   896  0077                     	ds	1
   897  0078                     ??___lmul:
   898  0078                     ??___lldiv:	
   899                           ; 1 bytes @ 0x8
   900                           
   901                           
   902                           ; 1 bytes @ 0x8
   903  0078                     	ds	1
   904  0079                     BMP180_init@i:
   905  0079                     ___lmul@product:	
   906                           ; 2 bytes @ 0x9
   907                           
   908  0079                     ___lldiv@quotient:	
   909                           ; 4 bytes @ 0x9
   910                           
   911                           
   912                           ; 4 bytes @ 0x9
   913  0079                     	ds	2
   914  007B                     BMP180_init@j:
   915                           
   916                           ; 2 bytes @ 0xB
   917  007B                     	ds	2
   918  007D                     ??___aldiv:
   919  007D                     ___lldiv@counter:	
   920                           ; 1 bytes @ 0xD
   921                           
   922                           
   923                           ; 1 bytes @ 0xD
   924  007D                     	ds	1
   925  007E                     ??_sprintf:
   926  007E                     ??_printf:	
   927                           ; 1 bytes @ 0xE
   928                           
   929                           
   930                           	psect	cstackBANK0
   931  0020                     __pcstackBANK0:	
   932                           ; 1 bytes @ 0xE
   933                           
   934  0020                     ?___aldiv:
   935  0020                     ?___llmod:	
   936                           ; 4 bytes @ 0x0
   937                           
   938  0020                     ___aldiv@divisor:	
   939                           ; 4 bytes @ 0x0
   940                           
   941  0020                     ___llmod@divisor:	
   942                           ; 4 bytes @ 0x0
   943                           
   944                           
   945                           ; 4 bytes @ 0x0
   946  0020                     	ds	4
   947  0024                     ___aldiv@dividend:
   948  0024                     ___llmod@dividend:	
   949                           ; 4 bytes @ 0x4
   950                           
   951                           
   952                           ; 4 bytes @ 0x4
   953  0024                     	ds	4
   954  0028                     ??___llmod:
   955  0028                     ___aldiv@counter:	
   956                           ; 1 bytes @ 0x8
   957                           
   958                           
   959                           ; 1 bytes @ 0x8
   960  0028                     	ds	1
   961  0029                     ___aldiv@sign:
   962  0029                     ___llmod@counter:	
   963                           ; 1 bytes @ 0x9
   964                           
   965                           
   966                           ; 1 bytes @ 0x9
   967  0029                     	ds	1
   968  002A                     ?__doprnt:
   969  002A                     __doprnt@f:	
   970                           ; 2 bytes @ 0xA
   971                           
   972  002A                     ___aldiv@quotient:	
   973                           ; 1 bytes @ 0xA
   974                           
   975                           
   976                           ; 4 bytes @ 0xA
   977  002A                     	ds	1
   978  002B                     __doprnt@ap:
   979                           
   980                           ; 1 bytes @ 0xB
   981  002B                     	ds	1
   982  002C                     ??__doprnt:
   983                           
   984                           ; 1 bytes @ 0xC
   985  002C                     	ds	2
   986  002E                     ?_BMP180_readTemperature:
   987                           
   988                           ; 4 bytes @ 0xE
   989  002E                     	ds	3
   990  0031                     __doprnt@prec:
   991                           
   992                           ; 2 bytes @ 0x11
   993  0031                     	ds	1
   994  0032                     ??_BMP180_readTemperature:
   995                           
   996                           ; 1 bytes @ 0x12
   997  0032                     	ds	1
   998  0033                     __doprnt@flag:
   999                           
  1000                           ; 1 bytes @ 0x13
  1001  0033                     	ds	1
  1002  0034                     __doprnt@val:
  1003                           
  1004                           ; 4 bytes @ 0x14
  1005  0034                     	ds	4
  1006  0038                     __doprnt@c:
  1007                           
  1008                           ; 1 bytes @ 0x18
  1009  0038                     	ds	1
  1010  0039                     __doprnt@pb:
  1011                           
  1012                           ; 1 bytes @ 0x19
  1013  0039                     	ds	1
  1014  003A                     ?_sprintf:
  1015  003A                     ?_printf:	
  1016                           ; 2 bytes @ 0x1A
  1017                           
  1018  003A                     sprintf@f:	
  1019                           ; 2 bytes @ 0x1A
  1020                           
  1021                           
  1022                           ; 1 bytes @ 0x1A
  1023  003A                     	ds	2
  1024  003C                     BMP180_readTemperature@T:
  1025                           
  1026                           ; 4 bytes @ 0x1C
  1027  003C                     	ds	2
  1028  003E                     printf@f:
  1029                           
  1030                           ; 1 bytes @ 0x1E
  1031  003E                     	ds	1
  1032  003F                     printf@ap:
  1033  003F                     sprintf@wh:	
  1034                           ; 1 bytes @ 0x1F
  1035                           
  1036                           
  1037                           ; 1 bytes @ 0x1F
  1038  003F                     	ds	1
  1039  0040                     sprintf@ap:
  1040  0040                     printf@pb:	
  1041                           ; 1 bytes @ 0x20
  1042                           
  1043  0040                     _BMP180_readTemperature$1064:	
  1044                           ; 2 bytes @ 0x20
  1045                           
  1046                           
  1047                           ; 4 bytes @ 0x20
  1048  0040                     	ds	1
  1049  0041                     sprintf@pb:
  1050                           
  1051                           ; 2 bytes @ 0x21
  1052  0041                     	ds	1
  1053  0042                     ?_BMP180_readPreassure:
  1054                           
  1055                           ; 4 bytes @ 0x22
  1056  0042                     	ds	2
  1057  0044                     BMP180_readTemperature@temp:
  1058                           
  1059                           ; 4 bytes @ 0x24
  1060  0044                     	ds	2
  1061  0046                     ??_BMP180_readPreassure:
  1062                           
  1063                           ; 1 bytes @ 0x26
  1064  0046                     	ds	14
  1065  0054                     ??_main:
  1066                           
  1067                           ; 1 bytes @ 0x34
  1068  0054                     	ds	3
  1069                           
  1070                           	psect	maintext
  1071  0BA4                     __pmaintext:	
  1072 ;;
  1073 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1074 ;;
  1075 ;; *************** function _main *****************
  1076 ;; Defined at:
  1077 ;;		line 15 in file "main.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  buffer         25   47[BANK1 ] unsigned char [25]
  1082 ;;  press           4   76[BANK1 ] long 
  1083 ;;  temperatura     4   72[BANK1 ] long 
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1088 ;; Tracked objects:
  1089 ;;		On entry : B00/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1093 ;;      Params:         0       0       0       0       0
  1094 ;;      Locals:         0       0      33       0       0
  1095 ;;      Temps:          0       3       0       0       0
  1096 ;;      Totals:         0       3      33       0       0
  1097 ;;Total ram usage:       36 bytes
  1098 ;; Hardware stack levels required when called:    4
  1099 ;; This function calls:
  1100 ;;		_BMP180_init
  1101 ;;		_BMP180_readPreassure
  1102 ;;		_BMP180_readTemperature
  1103 ;;		_lcd_clear
  1104 ;;		_lcd_init
  1105 ;;		_lcd_string
  1106 ;;		_sprintf
  1107 ;; This function is called by:
  1108 ;;		Startup code after reset
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           
  1113                           ;psect for function _main
  1114  0BA4                     _main:
  1115  0BA4                     l1836:	
  1116                           ;incstack = 0
  1117                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1118                           
  1119                           
  1120                           ;main.c: 16:     char buffer[25];;main.c: 17:     TRISD = 0x00;
  1121  0BA4  1683               	bsf	3,5	;RP0=1, select bank1
  1122  0BA5  1303               	bcf	3,6	;RP1=0, select bank1
  1123  0BA6  0188               	clrf	8	;volatile
  1124                           
  1125                           ;main.c: 18:     TRISB = 0x00;
  1126  0BA7  0186               	clrf	6	;volatile
  1127                           
  1128                           ;main.c: 19:     ANSELH = 0x00;
  1129  0BA8  1683               	bsf	3,5	;RP0=1, select bank3
  1130  0BA9  1703               	bsf	3,6	;RP1=1, select bank3
  1131  0BAA  0189               	clrf	9	;volatile
  1132  0BAB                     l1838:
  1133                           
  1134                           ;main.c: 20:     lcd_init();
  1135  0BAB  120A  158A  208F  120A  158A  	fcall	_lcd_init
  1136  0BB0                     l1840:
  1137                           
  1138                           ;main.c: 21:     lcd_clear();
  1139  0BB0  120A  158A  2066  120A  158A  	fcall	_lcd_clear
  1140  0BB5                     l1842:
  1141                           
  1142                           ;main.c: 48:     BMP180_init();
  1143  0BB5  120A  158A  2272  120A  158A  	fcall	_BMP180_init
  1144  0BBA                     l1844:
  1145  0BBA                     l1846:
  1146  0BBA                     l1848:
  1147                           
  1148                           ;main.c: 53:         temperatura = BMP180_readTemperature();
  1149  0BBA  120A  158A  2604  120A  158A  	fcall	_BMP180_readTemperature
  1150  0BBF  1283               	bcf	3,5	;RP0=0, select bank0
  1151  0BC0  1303               	bcf	3,6	;RP1=0, select bank0
  1152  0BC1  0831               	movf	?_BMP180_readTemperature+3,w
  1153  0BC2  1683               	bsf	3,5	;RP0=1, select bank1
  1154  0BC3  1303               	bcf	3,6	;RP1=0, select bank1
  1155  0BC4  00EB               	movwf	(main@temperatura+3)^(0+128)
  1156  0BC5  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0BC6  1303               	bcf	3,6	;RP1=0, select bank0
  1158  0BC7  0830               	movf	?_BMP180_readTemperature+2,w
  1159  0BC8  1683               	bsf	3,5	;RP0=1, select bank1
  1160  0BC9  1303               	bcf	3,6	;RP1=0, select bank1
  1161  0BCA  00EA               	movwf	(main@temperatura+2)^(0+128)
  1162  0BCB  1283               	bcf	3,5	;RP0=0, select bank0
  1163  0BCC  1303               	bcf	3,6	;RP1=0, select bank0
  1164  0BCD  082F               	movf	?_BMP180_readTemperature+1,w
  1165  0BCE  1683               	bsf	3,5	;RP0=1, select bank1
  1166  0BCF  1303               	bcf	3,6	;RP1=0, select bank1
  1167  0BD0  00E9               	movwf	(main@temperatura+1)^(0+128)
  1168  0BD1  1283               	bcf	3,5	;RP0=0, select bank0
  1169  0BD2  1303               	bcf	3,6	;RP1=0, select bank0
  1170  0BD3  082E               	movf	?_BMP180_readTemperature,w
  1171  0BD4  1683               	bsf	3,5	;RP0=1, select bank1
  1172  0BD5  1303               	bcf	3,6	;RP1=0, select bank1
  1173  0BD6  00E8               	movwf	main@temperatura^(0+128)
  1174  0BD7                     l1850:
  1175                           
  1176                           ;main.c: 54:         sprintf(buffer,"T = %ld", temperatura);
  1177  0BD7  303B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1178  0BD8  00FF               	movwf	btemp+1
  1179  0BD9  087F               	movf	btemp+1,w
  1180  0BDA  1283               	bcf	3,5	;RP0=0, select bank0
  1181  0BDB  1303               	bcf	3,6	;RP1=0, select bank0
  1182  0BDC  00BA               	movwf	sprintf@f
  1183  0BDD  1683               	bsf	3,5	;RP0=1, select bank1
  1184  0BDE  1303               	bcf	3,6	;RP1=0, select bank1
  1185  0BDF  086B               	movf	(main@temperatura+3)^(0+128),w
  1186  0BE0  1283               	bcf	3,5	;RP0=0, select bank0
  1187  0BE1  1303               	bcf	3,6	;RP1=0, select bank0
  1188  0BE2  00BE               	movwf	?_sprintf+4
  1189  0BE3  1683               	bsf	3,5	;RP0=1, select bank1
  1190  0BE4  1303               	bcf	3,6	;RP1=0, select bank1
  1191  0BE5  086A               	movf	(main@temperatura+2)^(0+128),w
  1192  0BE6  1283               	bcf	3,5	;RP0=0, select bank0
  1193  0BE7  1303               	bcf	3,6	;RP1=0, select bank0
  1194  0BE8  00BD               	movwf	?_sprintf+3
  1195  0BE9  1683               	bsf	3,5	;RP0=1, select bank1
  1196  0BEA  1303               	bcf	3,6	;RP1=0, select bank1
  1197  0BEB  0869               	movf	(main@temperatura+1)^(0+128),w
  1198  0BEC  1283               	bcf	3,5	;RP0=0, select bank0
  1199  0BED  1303               	bcf	3,6	;RP1=0, select bank0
  1200  0BEE  00BC               	movwf	?_sprintf+2
  1201  0BEF  1683               	bsf	3,5	;RP0=1, select bank1
  1202  0BF0  1303               	bcf	3,6	;RP1=0, select bank1
  1203  0BF1  0868               	movf	main@temperatura^(0+128),w
  1204  0BF2  1283               	bcf	3,5	;RP0=0, select bank0
  1205  0BF3  1303               	bcf	3,6	;RP1=0, select bank0
  1206  0BF4  00BB               	movwf	?_sprintf+1
  1207  0BF5  30CF               	movlw	(low (main@buffer| 0))& (0+255)
  1208  0BF6  120A  158A  214F  120A  158A  	fcall	_sprintf
  1209  0BFB                     l1852:
  1210                           
  1211                           ;main.c: 55:         lcd_string(buffer);
  1212  0BFB  30CF               	movlw	(low (main@buffer| 0))& (0+255)
  1213  0BFC  120A  158A  2100  120A  158A  	fcall	_lcd_string
  1214  0C01                     l1854:
  1215                           
  1216                           ;main.c: 56:         press = BMP180_readPreassure();
  1217  0C01  120A  118A  207F  120A  158A  	fcall	_BMP180_readPreassure
  1218  0C06  1283               	bcf	3,5	;RP0=0, select bank0
  1219  0C07  1303               	bcf	3,6	;RP1=0, select bank0
  1220  0C08  0845               	movf	?_BMP180_readPreassure+3,w
  1221  0C09  1683               	bsf	3,5	;RP0=1, select bank1
  1222  0C0A  1303               	bcf	3,6	;RP1=0, select bank1
  1223  0C0B  00EF               	movwf	(main@press+3)^(0+128)
  1224  0C0C  1283               	bcf	3,5	;RP0=0, select bank0
  1225  0C0D  1303               	bcf	3,6	;RP1=0, select bank0
  1226  0C0E  0844               	movf	?_BMP180_readPreassure+2,w
  1227  0C0F  1683               	bsf	3,5	;RP0=1, select bank1
  1228  0C10  1303               	bcf	3,6	;RP1=0, select bank1
  1229  0C11  00EE               	movwf	(main@press+2)^(0+128)
  1230  0C12  1283               	bcf	3,5	;RP0=0, select bank0
  1231  0C13  1303               	bcf	3,6	;RP1=0, select bank0
  1232  0C14  0843               	movf	?_BMP180_readPreassure+1,w
  1233  0C15  1683               	bsf	3,5	;RP0=1, select bank1
  1234  0C16  1303               	bcf	3,6	;RP1=0, select bank1
  1235  0C17  00ED               	movwf	(main@press+1)^(0+128)
  1236  0C18  1283               	bcf	3,5	;RP0=0, select bank0
  1237  0C19  1303               	bcf	3,6	;RP1=0, select bank0
  1238  0C1A  0842               	movf	?_BMP180_readPreassure,w
  1239  0C1B  1683               	bsf	3,5	;RP0=1, select bank1
  1240  0C1C  1303               	bcf	3,6	;RP1=0, select bank1
  1241  0C1D  00EC               	movwf	main@press^(0+128)
  1242  0C1E                     l1856:
  1243                           
  1244                           ;main.c: 57:         sprintf(buffer,"P = %ld", press);
  1245  0C1E  3033               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1246  0C1F  00FF               	movwf	btemp+1
  1247  0C20  087F               	movf	btemp+1,w
  1248  0C21  1283               	bcf	3,5	;RP0=0, select bank0
  1249  0C22  1303               	bcf	3,6	;RP1=0, select bank0
  1250  0C23  00BA               	movwf	sprintf@f
  1251  0C24  1683               	bsf	3,5	;RP0=1, select bank1
  1252  0C25  1303               	bcf	3,6	;RP1=0, select bank1
  1253  0C26  086F               	movf	(main@press+3)^(0+128),w
  1254  0C27  1283               	bcf	3,5	;RP0=0, select bank0
  1255  0C28  1303               	bcf	3,6	;RP1=0, select bank0
  1256  0C29  00BE               	movwf	?_sprintf+4
  1257  0C2A  1683               	bsf	3,5	;RP0=1, select bank1
  1258  0C2B  1303               	bcf	3,6	;RP1=0, select bank1
  1259  0C2C  086E               	movf	(main@press+2)^(0+128),w
  1260  0C2D  1283               	bcf	3,5	;RP0=0, select bank0
  1261  0C2E  1303               	bcf	3,6	;RP1=0, select bank0
  1262  0C2F  00BD               	movwf	?_sprintf+3
  1263  0C30  1683               	bsf	3,5	;RP0=1, select bank1
  1264  0C31  1303               	bcf	3,6	;RP1=0, select bank1
  1265  0C32  086D               	movf	(main@press+1)^(0+128),w
  1266  0C33  1283               	bcf	3,5	;RP0=0, select bank0
  1267  0C34  1303               	bcf	3,6	;RP1=0, select bank0
  1268  0C35  00BC               	movwf	?_sprintf+2
  1269  0C36  1683               	bsf	3,5	;RP0=1, select bank1
  1270  0C37  1303               	bcf	3,6	;RP1=0, select bank1
  1271  0C38  086C               	movf	main@press^(0+128),w
  1272  0C39  1283               	bcf	3,5	;RP0=0, select bank0
  1273  0C3A  1303               	bcf	3,6	;RP1=0, select bank0
  1274  0C3B  00BB               	movwf	?_sprintf+1
  1275  0C3C  30CF               	movlw	(low (main@buffer| 0))& (0+255)
  1276  0C3D  120A  158A  214F  120A  158A  	fcall	_sprintf
  1277  0C42                     l1858:
  1278                           
  1279                           ;main.c: 58:         lcd_string(buffer);
  1280  0C42  30CF               	movlw	(low (main@buffer| 0))& (0+255)
  1281  0C43  120A  158A  2100  120A  158A  	fcall	_lcd_string
  1282  0C48                     l1860:
  1283                           
  1284                           ;main.c: 59:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1285  0C48  3006               	movlw	6
  1286  0C49  1283               	bcf	3,5	;RP0=0, select bank0
  1287  0C4A  1303               	bcf	3,6	;RP1=0, select bank0
  1288  0C4B  00D6               	movwf	??_main+2
  1289  0C4C  3013               	movlw	19
  1290  0C4D  00D5               	movwf	??_main+1
  1291  0C4E  30AD               	movlw	173
  1292  0C4F  00D4               	movwf	??_main
  1293  0C50                     u1757:
  1294  0C50  0BD4               	decfsz	??_main,f
  1295  0C51  2C50               	goto	u1757
  1296  0C52  0BD5               	decfsz	??_main+1,f
  1297  0C53  2C50               	goto	u1757
  1298  0C54  0BD6               	decfsz	??_main+2,f
  1299  0C55  2C50               	goto	u1757
  1300  0C56                     l1862:
  1301                           
  1302                           ;main.c: 60:         lcd_clear();
  1303  0C56  120A  158A  2066  120A  158A  	fcall	_lcd_clear
  1304  0C5B  2BBA               	goto	l1848
  1305  0C5C  120A  118A  2800   	ljmp	start
  1306  0C5F                     __end_of_main:
  1307                           
  1308                           	psect	text1
  1309  094F                     __ptext1:	
  1310 ;; *************** function _sprintf *****************
  1311 ;; Defined at:
  1312 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprintf.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;  wh              1    wreg     PTR unsigned char 
  1315 ;;		 -> main@buffer(25), 
  1316 ;;  f               1   26[BANK0 ] PTR const unsigned char 
  1317 ;;		 -> STR_2(8), STR_1(8), 
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;  wh              1   31[BANK0 ] PTR unsigned char 
  1320 ;;		 -> main@buffer(25), 
  1321 ;;  pb              2   33[BANK0 ] struct __prbuf
  1322 ;;  ap              1   32[BANK0 ] PTR void [1]
  1323 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  2   26[BANK0 ] int 
  1326 ;; Registers used:
  1327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1333 ;;      Params:         0       5       0       0       0
  1334 ;;      Locals:         0       4       0       0       0
  1335 ;;      Temps:          0       0       0       0       0
  1336 ;;      Totals:         0       9       0       0       0
  1337 ;;Total ram usage:        9 bytes
  1338 ;; Hardware stack levels used:    1
  1339 ;; Hardware stack levels required when called:    2
  1340 ;; This function calls:
  1341 ;;		__doprnt
  1342 ;; This function is called by:
  1343 ;;		_main
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347                           
  1348                           ;psect for function _sprintf
  1349  094F                     _sprintf:
  1350                           
  1351                           ;incstack = 0
  1352                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1353                           ;sprintf@wh stored from wreg
  1354  094F  1283               	bcf	3,5	;RP0=0, select bank0
  1355  0950  1303               	bcf	3,6	;RP1=0, select bank0
  1356  0951  00BF               	movwf	sprintf@wh
  1357  0952                     l1742:
  1358  0952  083F               	movf	sprintf@wh,w
  1359  0953  00FF               	movwf	btemp+1
  1360  0954  087F               	movf	btemp+1,w
  1361  0955  00C1               	movwf	sprintf@pb
  1362  0956                     l1744:
  1363  0956  01C2               	clrf	low ((sprintf@pb| 0+1))
  1364  0957                     l1746:
  1365  0957  303B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1366  0958  00FF               	movwf	btemp+1
  1367  0959  087F               	movf	btemp+1,w
  1368  095A  00C0               	movwf	sprintf@ap
  1369  095B                     l1748:
  1370  095B  083A               	movf	sprintf@f,w
  1371  095C  00FF               	movwf	btemp+1
  1372  095D  087F               	movf	btemp+1,w
  1373  095E  00AA               	movwf	__doprnt@f
  1374  095F  3040               	movlw	(low (sprintf@ap| 0))& (0+255)
  1375  0960  00FF               	movwf	btemp+1
  1376  0961  087F               	movf	btemp+1,w
  1377  0962  00AB               	movwf	__doprnt@ap
  1378  0963  3041               	movlw	(low (sprintf@pb| 0))& (0+255)
  1379  0964  120A  158A  245F  120A  158A  	fcall	__doprnt
  1380  0969                     l1750:
  1381  0969  1283               	bcf	3,5	;RP0=0, select bank0
  1382  096A  1303               	bcf	3,6	;RP1=0, select bank0
  1383  096B  0841               	movf	sprintf@pb,w
  1384  096C  0084               	movwf	4
  1385  096D  1383               	bcf	3,7	;select IRP bank0
  1386  096E  0180               	clrf	0
  1387  096F                     l798:
  1388  096F  0008               	return
  1389  0970                     __end_of_sprintf:
  1390                           
  1391                           	psect	text2
  1392  0900                     __ptext2:	
  1393 ;; *************** function _lcd_string *****************
  1394 ;; Defined at:
  1395 ;;		line 53 in file "lcd.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;  c               1    wreg     PTR unsigned char 
  1398 ;;		 -> main@buffer(25), 
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;  c               1    2[COMMON] PTR unsigned char 
  1401 ;;		 -> main@buffer(25), 
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1    wreg      void 
  1404 ;; Registers used:
  1405 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1411 ;;      Params:         0       0       0       0       0
  1412 ;;      Locals:         1       0       0       0       0
  1413 ;;      Temps:          0       0       0       0       0
  1414 ;;      Totals:         1       0       0       0       0
  1415 ;;Total ram usage:        1 bytes
  1416 ;; Hardware stack levels used:    1
  1417 ;; Hardware stack levels required when called:    1
  1418 ;; This function calls:
  1419 ;;		_lcd_write
  1420 ;; This function is called by:
  1421 ;;		_main
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           
  1426                           ;psect for function _lcd_string
  1427  0900                     _lcd_string:
  1428                           
  1429                           ;incstack = 0
  1430                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1431                           ;lcd_string@c stored from wreg
  1432  0900  00F2               	movwf	lcd_string@c
  1433  0901                     l1754:
  1434                           
  1435                           ;lcd.c: 54:     while(*c){
  1436  0901  290E               	goto	l1760
  1437  0902                     l1756:
  1438                           
  1439                           ;lcd.c: 55:         lcd_write(*c);
  1440  0902  0872               	movf	lcd_string@c,w
  1441  0903  0084               	movwf	4
  1442  0904  0800               	movf	0,w
  1443  0905  120A  158A  20A1  120A  158A  	fcall	_lcd_write
  1444  090A                     l1758:
  1445                           
  1446                           ;lcd.c: 56:         *c++;
  1447  090A  3001               	movlw	1
  1448  090B  00FF               	movwf	btemp+1
  1449  090C  087F               	movf	btemp+1,w
  1450  090D  07F2               	addwf	lcd_string@c,f
  1451  090E                     l1760:
  1452                           
  1453                           ;lcd.c: 54:     while(*c){
  1454  090E  0872               	movf	lcd_string@c,w
  1455  090F  0084               	movwf	4
  1456  0910  1383               	bcf	3,7	;select IRP bank0
  1457  0911  0800               	movf	0,w
  1458  0912  1D03               	btfss	3,2
  1459  0913  2915               	goto	u1611
  1460  0914  2916               	goto	u1610
  1461  0915                     u1611:
  1462  0915  2902               	goto	l1756
  1463  0916                     u1610:
  1464  0916                     l203:
  1465  0916  0008               	return
  1466  0917                     __end_of_lcd_string:
  1467                           
  1468                           	psect	text3
  1469  08A1                     __ptext3:	
  1470 ;; *************** function _lcd_write *****************
  1471 ;; Defined at:
  1472 ;;		line 45 in file "lcd.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;  c               1    wreg     unsigned char 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  c               1    1[COMMON] unsigned char 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         0       0       0       0       0
  1487 ;;      Locals:         1       0       0       0       0
  1488 ;;      Temps:          1       0       0       0       0
  1489 ;;      Totals:         2       0       0       0       0
  1490 ;;Total ram usage:        2 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		_lcd_string
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           
  1500                           ;psect for function _lcd_write
  1501  08A1                     _lcd_write:
  1502                           
  1503                           ;incstack = 0
  1504                           ; Regs used in _lcd_write: [wreg]
  1505                           ;lcd_write@c stored from wreg
  1506  08A1  00F1               	movwf	lcd_write@c
  1507  08A2                     l1556:
  1508                           
  1509                           ;lcd.c: 46:     PORTBbits.RB0 = 1;
  1510  08A2  1283               	bcf	3,5	;RP0=0, select bank0
  1511  08A3  1303               	bcf	3,6	;RP1=0, select bank0
  1512  08A4  1406               	bsf	6,0	;volatile
  1513  08A5                     l1558:
  1514                           
  1515                           ;lcd.c: 47:     PORTD = c;
  1516  08A5  0871               	movf	lcd_write@c,w
  1517  08A6  0088               	movwf	8	;volatile
  1518  08A7                     l1560:
  1519                           
  1520                           ;lcd.c: 48:     PORTBbits.RB2 = 1;
  1521  08A7  1506               	bsf	6,2	;volatile
  1522                           
  1523                           ;lcd.c: 49:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1524  08A8  30C7               	movlw	199
  1525  08A9  00F0               	movwf	??_lcd_write
  1526  08AA                     u1767:
  1527  08AA  28AB               	nop2
  1528  08AB  0BF0               	decfsz	??_lcd_write,f
  1529  08AC  28AA               	goto	u1767
  1530  08AD  28AE               	nop2
  1531  08AE  28AF               	nop2
  1532  08AF                     l1562:
  1533                           
  1534                           ;lcd.c: 50:     PORTBbits.RB2 = 0;
  1535  08AF  1283               	bcf	3,5	;RP0=0, select bank0
  1536  08B0  1303               	bcf	3,6	;RP1=0, select bank0
  1537  08B1  1106               	bcf	6,2	;volatile
  1538  08B2                     l197:
  1539  08B2  0008               	return
  1540  08B3                     __end_of_lcd_write:
  1541                           
  1542                           	psect	text4
  1543  088F                     __ptext4:	
  1544 ;; *************** function _lcd_init *****************
  1545 ;; Defined at:
  1546 ;;		line 22 in file "lcd.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;		None
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;		None
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      void 
  1553 ;; Registers used:
  1554 ;;		wreg, status,2, status,0, pclath, cstack
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1560 ;;      Params:         0       0       0       0       0
  1561 ;;      Locals:         0       0       0       0       0
  1562 ;;      Temps:          0       0       0       0       0
  1563 ;;      Totals:         0       0       0       0       0
  1564 ;;Total ram usage:        0 bytes
  1565 ;; Hardware stack levels used:    1
  1566 ;; Hardware stack levels required when called:    1
  1567 ;; This function calls:
  1568 ;;		_lcd_cmd
  1569 ;; This function is called by:
  1570 ;;		_main
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           
  1575                           ;psect for function _lcd_init
  1576  088F                     _lcd_init:
  1577  088F                     l1664:	
  1578                           ;incstack = 0
  1579                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1580                           
  1581                           
  1582                           ;lcd.c: 23:     PORTBbits.RB1 = 0;
  1583  088F  1283               	bcf	3,5	;RP0=0, select bank0
  1584  0890  1303               	bcf	3,6	;RP1=0, select bank0
  1585  0891  1086               	bcf	6,1	;volatile
  1586                           
  1587                           ;lcd.c: 24:     PORTBbits.RB0 = 0;
  1588  0892  1006               	bcf	6,0	;volatile
  1589                           
  1590                           ;lcd.c: 25:     PORTBbits.RB2 = 0;
  1591  0893  1106               	bcf	6,2	;volatile
  1592  0894                     l1666:
  1593                           
  1594                           ;lcd.c: 26:     lcd_cmd(0x38);
  1595  0894  3038               	movlw	56
  1596  0895  120A  158A  2132  120A  158A  	fcall	_lcd_cmd
  1597                           
  1598                           ;lcd.c: 27:     lcd_cmd(0x0F);
  1599  089A  300F               	movlw	15
  1600  089B  120A  158A  2132  120A  158A  	fcall	_lcd_cmd
  1601  08A0                     l188:
  1602  08A0  0008               	return
  1603  08A1                     __end_of_lcd_init:
  1604                           
  1605                           	psect	text5
  1606  0866                     __ptext5:	
  1607 ;; *************** function _lcd_clear *****************
  1608 ;; Defined at:
  1609 ;;		line 30 in file "lcd.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;		None
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;		None
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, status,2, status,0, pclath, cstack
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1623 ;;      Params:         0       0       0       0       0
  1624 ;;      Locals:         0       0       0       0       0
  1625 ;;      Temps:          0       0       0       0       0
  1626 ;;      Totals:         0       0       0       0       0
  1627 ;;Total ram usage:        0 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:    1
  1630 ;; This function calls:
  1631 ;;		_lcd_cmd
  1632 ;; This function is called by:
  1633 ;;		_main
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           
  1638                           ;psect for function _lcd_clear
  1639  0866                     _lcd_clear:
  1640  0866                     l1668:	
  1641                           ;incstack = 0
  1642                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1643                           
  1644                           
  1645                           ;lcd.c: 31:     lcd_cmd(0x01);
  1646  0866  3001               	movlw	1
  1647  0867  120A  158A  2132  120A  158A  	fcall	_lcd_cmd
  1648                           
  1649                           ;lcd.c: 32:     lcd_cmd(0x02);
  1650  086C  3002               	movlw	2
  1651  086D  120A  158A  2132  120A  158A  	fcall	_lcd_cmd
  1652  0872                     l191:
  1653  0872  0008               	return
  1654  0873                     __end_of_lcd_clear:
  1655                           
  1656                           	psect	text6
  1657  0932                     __ptext6:	
  1658 ;; *************** function _lcd_cmd *****************
  1659 ;; Defined at:
  1660 ;;		line 36 in file "lcd.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  c               1    wreg     unsigned char 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  c               1    2[COMMON] unsigned char 
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      void 
  1667 ;; Registers used:
  1668 ;;		wreg
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1674 ;;      Params:         0       0       0       0       0
  1675 ;;      Locals:         1       0       0       0       0
  1676 ;;      Temps:          2       0       0       0       0
  1677 ;;      Totals:         3       0       0       0       0
  1678 ;;Total ram usage:        3 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; This function calls:
  1681 ;;		Nothing
  1682 ;; This function is called by:
  1683 ;;		_lcd_init
  1684 ;;		_lcd_clear
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           
  1689                           ;psect for function _lcd_cmd
  1690  0932                     _lcd_cmd:
  1691                           
  1692                           ;incstack = 0
  1693                           ; Regs used in _lcd_cmd: [wreg]
  1694                           ;lcd_cmd@c stored from wreg
  1695  0932  00F2               	movwf	lcd_cmd@c
  1696  0933                     l1548:
  1697                           
  1698                           ;lcd.c: 37:     PORTBbits.RB0 = 0;
  1699  0933  1283               	bcf	3,5	;RP0=0, select bank0
  1700  0934  1303               	bcf	3,6	;RP1=0, select bank0
  1701  0935  1006               	bcf	6,0	;volatile
  1702  0936                     l1550:
  1703                           
  1704                           ;lcd.c: 38:     PORTD = c;
  1705  0936  0872               	movf	lcd_cmd@c,w
  1706  0937  0088               	movwf	8	;volatile
  1707  0938                     l1552:
  1708                           
  1709                           ;lcd.c: 39:     PORTBbits.RB2 = 1;
  1710  0938  1506               	bsf	6,2	;volatile
  1711                           
  1712                           ;lcd.c: 40:     _delay((unsigned long)((3)*(4000000/4000.0)));
  1713  0939  3004               	movlw	4
  1714  093A  00F1               	movwf	??_lcd_cmd+1
  1715  093B  30E4               	movlw	228
  1716  093C  00F0               	movwf	??_lcd_cmd
  1717  093D                     u1777:
  1718  093D  0BF0               	decfsz	??_lcd_cmd,f
  1719  093E  293D               	goto	u1777
  1720  093F  0BF1               	decfsz	??_lcd_cmd+1,f
  1721  0940  293D               	goto	u1777
  1722  0941  0000               	nop
  1723  0942                     l1554:
  1724                           
  1725                           ;lcd.c: 41:     PORTBbits.RB2 = 0;
  1726  0942  1283               	bcf	3,5	;RP0=0, select bank0
  1727  0943  1303               	bcf	3,6	;RP1=0, select bank0
  1728  0944  1106               	bcf	6,2	;volatile
  1729                           
  1730                           ;lcd.c: 42:     _delay((unsigned long)((3)*(4000000/4000.0)));
  1731  0945  3004               	movlw	4
  1732  0946  00F1               	movwf	??_lcd_cmd+1
  1733  0947  30E4               	movlw	228
  1734  0948  00F0               	movwf	??_lcd_cmd
  1735  0949                     u1787:
  1736  0949  0BF0               	decfsz	??_lcd_cmd,f
  1737  094A  2949               	goto	u1787
  1738  094B  0BF1               	decfsz	??_lcd_cmd+1,f
  1739  094C  2949               	goto	u1787
  1740  094D  0000               	nop
  1741  094E                     l194:
  1742  094E  0008               	return
  1743  094F                     __end_of_lcd_cmd:
  1744                           
  1745                           	psect	text7
  1746  0E04                     __ptext7:	
  1747 ;; *************** function _BMP180_readTemperature *****************
  1748 ;; Defined at:
  1749 ;;		line 36 in file "BMP180.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;		None
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;  buffer         25    0        unsigned char [25]
  1754 ;;  temp            4   36[BANK0 ] int [2]
  1755 ;;  T               4   28[BANK0 ] long 
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  4   14[BANK0 ] long 
  1758 ;; Registers used:
  1759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1765 ;;      Params:         0       4       0       0       0
  1766 ;;      Locals:         0      12       0       0       0
  1767 ;;      Temps:          0      10       0       0       0
  1768 ;;      Totals:         0      26       0       0       0
  1769 ;;Total ram usage:       26 bytes
  1770 ;; Hardware stack levels used:    1
  1771 ;; Hardware stack levels required when called:    2
  1772 ;; This function calls:
  1773 ;;		_BMP180_wait
  1774 ;;		___aldiv
  1775 ;;		___lmul
  1776 ;;		_i2c_read
  1777 ;;		_i2c_restart
  1778 ;;		_i2c_sendACK
  1779 ;;		_i2c_sendNACK
  1780 ;;		_i2c_start
  1781 ;;		_i2c_stop
  1782 ;;		_i2c_write
  1783 ;; This function is called by:
  1784 ;;		_main
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           
  1789                           ;psect for function _BMP180_readTemperature
  1790  0E04                     _BMP180_readTemperature:
  1791  0E04                     l1716:	
  1792                           ;incstack = 0
  1793                           ; Regs used in _BMP180_readTemperature: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1794                           
  1795                           
  1796                           ;BMP180.c: 37:     int temp[2];;BMP180.c: 38:     char buffer[25];;BMP180.c: 40:     i2c
      +                          _start();
  1797  0E04  120A  158A  20C6  120A  158A  	fcall	_i2c_start
  1798                           
  1799                           ;BMP180.c: 41:     i2c_write(adressW);
  1800  0E09  30EE               	movlw	238
  1801  0E0A  120A  158A  20D9  120A  158A  	fcall	_i2c_write
  1802                           
  1803                           ;BMP180.c: 42:     i2c_write(0xF4);
  1804  0E0F  30F4               	movlw	244
  1805  0E10  120A  158A  20D9  120A  158A  	fcall	_i2c_write
  1806                           
  1807                           ;BMP180.c: 43:     i2c_write(0x2E);
  1808  0E15  302E               	movlw	46
  1809  0E16  120A  158A  20D9  120A  158A  	fcall	_i2c_write
  1810                           
  1811                           ;BMP180.c: 44:     BMP180_wait();
  1812  0E1B  120A  118A  200F  120A  158A  	fcall	_BMP180_wait
  1813  0E20                     l1718:
  1814                           
  1815                           ;BMP180.c: 45:     i2c_sendNACK();
  1816  0E20  120A  158A  2050  120A  158A  	fcall	_i2c_sendNACK
  1817  0E25                     l1720:
  1818                           
  1819                           ;BMP180.c: 46:     i2c_stop();
  1820  0E25  120A  158A  2081  120A  158A  	fcall	_i2c_stop
  1821                           
  1822                           ;BMP180.c: 48:     i2c_start();
  1823  0E2A  120A  158A  20C6  120A  158A  	fcall	_i2c_start
  1824                           
  1825                           ;BMP180.c: 49:     i2c_write(adressW);
  1826  0E2F  30EE               	movlw	238
  1827  0E30  120A  158A  20D9  120A  158A  	fcall	_i2c_write
  1828                           
  1829                           ;BMP180.c: 50:     i2c_write(0xF6);
  1830  0E35  30F6               	movlw	246
  1831  0E36  120A  158A  20D9  120A  158A  	fcall	_i2c_write
  1832                           
  1833                           ;BMP180.c: 51:     i2c_restart();
  1834  0E3B  120A  158A  20B3  120A  158A  	fcall	_i2c_restart
  1835                           
  1836                           ;BMP180.c: 52:     i2c_write(adressR);
  1837  0E40  30EF               	movlw	239
  1838  0E41  120A  158A  20D9  120A  158A  	fcall	_i2c_write
  1839                           
  1840                           ;BMP180.c: 53:     temp[0]=i2c_read();
  1841  0E46  120A  158A  20EC  120A  158A  	fcall	_i2c_read
  1842  0E4B  1283               	bcf	3,5	;RP0=0, select bank0
  1843  0E4C  1303               	bcf	3,6	;RP1=0, select bank0
  1844  0E4D  00B2               	movwf	??_BMP180_readTemperature
  1845  0E4E  01B3               	clrf	??_BMP180_readTemperature+1
  1846  0E4F  0832               	movf	??_BMP180_readTemperature,w
  1847  0E50  00C4               	movwf	BMP180_readTemperature@temp
  1848  0E51  0833               	movf	??_BMP180_readTemperature+1,w
  1849  0E52  00C5               	movwf	BMP180_readTemperature@temp+1
  1850  0E53                     l1722:
  1851                           
  1852                           ;BMP180.c: 54:     i2c_sendACK();
  1853  0E53  160A  118A  27F7  120A  158A  	fcall	_i2c_sendACK
  1854  0E58                     l1724:
  1855                           
  1856                           ;BMP180.c: 55:     temp[1]=i2c_read();
  1857  0E58  120A  158A  20EC  120A  158A  	fcall	_i2c_read
  1858  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  1859  0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  1860  0E5F  00B2               	movwf	??_BMP180_readTemperature
  1861  0E60  01B3               	clrf	??_BMP180_readTemperature+1
  1862  0E61  0832               	movf	??_BMP180_readTemperature,w
  1863  0E62  00C6               	movwf	BMP180_readTemperature@temp+2
  1864  0E63  0833               	movf	??_BMP180_readTemperature+1,w
  1865  0E64  00C7               	movwf	BMP180_readTemperature@temp+3
  1866                           
  1867                           ;BMP180.c: 56:     i2c_sendNACK();
  1868  0E65  120A  158A  2050  120A  158A  	fcall	_i2c_sendNACK
  1869                           
  1870                           ;BMP180.c: 57:     i2c_stop();
  1871  0E6A  120A  158A  2081  120A  158A  	fcall	_i2c_stop
  1872  0E6F                     l1726:
  1873                           
  1874                           ;BMP180.c: 59:     long T = (long)(temp[0] * 256) + temp[1];
  1875  0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  1876  0E70  1303               	bcf	3,6	;RP1=0, select bank0
  1877  0E71  0846               	movf	BMP180_readTemperature@temp+2,w
  1878  0E72  00B2               	movwf	??_BMP180_readTemperature
  1879  0E73  0847               	movf	BMP180_readTemperature@temp+3,w
  1880  0E74  00B3               	movwf	??_BMP180_readTemperature+1
  1881  0E75  3000               	movlw	0
  1882  0E76  1BB3               	btfsc	??_BMP180_readTemperature+1,7
  1883  0E77  30FF               	movlw	255
  1884  0E78  00B4               	movwf	??_BMP180_readTemperature+2
  1885  0E79  00B5               	movwf	??_BMP180_readTemperature+3
  1886  0E7A  0845               	movf	BMP180_readTemperature@temp+1,w
  1887  0E7B  00B7               	movwf	??_BMP180_readTemperature+5
  1888  0E7C  0844               	movf	BMP180_readTemperature@temp,w
  1889  0E7D  00B6               	movwf	??_BMP180_readTemperature+4
  1890  0E7E  0836               	movf	??_BMP180_readTemperature+4,w
  1891  0E7F  00B7               	movwf	??_BMP180_readTemperature+5
  1892  0E80  01B6               	clrf	??_BMP180_readTemperature+4
  1893  0E81  0836               	movf	??_BMP180_readTemperature+4,w
  1894  0E82  00B8               	movwf	??_BMP180_readTemperature+6
  1895  0E83  0837               	movf	??_BMP180_readTemperature+5,w
  1896  0E84  00B9               	movwf	??_BMP180_readTemperature+7
  1897  0E85  3000               	movlw	0
  1898  0E86  1BB9               	btfsc	??_BMP180_readTemperature+7,7
  1899  0E87  30FF               	movlw	255
  1900  0E88  00BA               	movwf	??_BMP180_readTemperature+8
  1901  0E89  00BB               	movwf	??_BMP180_readTemperature+9
  1902  0E8A  0838               	movf	??_BMP180_readTemperature+6,w
  1903  0E8B  07B2               	addwf	??_BMP180_readTemperature,f
  1904  0E8C  0839               	movf	??_BMP180_readTemperature+7,w
  1905  0E8D  1803               	skipnc
  1906  0E8E  0F39               	incfsz	??_BMP180_readTemperature+7,w
  1907  0E8F  2E91               	goto	u1570
  1908  0E90  2E92               	goto	u1571
  1909  0E91                     u1570:
  1910  0E91  07B3               	addwf	??_BMP180_readTemperature+1,f
  1911  0E92                     u1571:
  1912  0E92  083A               	movf	??_BMP180_readTemperature+8,w
  1913  0E93  1803               	skipnc
  1914  0E94  0F3A               	incfsz	??_BMP180_readTemperature+8,w
  1915  0E95  2E97               	goto	u1572
  1916  0E96  2E98               	goto	u1573
  1917  0E97                     u1572:
  1918  0E97  07B4               	addwf	??_BMP180_readTemperature+2,f
  1919  0E98                     u1573:
  1920  0E98  083B               	movf	??_BMP180_readTemperature+9,w
  1921  0E99  1803               	skipnc
  1922  0E9A  0A3B               	incf	??_BMP180_readTemperature+9,w
  1923  0E9B  07B5               	addwf	??_BMP180_readTemperature+3,f
  1924  0E9C  0835               	movf	??_BMP180_readTemperature+3,w
  1925  0E9D  00BF               	movwf	BMP180_readTemperature@T+3
  1926  0E9E  0834               	movf	??_BMP180_readTemperature+2,w
  1927  0E9F  00BE               	movwf	BMP180_readTemperature@T+2
  1928  0EA0  0833               	movf	??_BMP180_readTemperature+1,w
  1929  0EA1  00BD               	movwf	BMP180_readTemperature@T+1
  1930  0EA2  0832               	movf	??_BMP180_readTemperature,w
  1931  0EA3  00BC               	movwf	BMP180_readTemperature@T
  1932  0EA4                     l1728:
  1933                           
  1934                           ;BMP180.c: 62:     x1 = ((T - dataEprom[5])* dataEprom[4])/(32768);
  1935  0EA4  3000               	movlw	0
  1936  0EA5  00A3               	movwf	___aldiv@divisor+3
  1937  0EA6  3000               	movlw	0
  1938  0EA7  00A2               	movwf	___aldiv@divisor+2
  1939  0EA8  3080               	movlw	128
  1940  0EA9  00A1               	movwf	___aldiv@divisor+1
  1941  0EAA  3000               	movlw	0
  1942  0EAB  00A0               	movwf	___aldiv@divisor
  1943  0EAC  083C               	movf	BMP180_readTemperature@T,w
  1944  0EAD  00B2               	movwf	??_BMP180_readTemperature
  1945  0EAE  083D               	movf	BMP180_readTemperature@T+1,w
  1946  0EAF  00B3               	movwf	??_BMP180_readTemperature+1
  1947  0EB0  083E               	movf	BMP180_readTemperature@T+2,w
  1948  0EB1  00B4               	movwf	??_BMP180_readTemperature+2
  1949  0EB2  083F               	movf	BMP180_readTemperature@T+3,w
  1950  0EB3  00B5               	movwf	??_BMP180_readTemperature+3
  1951  0EB4  1683               	bsf	3,5	;RP0=1, select bank3
  1952  0EB5  1703               	bsf	3,6	;RP1=1, select bank3
  1953  0EB6  0824               	movf	(_dataEprom^(0+384)+20),w
  1954  0EB7  1283               	bcf	3,5	;RP0=0, select bank0
  1955  0EB8  1303               	bcf	3,6	;RP1=0, select bank0
  1956  0EB9  02B2               	subwf	??_BMP180_readTemperature,f
  1957  0EBA  1683               	bsf	3,5	;RP0=1, select bank3
  1958  0EBB  1703               	bsf	3,6	;RP1=1, select bank3
  1959  0EBC  0825               	movf	((_dataEprom+1)^(0+384)+20),w
  1960  0EBD  1C03               	skipc
  1961  0EBE  0F25               	incfsz	((_dataEprom+1)^(0+384)+20),w
  1962  0EBF  2EC1               	goto	u1581
  1963  0EC0  2EC4               	goto	u1582
  1964  0EC1                     u1581:
  1965  0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  1966  0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  1967  0EC3  02B3               	subwf	??_BMP180_readTemperature+1,f
  1968  0EC4                     u1582:
  1969  0EC4  1683               	bsf	3,5	;RP0=1, select bank3
  1970  0EC5  1703               	bsf	3,6	;RP1=1, select bank3
  1971  0EC6  0826               	movf	((_dataEprom+2)^(0+384)+20),w
  1972  0EC7  1C03               	skipc
  1973  0EC8  0F26               	incfsz	((_dataEprom+2)^(0+384)+20),w
  1974  0EC9  2ECB               	goto	u1583
  1975  0ECA  2ECE               	goto	u1584
  1976  0ECB                     u1583:
  1977  0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  1978  0ECC  1303               	bcf	3,6	;RP1=0, select bank0
  1979  0ECD  02B4               	subwf	??_BMP180_readTemperature+2,f
  1980  0ECE                     u1584:
  1981  0ECE  1683               	bsf	3,5	;RP0=1, select bank3
  1982  0ECF  1703               	bsf	3,6	;RP1=1, select bank3
  1983  0ED0  0827               	movf	((_dataEprom+3)^(0+384)+20),w
  1984  0ED1  1C03               	skipc
  1985  0ED2  0F27               	incfsz	((_dataEprom+3)^(0+384)+20),w
  1986  0ED3  2ED5               	goto	u1585
  1987  0ED4  2ED8               	goto	u1586
  1988  0ED5                     u1585:
  1989  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  1990  0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  1991  0ED7  02B5               	subwf	??_BMP180_readTemperature+3,f
  1992  0ED8                     u1586:
  1993  0ED8  1683               	bsf	3,5	;RP0=1, select bank3
  1994  0ED9  1703               	bsf	3,6	;RP1=1, select bank3
  1995  0EDA  1283               	bcf	3,5	;RP0=0, select bank0
  1996  0EDB  1303               	bcf	3,6	;RP1=0, select bank0
  1997  0EDC  0835               	movf	??_BMP180_readTemperature+3,w
  1998  0EDD  00F3               	movwf	___lmul@multiplier+3
  1999  0EDE  0834               	movf	??_BMP180_readTemperature+2,w
  2000  0EDF  00F2               	movwf	___lmul@multiplier+2
  2001  0EE0  0833               	movf	??_BMP180_readTemperature+1,w
  2002  0EE1  00F1               	movwf	___lmul@multiplier+1
  2003  0EE2  0832               	movf	??_BMP180_readTemperature,w
  2004  0EE3  00F0               	movwf	___lmul@multiplier
  2005  0EE4  3010               	movlw	16
  2006  0EE5  3E90               	addlw	(low (_dataEprom| (0+256)))& (0+255)
  2007  0EE6  0084               	movwf	4
  2008  0EE7  1783               	bsf	3,7	;select IRP bank3
  2009  0EE8  0800               	movf	0,w
  2010  0EE9  00F4               	movwf	___lmul@multiplicand
  2011  0EEA  0A84               	incf	4,f
  2012  0EEB  0800               	movf	0,w
  2013  0EEC  00F5               	movwf	___lmul@multiplicand+1
  2014  0EED  0A84               	incf	4,f
  2015  0EEE  0800               	movf	0,w
  2016  0EEF  00F6               	movwf	___lmul@multiplicand+2
  2017  0EF0  0A84               	incf	4,f
  2018  0EF1  0800               	movf	0,w
  2019  0EF2  00F7               	movwf	___lmul@multiplicand+3
  2020  0EF3  120A  158A  2170  120A  158A  	fcall	___lmul
  2021  0EF8  0873               	movf	?___lmul+3,w
  2022  0EF9  1283               	bcf	3,5	;RP0=0, select bank0
  2023  0EFA  1303               	bcf	3,6	;RP1=0, select bank0
  2024  0EFB  00A7               	movwf	___aldiv@dividend+3
  2025  0EFC  0872               	movf	?___lmul+2,w
  2026  0EFD  00A6               	movwf	___aldiv@dividend+2
  2027  0EFE  0871               	movf	?___lmul+1,w
  2028  0EFF  00A5               	movwf	___aldiv@dividend+1
  2029  0F00  0870               	movf	?___lmul,w
  2030  0F01  00A4               	movwf	___aldiv@dividend
  2031  0F02  120A  158A  2307  120A  158A  	fcall	___aldiv
  2032  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  2033  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  2034  0F09  0823               	movf	?___aldiv+3,w
  2035  0F0A  00E6               	movwf	_x1+3
  2036  0F0B  0822               	movf	?___aldiv+2,w
  2037  0F0C  00E5               	movwf	_x1+2
  2038  0F0D  0821               	movf	?___aldiv+1,w
  2039  0F0E  00E4               	movwf	_x1+1
  2040  0F0F  0820               	movf	?___aldiv,w
  2041  0F10  00E3               	movwf	_x1
  2042  0F11                     l1730:
  2043                           
  2044                           ;BMP180.c: 63:     x2 = (2048 * dataEprom[9])/(x1 + dataEprom[10]);
  2045  0F11  1683               	bsf	3,5	;RP0=1, select bank3
  2046  0F12  1703               	bsf	3,6	;RP1=1, select bank3
  2047  0F13  0838               	movf	(_dataEprom^(0+384)+40),w
  2048  0F14  1283               	bcf	3,5	;RP0=0, select bank0
  2049  0F15  1303               	bcf	3,6	;RP1=0, select bank0
  2050  0F16  0763               	addwf	_x1,w
  2051  0F17  00B2               	movwf	??_BMP180_readTemperature
  2052  0F18  3000               	movlw	0
  2053  0F19  1803               	skipnc
  2054  0F1A  3001               	movlw	1
  2055  0F1B  1683               	bsf	3,5	;RP0=1, select bank3
  2056  0F1C  1703               	bsf	3,6	;RP1=1, select bank3
  2057  0F1D  0739               	addwf	((_dataEprom+1)^(0+384)+40),w
  2058  0F1E  1283               	bcf	3,5	;RP0=0, select bank0
  2059  0F1F  1303               	bcf	3,6	;RP1=0, select bank0
  2060  0F20  01B4               	clrf	??_BMP180_readTemperature+2
  2061  0F21  1803               	skipnc
  2062  0F22  0AB4               	incf	??_BMP180_readTemperature+2,f
  2063  0F23  0764               	addwf	_x1+1,w
  2064  0F24  00B3               	movwf	??_BMP180_readTemperature+1
  2065  0F25  1803               	skipnc
  2066  0F26  0AB4               	incf	??_BMP180_readTemperature+2,f
  2067  0F27  1683               	bsf	3,5	;RP0=1, select bank3
  2068  0F28  1703               	bsf	3,6	;RP1=1, select bank3
  2069  0F29  083A               	movf	((_dataEprom+2)^(0+384)+40),w
  2070  0F2A  1283               	bcf	3,5	;RP0=0, select bank0
  2071  0F2B  1303               	bcf	3,6	;RP1=0, select bank0
  2072  0F2C  0734               	addwf	??_BMP180_readTemperature+2,w
  2073  0F2D  01B5               	clrf	??_BMP180_readTemperature+3
  2074  0F2E  1803               	skipnc
  2075  0F2F  0AB5               	incf	??_BMP180_readTemperature+3,f
  2076  0F30  0765               	addwf	_x1+2,w
  2077  0F31  00B4               	movwf	??_BMP180_readTemperature+2
  2078  0F32  1803               	skipnc
  2079  0F33  0AB5               	incf	??_BMP180_readTemperature+3,f
  2080  0F34  1683               	bsf	3,5	;RP0=1, select bank3
  2081  0F35  1703               	bsf	3,6	;RP1=1, select bank3
  2082  0F36  083B               	movf	((_dataEprom+3)^(0+384)+40),w
  2083  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  2084  0F38  1303               	bcf	3,6	;RP1=0, select bank0
  2085  0F39  0735               	addwf	??_BMP180_readTemperature+3,w
  2086  0F3A  0766               	addwf	_x1+3,w
  2087  0F3B  00B5               	movwf	??_BMP180_readTemperature+3
  2088  0F3C  0835               	movf	??_BMP180_readTemperature+3,w
  2089  0F3D  00A3               	movwf	___aldiv@divisor+3
  2090  0F3E  0834               	movf	??_BMP180_readTemperature+2,w
  2091  0F3F  00A2               	movwf	___aldiv@divisor+2
  2092  0F40  0833               	movf	??_BMP180_readTemperature+1,w
  2093  0F41  00A1               	movwf	___aldiv@divisor+1
  2094  0F42  0832               	movf	??_BMP180_readTemperature,w
  2095  0F43  00A0               	movwf	___aldiv@divisor
  2096  0F44  1683               	bsf	3,5	;RP0=1, select bank3
  2097  0F45  1703               	bsf	3,6	;RP1=1, select bank3
  2098  0F46  0834               	movf	(_dataEprom^(0+384)+36),w
  2099  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  2100  0F48  1303               	bcf	3,6	;RP1=0, select bank0
  2101  0F49  00B6               	movwf	??_BMP180_readTemperature+4
  2102  0F4A  1683               	bsf	3,5	;RP0=1, select bank3
  2103  0F4B  1703               	bsf	3,6	;RP1=1, select bank3
  2104  0F4C  0835               	movf	((_dataEprom+1)^(0+384)+36),w
  2105  0F4D  1283               	bcf	3,5	;RP0=0, select bank0
  2106  0F4E  1303               	bcf	3,6	;RP1=0, select bank0
  2107  0F4F  00B7               	movwf	??_BMP180_readTemperature+5
  2108  0F50  1683               	bsf	3,5	;RP0=1, select bank3
  2109  0F51  1703               	bsf	3,6	;RP1=1, select bank3
  2110  0F52  0836               	movf	((_dataEprom+2)^(0+384)+36),w
  2111  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  2112  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  2113  0F55  00B8               	movwf	??_BMP180_readTemperature+6
  2114  0F56  1683               	bsf	3,5	;RP0=1, select bank3
  2115  0F57  1703               	bsf	3,6	;RP1=1, select bank3
  2116  0F58  0837               	movf	((_dataEprom+3)^(0+384)+36),w
  2117  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  2118  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  2119  0F5B  00B9               	movwf	??_BMP180_readTemperature+7
  2120  0F5C  300B               	movlw	11
  2121  0F5D                     u1595:
  2122  0F5D  1003               	clrc
  2123  0F5E  0DB6               	rlf	??_BMP180_readTemperature+4,f
  2124  0F5F  0DB7               	rlf	??_BMP180_readTemperature+5,f
  2125  0F60  0DB8               	rlf	??_BMP180_readTemperature+6,f
  2126  0F61  0DB9               	rlf	??_BMP180_readTemperature+7,f
  2127  0F62                     u1590:
  2128  0F62  3EFF               	addlw	-1
  2129  0F63  1D03               	skipz
  2130  0F64  2F5D               	goto	u1595
  2131  0F65  0839               	movf	??_BMP180_readTemperature+7,w
  2132  0F66  00A7               	movwf	___aldiv@dividend+3
  2133  0F67  0838               	movf	??_BMP180_readTemperature+6,w
  2134  0F68  00A6               	movwf	___aldiv@dividend+2
  2135  0F69  0837               	movf	??_BMP180_readTemperature+5,w
  2136  0F6A  00A5               	movwf	___aldiv@dividend+1
  2137  0F6B  0836               	movf	??_BMP180_readTemperature+4,w
  2138  0F6C  00A4               	movwf	___aldiv@dividend
  2139  0F6D  120A  158A  2307  120A  158A  	fcall	___aldiv
  2140  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  2141  0F73  1303               	bcf	3,6	;RP1=0, select bank0
  2142  0F74  0823               	movf	?___aldiv+3,w
  2143  0F75  00E2               	movwf	_x2+3
  2144  0F76  0822               	movf	?___aldiv+2,w
  2145  0F77  00E1               	movwf	_x2+2
  2146  0F78  0821               	movf	?___aldiv+1,w
  2147  0F79  00E0               	movwf	_x2+1
  2148  0F7A  0820               	movf	?___aldiv,w
  2149  0F7B  00DF               	movwf	_x2
  2150  0F7C                     l1732:
  2151                           
  2152                           ;BMP180.c: 64:     B5 = x1 + x2;
  2153  0F7C  0863               	movf	_x1,w
  2154  0F7D  075F               	addwf	_x2,w
  2155  0F7E  00B2               	movwf	??_BMP180_readTemperature
  2156  0F7F  3000               	movlw	0
  2157  0F80  1803               	skipnc
  2158  0F81  3001               	movlw	1
  2159  0F82  0764               	addwf	_x1+1,w
  2160  0F83  01B4               	clrf	??_BMP180_readTemperature+2
  2161  0F84  1803               	skipnc
  2162  0F85  0AB4               	incf	??_BMP180_readTemperature+2,f
  2163  0F86  0760               	addwf	_x2+1,w
  2164  0F87  00B3               	movwf	??_BMP180_readTemperature+1
  2165  0F88  1803               	skipnc
  2166  0F89  0AB4               	incf	??_BMP180_readTemperature+2,f
  2167  0F8A  0865               	movf	_x1+2,w
  2168  0F8B  0734               	addwf	??_BMP180_readTemperature+2,w
  2169  0F8C  01B5               	clrf	??_BMP180_readTemperature+3
  2170  0F8D  1803               	skipnc
  2171  0F8E  0AB5               	incf	??_BMP180_readTemperature+3,f
  2172  0F8F  0761               	addwf	_x2+2,w
  2173  0F90  00B4               	movwf	??_BMP180_readTemperature+2
  2174  0F91  1803               	skipnc
  2175  0F92  0AB5               	incf	??_BMP180_readTemperature+3,f
  2176  0F93  0866               	movf	_x1+3,w
  2177  0F94  0735               	addwf	??_BMP180_readTemperature+3,w
  2178  0F95  0762               	addwf	_x2+3,w
  2179  0F96  00B5               	movwf	??_BMP180_readTemperature+3
  2180  0F97  0835               	movf	??_BMP180_readTemperature+3,w
  2181  0F98  00DE               	movwf	_B5+3
  2182  0F99  0834               	movf	??_BMP180_readTemperature+2,w
  2183  0F9A  00DD               	movwf	_B5+2
  2184  0F9B  0833               	movf	??_BMP180_readTemperature+1,w
  2185  0F9C  00DC               	movwf	_B5+1
  2186  0F9D  0832               	movf	??_BMP180_readTemperature,w
  2187  0F9E  00DB               	movwf	_B5
  2188  0F9F                     l1734:
  2189                           
  2190                           ;BMP180.c: 65:     te =((B5 + 8)/16)/10;
  2191  0F9F  3000               	movlw	0
  2192  0FA0  00A3               	movwf	___aldiv@divisor+3
  2193  0FA1  3000               	movlw	0
  2194  0FA2  00A2               	movwf	___aldiv@divisor+2
  2195  0FA3  3000               	movlw	0
  2196  0FA4  00A1               	movwf	___aldiv@divisor+1
  2197  0FA5  3010               	movlw	16
  2198  0FA6  00A0               	movwf	___aldiv@divisor
  2199  0FA7  3008               	movlw	8
  2200  0FA8  00B2               	movwf	??_BMP180_readTemperature
  2201  0FA9  3000               	movlw	0
  2202  0FAA  00B3               	movwf	??_BMP180_readTemperature+1
  2203  0FAB  3000               	movlw	0
  2204  0FAC  00B4               	movwf	??_BMP180_readTemperature+2
  2205  0FAD  3000               	movlw	0
  2206  0FAE  00B5               	movwf	??_BMP180_readTemperature+3
  2207  0FAF  085B               	movf	_B5,w
  2208  0FB0  07B2               	addwf	??_BMP180_readTemperature,f
  2209  0FB1  085C               	movf	_B5+1,w
  2210  0FB2  1803               	skipnc
  2211  0FB3  0F5C               	incfsz	_B5+1,w
  2212  0FB4  2FB6               	goto	u1600
  2213  0FB5  2FB7               	goto	u1601
  2214  0FB6                     u1600:
  2215  0FB6  07B3               	addwf	??_BMP180_readTemperature+1,f
  2216  0FB7                     u1601:
  2217  0FB7  085D               	movf	_B5+2,w
  2218  0FB8  1803               	skipnc
  2219  0FB9  0F5D               	incfsz	_B5+2,w
  2220  0FBA  2FBC               	goto	u1602
  2221  0FBB  2FBD               	goto	u1603
  2222  0FBC                     u1602:
  2223  0FBC  07B4               	addwf	??_BMP180_readTemperature+2,f
  2224  0FBD                     u1603:
  2225  0FBD  085E               	movf	_B5+3,w
  2226  0FBE  1803               	skipnc
  2227  0FBF  0A5E               	incf	_B5+3,w
  2228  0FC0  07B5               	addwf	??_BMP180_readTemperature+3,f
  2229  0FC1  0835               	movf	??_BMP180_readTemperature+3,w
  2230  0FC2  00A7               	movwf	___aldiv@dividend+3
  2231  0FC3  0834               	movf	??_BMP180_readTemperature+2,w
  2232  0FC4  00A6               	movwf	___aldiv@dividend+2
  2233  0FC5  0833               	movf	??_BMP180_readTemperature+1,w
  2234  0FC6  00A5               	movwf	___aldiv@dividend+1
  2235  0FC7  0832               	movf	??_BMP180_readTemperature,w
  2236  0FC8  00A4               	movwf	___aldiv@dividend
  2237  0FC9  120A  158A  2307  120A  158A  	fcall	___aldiv
  2238  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  2239  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  2240  0FD0  0823               	movf	?___aldiv+3,w
  2241  0FD1  00C3               	movwf	_BMP180_readTemperature$1064+3
  2242  0FD2  0822               	movf	?___aldiv+2,w
  2243  0FD3  00C2               	movwf	_BMP180_readTemperature$1064+2
  2244  0FD4  0821               	movf	?___aldiv+1,w
  2245  0FD5  00C1               	movwf	_BMP180_readTemperature$1064+1
  2246  0FD6  0820               	movf	?___aldiv,w
  2247  0FD7  00C0               	movwf	_BMP180_readTemperature$1064
  2248  0FD8                     l1736:
  2249                           
  2250                           ;BMP180.c: 65:     te =((B5 + 8)/16)/10;
  2251  0FD8  3000               	movlw	0
  2252  0FD9  00A3               	movwf	___aldiv@divisor+3
  2253  0FDA  3000               	movlw	0
  2254  0FDB  00A2               	movwf	___aldiv@divisor+2
  2255  0FDC  3000               	movlw	0
  2256  0FDD  00A1               	movwf	___aldiv@divisor+1
  2257  0FDE  300A               	movlw	10
  2258  0FDF  00A0               	movwf	___aldiv@divisor
  2259  0FE0  0843               	movf	_BMP180_readTemperature$1064+3,w
  2260  0FE1  00A7               	movwf	___aldiv@dividend+3
  2261  0FE2  0842               	movf	_BMP180_readTemperature$1064+2,w
  2262  0FE3  00A6               	movwf	___aldiv@dividend+2
  2263  0FE4  0841               	movf	_BMP180_readTemperature$1064+1,w
  2264  0FE5  00A5               	movwf	___aldiv@dividend+1
  2265  0FE6  0840               	movf	_BMP180_readTemperature$1064,w
  2266  0FE7  00A4               	movwf	___aldiv@dividend
  2267  0FE8  120A  158A  2307  120A  158A  	fcall	___aldiv
  2268  0FED  1283               	bcf	3,5	;RP0=0, select bank0
  2269  0FEE  1303               	bcf	3,6	;RP1=0, select bank0
  2270  0FEF  0823               	movf	?___aldiv+3,w
  2271  0FF0  00DA               	movwf	_te+3
  2272  0FF1  0822               	movf	?___aldiv+2,w
  2273  0FF2  00D9               	movwf	_te+2
  2274  0FF3  0821               	movf	?___aldiv+1,w
  2275  0FF4  00D8               	movwf	_te+1
  2276  0FF5  0820               	movf	?___aldiv,w
  2277  0FF6  00D7               	movwf	_te
  2278  0FF7                     l1738:
  2279                           
  2280                           ;BMP180.c: 66:     return te;
  2281  0FF7  085A               	movf	_te+3,w
  2282  0FF8  00B1               	movwf	?_BMP180_readTemperature+3
  2283  0FF9  0859               	movf	_te+2,w
  2284  0FFA  00B0               	movwf	?_BMP180_readTemperature+2
  2285  0FFB  0858               	movf	_te+1,w
  2286  0FFC  00AF               	movwf	?_BMP180_readTemperature+1
  2287  0FFD  0857               	movf	_te,w
  2288  0FFE  00AE               	movwf	?_BMP180_readTemperature
  2289  0FFF                     l169:
  2290  0FFF  0008               	return
  2291  1000                     __end_of_BMP180_readTemperature:
  2292                           
  2293                           	psect	text8
  2294  007F                     __ptext8:	
  2295 ;; *************** function _BMP180_readPreassure *****************
  2296 ;; Defined at:
  2297 ;;		line 69 in file "BMP180.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;		None
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;  B6              4   43[BANK1 ] long 
  2302 ;;  p               4   39[BANK1 ] long 
  2303 ;;  x1              4   35[BANK1 ] long 
  2304 ;;  x2              4   31[BANK1 ] long 
  2305 ;;  x3              4   27[BANK1 ] long 
  2306 ;;  B7              4   23[BANK1 ] unsigned long 
  2307 ;;  B4              4   15[BANK1 ] long 
  2308 ;;  p1              4    8[BANK1 ] long 
  2309 ;;  pres            4    4[BANK1 ] long 
  2310 ;;  B3              4    0[BANK1 ] long 
  2311 ;;  p2              2   12[BANK1 ] int 
  2312 ;;  p3              1   14[BANK1 ] unsigned char 
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  4   34[BANK0 ] long 
  2315 ;; Registers used:
  2316 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2322 ;;      Params:         0       4       0       0       0
  2323 ;;      Locals:         0       0      47       0       0
  2324 ;;      Temps:          0      14       0       0       0
  2325 ;;      Totals:         0      18      47       0       0
  2326 ;;Total ram usage:       65 bytes
  2327 ;; Hardware stack levels used:    1
  2328 ;; Hardware stack levels required when called:    3
  2329 ;; This function calls:
  2330 ;;		_BMP180_wait
  2331 ;;		___aldiv
  2332 ;;		___awdiv
  2333 ;;		___lldiv
  2334 ;;		___lmul
  2335 ;;		_i2c_read
  2336 ;;		_i2c_restart
  2337 ;;		_i2c_sendACK
  2338 ;;		_i2c_sendNACK
  2339 ;;		_i2c_start
  2340 ;;		_i2c_stop
  2341 ;;		_i2c_write
  2342 ;;		_printf
  2343 ;; This function is called by:
  2344 ;;		_main
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           
  2349                           ;psect for function _BMP180_readPreassure
  2350  007F                     _BMP180_readPreassure:
  2351  007F                     l1762:	
  2352                           ;incstack = 0
  2353                           ; Regs used in _BMP180_readPreassure: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  2354                           
  2355  007F                     l1764:
  2356  007F                     l1766:
  2357  007F                     l1768:
  2358                           
  2359                           ;BMP180.c: 74:     i2c_start();
  2360  007F  120A  158A  20C6  120A  118A  	fcall	_i2c_start
  2361  0084                     l1770:
  2362                           
  2363                           ;BMP180.c: 75:     i2c_write(adressW);
  2364  0084  30EE               	movlw	238
  2365  0085  120A  158A  20D9  120A  118A  	fcall	_i2c_write
  2366  008A                     l1772:
  2367                           
  2368                           ;BMP180.c: 76:     i2c_write(0xF4);
  2369  008A  30F4               	movlw	244
  2370  008B  120A  158A  20D9  120A  118A  	fcall	_i2c_write
  2371  0090                     l1774:
  2372                           
  2373                           ;BMP180.c: 77:     i2c_write(0x34);
  2374  0090  3034               	movlw	52
  2375  0091  120A  158A  20D9  120A  118A  	fcall	_i2c_write
  2376  0096                     l1776:
  2377                           
  2378                           ;BMP180.c: 78:     BMP180_wait();
  2379  0096  120A  118A  200F  120A  118A  	fcall	_BMP180_wait
  2380                           
  2381                           ;BMP180.c: 79:     i2c_sendNACK();
  2382  009B  120A  158A  2050  120A  118A  	fcall	_i2c_sendNACK
  2383                           
  2384                           ;BMP180.c: 80:     i2c_stop();
  2385  00A0  120A  158A  2081  120A  118A  	fcall	_i2c_stop
  2386  00A5                     l1778:
  2387                           
  2388                           ;BMP180.c: 82:     i2c_start();
  2389  00A5  120A  158A  20C6  120A  118A  	fcall	_i2c_start
  2390  00AA                     l1780:
  2391                           
  2392                           ;BMP180.c: 83:     i2c_write(adressW);
  2393  00AA  30EE               	movlw	238
  2394  00AB  120A  158A  20D9  120A  118A  	fcall	_i2c_write
  2395  00B0                     l1782:
  2396                           
  2397                           ;BMP180.c: 84:     i2c_write(0xF6);
  2398  00B0  30F6               	movlw	246
  2399  00B1  120A  158A  20D9  120A  118A  	fcall	_i2c_write
  2400  00B6                     l1784:
  2401                           
  2402                           ;BMP180.c: 85:     i2c_restart();
  2403  00B6  120A  158A  20B3  120A  118A  	fcall	_i2c_restart
  2404  00BB                     l1786:
  2405                           
  2406                           ;BMP180.c: 86:     i2c_write(adressR);
  2407  00BB  30EF               	movlw	239
  2408  00BC  120A  158A  20D9  120A  118A  	fcall	_i2c_write
  2409  00C1                     l1788:
  2410                           
  2411                           ;BMP180.c: 87:     p1 = i2c_read();
  2412  00C1  120A  158A  20EC  120A  118A  	fcall	_i2c_read
  2413  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  2414  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  2415  00C8  00C6               	movwf	??_BMP180_readPreassure
  2416  00C9  01C7               	clrf	??_BMP180_readPreassure+1
  2417  00CA  01C8               	clrf	??_BMP180_readPreassure+2
  2418  00CB  01C9               	clrf	??_BMP180_readPreassure+3
  2419  00CC  0849               	movf	??_BMP180_readPreassure+3,w
  2420  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  2421  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  2422  00CF  00AB               	movwf	(BMP180_readPreassure@p1+3)^(0+128)
  2423  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  2424  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  2425  00D2  0848               	movf	??_BMP180_readPreassure+2,w
  2426  00D3  1683               	bsf	3,5	;RP0=1, select bank1
  2427  00D4  1303               	bcf	3,6	;RP1=0, select bank1
  2428  00D5  00AA               	movwf	(BMP180_readPreassure@p1+2)^(0+128)
  2429  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  2430  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  2431  00D8  0847               	movf	??_BMP180_readPreassure+1,w
  2432  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  2433  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  2434  00DB  00A9               	movwf	(BMP180_readPreassure@p1+1)^(0+128)
  2435  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  2436  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  2437  00DE  0846               	movf	??_BMP180_readPreassure,w
  2438  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  2439  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  2440  00E1  00A8               	movwf	BMP180_readPreassure@p1^(0+128)
  2441                           
  2442                           ;BMP180.c: 88:     i2c_sendACK();
  2443  00E2  160A  118A  27F7  120A  118A  	fcall	_i2c_sendACK
  2444  00E7                     l1790:
  2445                           
  2446                           ;BMP180.c: 89:     p2 = i2c_read();
  2447  00E7  120A  158A  20EC  120A  118A  	fcall	_i2c_read
  2448  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  2449  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  2450  00EE  00C6               	movwf	??_BMP180_readPreassure
  2451  00EF  01C7               	clrf	??_BMP180_readPreassure+1
  2452  00F0  0846               	movf	??_BMP180_readPreassure,w
  2453  00F1  1683               	bsf	3,5	;RP0=1, select bank1
  2454  00F2  1303               	bcf	3,6	;RP1=0, select bank1
  2455  00F3  00AC               	movwf	BMP180_readPreassure@p2^(0+128)
  2456  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  2457  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  2458  00F6  0847               	movf	??_BMP180_readPreassure+1,w
  2459  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  2460  00F8  1303               	bcf	3,6	;RP1=0, select bank1
  2461  00F9  00AD               	movwf	(BMP180_readPreassure@p2+1)^(0+128)
  2462  00FA                     l1792:
  2463                           
  2464                           ;BMP180.c: 90:     i2c_sendACK();
  2465  00FA  160A  118A  27F7  120A  118A  	fcall	_i2c_sendACK
  2466  00FF                     l1794:
  2467                           
  2468                           ;BMP180.c: 91:     p3 = i2c_read();
  2469  00FF  120A  158A  20EC  120A  118A  	fcall	_i2c_read
  2470  0104  00FF               	movwf	btemp+1
  2471  0105  087F               	movf	btemp+1,w
  2472  0106  1683               	bsf	3,5	;RP0=1, select bank1
  2473  0107  1303               	bcf	3,6	;RP1=0, select bank1
  2474  0108  00AE               	movwf	BMP180_readPreassure@p3^(0+128)
  2475  0109                     l1796:
  2476                           
  2477                           ;BMP180.c: 92:     i2c_sendNACK();
  2478  0109  120A  158A  2050  120A  118A  	fcall	_i2c_sendNACK
  2479  010E                     l1798:
  2480                           
  2481                           ;BMP180.c: 93:     i2c_stop();
  2482  010E  120A  158A  2081  120A  118A  	fcall	_i2c_stop
  2483  0113                     l1800:
  2484                           
  2485                           ;BMP180.c: 95:     long B3, B6,x1,x2,x3, B4, p;;BMP180.c: 96:     unsigned long B7;;BMP1
      +                          80.c: 98:     long pres = p1 * 256 + p2 + p3 / 256;
  2486  0113  3000               	movlw	0
  2487  0114  00F0               	movwf	___awdiv@divisor
  2488  0115  3001               	movlw	1
  2489  0116  00F1               	movwf	___awdiv@divisor+1
  2490  0117  1683               	bsf	3,5	;RP0=1, select bank1
  2491  0118  1303               	bcf	3,6	;RP1=0, select bank1
  2492  0119  082E               	movf	BMP180_readPreassure@p3^(0+128),w
  2493  011A  1283               	bcf	3,5	;RP0=0, select bank0
  2494  011B  1303               	bcf	3,6	;RP1=0, select bank0
  2495  011C  00C6               	movwf	??_BMP180_readPreassure
  2496  011D  01C7               	clrf	??_BMP180_readPreassure+1
  2497  011E  0846               	movf	??_BMP180_readPreassure,w
  2498  011F  00F2               	movwf	___awdiv@dividend
  2499  0120  0847               	movf	??_BMP180_readPreassure+1,w
  2500  0121  00F3               	movwf	___awdiv@dividend+1
  2501  0122  120A  118A  2018  120A  118A  	fcall	___awdiv
  2502  0127  0870               	movf	?___awdiv,w
  2503  0128  1283               	bcf	3,5	;RP0=0, select bank0
  2504  0129  1303               	bcf	3,6	;RP1=0, select bank0
  2505  012A  00C8               	movwf	??_BMP180_readPreassure+2
  2506  012B  0871               	movf	?___awdiv+1,w
  2507  012C  00C9               	movwf	??_BMP180_readPreassure+3
  2508  012D  3000               	movlw	0
  2509  012E  1BC9               	btfsc	??_BMP180_readPreassure+3,7
  2510  012F  30FF               	movlw	255
  2511  0130  00CA               	movwf	??_BMP180_readPreassure+4
  2512  0131  00CB               	movwf	??_BMP180_readPreassure+5
  2513  0132  1683               	bsf	3,5	;RP0=1, select bank1
  2514  0133  1303               	bcf	3,6	;RP1=0, select bank1
  2515  0134  082C               	movf	BMP180_readPreassure@p2^(0+128),w
  2516  0135  1283               	bcf	3,5	;RP0=0, select bank0
  2517  0136  1303               	bcf	3,6	;RP1=0, select bank0
  2518  0137  00CC               	movwf	??_BMP180_readPreassure+6
  2519  0138  1683               	bsf	3,5	;RP0=1, select bank1
  2520  0139  1303               	bcf	3,6	;RP1=0, select bank1
  2521  013A  082D               	movf	(BMP180_readPreassure@p2+1)^(0+128),w
  2522  013B  1283               	bcf	3,5	;RP0=0, select bank0
  2523  013C  1303               	bcf	3,6	;RP1=0, select bank0
  2524  013D  00CD               	movwf	??_BMP180_readPreassure+7
  2525  013E  3000               	movlw	0
  2526  013F  1BCD               	btfsc	??_BMP180_readPreassure+7,7
  2527  0140  30FF               	movlw	255
  2528  0141  00CE               	movwf	??_BMP180_readPreassure+8
  2529  0142  00CF               	movwf	??_BMP180_readPreassure+9
  2530  0143  1683               	bsf	3,5	;RP0=1, select bank1
  2531  0144  1303               	bcf	3,6	;RP1=0, select bank1
  2532  0145  0828               	movf	BMP180_readPreassure@p1^(0+128),w
  2533  0146  1283               	bcf	3,5	;RP0=0, select bank0
  2534  0147  1303               	bcf	3,6	;RP1=0, select bank0
  2535  0148  00D0               	movwf	??_BMP180_readPreassure+10
  2536  0149  1683               	bsf	3,5	;RP0=1, select bank1
  2537  014A  1303               	bcf	3,6	;RP1=0, select bank1
  2538  014B  0829               	movf	(BMP180_readPreassure@p1+1)^(0+128),w
  2539  014C  1283               	bcf	3,5	;RP0=0, select bank0
  2540  014D  1303               	bcf	3,6	;RP1=0, select bank0
  2541  014E  00D1               	movwf	??_BMP180_readPreassure+11
  2542  014F  1683               	bsf	3,5	;RP0=1, select bank1
  2543  0150  1303               	bcf	3,6	;RP1=0, select bank1
  2544  0151  082A               	movf	(BMP180_readPreassure@p1+2)^(0+128),w
  2545  0152  1283               	bcf	3,5	;RP0=0, select bank0
  2546  0153  1303               	bcf	3,6	;RP1=0, select bank0
  2547  0154  00D2               	movwf	??_BMP180_readPreassure+12
  2548  0155  1683               	bsf	3,5	;RP0=1, select bank1
  2549  0156  1303               	bcf	3,6	;RP1=0, select bank1
  2550  0157  082B               	movf	(BMP180_readPreassure@p1+3)^(0+128),w
  2551  0158  1283               	bcf	3,5	;RP0=0, select bank0
  2552  0159  1303               	bcf	3,6	;RP1=0, select bank0
  2553  015A  00D3               	movwf	??_BMP180_readPreassure+13
  2554  015B  3008               	movlw	8
  2555  015C                     u1625:
  2556  015C  1003               	clrc
  2557  015D  0DD0               	rlf	??_BMP180_readPreassure+10,f
  2558  015E  0DD1               	rlf	??_BMP180_readPreassure+11,f
  2559  015F  0DD2               	rlf	??_BMP180_readPreassure+12,f
  2560  0160  0DD3               	rlf	??_BMP180_readPreassure+13,f
  2561  0161                     u1620:
  2562  0161  3EFF               	addlw	-1
  2563  0162  1D03               	skipz
  2564  0163  295C               	goto	u1625
  2565  0164  0850               	movf	??_BMP180_readPreassure+10,w
  2566  0165  07CC               	addwf	??_BMP180_readPreassure+6,f
  2567  0166  0851               	movf	??_BMP180_readPreassure+11,w
  2568  0167  1803               	skipnc
  2569  0168  0F51               	incfsz	??_BMP180_readPreassure+11,w
  2570  0169  296B               	goto	u1630
  2571  016A  296C               	goto	u1631
  2572  016B                     u1630:
  2573  016B  07CD               	addwf	??_BMP180_readPreassure+7,f
  2574  016C                     u1631:
  2575  016C  0852               	movf	??_BMP180_readPreassure+12,w
  2576  016D  1803               	skipnc
  2577  016E  0F52               	incfsz	??_BMP180_readPreassure+12,w
  2578  016F  2971               	goto	u1632
  2579  0170  2972               	goto	u1633
  2580  0171                     u1632:
  2581  0171  07CE               	addwf	??_BMP180_readPreassure+8,f
  2582  0172                     u1633:
  2583  0172  0853               	movf	??_BMP180_readPreassure+13,w
  2584  0173  1803               	skipnc
  2585  0174  0A53               	incf	??_BMP180_readPreassure+13,w
  2586  0175  07CF               	addwf	??_BMP180_readPreassure+9,f
  2587  0176  084C               	movf	??_BMP180_readPreassure+6,w
  2588  0177  07C8               	addwf	??_BMP180_readPreassure+2,f
  2589  0178  084D               	movf	??_BMP180_readPreassure+7,w
  2590  0179  1803               	skipnc
  2591  017A  0F4D               	incfsz	??_BMP180_readPreassure+7,w
  2592  017B  297D               	goto	u1640
  2593  017C  297E               	goto	u1641
  2594  017D                     u1640:
  2595  017D  07C9               	addwf	??_BMP180_readPreassure+3,f
  2596  017E                     u1641:
  2597  017E  084E               	movf	??_BMP180_readPreassure+8,w
  2598  017F  1803               	skipnc
  2599  0180  0F4E               	incfsz	??_BMP180_readPreassure+8,w
  2600  0181  2983               	goto	u1642
  2601  0182  2984               	goto	u1643
  2602  0183                     u1642:
  2603  0183  07CA               	addwf	??_BMP180_readPreassure+4,f
  2604  0184                     u1643:
  2605  0184  084F               	movf	??_BMP180_readPreassure+9,w
  2606  0185  1803               	skipnc
  2607  0186  0A4F               	incf	??_BMP180_readPreassure+9,w
  2608  0187  07CB               	addwf	??_BMP180_readPreassure+5,f
  2609  0188  084B               	movf	??_BMP180_readPreassure+5,w
  2610  0189  1683               	bsf	3,5	;RP0=1, select bank1
  2611  018A  1303               	bcf	3,6	;RP1=0, select bank1
  2612  018B  00A7               	movwf	(BMP180_readPreassure@pres+3)^(0+128)
  2613  018C  1283               	bcf	3,5	;RP0=0, select bank0
  2614  018D  1303               	bcf	3,6	;RP1=0, select bank0
  2615  018E  084A               	movf	??_BMP180_readPreassure+4,w
  2616  018F  1683               	bsf	3,5	;RP0=1, select bank1
  2617  0190  1303               	bcf	3,6	;RP1=0, select bank1
  2618  0191  00A6               	movwf	(BMP180_readPreassure@pres+2)^(0+128)
  2619  0192  1283               	bcf	3,5	;RP0=0, select bank0
  2620  0193  1303               	bcf	3,6	;RP1=0, select bank0
  2621  0194  0849               	movf	??_BMP180_readPreassure+3,w
  2622  0195  1683               	bsf	3,5	;RP0=1, select bank1
  2623  0196  1303               	bcf	3,6	;RP1=0, select bank1
  2624  0197  00A5               	movwf	(BMP180_readPreassure@pres+1)^(0+128)
  2625  0198  1283               	bcf	3,5	;RP0=0, select bank0
  2626  0199  1303               	bcf	3,6	;RP1=0, select bank0
  2627  019A  0848               	movf	??_BMP180_readPreassure+2,w
  2628  019B  1683               	bsf	3,5	;RP0=1, select bank1
  2629  019C  1303               	bcf	3,6	;RP1=0, select bank1
  2630  019D  00A4               	movwf	BMP180_readPreassure@pres^(0+128)
  2631  019E                     l1802:
  2632                           
  2633                           ;BMP180.c: 99:     B6 = B5 - 4000;
  2634  019E  3060               	movlw	96
  2635  019F  1283               	bcf	3,5	;RP0=0, select bank0
  2636  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  2637  01A1  00C6               	movwf	??_BMP180_readPreassure
  2638  01A2  30F0               	movlw	240
  2639  01A3  00C7               	movwf	??_BMP180_readPreassure+1
  2640  01A4  30FF               	movlw	255
  2641  01A5  00C8               	movwf	??_BMP180_readPreassure+2
  2642  01A6  30FF               	movlw	255
  2643  01A7  00C9               	movwf	??_BMP180_readPreassure+3
  2644  01A8  085B               	movf	_B5,w
  2645  01A9  07C6               	addwf	??_BMP180_readPreassure,f
  2646  01AA  085C               	movf	_B5+1,w
  2647  01AB  1803               	skipnc
  2648  01AC  0F5C               	incfsz	_B5+1,w
  2649  01AD  29AF               	goto	u1650
  2650  01AE  29B0               	goto	u1651
  2651  01AF                     u1650:
  2652  01AF  07C7               	addwf	??_BMP180_readPreassure+1,f
  2653  01B0                     u1651:
  2654  01B0  085D               	movf	_B5+2,w
  2655  01B1  1803               	skipnc
  2656  01B2  0F5D               	incfsz	_B5+2,w
  2657  01B3  29B5               	goto	u1652
  2658  01B4  29B6               	goto	u1653
  2659  01B5                     u1652:
  2660  01B5  07C8               	addwf	??_BMP180_readPreassure+2,f
  2661  01B6                     u1653:
  2662  01B6  085E               	movf	_B5+3,w
  2663  01B7  1803               	skipnc
  2664  01B8  0A5E               	incf	_B5+3,w
  2665  01B9  07C9               	addwf	??_BMP180_readPreassure+3,f
  2666  01BA  0849               	movf	??_BMP180_readPreassure+3,w
  2667  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  2668  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  2669  01BD  00CE               	movwf	(BMP180_readPreassure@B6+3)^(0+128)
  2670  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  2671  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  2672  01C0  0848               	movf	??_BMP180_readPreassure+2,w
  2673  01C1  1683               	bsf	3,5	;RP0=1, select bank1
  2674  01C2  1303               	bcf	3,6	;RP1=0, select bank1
  2675  01C3  00CD               	movwf	(BMP180_readPreassure@B6+2)^(0+128)
  2676  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  2677  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  2678  01C6  0847               	movf	??_BMP180_readPreassure+1,w
  2679  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  2680  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  2681  01C9  00CC               	movwf	(BMP180_readPreassure@B6+1)^(0+128)
  2682  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  2683  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  2684  01CC  0846               	movf	??_BMP180_readPreassure,w
  2685  01CD  1683               	bsf	3,5	;RP0=1, select bank1
  2686  01CE  1303               	bcf	3,6	;RP1=0, select bank1
  2687  01CF  00CB               	movwf	BMP180_readPreassure@B6^(0+128)
  2688  01D0                     l1804:
  2689                           
  2690                           ;BMP180.c: 100:     x1 = (dataEprom[7]*B6*B6) /(long)(4096*2048);
  2691  01D0  301C               	movlw	28
  2692  01D1  3E90               	addlw	(low (_dataEprom| (0+256)))& (0+255)
  2693  01D2  0084               	movwf	4
  2694  01D3  1783               	bsf	3,7	;select IRP bank3
  2695  01D4  0800               	movf	0,w
  2696  01D5  00F0               	movwf	___lmul@multiplier
  2697  01D6  0A84               	incf	4,f
  2698  01D7  0800               	movf	0,w
  2699  01D8  00F1               	movwf	___lmul@multiplier+1
  2700  01D9  0A84               	incf	4,f
  2701  01DA  0800               	movf	0,w
  2702  01DB  00F2               	movwf	___lmul@multiplier+2
  2703  01DC  0A84               	incf	4,f
  2704  01DD  0800               	movf	0,w
  2705  01DE  00F3               	movwf	___lmul@multiplier+3
  2706  01DF  084E               	movf	(BMP180_readPreassure@B6+3)^(0+128),w
  2707  01E0  00F7               	movwf	___lmul@multiplicand+3
  2708  01E1  084D               	movf	(BMP180_readPreassure@B6+2)^(0+128),w
  2709  01E2  00F6               	movwf	___lmul@multiplicand+2
  2710  01E3  084C               	movf	(BMP180_readPreassure@B6+1)^(0+128),w
  2711  01E4  00F5               	movwf	___lmul@multiplicand+1
  2712  01E5  084B               	movf	BMP180_readPreassure@B6^(0+128),w
  2713  01E6  00F4               	movwf	___lmul@multiplicand
  2714  01E7  120A  158A  2170  120A  118A  	fcall	___lmul
  2715  01EC  0873               	movf	?___lmul+3,w
  2716  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  2717  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  2718  01EF  00B6               	movwf	(_BMP180_readPreassure$1065+3)^(0+128)
  2719  01F0  0872               	movf	?___lmul+2,w
  2720  01F1  00B5               	movwf	(_BMP180_readPreassure$1065+2)^(0+128)
  2721  01F2  0871               	movf	?___lmul+1,w
  2722  01F3  00B4               	movwf	(_BMP180_readPreassure$1065+1)^(0+128)
  2723  01F4  0870               	movf	?___lmul,w
  2724  01F5  00B3               	movwf	_BMP180_readPreassure$1065^(0+128)
  2725  01F6                     l1806:
  2726                           
  2727                           ;BMP180.c: 100:     x1 = (dataEprom[7]*B6*B6) /(long)(4096*2048);
  2728  01F6  3000               	movlw	0
  2729  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  2730  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  2731  01F9  00A3               	movwf	___aldiv@divisor+3
  2732  01FA  3000               	movlw	0
  2733  01FB  00A2               	movwf	___aldiv@divisor+2
  2734  01FC  3000               	movlw	0
  2735  01FD  00A1               	movwf	___aldiv@divisor+1
  2736  01FE  3000               	movlw	0
  2737  01FF  00A0               	movwf	___aldiv@divisor
  2738  0200  1683               	bsf	3,5	;RP0=1, select bank1
  2739  0201  1303               	bcf	3,6	;RP1=0, select bank1
  2740  0202  0836               	movf	(_BMP180_readPreassure$1065+3)^(0+128),w
  2741  0203  00F3               	movwf	___lmul@multiplier+3
  2742  0204  0835               	movf	(_BMP180_readPreassure$1065+2)^(0+128),w
  2743  0205  00F2               	movwf	___lmul@multiplier+2
  2744  0206  0834               	movf	(_BMP180_readPreassure$1065+1)^(0+128),w
  2745  0207  00F1               	movwf	___lmul@multiplier+1
  2746  0208  0833               	movf	_BMP180_readPreassure$1065^(0+128),w
  2747  0209  00F0               	movwf	___lmul@multiplier
  2748  020A  084E               	movf	(BMP180_readPreassure@B6+3)^(0+128),w
  2749  020B  00F7               	movwf	___lmul@multiplicand+3
  2750  020C  084D               	movf	(BMP180_readPreassure@B6+2)^(0+128),w
  2751  020D  00F6               	movwf	___lmul@multiplicand+2
  2752  020E  084C               	movf	(BMP180_readPreassure@B6+1)^(0+128),w
  2753  020F  00F5               	movwf	___lmul@multiplicand+1
  2754  0210  084B               	movf	BMP180_readPreassure@B6^(0+128),w
  2755  0211  00F4               	movwf	___lmul@multiplicand
  2756  0212  120A  158A  2170  120A  118A  	fcall	___lmul
  2757  0217  0873               	movf	?___lmul+3,w
  2758  0218  1283               	bcf	3,5	;RP0=0, select bank0
  2759  0219  1303               	bcf	3,6	;RP1=0, select bank0
  2760  021A  00A7               	movwf	___aldiv@dividend+3
  2761  021B  0872               	movf	?___lmul+2,w
  2762  021C  00A6               	movwf	___aldiv@dividend+2
  2763  021D  0871               	movf	?___lmul+1,w
  2764  021E  00A5               	movwf	___aldiv@dividend+1
  2765  021F  0870               	movf	?___lmul,w
  2766  0220  00A4               	movwf	___aldiv@dividend
  2767  0221  120A  158A  2307  120A  118A  	fcall	___aldiv
  2768  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2769  0227  1303               	bcf	3,6	;RP1=0, select bank0
  2770  0228  0823               	movf	?___aldiv+3,w
  2771  0229  1683               	bsf	3,5	;RP0=1, select bank1
  2772  022A  1303               	bcf	3,6	;RP1=0, select bank1
  2773  022B  00C6               	movwf	(BMP180_readPreassure@x1+3)^(0+128)
  2774  022C  1283               	bcf	3,5	;RP0=0, select bank0
  2775  022D  1303               	bcf	3,6	;RP1=0, select bank0
  2776  022E  0822               	movf	?___aldiv+2,w
  2777  022F  1683               	bsf	3,5	;RP0=1, select bank1
  2778  0230  1303               	bcf	3,6	;RP1=0, select bank1
  2779  0231  00C5               	movwf	(BMP180_readPreassure@x1+2)^(0+128)
  2780  0232  1283               	bcf	3,5	;RP0=0, select bank0
  2781  0233  1303               	bcf	3,6	;RP1=0, select bank0
  2782  0234  0821               	movf	?___aldiv+1,w
  2783  0235  1683               	bsf	3,5	;RP0=1, select bank1
  2784  0236  1303               	bcf	3,6	;RP1=0, select bank1
  2785  0237  00C4               	movwf	(BMP180_readPreassure@x1+1)^(0+128)
  2786  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2787  0239  1303               	bcf	3,6	;RP1=0, select bank0
  2788  023A  0820               	movf	?___aldiv,w
  2789  023B  1683               	bsf	3,5	;RP0=1, select bank1
  2790  023C  1303               	bcf	3,6	;RP1=0, select bank1
  2791  023D  00C3               	movwf	BMP180_readPreassure@x1^(0+128)
  2792  023E                     l1808:
  2793                           
  2794                           ;BMP180.c: 101:     x2 = dataEprom[1] * B6 / 2048;
  2795  023E  3000               	movlw	0
  2796  023F  1283               	bcf	3,5	;RP0=0, select bank0
  2797  0240  1303               	bcf	3,6	;RP1=0, select bank0
  2798  0241  00A3               	movwf	___aldiv@divisor+3
  2799  0242  3000               	movlw	0
  2800  0243  00A2               	movwf	___aldiv@divisor+2
  2801  0244  3008               	movlw	8
  2802  0245  00A1               	movwf	___aldiv@divisor+1
  2803  0246  3000               	movlw	0
  2804  0247  00A0               	movwf	___aldiv@divisor
  2805  0248  3004               	movlw	4
  2806  0249  3E90               	addlw	(low (_dataEprom| (0+256)))& (0+255)
  2807  024A  0084               	movwf	4
  2808  024B  1783               	bsf	3,7	;select IRP bank3
  2809  024C  0800               	movf	0,w
  2810  024D  00F0               	movwf	___lmul@multiplier
  2811  024E  0A84               	incf	4,f
  2812  024F  0800               	movf	0,w
  2813  0250  00F1               	movwf	___lmul@multiplier+1
  2814  0251  0A84               	incf	4,f
  2815  0252  0800               	movf	0,w
  2816  0253  00F2               	movwf	___lmul@multiplier+2
  2817  0254  0A84               	incf	4,f
  2818  0255  0800               	movf	0,w
  2819  0256  00F3               	movwf	___lmul@multiplier+3
  2820  0257  1683               	bsf	3,5	;RP0=1, select bank1
  2821  0258  1303               	bcf	3,6	;RP1=0, select bank1
  2822  0259  084E               	movf	(BMP180_readPreassure@B6+3)^(0+128),w
  2823  025A  00F7               	movwf	___lmul@multiplicand+3
  2824  025B  084D               	movf	(BMP180_readPreassure@B6+2)^(0+128),w
  2825  025C  00F6               	movwf	___lmul@multiplicand+2
  2826  025D  084C               	movf	(BMP180_readPreassure@B6+1)^(0+128),w
  2827  025E  00F5               	movwf	___lmul@multiplicand+1
  2828  025F  084B               	movf	BMP180_readPreassure@B6^(0+128),w
  2829  0260  00F4               	movwf	___lmul@multiplicand
  2830  0261  120A  158A  2170  120A  118A  	fcall	___lmul
  2831  0266  0873               	movf	?___lmul+3,w
  2832  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2833  0268  1303               	bcf	3,6	;RP1=0, select bank0
  2834  0269  00A7               	movwf	___aldiv@dividend+3
  2835  026A  0872               	movf	?___lmul+2,w
  2836  026B  00A6               	movwf	___aldiv@dividend+2
  2837  026C  0871               	movf	?___lmul+1,w
  2838  026D  00A5               	movwf	___aldiv@dividend+1
  2839  026E  0870               	movf	?___lmul,w
  2840  026F  00A4               	movwf	___aldiv@dividend
  2841  0270  120A  158A  2307  120A  118A  	fcall	___aldiv
  2842  0275  1283               	bcf	3,5	;RP0=0, select bank0
  2843  0276  1303               	bcf	3,6	;RP1=0, select bank0
  2844  0277  0823               	movf	?___aldiv+3,w
  2845  0278  1683               	bsf	3,5	;RP0=1, select bank1
  2846  0279  1303               	bcf	3,6	;RP1=0, select bank1
  2847  027A  00C2               	movwf	(BMP180_readPreassure@x2+3)^(0+128)
  2848  027B  1283               	bcf	3,5	;RP0=0, select bank0
  2849  027C  1303               	bcf	3,6	;RP1=0, select bank0
  2850  027D  0822               	movf	?___aldiv+2,w
  2851  027E  1683               	bsf	3,5	;RP0=1, select bank1
  2852  027F  1303               	bcf	3,6	;RP1=0, select bank1
  2853  0280  00C1               	movwf	(BMP180_readPreassure@x2+2)^(0+128)
  2854  0281  1283               	bcf	3,5	;RP0=0, select bank0
  2855  0282  1303               	bcf	3,6	;RP1=0, select bank0
  2856  0283  0821               	movf	?___aldiv+1,w
  2857  0284  1683               	bsf	3,5	;RP0=1, select bank1
  2858  0285  1303               	bcf	3,6	;RP1=0, select bank1
  2859  0286  00C0               	movwf	(BMP180_readPreassure@x2+1)^(0+128)
  2860  0287  1283               	bcf	3,5	;RP0=0, select bank0
  2861  0288  1303               	bcf	3,6	;RP1=0, select bank0
  2862  0289  0820               	movf	?___aldiv,w
  2863  028A  1683               	bsf	3,5	;RP0=1, select bank1
  2864  028B  1303               	bcf	3,6	;RP1=0, select bank1
  2865  028C  00BF               	movwf	BMP180_readPreassure@x2^(0+128)
  2866                           
  2867                           ;BMP180.c: 102:     x3 = x1 + x2;
  2868  028D  0843               	movf	BMP180_readPreassure@x1^(0+128),w
  2869  028E  073F               	addwf	BMP180_readPreassure@x2^(0+128),w
  2870  028F  1283               	bcf	3,5	;RP0=0, select bank0
  2871  0290  1303               	bcf	3,6	;RP1=0, select bank0
  2872  0291  00C6               	movwf	??_BMP180_readPreassure
  2873  0292  3000               	movlw	0
  2874  0293  1803               	skipnc
  2875  0294  3001               	movlw	1
  2876  0295  1683               	bsf	3,5	;RP0=1, select bank1
  2877  0296  1303               	bcf	3,6	;RP1=0, select bank1
  2878  0297  0744               	addwf	(BMP180_readPreassure@x1+1)^(0+128),w
  2879  0298  1283               	bcf	3,5	;RP0=0, select bank0
  2880  0299  1303               	bcf	3,6	;RP1=0, select bank0
  2881  029A  01C8               	clrf	??_BMP180_readPreassure+2
  2882  029B  1803               	skipnc
  2883  029C  0AC8               	incf	??_BMP180_readPreassure+2,f
  2884  029D  1683               	bsf	3,5	;RP0=1, select bank1
  2885  029E  1303               	bcf	3,6	;RP1=0, select bank1
  2886  029F  0740               	addwf	(BMP180_readPreassure@x2+1)^(0+128),w
  2887  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  2888  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  2889  02A2  00C7               	movwf	??_BMP180_readPreassure+1
  2890  02A3  1803               	skipnc
  2891  02A4  0AC8               	incf	??_BMP180_readPreassure+2,f
  2892  02A5  1683               	bsf	3,5	;RP0=1, select bank1
  2893  02A6  1303               	bcf	3,6	;RP1=0, select bank1
  2894  02A7  0845               	movf	(BMP180_readPreassure@x1+2)^(0+128),w
  2895  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  2896  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  2897  02AA  0748               	addwf	??_BMP180_readPreassure+2,w
  2898  02AB  01C9               	clrf	??_BMP180_readPreassure+3
  2899  02AC  1803               	skipnc
  2900  02AD  0AC9               	incf	??_BMP180_readPreassure+3,f
  2901  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  2902  02AF  1303               	bcf	3,6	;RP1=0, select bank1
  2903  02B0  0741               	addwf	(BMP180_readPreassure@x2+2)^(0+128),w
  2904  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  2905  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  2906  02B3  00C8               	movwf	??_BMP180_readPreassure+2
  2907  02B4  1803               	skipnc
  2908  02B5  0AC9               	incf	??_BMP180_readPreassure+3,f
  2909  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  2910  02B7  1303               	bcf	3,6	;RP1=0, select bank1
  2911  02B8  0846               	movf	(BMP180_readPreassure@x1+3)^(0+128),w
  2912  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  2913  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  2914  02BB  0749               	addwf	??_BMP180_readPreassure+3,w
  2915  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  2916  02BD  1303               	bcf	3,6	;RP1=0, select bank1
  2917  02BE  0742               	addwf	(BMP180_readPreassure@x2+3)^(0+128),w
  2918  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  2919  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  2920  02C1  00C9               	movwf	??_BMP180_readPreassure+3
  2921  02C2  0849               	movf	??_BMP180_readPreassure+3,w
  2922  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  2923  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  2924  02C5  00BE               	movwf	(BMP180_readPreassure@x3+3)^(0+128)
  2925  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  2926  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  2927  02C8  0848               	movf	??_BMP180_readPreassure+2,w
  2928  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  2929  02CA  1303               	bcf	3,6	;RP1=0, select bank1
  2930  02CB  00BD               	movwf	(BMP180_readPreassure@x3+2)^(0+128)
  2931  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  2932  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  2933  02CE  0847               	movf	??_BMP180_readPreassure+1,w
  2934  02CF  1683               	bsf	3,5	;RP0=1, select bank1
  2935  02D0  1303               	bcf	3,6	;RP1=0, select bank1
  2936  02D1  00BC               	movwf	(BMP180_readPreassure@x3+1)^(0+128)
  2937  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2938  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2939  02D4  0846               	movf	??_BMP180_readPreassure,w
  2940  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  2941  02D6  1303               	bcf	3,6	;RP1=0, select bank1
  2942  02D7  00BB               	movwf	BMP180_readPreassure@x3^(0+128)
  2943  02D8                     l1810:
  2944                           
  2945                           ;BMP180.c: 103:     B3 =(((dataEprom[0]* 4 + x3))+ 2)/4;
  2946  02D8  3000               	movlw	0
  2947  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  2948  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  2949  02DB  00A3               	movwf	___aldiv@divisor+3
  2950  02DC  3000               	movlw	0
  2951  02DD  00A2               	movwf	___aldiv@divisor+2
  2952  02DE  3000               	movlw	0
  2953  02DF  00A1               	movwf	___aldiv@divisor+1
  2954  02E0  3004               	movlw	4
  2955  02E1  00A0               	movwf	___aldiv@divisor
  2956  02E2  3002               	movlw	2
  2957  02E3  00C6               	movwf	??_BMP180_readPreassure
  2958  02E4  3000               	movlw	0
  2959  02E5  00C7               	movwf	??_BMP180_readPreassure+1
  2960  02E6  3000               	movlw	0
  2961  02E7  00C8               	movwf	??_BMP180_readPreassure+2
  2962  02E8  3000               	movlw	0
  2963  02E9  00C9               	movwf	??_BMP180_readPreassure+3
  2964  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  2965  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  2966  02EC  083B               	movf	BMP180_readPreassure@x3^(0+128),w
  2967  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2968  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  2969  02EF  00CA               	movwf	??_BMP180_readPreassure+4
  2970  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  2971  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  2972  02F2  083C               	movf	(BMP180_readPreassure@x3+1)^(0+128),w
  2973  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  2974  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  2975  02F5  00CB               	movwf	??_BMP180_readPreassure+5
  2976  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  2977  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  2978  02F8  083D               	movf	(BMP180_readPreassure@x3+2)^(0+128),w
  2979  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  2980  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  2981  02FB  00CC               	movwf	??_BMP180_readPreassure+6
  2982  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  2983  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  2984  02FE  083E               	movf	(BMP180_readPreassure@x3+3)^(0+128),w
  2985  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  2986  0300  1303               	bcf	3,6	;RP1=0, select bank0
  2987  0301  00CD               	movwf	??_BMP180_readPreassure+7
  2988  0302  1683               	bsf	3,5	;RP0=1, select bank3
  2989  0303  1703               	bsf	3,6	;RP1=1, select bank3
  2990  0304  0810               	movf	_dataEprom^(0+384),w
  2991  0305  1283               	bcf	3,5	;RP0=0, select bank0
  2992  0306  1303               	bcf	3,6	;RP1=0, select bank0
  2993  0307  00CE               	movwf	??_BMP180_readPreassure+8
  2994  0308  1683               	bsf	3,5	;RP0=1, select bank3
  2995  0309  1703               	bsf	3,6	;RP1=1, select bank3
  2996  030A  0811               	movf	(_dataEprom+1)^(0+384),w
  2997  030B  1283               	bcf	3,5	;RP0=0, select bank0
  2998  030C  1303               	bcf	3,6	;RP1=0, select bank0
  2999  030D  00CF               	movwf	??_BMP180_readPreassure+9
  3000  030E  1683               	bsf	3,5	;RP0=1, select bank3
  3001  030F  1703               	bsf	3,6	;RP1=1, select bank3
  3002  0310  0812               	movf	(_dataEprom+2)^(0+384),w
  3003  0311  1283               	bcf	3,5	;RP0=0, select bank0
  3004  0312  1303               	bcf	3,6	;RP1=0, select bank0
  3005  0313  00D0               	movwf	??_BMP180_readPreassure+10
  3006  0314  1683               	bsf	3,5	;RP0=1, select bank3
  3007  0315  1703               	bsf	3,6	;RP1=1, select bank3
  3008  0316  0813               	movf	(_dataEprom+3)^(0+384),w
  3009  0317  1283               	bcf	3,5	;RP0=0, select bank0
  3010  0318  1303               	bcf	3,6	;RP1=0, select bank0
  3011  0319  00D1               	movwf	??_BMP180_readPreassure+11
  3012  031A  3002               	movlw	2
  3013  031B                     u1665:
  3014  031B  1003               	clrc
  3015  031C  0DCE               	rlf	??_BMP180_readPreassure+8,f
  3016  031D  0DCF               	rlf	??_BMP180_readPreassure+9,f
  3017  031E  0DD0               	rlf	??_BMP180_readPreassure+10,f
  3018  031F  0DD1               	rlf	??_BMP180_readPreassure+11,f
  3019  0320                     u1660:
  3020  0320  3EFF               	addlw	-1
  3021  0321  1D03               	skipz
  3022  0322  2B1B               	goto	u1665
  3023  0323  084E               	movf	??_BMP180_readPreassure+8,w
  3024  0324  07CA               	addwf	??_BMP180_readPreassure+4,f
  3025  0325  084F               	movf	??_BMP180_readPreassure+9,w
  3026  0326  1803               	skipnc
  3027  0327  0F4F               	incfsz	??_BMP180_readPreassure+9,w
  3028  0328  2B2A               	goto	u1670
  3029  0329  2B2B               	goto	u1671
  3030  032A                     u1670:
  3031  032A  07CB               	addwf	??_BMP180_readPreassure+5,f
  3032  032B                     u1671:
  3033  032B  0850               	movf	??_BMP180_readPreassure+10,w
  3034  032C  1803               	skipnc
  3035  032D  0F50               	incfsz	??_BMP180_readPreassure+10,w
  3036  032E  2B30               	goto	u1672
  3037  032F  2B31               	goto	u1673
  3038  0330                     u1672:
  3039  0330  07CC               	addwf	??_BMP180_readPreassure+6,f
  3040  0331                     u1673:
  3041  0331  0851               	movf	??_BMP180_readPreassure+11,w
  3042  0332  1803               	skipnc
  3043  0333  0A51               	incf	??_BMP180_readPreassure+11,w
  3044  0334  07CD               	addwf	??_BMP180_readPreassure+7,f
  3045  0335  084A               	movf	??_BMP180_readPreassure+4,w
  3046  0336  07C6               	addwf	??_BMP180_readPreassure,f
  3047  0337  084B               	movf	??_BMP180_readPreassure+5,w
  3048  0338  1803               	skipnc
  3049  0339  0F4B               	incfsz	??_BMP180_readPreassure+5,w
  3050  033A  2B3C               	goto	u1680
  3051  033B  2B3D               	goto	u1681
  3052  033C                     u1680:
  3053  033C  07C7               	addwf	??_BMP180_readPreassure+1,f
  3054  033D                     u1681:
  3055  033D  084C               	movf	??_BMP180_readPreassure+6,w
  3056  033E  1803               	skipnc
  3057  033F  0F4C               	incfsz	??_BMP180_readPreassure+6,w
  3058  0340  2B42               	goto	u1682
  3059  0341  2B43               	goto	u1683
  3060  0342                     u1682:
  3061  0342  07C8               	addwf	??_BMP180_readPreassure+2,f
  3062  0343                     u1683:
  3063  0343  084D               	movf	??_BMP180_readPreassure+7,w
  3064  0344  1803               	skipnc
  3065  0345  0A4D               	incf	??_BMP180_readPreassure+7,w
  3066  0346  07C9               	addwf	??_BMP180_readPreassure+3,f
  3067  0347  0849               	movf	??_BMP180_readPreassure+3,w
  3068  0348  00A7               	movwf	___aldiv@dividend+3
  3069  0349  0848               	movf	??_BMP180_readPreassure+2,w
  3070  034A  00A6               	movwf	___aldiv@dividend+2
  3071  034B  0847               	movf	??_BMP180_readPreassure+1,w
  3072  034C  00A5               	movwf	___aldiv@dividend+1
  3073  034D  0846               	movf	??_BMP180_readPreassure,w
  3074  034E  00A4               	movwf	___aldiv@dividend
  3075  034F  120A  158A  2307  120A  118A  	fcall	___aldiv
  3076  0354  1283               	bcf	3,5	;RP0=0, select bank0
  3077  0355  1303               	bcf	3,6	;RP1=0, select bank0
  3078  0356  0823               	movf	?___aldiv+3,w
  3079  0357  1683               	bsf	3,5	;RP0=1, select bank1
  3080  0358  1303               	bcf	3,6	;RP1=0, select bank1
  3081  0359  00A3               	movwf	(BMP180_readPreassure@B3+3)^(0+128)
  3082  035A  1283               	bcf	3,5	;RP0=0, select bank0
  3083  035B  1303               	bcf	3,6	;RP1=0, select bank0
  3084  035C  0822               	movf	?___aldiv+2,w
  3085  035D  1683               	bsf	3,5	;RP0=1, select bank1
  3086  035E  1303               	bcf	3,6	;RP1=0, select bank1
  3087  035F  00A2               	movwf	(BMP180_readPreassure@B3+2)^(0+128)
  3088  0360  1283               	bcf	3,5	;RP0=0, select bank0
  3089  0361  1303               	bcf	3,6	;RP1=0, select bank0
  3090  0362  0821               	movf	?___aldiv+1,w
  3091  0363  1683               	bsf	3,5	;RP0=1, select bank1
  3092  0364  1303               	bcf	3,6	;RP1=0, select bank1
  3093  0365  00A1               	movwf	(BMP180_readPreassure@B3+1)^(0+128)
  3094  0366  1283               	bcf	3,5	;RP0=0, select bank0
  3095  0367  1303               	bcf	3,6	;RP1=0, select bank0
  3096  0368  0820               	movf	?___aldiv,w
  3097  0369  1683               	bsf	3,5	;RP0=1, select bank1
  3098  036A  1303               	bcf	3,6	;RP1=0, select bank1
  3099  036B  00A0               	movwf	BMP180_readPreassure@B3^(0+128)
  3100  036C                     l1812:
  3101                           
  3102                           ;BMP180.c: 104:     x1 = (dataEprom[2]*B6)/8192;
  3103  036C  3000               	movlw	0
  3104  036D  1283               	bcf	3,5	;RP0=0, select bank0
  3105  036E  1303               	bcf	3,6	;RP1=0, select bank0
  3106  036F  00A3               	movwf	___aldiv@divisor+3
  3107  0370  3000               	movlw	0
  3108  0371  00A2               	movwf	___aldiv@divisor+2
  3109  0372  3020               	movlw	32
  3110  0373  00A1               	movwf	___aldiv@divisor+1
  3111  0374  3000               	movlw	0
  3112  0375  00A0               	movwf	___aldiv@divisor
  3113  0376  3008               	movlw	8
  3114  0377  3E90               	addlw	(low (_dataEprom| (0+256)))& (0+255)
  3115  0378  0084               	movwf	4
  3116  0379  1783               	bsf	3,7	;select IRP bank3
  3117  037A  0800               	movf	0,w
  3118  037B  00F0               	movwf	___lmul@multiplier
  3119  037C  0A84               	incf	4,f
  3120  037D  0800               	movf	0,w
  3121  037E  00F1               	movwf	___lmul@multiplier+1
  3122  037F  0A84               	incf	4,f
  3123  0380  0800               	movf	0,w
  3124  0381  00F2               	movwf	___lmul@multiplier+2
  3125  0382  0A84               	incf	4,f
  3126  0383  0800               	movf	0,w
  3127  0384  00F3               	movwf	___lmul@multiplier+3
  3128  0385  1683               	bsf	3,5	;RP0=1, select bank1
  3129  0386  1303               	bcf	3,6	;RP1=0, select bank1
  3130  0387  084E               	movf	(BMP180_readPreassure@B6+3)^(0+128),w
  3131  0388  00F7               	movwf	___lmul@multiplicand+3
  3132  0389  084D               	movf	(BMP180_readPreassure@B6+2)^(0+128),w
  3133  038A  00F6               	movwf	___lmul@multiplicand+2
  3134  038B  084C               	movf	(BMP180_readPreassure@B6+1)^(0+128),w
  3135  038C  00F5               	movwf	___lmul@multiplicand+1
  3136  038D  084B               	movf	BMP180_readPreassure@B6^(0+128),w
  3137  038E  00F4               	movwf	___lmul@multiplicand
  3138  038F  120A  158A  2170  120A  118A  	fcall	___lmul
  3139  0394  0873               	movf	?___lmul+3,w
  3140  0395  1283               	bcf	3,5	;RP0=0, select bank0
  3141  0396  1303               	bcf	3,6	;RP1=0, select bank0
  3142  0397  00A7               	movwf	___aldiv@dividend+3
  3143  0398  0872               	movf	?___lmul+2,w
  3144  0399  00A6               	movwf	___aldiv@dividend+2
  3145  039A  0871               	movf	?___lmul+1,w
  3146  039B  00A5               	movwf	___aldiv@dividend+1
  3147  039C  0870               	movf	?___lmul,w
  3148  039D  00A4               	movwf	___aldiv@dividend
  3149  039E  120A  158A  2307  120A  118A  	fcall	___aldiv
  3150  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  3151  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  3152  03A5  0823               	movf	?___aldiv+3,w
  3153  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  3154  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  3155  03A8  00C6               	movwf	(BMP180_readPreassure@x1+3)^(0+128)
  3156  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  3157  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  3158  03AB  0822               	movf	?___aldiv+2,w
  3159  03AC  1683               	bsf	3,5	;RP0=1, select bank1
  3160  03AD  1303               	bcf	3,6	;RP1=0, select bank1
  3161  03AE  00C5               	movwf	(BMP180_readPreassure@x1+2)^(0+128)
  3162  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  3163  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  3164  03B1  0821               	movf	?___aldiv+1,w
  3165  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  3166  03B3  1303               	bcf	3,6	;RP1=0, select bank1
  3167  03B4  00C4               	movwf	(BMP180_readPreassure@x1+1)^(0+128)
  3168  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  3169  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  3170  03B7  0820               	movf	?___aldiv,w
  3171  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  3172  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  3173  03BA  00C3               	movwf	BMP180_readPreassure@x1^(0+128)
  3174  03BB                     l1814:
  3175                           
  3176                           ;BMP180.c: 105:     x2 = (dataEprom[6]*((B6*B6)/4096))/65536;
  3177  03BB  3000               	movlw	0
  3178  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  3179  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  3180  03BE  00A3               	movwf	___aldiv@divisor+3
  3181  03BF  3000               	movlw	0
  3182  03C0  00A2               	movwf	___aldiv@divisor+2
  3183  03C1  3010               	movlw	16
  3184  03C2  00A1               	movwf	___aldiv@divisor+1
  3185  03C3  3000               	movlw	0
  3186  03C4  00A0               	movwf	___aldiv@divisor
  3187  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  3188  03C6  1303               	bcf	3,6	;RP1=0, select bank1
  3189  03C7  084E               	movf	(BMP180_readPreassure@B6+3)^(0+128),w
  3190  03C8  00F3               	movwf	___lmul@multiplier+3
  3191  03C9  084D               	movf	(BMP180_readPreassure@B6+2)^(0+128),w
  3192  03CA  00F2               	movwf	___lmul@multiplier+2
  3193  03CB  084C               	movf	(BMP180_readPreassure@B6+1)^(0+128),w
  3194  03CC  00F1               	movwf	___lmul@multiplier+1
  3195  03CD  084B               	movf	BMP180_readPreassure@B6^(0+128),w
  3196  03CE  00F0               	movwf	___lmul@multiplier
  3197  03CF  084E               	movf	(BMP180_readPreassure@B6+3)^(0+128),w
  3198  03D0  00F7               	movwf	___lmul@multiplicand+3
  3199  03D1  084D               	movf	(BMP180_readPreassure@B6+2)^(0+128),w
  3200  03D2  00F6               	movwf	___lmul@multiplicand+2
  3201  03D3  084C               	movf	(BMP180_readPreassure@B6+1)^(0+128),w
  3202  03D4  00F5               	movwf	___lmul@multiplicand+1
  3203  03D5  084B               	movf	BMP180_readPreassure@B6^(0+128),w
  3204  03D6  00F4               	movwf	___lmul@multiplicand
  3205  03D7  120A  158A  2170  120A  118A  	fcall	___lmul
  3206  03DC  0873               	movf	?___lmul+3,w
  3207  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  3208  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  3209  03DF  00A7               	movwf	___aldiv@dividend+3
  3210  03E0  0872               	movf	?___lmul+2,w
  3211  03E1  00A6               	movwf	___aldiv@dividend+2
  3212  03E2  0871               	movf	?___lmul+1,w
  3213  03E3  00A5               	movwf	___aldiv@dividend+1
  3214  03E4  0870               	movf	?___lmul,w
  3215  03E5  00A4               	movwf	___aldiv@dividend
  3216  03E6  120A  158A  2307  120A  118A  	fcall	___aldiv
  3217  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  3218  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  3219  03ED  0823               	movf	?___aldiv+3,w
  3220  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  3221  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  3222  03F0  00B6               	movwf	(_BMP180_readPreassure$1065+3)^(0+128)
  3223  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  3224  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  3225  03F3  0822               	movf	?___aldiv+2,w
  3226  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  3227  03F5  1303               	bcf	3,6	;RP1=0, select bank1
  3228  03F6  00B5               	movwf	(_BMP180_readPreassure$1065+2)^(0+128)
  3229  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  3230  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  3231  03F9  0821               	movf	?___aldiv+1,w
  3232  03FA  1683               	bsf	3,5	;RP0=1, select bank1
  3233  03FB  1303               	bcf	3,6	;RP1=0, select bank1
  3234  03FC  00B4               	movwf	(_BMP180_readPreassure$1065+1)^(0+128)
  3235  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  3236  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  3237  03FF  0820               	movf	?___aldiv,w
  3238  0400  1683               	bsf	3,5	;RP0=1, select bank1
  3239  0401  1303               	bcf	3,6	;RP1=0, select bank1
  3240  0402  00B3               	movwf	_BMP180_readPreassure$1065^(0+128)
  3241  0403                     l1816:
  3242                           
  3243                           ;BMP180.c: 105:     x2 = (dataEprom[6]*((B6*B6)/4096))/65536;
  3244  0403  3000               	movlw	0
  3245  0404  1283               	bcf	3,5	;RP0=0, select bank0
  3246  0405  1303               	bcf	3,6	;RP1=0, select bank0
  3247  0406  00A3               	movwf	___aldiv@divisor+3
  3248  0407  3001               	movlw	1
  3249  0408  00A2               	movwf	___aldiv@divisor+2
  3250  0409  3000               	movlw	0
  3251  040A  00A1               	movwf	___aldiv@divisor+1
  3252  040B  3000               	movlw	0
  3253  040C  00A0               	movwf	___aldiv@divisor
  3254  040D  1683               	bsf	3,5	;RP0=1, select bank1
  3255  040E  1303               	bcf	3,6	;RP1=0, select bank1
  3256  040F  0836               	movf	(_BMP180_readPreassure$1065+3)^(0+128),w
  3257  0410  00F3               	movwf	___lmul@multiplier+3
  3258  0411  0835               	movf	(_BMP180_readPreassure$1065+2)^(0+128),w
  3259  0412  00F2               	movwf	___lmul@multiplier+2
  3260  0413  0834               	movf	(_BMP180_readPreassure$1065+1)^(0+128),w
  3261  0414  00F1               	movwf	___lmul@multiplier+1
  3262  0415  0833               	movf	_BMP180_readPreassure$1065^(0+128),w
  3263  0416  00F0               	movwf	___lmul@multiplier
  3264  0417  3018               	movlw	24
  3265  0418  3E90               	addlw	(low (_dataEprom| (0+256)))& (0+255)
  3266  0419  0084               	movwf	4
  3267  041A  1783               	bsf	3,7	;select IRP bank3
  3268  041B  0800               	movf	0,w
  3269  041C  00F4               	movwf	___lmul@multiplicand
  3270  041D  0A84               	incf	4,f
  3271  041E  0800               	movf	0,w
  3272  041F  00F5               	movwf	___lmul@multiplicand+1
  3273  0420  0A84               	incf	4,f
  3274  0421  0800               	movf	0,w
  3275  0422  00F6               	movwf	___lmul@multiplicand+2
  3276  0423  0A84               	incf	4,f
  3277  0424  0800               	movf	0,w
  3278  0425  00F7               	movwf	___lmul@multiplicand+3
  3279  0426  120A  158A  2170  120A  118A  	fcall	___lmul
  3280  042B  0873               	movf	?___lmul+3,w
  3281  042C  1283               	bcf	3,5	;RP0=0, select bank0
  3282  042D  1303               	bcf	3,6	;RP1=0, select bank0
  3283  042E  00A7               	movwf	___aldiv@dividend+3
  3284  042F  0872               	movf	?___lmul+2,w
  3285  0430  00A6               	movwf	___aldiv@dividend+2
  3286  0431  0871               	movf	?___lmul+1,w
  3287  0432  00A5               	movwf	___aldiv@dividend+1
  3288  0433  0870               	movf	?___lmul,w
  3289  0434  00A4               	movwf	___aldiv@dividend
  3290  0435  120A  158A  2307  120A  118A  	fcall	___aldiv
  3291  043A  1283               	bcf	3,5	;RP0=0, select bank0
  3292  043B  1303               	bcf	3,6	;RP1=0, select bank0
  3293  043C  0823               	movf	?___aldiv+3,w
  3294  043D  1683               	bsf	3,5	;RP0=1, select bank1
  3295  043E  1303               	bcf	3,6	;RP1=0, select bank1
  3296  043F  00C2               	movwf	(BMP180_readPreassure@x2+3)^(0+128)
  3297  0440  1283               	bcf	3,5	;RP0=0, select bank0
  3298  0441  1303               	bcf	3,6	;RP1=0, select bank0
  3299  0442  0822               	movf	?___aldiv+2,w
  3300  0443  1683               	bsf	3,5	;RP0=1, select bank1
  3301  0444  1303               	bcf	3,6	;RP1=0, select bank1
  3302  0445  00C1               	movwf	(BMP180_readPreassure@x2+2)^(0+128)
  3303  0446  1283               	bcf	3,5	;RP0=0, select bank0
  3304  0447  1303               	bcf	3,6	;RP1=0, select bank0
  3305  0448  0821               	movf	?___aldiv+1,w
  3306  0449  1683               	bsf	3,5	;RP0=1, select bank1
  3307  044A  1303               	bcf	3,6	;RP1=0, select bank1
  3308  044B  00C0               	movwf	(BMP180_readPreassure@x2+1)^(0+128)
  3309  044C  1283               	bcf	3,5	;RP0=0, select bank0
  3310  044D  1303               	bcf	3,6	;RP1=0, select bank0
  3311  044E  0820               	movf	?___aldiv,w
  3312  044F  1683               	bsf	3,5	;RP0=1, select bank1
  3313  0450  1303               	bcf	3,6	;RP1=0, select bank1
  3314  0451  00BF               	movwf	BMP180_readPreassure@x2^(0+128)
  3315  0452                     l1818:
  3316                           
  3317                           ;BMP180.c: 106:     x3 = ((x1 + x2) + 2) / 4;
  3318  0452  3000               	movlw	0
  3319  0453  1283               	bcf	3,5	;RP0=0, select bank0
  3320  0454  1303               	bcf	3,6	;RP1=0, select bank0
  3321  0455  00A3               	movwf	___aldiv@divisor+3
  3322  0456  3000               	movlw	0
  3323  0457  00A2               	movwf	___aldiv@divisor+2
  3324  0458  3000               	movlw	0
  3325  0459  00A1               	movwf	___aldiv@divisor+1
  3326  045A  3004               	movlw	4
  3327  045B  00A0               	movwf	___aldiv@divisor
  3328  045C  3002               	movlw	2
  3329  045D  00C6               	movwf	??_BMP180_readPreassure
  3330  045E  3000               	movlw	0
  3331  045F  00C7               	movwf	??_BMP180_readPreassure+1
  3332  0460  3000               	movlw	0
  3333  0461  00C8               	movwf	??_BMP180_readPreassure+2
  3334  0462  3000               	movlw	0
  3335  0463  00C9               	movwf	??_BMP180_readPreassure+3
  3336  0464  1683               	bsf	3,5	;RP0=1, select bank1
  3337  0465  1303               	bcf	3,6	;RP1=0, select bank1
  3338  0466  0843               	movf	BMP180_readPreassure@x1^(0+128),w
  3339  0467  073F               	addwf	BMP180_readPreassure@x2^(0+128),w
  3340  0468  1283               	bcf	3,5	;RP0=0, select bank0
  3341  0469  1303               	bcf	3,6	;RP1=0, select bank0
  3342  046A  00CA               	movwf	??_BMP180_readPreassure+4
  3343  046B  3000               	movlw	0
  3344  046C  1803               	skipnc
  3345  046D  3001               	movlw	1
  3346  046E  1683               	bsf	3,5	;RP0=1, select bank1
  3347  046F  1303               	bcf	3,6	;RP1=0, select bank1
  3348  0470  0744               	addwf	(BMP180_readPreassure@x1+1)^(0+128),w
  3349  0471  1283               	bcf	3,5	;RP0=0, select bank0
  3350  0472  1303               	bcf	3,6	;RP1=0, select bank0
  3351  0473  01CC               	clrf	??_BMP180_readPreassure+6
  3352  0474  1803               	skipnc
  3353  0475  0ACC               	incf	??_BMP180_readPreassure+6,f
  3354  0476  1683               	bsf	3,5	;RP0=1, select bank1
  3355  0477  1303               	bcf	3,6	;RP1=0, select bank1
  3356  0478  0740               	addwf	(BMP180_readPreassure@x2+1)^(0+128),w
  3357  0479  1283               	bcf	3,5	;RP0=0, select bank0
  3358  047A  1303               	bcf	3,6	;RP1=0, select bank0
  3359  047B  00CB               	movwf	??_BMP180_readPreassure+5
  3360  047C  1803               	skipnc
  3361  047D  0ACC               	incf	??_BMP180_readPreassure+6,f
  3362  047E  1683               	bsf	3,5	;RP0=1, select bank1
  3363  047F  1303               	bcf	3,6	;RP1=0, select bank1
  3364  0480  0845               	movf	(BMP180_readPreassure@x1+2)^(0+128),w
  3365  0481  1283               	bcf	3,5	;RP0=0, select bank0
  3366  0482  1303               	bcf	3,6	;RP1=0, select bank0
  3367  0483  074C               	addwf	??_BMP180_readPreassure+6,w
  3368  0484  01CD               	clrf	??_BMP180_readPreassure+7
  3369  0485  1803               	skipnc
  3370  0486  0ACD               	incf	??_BMP180_readPreassure+7,f
  3371  0487  1683               	bsf	3,5	;RP0=1, select bank1
  3372  0488  1303               	bcf	3,6	;RP1=0, select bank1
  3373  0489  0741               	addwf	(BMP180_readPreassure@x2+2)^(0+128),w
  3374  048A  1283               	bcf	3,5	;RP0=0, select bank0
  3375  048B  1303               	bcf	3,6	;RP1=0, select bank0
  3376  048C  00CC               	movwf	??_BMP180_readPreassure+6
  3377  048D  1803               	skipnc
  3378  048E  0ACD               	incf	??_BMP180_readPreassure+7,f
  3379  048F  1683               	bsf	3,5	;RP0=1, select bank1
  3380  0490  1303               	bcf	3,6	;RP1=0, select bank1
  3381  0491  0846               	movf	(BMP180_readPreassure@x1+3)^(0+128),w
  3382  0492  1283               	bcf	3,5	;RP0=0, select bank0
  3383  0493  1303               	bcf	3,6	;RP1=0, select bank0
  3384  0494  074D               	addwf	??_BMP180_readPreassure+7,w
  3385  0495  1683               	bsf	3,5	;RP0=1, select bank1
  3386  0496  1303               	bcf	3,6	;RP1=0, select bank1
  3387  0497  0742               	addwf	(BMP180_readPreassure@x2+3)^(0+128),w
  3388  0498  1283               	bcf	3,5	;RP0=0, select bank0
  3389  0499  1303               	bcf	3,6	;RP1=0, select bank0
  3390  049A  00CD               	movwf	??_BMP180_readPreassure+7
  3391  049B  084A               	movf	??_BMP180_readPreassure+4,w
  3392  049C  07C6               	addwf	??_BMP180_readPreassure,f
  3393  049D  084B               	movf	??_BMP180_readPreassure+5,w
  3394  049E  1803               	skipnc
  3395  049F  0F4B               	incfsz	??_BMP180_readPreassure+5,w
  3396  04A0  2CA2               	goto	u1690
  3397  04A1  2CA3               	goto	u1691
  3398  04A2                     u1690:
  3399  04A2  07C7               	addwf	??_BMP180_readPreassure+1,f
  3400  04A3                     u1691:
  3401  04A3  084C               	movf	??_BMP180_readPreassure+6,w
  3402  04A4  1803               	skipnc
  3403  04A5  0F4C               	incfsz	??_BMP180_readPreassure+6,w
  3404  04A6  2CA8               	goto	u1692
  3405  04A7  2CA9               	goto	u1693
  3406  04A8                     u1692:
  3407  04A8  07C8               	addwf	??_BMP180_readPreassure+2,f
  3408  04A9                     u1693:
  3409  04A9  084D               	movf	??_BMP180_readPreassure+7,w
  3410  04AA  1803               	skipnc
  3411  04AB  0A4D               	incf	??_BMP180_readPreassure+7,w
  3412  04AC  07C9               	addwf	??_BMP180_readPreassure+3,f
  3413  04AD  0849               	movf	??_BMP180_readPreassure+3,w
  3414  04AE  00A7               	movwf	___aldiv@dividend+3
  3415  04AF  0848               	movf	??_BMP180_readPreassure+2,w
  3416  04B0  00A6               	movwf	___aldiv@dividend+2
  3417  04B1  0847               	movf	??_BMP180_readPreassure+1,w
  3418  04B2  00A5               	movwf	___aldiv@dividend+1
  3419  04B3  0846               	movf	??_BMP180_readPreassure,w
  3420  04B4  00A4               	movwf	___aldiv@dividend
  3421  04B5  120A  158A  2307  120A  118A  	fcall	___aldiv
  3422  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  3423  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  3424  04BC  0823               	movf	?___aldiv+3,w
  3425  04BD  1683               	bsf	3,5	;RP0=1, select bank1
  3426  04BE  1303               	bcf	3,6	;RP1=0, select bank1
  3427  04BF  00BE               	movwf	(BMP180_readPreassure@x3+3)^(0+128)
  3428  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  3429  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  3430  04C2  0822               	movf	?___aldiv+2,w
  3431  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  3432  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  3433  04C5  00BD               	movwf	(BMP180_readPreassure@x3+2)^(0+128)
  3434  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  3435  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  3436  04C8  0821               	movf	?___aldiv+1,w
  3437  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  3438  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  3439  04CB  00BC               	movwf	(BMP180_readPreassure@x3+1)^(0+128)
  3440  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  3441  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  3442  04CE  0820               	movf	?___aldiv,w
  3443  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  3444  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  3445  04D1  00BB               	movwf	BMP180_readPreassure@x3^(0+128)
  3446  04D2                     l1820:
  3447                           
  3448                           ;BMP180.c: 107:     printf("x3 = %ld\n",x3);
  3449  04D2  083E               	movf	(BMP180_readPreassure@x3+3)^(0+128),w
  3450  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  3451  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  3452  04D5  00BD               	movwf	?_printf+3
  3453  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  3454  04D7  1303               	bcf	3,6	;RP1=0, select bank1
  3455  04D8  083D               	movf	(BMP180_readPreassure@x3+2)^(0+128),w
  3456  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  3457  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  3458  04DB  00BC               	movwf	?_printf+2
  3459  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  3460  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  3461  04DE  083C               	movf	(BMP180_readPreassure@x3+1)^(0+128),w
  3462  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  3463  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  3464  04E1  00BB               	movwf	?_printf+1
  3465  04E2  1683               	bsf	3,5	;RP0=1, select bank1
  3466  04E3  1303               	bcf	3,6	;RP1=0, select bank1
  3467  04E4  083B               	movf	BMP180_readPreassure@x3^(0+128),w
  3468  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  3469  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  3470  04E7  00BA               	movwf	?_printf
  3471  04E8  3029               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3472  04E9  120A  158A  2117  120A  118A  	fcall	_printf
  3473  04EE                     l1822:
  3474                           
  3475                           ;BMP180.c: 108:     B4 = (dataEprom[3] * (unsigned long)(x3 + 32768)) / 32768;
  3476  04EE  3000               	movlw	0
  3477  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  3478  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  3479  04F1  00C6               	movwf	??_BMP180_readPreassure
  3480  04F2  3080               	movlw	128
  3481  04F3  00C7               	movwf	??_BMP180_readPreassure+1
  3482  04F4  3000               	movlw	0
  3483  04F5  00C8               	movwf	??_BMP180_readPreassure+2
  3484  04F6  3000               	movlw	0
  3485  04F7  00C9               	movwf	??_BMP180_readPreassure+3
  3486  04F8  1683               	bsf	3,5	;RP0=1, select bank1
  3487  04F9  1303               	bcf	3,6	;RP1=0, select bank1
  3488  04FA  083B               	movf	BMP180_readPreassure@x3^(0+128),w
  3489  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  3490  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  3491  04FD  07C6               	addwf	??_BMP180_readPreassure,f
  3492  04FE  1683               	bsf	3,5	;RP0=1, select bank1
  3493  04FF  1303               	bcf	3,6	;RP1=0, select bank1
  3494  0500  083C               	movf	(BMP180_readPreassure@x3+1)^(0+128),w
  3495  0501  1803               	skipnc
  3496  0502  0F3C               	incfsz	(BMP180_readPreassure@x3+1)^(0+128),w
  3497  0503  2D05               	goto	u1700
  3498  0504  2D08               	goto	u1701
  3499  0505                     u1700:
  3500  0505  1283               	bcf	3,5	;RP0=0, select bank0
  3501  0506  1303               	bcf	3,6	;RP1=0, select bank0
  3502  0507  07C7               	addwf	??_BMP180_readPreassure+1,f
  3503  0508                     u1701:
  3504  0508  1683               	bsf	3,5	;RP0=1, select bank1
  3505  0509  1303               	bcf	3,6	;RP1=0, select bank1
  3506  050A  083D               	movf	(BMP180_readPreassure@x3+2)^(0+128),w
  3507  050B  1803               	skipnc
  3508  050C  0F3D               	incfsz	(BMP180_readPreassure@x3+2)^(0+128),w
  3509  050D  2D0F               	goto	u1702
  3510  050E  2D12               	goto	u1703
  3511  050F                     u1702:
  3512  050F  1283               	bcf	3,5	;RP0=0, select bank0
  3513  0510  1303               	bcf	3,6	;RP1=0, select bank0
  3514  0511  07C8               	addwf	??_BMP180_readPreassure+2,f
  3515  0512                     u1703:
  3516  0512  1683               	bsf	3,5	;RP0=1, select bank1
  3517  0513  1303               	bcf	3,6	;RP1=0, select bank1
  3518  0514  083E               	movf	(BMP180_readPreassure@x3+3)^(0+128),w
  3519  0515  1803               	skipnc
  3520  0516  0A3E               	incf	(BMP180_readPreassure@x3+3)^(0+128),w
  3521  0517  1283               	bcf	3,5	;RP0=0, select bank0
  3522  0518  1303               	bcf	3,6	;RP1=0, select bank0
  3523  0519  07C9               	addwf	??_BMP180_readPreassure+3,f
  3524  051A  0849               	movf	??_BMP180_readPreassure+3,w
  3525  051B  00F3               	movwf	___lmul@multiplier+3
  3526  051C  0848               	movf	??_BMP180_readPreassure+2,w
  3527  051D  00F2               	movwf	___lmul@multiplier+2
  3528  051E  0847               	movf	??_BMP180_readPreassure+1,w
  3529  051F  00F1               	movwf	___lmul@multiplier+1
  3530  0520  0846               	movf	??_BMP180_readPreassure,w
  3531  0521  00F0               	movwf	___lmul@multiplier
  3532  0522  300C               	movlw	12
  3533  0523  3E90               	addlw	(low (_dataEprom| (0+256)))& (0+255)
  3534  0524  0084               	movwf	4
  3535  0525  1783               	bsf	3,7	;select IRP bank3
  3536  0526  0800               	movf	0,w
  3537  0527  00F4               	movwf	___lmul@multiplicand
  3538  0528  0A84               	incf	4,f
  3539  0529  0800               	movf	0,w
  3540  052A  00F5               	movwf	___lmul@multiplicand+1
  3541  052B  0A84               	incf	4,f
  3542  052C  0800               	movf	0,w
  3543  052D  00F6               	movwf	___lmul@multiplicand+2
  3544  052E  0A84               	incf	4,f
  3545  052F  0800               	movf	0,w
  3546  0530  00F7               	movwf	___lmul@multiplicand+3
  3547  0531  120A  158A  2170  120A  118A  	fcall	___lmul
  3548  0536  0870               	movf	?___lmul,w
  3549  0537  1283               	bcf	3,5	;RP0=0, select bank0
  3550  0538  1303               	bcf	3,6	;RP1=0, select bank0
  3551  0539  00CA               	movwf	??_BMP180_readPreassure+4
  3552  053A  0871               	movf	?___lmul+1,w
  3553  053B  00CB               	movwf	??_BMP180_readPreassure+5
  3554  053C  0872               	movf	?___lmul+2,w
  3555  053D  00CC               	movwf	??_BMP180_readPreassure+6
  3556  053E  0873               	movf	?___lmul+3,w
  3557  053F  00CD               	movwf	??_BMP180_readPreassure+7
  3558  0540  300F               	movlw	15
  3559  0541                     u1715:
  3560  0541  1003               	clrc
  3561  0542  0CCD               	rrf	??_BMP180_readPreassure+7,f
  3562  0543  0CCC               	rrf	??_BMP180_readPreassure+6,f
  3563  0544  0CCB               	rrf	??_BMP180_readPreassure+5,f
  3564  0545  0CCA               	rrf	??_BMP180_readPreassure+4,f
  3565  0546                     u1710:
  3566  0546  3EFF               	addlw	-1
  3567  0547  1D03               	skipz
  3568  0548  2D41               	goto	u1715
  3569  0549  084D               	movf	??_BMP180_readPreassure+7,w
  3570  054A  1683               	bsf	3,5	;RP0=1, select bank1
  3571  054B  1303               	bcf	3,6	;RP1=0, select bank1
  3572  054C  00B2               	movwf	(BMP180_readPreassure@B4+3)^(0+128)
  3573  054D  1283               	bcf	3,5	;RP0=0, select bank0
  3574  054E  1303               	bcf	3,6	;RP1=0, select bank0
  3575  054F  084C               	movf	??_BMP180_readPreassure+6,w
  3576  0550  1683               	bsf	3,5	;RP0=1, select bank1
  3577  0551  1303               	bcf	3,6	;RP1=0, select bank1
  3578  0552  00B1               	movwf	(BMP180_readPreassure@B4+2)^(0+128)
  3579  0553  1283               	bcf	3,5	;RP0=0, select bank0
  3580  0554  1303               	bcf	3,6	;RP1=0, select bank0
  3581  0555  084B               	movf	??_BMP180_readPreassure+5,w
  3582  0556  1683               	bsf	3,5	;RP0=1, select bank1
  3583  0557  1303               	bcf	3,6	;RP1=0, select bank1
  3584  0558  00B0               	movwf	(BMP180_readPreassure@B4+1)^(0+128)
  3585  0559  1283               	bcf	3,5	;RP0=0, select bank0
  3586  055A  1303               	bcf	3,6	;RP1=0, select bank0
  3587  055B  084A               	movf	??_BMP180_readPreassure+4,w
  3588  055C  1683               	bsf	3,5	;RP0=1, select bank1
  3589  055D  1303               	bcf	3,6	;RP1=0, select bank1
  3590  055E  00AF               	movwf	BMP180_readPreassure@B4^(0+128)
  3591  055F                     l1824:
  3592                           
  3593                           ;BMP180.c: 109:     B7 = ((unsigned long)pres - B3)*(50000);
  3594  055F  0824               	movf	BMP180_readPreassure@pres^(0+128),w
  3595  0560  1283               	bcf	3,5	;RP0=0, select bank0
  3596  0561  1303               	bcf	3,6	;RP1=0, select bank0
  3597  0562  00C6               	movwf	??_BMP180_readPreassure
  3598  0563  1683               	bsf	3,5	;RP0=1, select bank1
  3599  0564  1303               	bcf	3,6	;RP1=0, select bank1
  3600  0565  0825               	movf	(BMP180_readPreassure@pres+1)^(0+128),w
  3601  0566  1283               	bcf	3,5	;RP0=0, select bank0
  3602  0567  1303               	bcf	3,6	;RP1=0, select bank0
  3603  0568  00C7               	movwf	??_BMP180_readPreassure+1
  3604  0569  1683               	bsf	3,5	;RP0=1, select bank1
  3605  056A  1303               	bcf	3,6	;RP1=0, select bank1
  3606  056B  0826               	movf	(BMP180_readPreassure@pres+2)^(0+128),w
  3607  056C  1283               	bcf	3,5	;RP0=0, select bank0
  3608  056D  1303               	bcf	3,6	;RP1=0, select bank0
  3609  056E  00C8               	movwf	??_BMP180_readPreassure+2
  3610  056F  1683               	bsf	3,5	;RP0=1, select bank1
  3611  0570  1303               	bcf	3,6	;RP1=0, select bank1
  3612  0571  0827               	movf	(BMP180_readPreassure@pres+3)^(0+128),w
  3613  0572  1283               	bcf	3,5	;RP0=0, select bank0
  3614  0573  1303               	bcf	3,6	;RP1=0, select bank0
  3615  0574  00C9               	movwf	??_BMP180_readPreassure+3
  3616  0575  1683               	bsf	3,5	;RP0=1, select bank1
  3617  0576  1303               	bcf	3,6	;RP1=0, select bank1
  3618  0577  0820               	movf	BMP180_readPreassure@B3^(0+128),w
  3619  0578  1283               	bcf	3,5	;RP0=0, select bank0
  3620  0579  1303               	bcf	3,6	;RP1=0, select bank0
  3621  057A  02C6               	subwf	??_BMP180_readPreassure,f
  3622  057B  1683               	bsf	3,5	;RP0=1, select bank1
  3623  057C  1303               	bcf	3,6	;RP1=0, select bank1
  3624  057D  0821               	movf	(BMP180_readPreassure@B3+1)^(0+128),w
  3625  057E  1C03               	skipc
  3626  057F  0F21               	incfsz	(BMP180_readPreassure@B3+1)^(0+128),w
  3627  0580  2D82               	goto	u1721
  3628  0581  2D85               	goto	u1722
  3629  0582                     u1721:
  3630  0582  1283               	bcf	3,5	;RP0=0, select bank0
  3631  0583  1303               	bcf	3,6	;RP1=0, select bank0
  3632  0584  02C7               	subwf	??_BMP180_readPreassure+1,f
  3633  0585                     u1722:
  3634  0585  1683               	bsf	3,5	;RP0=1, select bank1
  3635  0586  1303               	bcf	3,6	;RP1=0, select bank1
  3636  0587  0822               	movf	(BMP180_readPreassure@B3+2)^(0+128),w
  3637  0588  1C03               	skipc
  3638  0589  0F22               	incfsz	(BMP180_readPreassure@B3+2)^(0+128),w
  3639  058A  2D8C               	goto	u1723
  3640  058B  2D8F               	goto	u1724
  3641  058C                     u1723:
  3642  058C  1283               	bcf	3,5	;RP0=0, select bank0
  3643  058D  1303               	bcf	3,6	;RP1=0, select bank0
  3644  058E  02C8               	subwf	??_BMP180_readPreassure+2,f
  3645  058F                     u1724:
  3646  058F  1683               	bsf	3,5	;RP0=1, select bank1
  3647  0590  1303               	bcf	3,6	;RP1=0, select bank1
  3648  0591  0823               	movf	(BMP180_readPreassure@B3+3)^(0+128),w
  3649  0592  1C03               	skipc
  3650  0593  0F23               	incfsz	(BMP180_readPreassure@B3+3)^(0+128),w
  3651  0594  2D96               	goto	u1725
  3652  0595  2D99               	goto	u1726
  3653  0596                     u1725:
  3654  0596  1283               	bcf	3,5	;RP0=0, select bank0
  3655  0597  1303               	bcf	3,6	;RP1=0, select bank0
  3656  0598  02C9               	subwf	??_BMP180_readPreassure+3,f
  3657  0599                     u1726:
  3658  0599  1683               	bsf	3,5	;RP0=1, select bank1
  3659  059A  1303               	bcf	3,6	;RP1=0, select bank1
  3660  059B  1283               	bcf	3,5	;RP0=0, select bank0
  3661  059C  1303               	bcf	3,6	;RP1=0, select bank0
  3662  059D  0849               	movf	??_BMP180_readPreassure+3,w
  3663  059E  00F3               	movwf	___lmul@multiplier+3
  3664  059F  0848               	movf	??_BMP180_readPreassure+2,w
  3665  05A0  00F2               	movwf	___lmul@multiplier+2
  3666  05A1  0847               	movf	??_BMP180_readPreassure+1,w
  3667  05A2  00F1               	movwf	___lmul@multiplier+1
  3668  05A3  0846               	movf	??_BMP180_readPreassure,w
  3669  05A4  00F0               	movwf	___lmul@multiplier
  3670  05A5  3000               	movlw	0
  3671  05A6  00F7               	movwf	___lmul@multiplicand+3
  3672  05A7  3000               	movlw	0
  3673  05A8  00F6               	movwf	___lmul@multiplicand+2
  3674  05A9  30C3               	movlw	195
  3675  05AA  00F5               	movwf	___lmul@multiplicand+1
  3676  05AB  3050               	movlw	80
  3677  05AC  00F4               	movwf	___lmul@multiplicand
  3678  05AD  120A  158A  2170  120A  118A  	fcall	___lmul
  3679  05B2  0873               	movf	?___lmul+3,w
  3680  05B3  1683               	bsf	3,5	;RP0=1, select bank1
  3681  05B4  1303               	bcf	3,6	;RP1=0, select bank1
  3682  05B5  00BA               	movwf	(BMP180_readPreassure@B7+3)^(0+128)
  3683  05B6  0872               	movf	?___lmul+2,w
  3684  05B7  00B9               	movwf	(BMP180_readPreassure@B7+2)^(0+128)
  3685  05B8  0871               	movf	?___lmul+1,w
  3686  05B9  00B8               	movwf	(BMP180_readPreassure@B7+1)^(0+128)
  3687  05BA  0870               	movf	?___lmul,w
  3688  05BB  00B7               	movwf	BMP180_readPreassure@B7^(0+128)
  3689  05BC                     l1826:
  3690                           
  3691                           ;BMP180.c: 110:     if(B7 < 0x80000000){
  3692  05BC  3080               	movlw	128
  3693  05BD  023A               	subwf	(BMP180_readPreassure@B7+3)^(0+128),w
  3694  05BE  1D03               	skipz
  3695  05BF  2DCC               	goto	u1733
  3696  05C0  3000               	movlw	0
  3697  05C1  0239               	subwf	(BMP180_readPreassure@B7+2)^(0+128),w
  3698  05C2  1D03               	skipz
  3699  05C3  2DCC               	goto	u1733
  3700  05C4  3000               	movlw	0
  3701  05C5  0238               	subwf	(BMP180_readPreassure@B7+1)^(0+128),w
  3702  05C6  1D03               	skipz
  3703  05C7  2DCC               	goto	u1733
  3704  05C8  3000               	movlw	0
  3705  05C9  0237               	subwf	BMP180_readPreassure@B7^(0+128),w
  3706  05CA  1D03               	skipz
  3707  05CB  2DCC               	goto	u1733
  3708  05CC                     u1733:
  3709  05CC  1803               	btfsc	3,0
  3710  05CD  2DCF               	goto	u1731
  3711  05CE  2DD0               	goto	u1730
  3712  05CF                     u1731:
  3713  05CF  2DF1               	goto	l1830
  3714  05D0                     u1730:
  3715  05D0                     l1828:
  3716                           
  3717                           ;BMP180.c: 111:         p = (long)((B7*2)/B4);
  3718  05D0  0832               	movf	(BMP180_readPreassure@B4+3)^(0+128),w
  3719  05D1  00F3               	movwf	___lldiv@divisor+3
  3720  05D2  0831               	movf	(BMP180_readPreassure@B4+2)^(0+128),w
  3721  05D3  00F2               	movwf	___lldiv@divisor+2
  3722  05D4  0830               	movf	(BMP180_readPreassure@B4+1)^(0+128),w
  3723  05D5  00F1               	movwf	___lldiv@divisor+1
  3724  05D6  082F               	movf	BMP180_readPreassure@B4^(0+128),w
  3725  05D7  00F0               	movwf	___lldiv@divisor
  3726  05D8  1003               	clrc
  3727  05D9  0D37               	rlf	BMP180_readPreassure@B7^(0+128),w
  3728  05DA  00F4               	movwf	___lldiv@dividend
  3729  05DB  0D38               	rlf	(BMP180_readPreassure@B7+1)^(0+128),w
  3730  05DC  00F5               	movwf	___lldiv@dividend+1
  3731  05DD  0D39               	rlf	(BMP180_readPreassure@B7+2)^(0+128),w
  3732  05DE  00F6               	movwf	___lldiv@dividend+2
  3733  05DF  0D3A               	rlf	(BMP180_readPreassure@B7+3)^(0+128),w
  3734  05E0  00F7               	movwf	___lldiv@dividend+3
  3735  05E1  120A  158A  220C  120A  118A  	fcall	___lldiv
  3736  05E6  0873               	movf	?___lldiv+3,w
  3737  05E7  1683               	bsf	3,5	;RP0=1, select bank1
  3738  05E8  1303               	bcf	3,6	;RP1=0, select bank1
  3739  05E9  00CA               	movwf	(BMP180_readPreassure@p+3)^(0+128)
  3740  05EA  0872               	movf	?___lldiv+2,w
  3741  05EB  00C9               	movwf	(BMP180_readPreassure@p+2)^(0+128)
  3742  05EC  0871               	movf	?___lldiv+1,w
  3743  05ED  00C8               	movwf	(BMP180_readPreassure@p+1)^(0+128)
  3744  05EE  0870               	movf	?___lldiv,w
  3745  05EF  00C7               	movwf	BMP180_readPreassure@p^(0+128)
  3746                           
  3747                           ;BMP180.c: 112:     }
  3748  05F0  2E11               	goto	l173
  3749  05F1                     l1830:
  3750                           
  3751                           ;BMP180.c: 114:         p = (long)((B7/B4)*2);
  3752  05F1  0832               	movf	(BMP180_readPreassure@B4+3)^(0+128),w
  3753  05F2  00F3               	movwf	___lldiv@divisor+3
  3754  05F3  0831               	movf	(BMP180_readPreassure@B4+2)^(0+128),w
  3755  05F4  00F2               	movwf	___lldiv@divisor+2
  3756  05F5  0830               	movf	(BMP180_readPreassure@B4+1)^(0+128),w
  3757  05F6  00F1               	movwf	___lldiv@divisor+1
  3758  05F7  082F               	movf	BMP180_readPreassure@B4^(0+128),w
  3759  05F8  00F0               	movwf	___lldiv@divisor
  3760  05F9  083A               	movf	(BMP180_readPreassure@B7+3)^(0+128),w
  3761  05FA  00F7               	movwf	___lldiv@dividend+3
  3762  05FB  0839               	movf	(BMP180_readPreassure@B7+2)^(0+128),w
  3763  05FC  00F6               	movwf	___lldiv@dividend+2
  3764  05FD  0838               	movf	(BMP180_readPreassure@B7+1)^(0+128),w
  3765  05FE  00F5               	movwf	___lldiv@dividend+1
  3766  05FF  0837               	movf	BMP180_readPreassure@B7^(0+128),w
  3767  0600  00F4               	movwf	___lldiv@dividend
  3768  0601  120A  158A  220C  120A  118A  	fcall	___lldiv
  3769  0606  1003               	clrc
  3770  0607  0D70               	rlf	?___lldiv,w
  3771  0608  1683               	bsf	3,5	;RP0=1, select bank1
  3772  0609  1303               	bcf	3,6	;RP1=0, select bank1
  3773  060A  00C7               	movwf	BMP180_readPreassure@p^(0+128)
  3774  060B  0D71               	rlf	?___lldiv+1,w
  3775  060C  00C8               	movwf	(BMP180_readPreassure@p+1)^(0+128)
  3776  060D  0D72               	rlf	?___lldiv+2,w
  3777  060E  00C9               	movwf	(BMP180_readPreassure@p+2)^(0+128)
  3778  060F  0D73               	rlf	?___lldiv+3,w
  3779  0610  00CA               	movwf	(BMP180_readPreassure@p+3)^(0+128)
  3780  0611                     l173:	
  3781                           ;BMP180.c: 115:     }
  3782                           
  3783                           
  3784                           ;BMP180.c: 117:     x1 = (p/256)*(p/256);
  3785  0611  3000               	movlw	0
  3786  0612  1283               	bcf	3,5	;RP0=0, select bank0
  3787  0613  1303               	bcf	3,6	;RP1=0, select bank0
  3788  0614  00A3               	movwf	___aldiv@divisor+3
  3789  0615  3000               	movlw	0
  3790  0616  00A2               	movwf	___aldiv@divisor+2
  3791  0617  3001               	movlw	1
  3792  0618  00A1               	movwf	___aldiv@divisor+1
  3793  0619  3000               	movlw	0
  3794  061A  00A0               	movwf	___aldiv@divisor
  3795  061B  1683               	bsf	3,5	;RP0=1, select bank1
  3796  061C  1303               	bcf	3,6	;RP1=0, select bank1
  3797  061D  084A               	movf	(BMP180_readPreassure@p+3)^(0+128),w
  3798  061E  1283               	bcf	3,5	;RP0=0, select bank0
  3799  061F  1303               	bcf	3,6	;RP1=0, select bank0
  3800  0620  00A7               	movwf	___aldiv@dividend+3
  3801  0621  1683               	bsf	3,5	;RP0=1, select bank1
  3802  0622  1303               	bcf	3,6	;RP1=0, select bank1
  3803  0623  0849               	movf	(BMP180_readPreassure@p+2)^(0+128),w
  3804  0624  1283               	bcf	3,5	;RP0=0, select bank0
  3805  0625  1303               	bcf	3,6	;RP1=0, select bank0
  3806  0626  00A6               	movwf	___aldiv@dividend+2
  3807  0627  1683               	bsf	3,5	;RP0=1, select bank1
  3808  0628  1303               	bcf	3,6	;RP1=0, select bank1
  3809  0629  0848               	movf	(BMP180_readPreassure@p+1)^(0+128),w
  3810  062A  1283               	bcf	3,5	;RP0=0, select bank0
  3811  062B  1303               	bcf	3,6	;RP1=0, select bank0
  3812  062C  00A5               	movwf	___aldiv@dividend+1
  3813  062D  1683               	bsf	3,5	;RP0=1, select bank1
  3814  062E  1303               	bcf	3,6	;RP1=0, select bank1
  3815  062F  0847               	movf	BMP180_readPreassure@p^(0+128),w
  3816  0630  1283               	bcf	3,5	;RP0=0, select bank0
  3817  0631  1303               	bcf	3,6	;RP1=0, select bank0
  3818  0632  00A4               	movwf	___aldiv@dividend
  3819  0633  120A  158A  2307  120A  118A  	fcall	___aldiv
  3820  0638  1283               	bcf	3,5	;RP0=0, select bank0
  3821  0639  1303               	bcf	3,6	;RP1=0, select bank0
  3822  063A  0823               	movf	?___aldiv+3,w
  3823  063B  00F3               	movwf	___lmul@multiplier+3
  3824  063C  0822               	movf	?___aldiv+2,w
  3825  063D  00F2               	movwf	___lmul@multiplier+2
  3826  063E  0821               	movf	?___aldiv+1,w
  3827  063F  00F1               	movwf	___lmul@multiplier+1
  3828  0640  0820               	movf	?___aldiv,w
  3829  0641  00F0               	movwf	___lmul@multiplier
  3830  0642  3000               	movlw	0
  3831  0643  00A3               	movwf	___aldiv@divisor+3
  3832  0644  3000               	movlw	0
  3833  0645  00A2               	movwf	___aldiv@divisor+2
  3834  0646  3001               	movlw	1
  3835  0647  00A1               	movwf	___aldiv@divisor+1
  3836  0648  3000               	movlw	0
  3837  0649  00A0               	movwf	___aldiv@divisor
  3838  064A  1683               	bsf	3,5	;RP0=1, select bank1
  3839  064B  1303               	bcf	3,6	;RP1=0, select bank1
  3840  064C  084A               	movf	(BMP180_readPreassure@p+3)^(0+128),w
  3841  064D  1283               	bcf	3,5	;RP0=0, select bank0
  3842  064E  1303               	bcf	3,6	;RP1=0, select bank0
  3843  064F  00A7               	movwf	___aldiv@dividend+3
  3844  0650  1683               	bsf	3,5	;RP0=1, select bank1
  3845  0651  1303               	bcf	3,6	;RP1=0, select bank1
  3846  0652  0849               	movf	(BMP180_readPreassure@p+2)^(0+128),w
  3847  0653  1283               	bcf	3,5	;RP0=0, select bank0
  3848  0654  1303               	bcf	3,6	;RP1=0, select bank0
  3849  0655  00A6               	movwf	___aldiv@dividend+2
  3850  0656  1683               	bsf	3,5	;RP0=1, select bank1
  3851  0657  1303               	bcf	3,6	;RP1=0, select bank1
  3852  0658  0848               	movf	(BMP180_readPreassure@p+1)^(0+128),w
  3853  0659  1283               	bcf	3,5	;RP0=0, select bank0
  3854  065A  1303               	bcf	3,6	;RP1=0, select bank0
  3855  065B  00A5               	movwf	___aldiv@dividend+1
  3856  065C  1683               	bsf	3,5	;RP0=1, select bank1
  3857  065D  1303               	bcf	3,6	;RP1=0, select bank1
  3858  065E  0847               	movf	BMP180_readPreassure@p^(0+128),w
  3859  065F  1283               	bcf	3,5	;RP0=0, select bank0
  3860  0660  1303               	bcf	3,6	;RP1=0, select bank0
  3861  0661  00A4               	movwf	___aldiv@dividend
  3862  0662  120A  158A  2307  120A  118A  	fcall	___aldiv
  3863  0667  1283               	bcf	3,5	;RP0=0, select bank0
  3864  0668  1303               	bcf	3,6	;RP1=0, select bank0
  3865  0669  0823               	movf	?___aldiv+3,w
  3866  066A  00F7               	movwf	___lmul@multiplicand+3
  3867  066B  0822               	movf	?___aldiv+2,w
  3868  066C  00F6               	movwf	___lmul@multiplicand+2
  3869  066D  0821               	movf	?___aldiv+1,w
  3870  066E  00F5               	movwf	___lmul@multiplicand+1
  3871  066F  0820               	movf	?___aldiv,w
  3872  0670  00F4               	movwf	___lmul@multiplicand
  3873  0671  120A  158A  2170  120A  118A  	fcall	___lmul
  3874  0676  0873               	movf	?___lmul+3,w
  3875  0677  1683               	bsf	3,5	;RP0=1, select bank1
  3876  0678  1303               	bcf	3,6	;RP1=0, select bank1
  3877  0679  00C6               	movwf	(BMP180_readPreassure@x1+3)^(0+128)
  3878  067A  0872               	movf	?___lmul+2,w
  3879  067B  00C5               	movwf	(BMP180_readPreassure@x1+2)^(0+128)
  3880  067C  0871               	movf	?___lmul+1,w
  3881  067D  00C4               	movwf	(BMP180_readPreassure@x1+1)^(0+128)
  3882  067E  0870               	movf	?___lmul,w
  3883  067F  00C3               	movwf	BMP180_readPreassure@x1^(0+128)
  3884                           
  3885                           ;BMP180.c: 118:     x1 = (x1 * 3038)/65536;
  3886  0680  3000               	movlw	0
  3887  0681  1283               	bcf	3,5	;RP0=0, select bank0
  3888  0682  1303               	bcf	3,6	;RP1=0, select bank0
  3889  0683  00A3               	movwf	___aldiv@divisor+3
  3890  0684  3001               	movlw	1
  3891  0685  00A2               	movwf	___aldiv@divisor+2
  3892  0686  3000               	movlw	0
  3893  0687  00A1               	movwf	___aldiv@divisor+1
  3894  0688  3000               	movlw	0
  3895  0689  00A0               	movwf	___aldiv@divisor
  3896  068A  1683               	bsf	3,5	;RP0=1, select bank1
  3897  068B  1303               	bcf	3,6	;RP1=0, select bank1
  3898  068C  0846               	movf	(BMP180_readPreassure@x1+3)^(0+128),w
  3899  068D  00F3               	movwf	___lmul@multiplier+3
  3900  068E  0845               	movf	(BMP180_readPreassure@x1+2)^(0+128),w
  3901  068F  00F2               	movwf	___lmul@multiplier+2
  3902  0690  0844               	movf	(BMP180_readPreassure@x1+1)^(0+128),w
  3903  0691  00F1               	movwf	___lmul@multiplier+1
  3904  0692  0843               	movf	BMP180_readPreassure@x1^(0+128),w
  3905  0693  00F0               	movwf	___lmul@multiplier
  3906  0694  3000               	movlw	0
  3907  0695  00F7               	movwf	___lmul@multiplicand+3
  3908  0696  3000               	movlw	0
  3909  0697  00F6               	movwf	___lmul@multiplicand+2
  3910  0698  300B               	movlw	11
  3911  0699  00F5               	movwf	___lmul@multiplicand+1
  3912  069A  30DE               	movlw	222
  3913  069B  00F4               	movwf	___lmul@multiplicand
  3914  069C  120A  158A  2170  120A  118A  	fcall	___lmul
  3915  06A1  0873               	movf	?___lmul+3,w
  3916  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  3917  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  3918  06A4  00A7               	movwf	___aldiv@dividend+3
  3919  06A5  0872               	movf	?___lmul+2,w
  3920  06A6  00A6               	movwf	___aldiv@dividend+2
  3921  06A7  0871               	movf	?___lmul+1,w
  3922  06A8  00A5               	movwf	___aldiv@dividend+1
  3923  06A9  0870               	movf	?___lmul,w
  3924  06AA  00A4               	movwf	___aldiv@dividend
  3925  06AB  120A  158A  2307  120A  118A  	fcall	___aldiv
  3926  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  3927  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  3928  06B2  0823               	movf	?___aldiv+3,w
  3929  06B3  1683               	bsf	3,5	;RP0=1, select bank1
  3930  06B4  1303               	bcf	3,6	;RP1=0, select bank1
  3931  06B5  00C6               	movwf	(BMP180_readPreassure@x1+3)^(0+128)
  3932  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  3933  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  3934  06B8  0822               	movf	?___aldiv+2,w
  3935  06B9  1683               	bsf	3,5	;RP0=1, select bank1
  3936  06BA  1303               	bcf	3,6	;RP1=0, select bank1
  3937  06BB  00C5               	movwf	(BMP180_readPreassure@x1+2)^(0+128)
  3938  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  3939  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  3940  06BE  0821               	movf	?___aldiv+1,w
  3941  06BF  1683               	bsf	3,5	;RP0=1, select bank1
  3942  06C0  1303               	bcf	3,6	;RP1=0, select bank1
  3943  06C1  00C4               	movwf	(BMP180_readPreassure@x1+1)^(0+128)
  3944  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  3945  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  3946  06C4  0820               	movf	?___aldiv,w
  3947  06C5  1683               	bsf	3,5	;RP0=1, select bank1
  3948  06C6  1303               	bcf	3,6	;RP1=0, select bank1
  3949  06C7  00C3               	movwf	BMP180_readPreassure@x1^(0+128)
  3950                           
  3951                           ;BMP180.c: 119:     x2 = (-7357 * p)/ 65536;
  3952  06C8  3000               	movlw	0
  3953  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  3954  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  3955  06CB  00A3               	movwf	___aldiv@divisor+3
  3956  06CC  3001               	movlw	1
  3957  06CD  00A2               	movwf	___aldiv@divisor+2
  3958  06CE  3000               	movlw	0
  3959  06CF  00A1               	movwf	___aldiv@divisor+1
  3960  06D0  3000               	movlw	0
  3961  06D1  00A0               	movwf	___aldiv@divisor
  3962  06D2  1683               	bsf	3,5	;RP0=1, select bank1
  3963  06D3  1303               	bcf	3,6	;RP1=0, select bank1
  3964  06D4  084A               	movf	(BMP180_readPreassure@p+3)^(0+128),w
  3965  06D5  00F3               	movwf	___lmul@multiplier+3
  3966  06D6  0849               	movf	(BMP180_readPreassure@p+2)^(0+128),w
  3967  06D7  00F2               	movwf	___lmul@multiplier+2
  3968  06D8  0848               	movf	(BMP180_readPreassure@p+1)^(0+128),w
  3969  06D9  00F1               	movwf	___lmul@multiplier+1
  3970  06DA  0847               	movf	BMP180_readPreassure@p^(0+128),w
  3971  06DB  00F0               	movwf	___lmul@multiplier
  3972  06DC  30FF               	movlw	255
  3973  06DD  00F7               	movwf	___lmul@multiplicand+3
  3974  06DE  30FF               	movlw	255
  3975  06DF  00F6               	movwf	___lmul@multiplicand+2
  3976  06E0  30E3               	movlw	227
  3977  06E1  00F5               	movwf	___lmul@multiplicand+1
  3978  06E2  3043               	movlw	67
  3979  06E3  00F4               	movwf	___lmul@multiplicand
  3980  06E4  120A  158A  2170  120A  118A  	fcall	___lmul
  3981  06E9  0873               	movf	?___lmul+3,w
  3982  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  3983  06EB  1303               	bcf	3,6	;RP1=0, select bank0
  3984  06EC  00A7               	movwf	___aldiv@dividend+3
  3985  06ED  0872               	movf	?___lmul+2,w
  3986  06EE  00A6               	movwf	___aldiv@dividend+2
  3987  06EF  0871               	movf	?___lmul+1,w
  3988  06F0  00A5               	movwf	___aldiv@dividend+1
  3989  06F1  0870               	movf	?___lmul,w
  3990  06F2  00A4               	movwf	___aldiv@dividend
  3991  06F3  120A  158A  2307  120A  118A  	fcall	___aldiv
  3992  06F8  1283               	bcf	3,5	;RP0=0, select bank0
  3993  06F9  1303               	bcf	3,6	;RP1=0, select bank0
  3994  06FA  0823               	movf	?___aldiv+3,w
  3995  06FB  1683               	bsf	3,5	;RP0=1, select bank1
  3996  06FC  1303               	bcf	3,6	;RP1=0, select bank1
  3997  06FD  00C2               	movwf	(BMP180_readPreassure@x2+3)^(0+128)
  3998  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  3999  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  4000  0700  0822               	movf	?___aldiv+2,w
  4001  0701  1683               	bsf	3,5	;RP0=1, select bank1
  4002  0702  1303               	bcf	3,6	;RP1=0, select bank1
  4003  0703  00C1               	movwf	(BMP180_readPreassure@x2+2)^(0+128)
  4004  0704  1283               	bcf	3,5	;RP0=0, select bank0
  4005  0705  1303               	bcf	3,6	;RP1=0, select bank0
  4006  0706  0821               	movf	?___aldiv+1,w
  4007  0707  1683               	bsf	3,5	;RP0=1, select bank1
  4008  0708  1303               	bcf	3,6	;RP1=0, select bank1
  4009  0709  00C0               	movwf	(BMP180_readPreassure@x2+1)^(0+128)
  4010  070A  1283               	bcf	3,5	;RP0=0, select bank0
  4011  070B  1303               	bcf	3,6	;RP1=0, select bank0
  4012  070C  0820               	movf	?___aldiv,w
  4013  070D  1683               	bsf	3,5	;RP0=1, select bank1
  4014  070E  1303               	bcf	3,6	;RP1=0, select bank1
  4015  070F  00BF               	movwf	BMP180_readPreassure@x2^(0+128)
  4016                           
  4017                           ;BMP180.c: 120:     p = p + (x1 + x2 +3791)/16;
  4018  0710  3000               	movlw	0
  4019  0711  1283               	bcf	3,5	;RP0=0, select bank0
  4020  0712  1303               	bcf	3,6	;RP1=0, select bank0
  4021  0713  00A3               	movwf	___aldiv@divisor+3
  4022  0714  3000               	movlw	0
  4023  0715  00A2               	movwf	___aldiv@divisor+2
  4024  0716  3000               	movlw	0
  4025  0717  00A1               	movwf	___aldiv@divisor+1
  4026  0718  3010               	movlw	16
  4027  0719  00A0               	movwf	___aldiv@divisor
  4028  071A  30CF               	movlw	207
  4029  071B  00C6               	movwf	??_BMP180_readPreassure
  4030  071C  300E               	movlw	14
  4031  071D  00C7               	movwf	??_BMP180_readPreassure+1
  4032  071E  3000               	movlw	0
  4033  071F  00C8               	movwf	??_BMP180_readPreassure+2
  4034  0720  3000               	movlw	0
  4035  0721  00C9               	movwf	??_BMP180_readPreassure+3
  4036  0722  1683               	bsf	3,5	;RP0=1, select bank1
  4037  0723  1303               	bcf	3,6	;RP1=0, select bank1
  4038  0724  0843               	movf	BMP180_readPreassure@x1^(0+128),w
  4039  0725  073F               	addwf	BMP180_readPreassure@x2^(0+128),w
  4040  0726  1283               	bcf	3,5	;RP0=0, select bank0
  4041  0727  1303               	bcf	3,6	;RP1=0, select bank0
  4042  0728  00CA               	movwf	??_BMP180_readPreassure+4
  4043  0729  3000               	movlw	0
  4044  072A  1803               	skipnc
  4045  072B  3001               	movlw	1
  4046  072C  1683               	bsf	3,5	;RP0=1, select bank1
  4047  072D  1303               	bcf	3,6	;RP1=0, select bank1
  4048  072E  0744               	addwf	(BMP180_readPreassure@x1+1)^(0+128),w
  4049  072F  1283               	bcf	3,5	;RP0=0, select bank0
  4050  0730  1303               	bcf	3,6	;RP1=0, select bank0
  4051  0731  01CC               	clrf	??_BMP180_readPreassure+6
  4052  0732  1803               	skipnc
  4053  0733  0ACC               	incf	??_BMP180_readPreassure+6,f
  4054  0734  1683               	bsf	3,5	;RP0=1, select bank1
  4055  0735  1303               	bcf	3,6	;RP1=0, select bank1
  4056  0736  0740               	addwf	(BMP180_readPreassure@x2+1)^(0+128),w
  4057  0737  1283               	bcf	3,5	;RP0=0, select bank0
  4058  0738  1303               	bcf	3,6	;RP1=0, select bank0
  4059  0739  00CB               	movwf	??_BMP180_readPreassure+5
  4060  073A  1803               	skipnc
  4061  073B  0ACC               	incf	??_BMP180_readPreassure+6,f
  4062  073C  1683               	bsf	3,5	;RP0=1, select bank1
  4063  073D  1303               	bcf	3,6	;RP1=0, select bank1
  4064  073E  0845               	movf	(BMP180_readPreassure@x1+2)^(0+128),w
  4065  073F  1283               	bcf	3,5	;RP0=0, select bank0
  4066  0740  1303               	bcf	3,6	;RP1=0, select bank0
  4067  0741  074C               	addwf	??_BMP180_readPreassure+6,w
  4068  0742  01CD               	clrf	??_BMP180_readPreassure+7
  4069  0743  1803               	skipnc
  4070  0744  0ACD               	incf	??_BMP180_readPreassure+7,f
  4071  0745  1683               	bsf	3,5	;RP0=1, select bank1
  4072  0746  1303               	bcf	3,6	;RP1=0, select bank1
  4073  0747  0741               	addwf	(BMP180_readPreassure@x2+2)^(0+128),w
  4074  0748  1283               	bcf	3,5	;RP0=0, select bank0
  4075  0749  1303               	bcf	3,6	;RP1=0, select bank0
  4076  074A  00CC               	movwf	??_BMP180_readPreassure+6
  4077  074B  1803               	skipnc
  4078  074C  0ACD               	incf	??_BMP180_readPreassure+7,f
  4079  074D  1683               	bsf	3,5	;RP0=1, select bank1
  4080  074E  1303               	bcf	3,6	;RP1=0, select bank1
  4081  074F  0846               	movf	(BMP180_readPreassure@x1+3)^(0+128),w
  4082  0750  1283               	bcf	3,5	;RP0=0, select bank0
  4083  0751  1303               	bcf	3,6	;RP1=0, select bank0
  4084  0752  074D               	addwf	??_BMP180_readPreassure+7,w
  4085  0753  1683               	bsf	3,5	;RP0=1, select bank1
  4086  0754  1303               	bcf	3,6	;RP1=0, select bank1
  4087  0755  0742               	addwf	(BMP180_readPreassure@x2+3)^(0+128),w
  4088  0756  1283               	bcf	3,5	;RP0=0, select bank0
  4089  0757  1303               	bcf	3,6	;RP1=0, select bank0
  4090  0758  00CD               	movwf	??_BMP180_readPreassure+7
  4091  0759  084A               	movf	??_BMP180_readPreassure+4,w
  4092  075A  07C6               	addwf	??_BMP180_readPreassure,f
  4093  075B  084B               	movf	??_BMP180_readPreassure+5,w
  4094  075C  1803               	skipnc
  4095  075D  0F4B               	incfsz	??_BMP180_readPreassure+5,w
  4096  075E  2F60               	goto	u1740
  4097  075F  2F61               	goto	u1741
  4098  0760                     u1740:
  4099  0760  07C7               	addwf	??_BMP180_readPreassure+1,f
  4100  0761                     u1741:
  4101  0761  084C               	movf	??_BMP180_readPreassure+6,w
  4102  0762  1803               	skipnc
  4103  0763  0F4C               	incfsz	??_BMP180_readPreassure+6,w
  4104  0764  2F66               	goto	u1742
  4105  0765  2F67               	goto	u1743
  4106  0766                     u1742:
  4107  0766  07C8               	addwf	??_BMP180_readPreassure+2,f
  4108  0767                     u1743:
  4109  0767  084D               	movf	??_BMP180_readPreassure+7,w
  4110  0768  1803               	skipnc
  4111  0769  0A4D               	incf	??_BMP180_readPreassure+7,w
  4112  076A  07C9               	addwf	??_BMP180_readPreassure+3,f
  4113  076B  0849               	movf	??_BMP180_readPreassure+3,w
  4114  076C  00A7               	movwf	___aldiv@dividend+3
  4115  076D  0848               	movf	??_BMP180_readPreassure+2,w
  4116  076E  00A6               	movwf	___aldiv@dividend+2
  4117  076F  0847               	movf	??_BMP180_readPreassure+1,w
  4118  0770  00A5               	movwf	___aldiv@dividend+1
  4119  0771  0846               	movf	??_BMP180_readPreassure,w
  4120  0772  00A4               	movwf	___aldiv@dividend
  4121  0773  120A  158A  2307  120A  118A  	fcall	___aldiv
  4122  0778  1283               	bcf	3,5	;RP0=0, select bank0
  4123  0779  1303               	bcf	3,6	;RP1=0, select bank0
  4124  077A  0820               	movf	?___aldiv,w
  4125  077B  1683               	bsf	3,5	;RP0=1, select bank1
  4126  077C  1303               	bcf	3,6	;RP1=0, select bank1
  4127  077D  0747               	addwf	BMP180_readPreassure@p^(0+128),w
  4128  077E  1283               	bcf	3,5	;RP0=0, select bank0
  4129  077F  1303               	bcf	3,6	;RP1=0, select bank0
  4130  0780  00CE               	movwf	??_BMP180_readPreassure+8
  4131  0781  3000               	movlw	0
  4132  0782  1803               	skipnc
  4133  0783  3001               	movlw	1
  4134  0784  0721               	addwf	?___aldiv+1,w
  4135  0785  01D0               	clrf	??_BMP180_readPreassure+10
  4136  0786  1803               	skipnc
  4137  0787  0AD0               	incf	??_BMP180_readPreassure+10,f
  4138  0788  1683               	bsf	3,5	;RP0=1, select bank1
  4139  0789  1303               	bcf	3,6	;RP1=0, select bank1
  4140  078A  0748               	addwf	(BMP180_readPreassure@p+1)^(0+128),w
  4141  078B  1283               	bcf	3,5	;RP0=0, select bank0
  4142  078C  1303               	bcf	3,6	;RP1=0, select bank0
  4143  078D  00CF               	movwf	??_BMP180_readPreassure+9
  4144  078E  1803               	skipnc
  4145  078F  0AD0               	incf	??_BMP180_readPreassure+10,f
  4146  0790  0822               	movf	?___aldiv+2,w
  4147  0791  0750               	addwf	??_BMP180_readPreassure+10,w
  4148  0792  01D1               	clrf	??_BMP180_readPreassure+11
  4149  0793  1803               	skipnc
  4150  0794  0AD1               	incf	??_BMP180_readPreassure+11,f
  4151  0795  1683               	bsf	3,5	;RP0=1, select bank1
  4152  0796  1303               	bcf	3,6	;RP1=0, select bank1
  4153  0797  0749               	addwf	(BMP180_readPreassure@p+2)^(0+128),w
  4154  0798  1283               	bcf	3,5	;RP0=0, select bank0
  4155  0799  1303               	bcf	3,6	;RP1=0, select bank0
  4156  079A  00D0               	movwf	??_BMP180_readPreassure+10
  4157  079B  1803               	skipnc
  4158  079C  0AD1               	incf	??_BMP180_readPreassure+11,f
  4159  079D  0823               	movf	?___aldiv+3,w
  4160  079E  0751               	addwf	??_BMP180_readPreassure+11,w
  4161  079F  1683               	bsf	3,5	;RP0=1, select bank1
  4162  07A0  1303               	bcf	3,6	;RP1=0, select bank1
  4163  07A1  074A               	addwf	(BMP180_readPreassure@p+3)^(0+128),w
  4164  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  4165  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  4166  07A4  00D1               	movwf	??_BMP180_readPreassure+11
  4167  07A5  0851               	movf	??_BMP180_readPreassure+11,w
  4168  07A6  1683               	bsf	3,5	;RP0=1, select bank1
  4169  07A7  1303               	bcf	3,6	;RP1=0, select bank1
  4170  07A8  00CA               	movwf	(BMP180_readPreassure@p+3)^(0+128)
  4171  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  4172  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  4173  07AB  0850               	movf	??_BMP180_readPreassure+10,w
  4174  07AC  1683               	bsf	3,5	;RP0=1, select bank1
  4175  07AD  1303               	bcf	3,6	;RP1=0, select bank1
  4176  07AE  00C9               	movwf	(BMP180_readPreassure@p+2)^(0+128)
  4177  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  4178  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  4179  07B1  084F               	movf	??_BMP180_readPreassure+9,w
  4180  07B2  1683               	bsf	3,5	;RP0=1, select bank1
  4181  07B3  1303               	bcf	3,6	;RP1=0, select bank1
  4182  07B4  00C8               	movwf	(BMP180_readPreassure@p+1)^(0+128)
  4183  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  4184  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  4185  07B7  084E               	movf	??_BMP180_readPreassure+8,w
  4186  07B8  1683               	bsf	3,5	;RP0=1, select bank1
  4187  07B9  1303               	bcf	3,6	;RP1=0, select bank1
  4188  07BA  00C7               	movwf	BMP180_readPreassure@p^(0+128)
  4189  07BB                     l1832:
  4190                           
  4191                           ;BMP180.c: 121:     return p;
  4192  07BB  084A               	movf	(BMP180_readPreassure@p+3)^(0+128),w
  4193  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  4194  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  4195  07BE  00C5               	movwf	?_BMP180_readPreassure+3
  4196  07BF  1683               	bsf	3,5	;RP0=1, select bank1
  4197  07C0  1303               	bcf	3,6	;RP1=0, select bank1
  4198  07C1  0849               	movf	(BMP180_readPreassure@p+2)^(0+128),w
  4199  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  4200  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  4201  07C4  00C4               	movwf	?_BMP180_readPreassure+2
  4202  07C5  1683               	bsf	3,5	;RP0=1, select bank1
  4203  07C6  1303               	bcf	3,6	;RP1=0, select bank1
  4204  07C7  0848               	movf	(BMP180_readPreassure@p+1)^(0+128),w
  4205  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  4206  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  4207  07CA  00C3               	movwf	?_BMP180_readPreassure+1
  4208  07CB  1683               	bsf	3,5	;RP0=1, select bank1
  4209  07CC  1303               	bcf	3,6	;RP1=0, select bank1
  4210  07CD  0847               	movf	BMP180_readPreassure@p^(0+128),w
  4211  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  4212  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  4213  07D0  00C2               	movwf	?_BMP180_readPreassure
  4214  07D1                     l174:
  4215  07D1  0008               	return
  4216  07D2                     __end_of_BMP180_readPreassure:
  4217                           
  4218                           	psect	text9
  4219  0917                     __ptext9:	
  4220 ;; *************** function _printf *****************
  4221 ;; Defined at:
  4222 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\printf.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;  f               1    wreg     PTR const unsigned char 
  4225 ;;		 -> STR_3(10), 
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;  f               1   30[BANK0 ] PTR const unsigned char 
  4228 ;;		 -> STR_3(10), 
  4229 ;;  pb              2   32[BANK0 ] struct __prbuf
  4230 ;;  ap              1   31[BANK0 ] PTR void [1]
  4231 ;;		 -> ?_sprintf(2), ?_printf(2), 
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  2   26[BANK0 ] int 
  4234 ;; Registers used:
  4235 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4241 ;;      Params:         0       4       0       0       0
  4242 ;;      Locals:         0       4       0       0       0
  4243 ;;      Temps:          0       0       0       0       0
  4244 ;;      Totals:         0       8       0       0       0
  4245 ;;Total ram usage:        8 bytes
  4246 ;; Hardware stack levels used:    1
  4247 ;; Hardware stack levels required when called:    2
  4248 ;; This function calls:
  4249 ;;		__doprnt
  4250 ;; This function is called by:
  4251 ;;		_BMP180_readPreassure
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255                           
  4256                           ;psect for function _printf
  4257  0917                     _printf:
  4258                           
  4259                           ;incstack = 0
  4260                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4261                           ;printf@f stored from wreg
  4262  0917  1283               	bcf	3,5	;RP0=0, select bank0
  4263  0918  1303               	bcf	3,6	;RP1=0, select bank0
  4264  0919  00BE               	movwf	printf@f
  4265  091A                     l1538:
  4266  091A  01C0               	clrf	printf@pb
  4267  091B                     l1540:
  4268  091B  3001               	movlw	(low (fp__putch-fpbase))& (0+255)
  4269  091C  00FF               	movwf	btemp+1
  4270  091D  087F               	movf	btemp+1,w
  4271  091E  00C1               	movwf	low ((printf@pb| 0+1))
  4272  091F                     l1542:
  4273  091F  303A               	movlw	(low (?_printf| 0))& (0+255)
  4274  0920  00FF               	movwf	btemp+1
  4275  0921  087F               	movf	btemp+1,w
  4276  0922  00BF               	movwf	printf@ap
  4277  0923                     l1544:
  4278                           
  4279                           ;	Return value of _printf is never used
  4280  0923  083E               	movf	printf@f,w
  4281  0924  00FF               	movwf	btemp+1
  4282  0925  087F               	movf	btemp+1,w
  4283  0926  00AA               	movwf	__doprnt@f
  4284  0927  303F               	movlw	(low (printf@ap| 0))& (0+255)
  4285  0928  00FF               	movwf	btemp+1
  4286  0929  087F               	movf	btemp+1,w
  4287  092A  00AB               	movwf	__doprnt@ap
  4288  092B  3040               	movlw	(low (printf@pb| 0))& (0+255)
  4289  092C  120A  158A  245F  120A  158A  	fcall	__doprnt
  4290  0931                     l746:
  4291  0931  0008               	return
  4292  0932                     __end_of_printf:
  4293                           
  4294                           	psect	text10
  4295  0C5F                     __ptext10:	
  4296 ;; *************** function __doprnt *****************
  4297 ;; Defined at:
  4298 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;  pb              1    wreg     PTR struct __prbuf
  4301 ;;		 -> sprintf@pb(2), printf@pb(2), 
  4302 ;;  f               1   10[BANK0 ] PTR const unsigned char 
  4303 ;;		 -> STR_3(10), STR_2(8), STR_1(8), 
  4304 ;;  ap              1   11[BANK0 ] PTR PTR void 
  4305 ;;		 -> sprintf@ap(1), printf@ap(1), 
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;  pb              1   25[BANK0 ] PTR struct __prbuf
  4308 ;;		 -> sprintf@pb(2), printf@pb(2), 
  4309 ;;  val             4   20[BANK0 ] unsigned long 
  4310 ;;  tmpval          4    0        struct .
  4311 ;;  prec            2   17[BANK0 ] int 
  4312 ;;  cp              2    0        PTR const unsigned char 
  4313 ;;  len             2    0        unsigned int 
  4314 ;;  c               1   24[BANK0 ] unsigned char 
  4315 ;;  flag            1   19[BANK0 ] unsigned char 
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  2   10[BANK0 ] int 
  4318 ;; Registers used:
  4319 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4325 ;;      Params:         0       2       0       0       0
  4326 ;;      Locals:         0       9       0       0       0
  4327 ;;      Temps:          0       5       0       0       0
  4328 ;;      Totals:         0      16       0       0       0
  4329 ;;Total ram usage:       16 bytes
  4330 ;; Hardware stack levels used:    1
  4331 ;; Hardware stack levels required when called:    1
  4332 ;; This function calls:
  4333 ;;		Absolute function
  4334 ;;		___lldiv
  4335 ;;		___llmod
  4336 ;;		_putch
  4337 ;; This function is called by:
  4338 ;;		_printf
  4339 ;;		_sprintf
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           
  4344                           ;psect for function __doprnt
  4345  0C5F                     __doprnt:
  4346                           
  4347                           ;incstack = 0
  4348                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4349                           ;__doprnt@pb stored from wreg
  4350  0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  4351  0C60  1303               	bcf	3,6	;RP1=0, select bank0
  4352  0C61  00B9               	movwf	__doprnt@pb
  4353  0C62                     l1424:
  4354                           
  4355                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 471: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.20\pic\sources\c90\common\doprnt.c: 472: {;C:\Program Files\Microchip\xc8\v2.20
      +                          \pic\sources\c90\common\doprnt.c: 512:  char c;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c90\common\doprnt.c: 517:  int prec;;C:\Program Files\Microchip\xc8\v2.20\pic\s
      +                          ources\c90\common\doprnt.c: 525:  unsigned char flag;;C:\Program Files\Microchip\xc8\v2.
      +                          20\pic\sources\c90\common\doprnt.c: 543:  } tmpval;
  4356  0C62  2DED               	goto	l1490
  4357  0C63                     l1426:
  4358                           
  4359                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  4360  0C63  3025               	movlw	37
  4361  0C64  0638               	xorwf	__doprnt@c,w
  4362  0C65  1903               	btfsc	3,2
  4363  0C66  2C68               	goto	u1031
  4364  0C67  2C69               	goto	u1030
  4365  0C68                     u1031:
  4366  0C68  2C8F               	goto	l1436
  4367  0C69                     u1030:
  4368  0C69                     l1428:
  4369  0C69  0A39               	incf	__doprnt@pb,w
  4370  0C6A  0084               	movwf	4
  4371  0C6B  1383               	bcf	3,7	;select IRP bank0
  4372  0C6C  0800               	movf	0,w
  4373  0C6D  1903               	btfsc	3,2
  4374  0C6E  2C70               	goto	u1041
  4375  0C6F  2C71               	goto	u1040
  4376  0C70                     u1041:
  4377  0C70  2C80               	goto	l1432
  4378  0C71                     u1040:
  4379  0C71                     l1430:
  4380  0C71  0838               	movf	__doprnt@c,w
  4381  0C72  00FF               	movwf	btemp+1
  4382  0C73  087F               	movf	btemp+1,w
  4383  0C74  00F0               	movwf	putch@c
  4384  0C75  0A39               	incf	__doprnt@pb,w
  4385  0C76  0084               	movwf	4
  4386  0C77  0800               	movf	0,w
  4387  0C78  120A  118A  2003  120A  158A  	fcall	fptable
  4388  0C7D  1283               	bcf	3,5	;RP0=0, select bank0
  4389  0C7E  1303               	bcf	3,6	;RP1=0, select bank0
  4390  0C7F  2C62               	goto	l1424
  4391  0C80                     l1432:
  4392  0C80  0838               	movf	__doprnt@c,w
  4393  0C81  00FF               	movwf	btemp+1
  4394  0C82  0839               	movf	__doprnt@pb,w
  4395  0C83  0084               	movwf	4
  4396  0C84  0800               	movf	0,w
  4397  0C85  0084               	movwf	4
  4398  0C86  087F               	movf	btemp+1,w
  4399  0C87  0080               	movwf	0
  4400  0C88                     l1434:
  4401  0C88  3001               	movlw	1
  4402  0C89  00FF               	movwf	btemp+1
  4403  0C8A  0839               	movf	__doprnt@pb,w
  4404  0C8B  0084               	movwf	4
  4405  0C8C  087F               	movf	btemp+1,w
  4406  0C8D  0780               	addwf	0,f
  4407  0C8E  2C62               	goto	l1424
  4408  0C8F                     l1436:
  4409                           
  4410                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  4411  0C8F  01B3               	clrf	__doprnt@flag
  4412  0C90  2C92               	goto	l1440
  4413  0C91                     l764:	
  4414                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 667:   case 'l':
  4415                           
  4416                           
  4417                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 669:    flag |= 0
      +                          x10;
  4418  0C91  1633               	bsf	__doprnt@flag,4
  4419  0C92                     l1440:	
  4420                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 670:    goto loop
      +                          ;
  4421                           
  4422  0C92  3001               	movlw	1
  4423  0C93  07AA               	addwf	__doprnt@f,f
  4424  0C94  30FF               	movlw	-1
  4425  0C95  072A               	addwf	__doprnt@f,w
  4426  0C96  0084               	movwf	4
  4427  0C97  120A  158A  2000  120A  158A  	fcall	stringdir
  4428  0C9C  00B8               	movwf	__doprnt@c
  4429  0C9D  00AC               	movwf	??__doprnt
  4430  0C9E  01AD               	clrf	??__doprnt+1
  4431                           
  4432                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4433                           ; Switch size 1, requested type "simple"
  4434                           ; Number of cases is 1, Range of values is 0 to 0
  4435                           ; switch strategies available:
  4436                           ; Name         Instructions Cycles
  4437                           ; simple_byte            4     3 (average)
  4438                           ; direct_byte           11     8 (fixed)
  4439                           ; jumptable            260     6 (fixed)
  4440                           ;	Chosen strategy is simple_byte
  4441  0C9F  082D               	movf	??__doprnt+1,w
  4442  0CA0  3A00               	xorlw	0	; case 0
  4443  0CA1  1903               	skipnz
  4444  0CA2  2CA4               	goto	l1884
  4445  0CA3  2DED               	goto	l1490
  4446  0CA4                     l1884:
  4447                           
  4448                           ; Switch size 1, requested type "simple"
  4449                           ; Number of cases is 4, Range of values is 0 to 108
  4450                           ; switch strategies available:
  4451                           ; Name         Instructions Cycles
  4452                           ; simple_byte           13     7 (average)
  4453                           ; jumptable            260     6 (fixed)
  4454                           ;	Chosen strategy is simple_byte
  4455  0CA4  082C               	movf	??__doprnt,w
  4456  0CA5  3A00               	xorlw	0	; case 0
  4457  0CA6  1903               	skipnz
  4458  0CA7  2E01               	goto	l1492
  4459  0CA8  3A64               	xorlw	100	; case 100
  4460  0CA9  1903               	skipnz
  4461  0CAA  2CB2               	goto	l767
  4462  0CAB  3A0D               	xorlw	13	; case 105
  4463  0CAC  1903               	skipnz
  4464  0CAD  2CB2               	goto	l767
  4465  0CAE  3A05               	xorlw	5	; case 108
  4466  0CAF  1903               	skipnz
  4467  0CB0  2C91               	goto	l764
  4468  0CB1  2DED               	goto	l1490
  4469  0CB2                     l767:
  4470                           
  4471                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1281:    if(flag & 0x10)
  4472  0CB2  1E33               	btfss	__doprnt@flag,4
  4473  0CB3  2CB5               	goto	u1051
  4474  0CB4  2CB6               	goto	u1050
  4475  0CB5                     u1051:
  4476  0CB5  2CCB               	goto	l1444
  4477  0CB6                     u1050:
  4478  0CB6                     l1442:
  4479                           
  4480                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1282:     val = (
      +                          unsigned long)(*(long *)__va_arg((*(long **)ap), (long)0));
  4481  0CB6  082B               	movf	__doprnt@ap,w
  4482  0CB7  0084               	movwf	4
  4483  0CB8  1383               	bcf	3,7	;select IRP bank0
  4484  0CB9  0800               	movf	0,w
  4485  0CBA  00FF               	movwf	btemp+1
  4486  0CBB  3004               	movlw	4
  4487  0CBC  0780               	addwf	0,f
  4488  0CBD  087F               	movf	btemp+1,w
  4489  0CBE  0084               	movwf	4
  4490  0CBF  0800               	movf	0,w
  4491  0CC0  00B4               	movwf	__doprnt@val
  4492  0CC1  0A84               	incf	4,f
  4493  0CC2  0800               	movf	0,w
  4494  0CC3  00B5               	movwf	__doprnt@val+1
  4495  0CC4  0A84               	incf	4,f
  4496  0CC5  0800               	movf	0,w
  4497  0CC6  00B6               	movwf	__doprnt@val+2
  4498  0CC7  0A84               	incf	4,f
  4499  0CC8  0800               	movf	0,w
  4500  0CC9  00B7               	movwf	__doprnt@val+3
  4501  0CCA  2CE2               	goto	l1446
  4502  0CCB                     l1444:
  4503                           
  4504                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1285:     val = (
      +                          unsigned long)(*(int *)__va_arg((*(int **)ap), (int)0));
  4505  0CCB  082B               	movf	__doprnt@ap,w
  4506  0CCC  0084               	movwf	4
  4507  0CCD  1383               	bcf	3,7	;select IRP bank0
  4508  0CCE  0800               	movf	0,w
  4509  0CCF  00FF               	movwf	btemp+1
  4510  0CD0  3002               	movlw	2
  4511  0CD1  0780               	addwf	0,f
  4512  0CD2  087F               	movf	btemp+1,w
  4513  0CD3  0084               	movwf	4
  4514  0CD4  0800               	movf	0,w
  4515  0CD5  00AC               	movwf	??__doprnt
  4516  0CD6  0A84               	incf	4,f
  4517  0CD7  0800               	movf	0,w
  4518  0CD8  00AD               	movwf	??__doprnt+1
  4519  0CD9  082C               	movf	??__doprnt,w
  4520  0CDA  00B4               	movwf	__doprnt@val
  4521  0CDB  082D               	movf	??__doprnt+1,w
  4522  0CDC  00B5               	movwf	__doprnt@val+1
  4523  0CDD  3000               	movlw	0
  4524  0CDE  1BB5               	btfsc	__doprnt@val+1,7
  4525  0CDF  30FF               	movlw	255
  4526  0CE0  00B6               	movwf	__doprnt@val+2
  4527  0CE1  00B7               	movwf	__doprnt@val+3
  4528  0CE2                     l1446:
  4529                           
  4530                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
  4531  0CE2  1FB7               	btfss	__doprnt@val+3,7
  4532  0CE3  2CE5               	goto	u1061
  4533  0CE4  2CE6               	goto	u1060
  4534  0CE5                     u1061:
  4535  0CE5  2CF5               	goto	l1452
  4536  0CE6                     u1060:
  4537  0CE6                     l1448:
  4538                           
  4539                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  4540  0CE6  3003               	movlw	3
  4541  0CE7  00FF               	movwf	btemp+1
  4542  0CE8  087F               	movf	btemp+1,w
  4543  0CE9  04B3               	iorwf	__doprnt@flag,f
  4544  0CEA                     l1450:
  4545                           
  4546                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  4547  0CEA  09B4               	comf	__doprnt@val,f
  4548  0CEB  09B5               	comf	__doprnt@val+1,f
  4549  0CEC  09B6               	comf	__doprnt@val+2,f
  4550  0CED  09B7               	comf	__doprnt@val+3,f
  4551  0CEE  0AB4               	incf	__doprnt@val,f
  4552  0CEF  1903               	skipnz
  4553  0CF0  0AB5               	incf	__doprnt@val+1,f
  4554  0CF1  1903               	skipnz
  4555  0CF2  0AB6               	incf	__doprnt@val+2,f
  4556  0CF3  1903               	skipnz
  4557  0CF4  0AB7               	incf	__doprnt@val+3,f
  4558  0CF5                     l1452:
  4559                           
  4560                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  4561  0CF5  01B8               	clrf	__doprnt@c
  4562  0CF6  0AB8               	incf	__doprnt@c,f
  4563  0CF7                     l1458:
  4564                           
  4565                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  4566  0CF7  0838               	movf	__doprnt@c,w
  4567  0CF8  00AC               	movwf	??__doprnt
  4568  0CF9  3001               	movlw	1
  4569  0CFA                     u1075:
  4570  0CFA  1003               	clrc
  4571  0CFB  0DAC               	rlf	??__doprnt,f
  4572  0CFC  3EFF               	addlw	-1
  4573  0CFD  1D03               	skipz
  4574  0CFE  2CFA               	goto	u1075
  4575  0CFF  1003               	clrc
  4576  0D00  0D2C               	rlf	??__doprnt,w
  4577  0D01  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4578  0D02  0084               	movwf	4
  4579  0D03  120A  158A  2000  120A  158A  	fcall	stringdir
  4580  0D08  00AD               	movwf	??__doprnt+1
  4581  0D09  120A  158A  2000  120A  158A  	fcall	stringdir
  4582  0D0E  00AE               	movwf	??__doprnt+2
  4583  0D0F  120A  158A  2000  120A  158A  	fcall	stringdir
  4584  0D14  00AF               	movwf	??__doprnt+3
  4585  0D15  120A  158A  2000  120A  158A  	fcall	stringdir
  4586  0D1A  00B0               	movwf	??__doprnt+4
  4587  0D1B  0830               	movf	??__doprnt+4,w
  4588  0D1C  0237               	subwf	__doprnt@val+3,w
  4589  0D1D  1D03               	skipz
  4590  0D1E  2D29               	goto	u1085
  4591  0D1F  082F               	movf	??__doprnt+3,w
  4592  0D20  0236               	subwf	__doprnt@val+2,w
  4593  0D21  1D03               	skipz
  4594  0D22  2D29               	goto	u1085
  4595  0D23  082E               	movf	??__doprnt+2,w
  4596  0D24  0235               	subwf	__doprnt@val+1,w
  4597  0D25  1D03               	skipz
  4598  0D26  2D29               	goto	u1085
  4599  0D27  082D               	movf	??__doprnt+1,w
  4600  0D28  0234               	subwf	__doprnt@val,w
  4601  0D29                     u1085:
  4602  0D29  1803               	skipnc
  4603  0D2A  2D2C               	goto	u1081
  4604  0D2B  2D2D               	goto	u1080
  4605  0D2C                     u1081:
  4606  0D2C  2D2E               	goto	l1462
  4607  0D2D                     u1080:
  4608  0D2D  2D38               	goto	l1466
  4609  0D2E                     l1462:
  4610  0D2E  3001               	movlw	1
  4611  0D2F  00FF               	movwf	btemp+1
  4612  0D30  087F               	movf	btemp+1,w
  4613  0D31  07B8               	addwf	__doprnt@c,f
  4614  0D32                     l1464:
  4615  0D32  300A               	movlw	10
  4616  0D33  0638               	xorwf	__doprnt@c,w
  4617  0D34  1D03               	btfss	3,2
  4618  0D35  2D37               	goto	u1091
  4619  0D36  2D38               	goto	u1090
  4620  0D37                     u1091:
  4621  0D37  2CF7               	goto	l1458
  4622  0D38                     u1090:
  4623  0D38                     l1466:
  4624                           
  4625                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  4626  0D38  0833               	movf	__doprnt@flag,w
  4627  0D39  3903               	andlw	3
  4628  0D3A  1903               	btfsc	3,2
  4629  0D3B  2D3D               	goto	u1101
  4630  0D3C  2D3E               	goto	u1100
  4631  0D3D                     u1101:
  4632  0D3D  2D61               	goto	l1476
  4633  0D3E                     u1100:
  4634  0D3E                     l1468:
  4635  0D3E  0A39               	incf	__doprnt@pb,w
  4636  0D3F  0084               	movwf	4
  4637  0D40  1383               	bcf	3,7	;select IRP bank0
  4638  0D41  0800               	movf	0,w
  4639  0D42  1903               	btfsc	3,2
  4640  0D43  2D45               	goto	u1111
  4641  0D44  2D46               	goto	u1110
  4642  0D45                     u1111:
  4643  0D45  2D53               	goto	l1472
  4644  0D46                     u1110:
  4645  0D46                     l1470:
  4646  0D46  302D               	movlw	45
  4647  0D47  00FF               	movwf	btemp+1
  4648  0D48  087F               	movf	btemp+1,w
  4649  0D49  00F0               	movwf	putch@c
  4650  0D4A  0A39               	incf	__doprnt@pb,w
  4651  0D4B  0084               	movwf	4
  4652  0D4C  0800               	movf	0,w
  4653  0D4D  120A  118A  2003  120A  158A  	fcall	fptable
  4654  0D52  2D61               	goto	l1476
  4655  0D53                     l1472:
  4656  0D53  302D               	movlw	45
  4657  0D54  00FF               	movwf	btemp+1
  4658  0D55  0839               	movf	__doprnt@pb,w
  4659  0D56  0084               	movwf	4
  4660  0D57  0800               	movf	0,w
  4661  0D58  0084               	movwf	4
  4662  0D59  087F               	movf	btemp+1,w
  4663  0D5A  0080               	movwf	0
  4664  0D5B                     l1474:
  4665  0D5B  3001               	movlw	1
  4666  0D5C  00FF               	movwf	btemp+1
  4667  0D5D  0839               	movf	__doprnt@pb,w
  4668  0D5E  0084               	movwf	4
  4669  0D5F  087F               	movf	btemp+1,w
  4670  0D60  0780               	addwf	0,f
  4671  0D61                     l1476:
  4672                           
  4673                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  4674  0D61  1283               	bcf	3,5	;RP0=0, select bank0
  4675  0D62  1303               	bcf	3,6	;RP1=0, select bank0
  4676  0D63  0838               	movf	__doprnt@c,w
  4677  0D64  00AC               	movwf	??__doprnt
  4678  0D65  01AD               	clrf	??__doprnt+1
  4679  0D66  082C               	movf	??__doprnt,w
  4680  0D67  00B1               	movwf	__doprnt@prec
  4681  0D68  082D               	movf	??__doprnt+1,w
  4682  0D69  00B2               	movwf	__doprnt@prec+1
  4683                           
  4684                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4685  0D6A  2DDD               	goto	l1488
  4686  0D6B                     l1478:
  4687                           
  4688                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  4689  0D6B  3000               	movlw	0
  4690  0D6C  00A3               	movwf	___llmod@divisor+3
  4691  0D6D  3000               	movlw	0
  4692  0D6E  00A2               	movwf	___llmod@divisor+2
  4693  0D6F  3000               	movlw	0
  4694  0D70  00A1               	movwf	___llmod@divisor+1
  4695  0D71  300A               	movlw	10
  4696  0D72  00A0               	movwf	___llmod@divisor
  4697  0D73  0831               	movf	__doprnt@prec,w
  4698  0D74  00AC               	movwf	??__doprnt
  4699  0D75  3001               	movlw	1
  4700  0D76                     u1125:
  4701  0D76  1003               	clrc
  4702  0D77  0DAC               	rlf	??__doprnt,f
  4703  0D78  3EFF               	addlw	-1
  4704  0D79  1D03               	skipz
  4705  0D7A  2D76               	goto	u1125
  4706  0D7B  1003               	clrc
  4707  0D7C  0D2C               	rlf	??__doprnt,w
  4708  0D7D  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4709  0D7E  0084               	movwf	4
  4710  0D7F  120A  158A  2000  120A  158A  	fcall	stringdir
  4711  0D84  00F0               	movwf	___lldiv@divisor
  4712  0D85  120A  158A  2000  120A  158A  	fcall	stringdir
  4713  0D8A  00F1               	movwf	___lldiv@divisor+1
  4714  0D8B  120A  158A  2000  120A  158A  	fcall	stringdir
  4715  0D90  00F2               	movwf	___lldiv@divisor+2
  4716  0D91  120A  158A  2000  120A  158A  	fcall	stringdir
  4717  0D96  00F3               	movwf	___lldiv@divisor+3
  4718  0D97  0837               	movf	__doprnt@val+3,w
  4719  0D98  00F7               	movwf	___lldiv@dividend+3
  4720  0D99  0836               	movf	__doprnt@val+2,w
  4721  0D9A  00F6               	movwf	___lldiv@dividend+2
  4722  0D9B  0835               	movf	__doprnt@val+1,w
  4723  0D9C  00F5               	movwf	___lldiv@dividend+1
  4724  0D9D  0834               	movf	__doprnt@val,w
  4725  0D9E  00F4               	movwf	___lldiv@dividend
  4726  0D9F  120A  158A  220C  120A  158A  	fcall	___lldiv
  4727  0DA4  0873               	movf	?___lldiv+3,w
  4728  0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  4729  0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  4730  0DA7  00A7               	movwf	___llmod@dividend+3
  4731  0DA8  0872               	movf	?___lldiv+2,w
  4732  0DA9  00A6               	movwf	___llmod@dividend+2
  4733  0DAA  0871               	movf	?___lldiv+1,w
  4734  0DAB  00A5               	movwf	___llmod@dividend+1
  4735  0DAC  0870               	movf	?___lldiv,w
  4736  0DAD  00A4               	movwf	___llmod@dividend
  4737  0DAE  120A  158A  21B6  120A  158A  	fcall	___llmod
  4738  0DB3  1283               	bcf	3,5	;RP0=0, select bank0
  4739  0DB4  1303               	bcf	3,6	;RP1=0, select bank0
  4740  0DB5  0820               	movf	?___llmod,w
  4741  0DB6  3E30               	addlw	48
  4742  0DB7  00FF               	movwf	btemp+1
  4743  0DB8  087F               	movf	btemp+1,w
  4744  0DB9  00B8               	movwf	__doprnt@c
  4745  0DBA                     l1480:
  4746  0DBA  0A39               	incf	__doprnt@pb,w
  4747  0DBB  0084               	movwf	4
  4748  0DBC  1383               	bcf	3,7	;select IRP bank0
  4749  0DBD  0800               	movf	0,w
  4750  0DBE  1903               	btfsc	3,2
  4751  0DBF  2DC1               	goto	u1131
  4752  0DC0  2DC2               	goto	u1130
  4753  0DC1                     u1131:
  4754  0DC1  2DCF               	goto	l1484
  4755  0DC2                     u1130:
  4756  0DC2                     l1482:
  4757  0DC2  0838               	movf	__doprnt@c,w
  4758  0DC3  00FF               	movwf	btemp+1
  4759  0DC4  087F               	movf	btemp+1,w
  4760  0DC5  00F0               	movwf	putch@c
  4761  0DC6  0A39               	incf	__doprnt@pb,w
  4762  0DC7  0084               	movwf	4
  4763  0DC8  0800               	movf	0,w
  4764  0DC9  120A  118A  2003  120A  158A  	fcall	fptable
  4765  0DCE  2DDD               	goto	l1488
  4766  0DCF                     l1484:
  4767  0DCF  0838               	movf	__doprnt@c,w
  4768  0DD0  00FF               	movwf	btemp+1
  4769  0DD1  0839               	movf	__doprnt@pb,w
  4770  0DD2  0084               	movwf	4
  4771  0DD3  0800               	movf	0,w
  4772  0DD4  0084               	movwf	4
  4773  0DD5  087F               	movf	btemp+1,w
  4774  0DD6  0080               	movwf	0
  4775  0DD7                     l1486:
  4776  0DD7  3001               	movlw	1
  4777  0DD8  00FF               	movwf	btemp+1
  4778  0DD9  0839               	movf	__doprnt@pb,w
  4779  0DDA  0084               	movwf	4
  4780  0DDB  087F               	movf	btemp+1,w
  4781  0DDC  0780               	addwf	0,f
  4782  0DDD                     l1488:
  4783                           
  4784                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4785  0DDD  30FF               	movlw	255
  4786  0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  4787  0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  4788  0DE0  07B1               	addwf	__doprnt@prec,f
  4789  0DE1  1803               	skipnc
  4790  0DE2  0AB2               	incf	__doprnt@prec+1,f
  4791  0DE3  30FF               	movlw	255
  4792  0DE4  07B2               	addwf	__doprnt@prec+1,f
  4793  0DE5  0A31               	incf	__doprnt@prec,w
  4794  0DE6  1D03               	skipz
  4795  0DE7  2DEC               	goto	u1141
  4796  0DE8  0A32               	incf	__doprnt@prec+1,w
  4797  0DE9  1D03               	btfss	3,2
  4798  0DEA  2DEC               	goto	u1141
  4799  0DEB  2DED               	goto	u1140
  4800  0DEC                     u1141:
  4801  0DEC  2D6B               	goto	l1478
  4802  0DED                     u1140:
  4803  0DED                     l1490:
  4804                           
  4805                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4806  0DED  3001               	movlw	1
  4807  0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  4808  0DEF  1303               	bcf	3,6	;RP1=0, select bank0
  4809  0DF0  07AA               	addwf	__doprnt@f,f
  4810  0DF1  30FF               	movlw	-1
  4811  0DF2  072A               	addwf	__doprnt@f,w
  4812  0DF3  0084               	movwf	4
  4813  0DF4  120A  158A  2000  120A  158A  	fcall	stringdir
  4814  0DF9  00FF               	movwf	btemp+1
  4815  0DFA  087F               	movf	btemp+1,w
  4816  0DFB  00B8               	movwf	__doprnt@c
  4817  0DFC  0838               	movf	__doprnt@c,w
  4818  0DFD  1D03               	btfss	3,2
  4819  0DFE  2E00               	goto	u1151
  4820  0DFF  2E01               	goto	u1150
  4821  0E00                     u1151:
  4822  0E00  2C63               	goto	l1426
  4823  0E01                     u1150:
  4824  0E01                     l1492:
  4825                           
  4826                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1566:  return 0;
  4827  0E01  01AA               	clrf	?__doprnt
  4828  0E02  01AB               	clrf	?__doprnt+1
  4829  0E03                     l788:
  4830  0E03  0008               	return
  4831  0E04                     __end_of__doprnt:
  4832                           
  4833                           	psect	text11
  4834  000E                     __ptext11:	
  4835 ;; *************** function _putch *****************
  4836 ;; Defined at:
  4837 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\putch.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  c               1    0[COMMON] unsigned char 
  4840 ;; Auto vars:     Size  Location     Type
  4841 ;;		None
  4842 ;; Return value:  Size  Location     Type
  4843 ;;                  1    wreg      void 
  4844 ;; Registers used:
  4845 ;;		None
  4846 ;; Tracked objects:
  4847 ;;		On entry : 0/0
  4848 ;;		On exit  : 0/0
  4849 ;;		Unchanged: 0/0
  4850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4851 ;;      Params:         1       0       0       0       0
  4852 ;;      Locals:         0       0       0       0       0
  4853 ;;      Temps:          0       0       0       0       0
  4854 ;;      Totals:         1       0       0       0       0
  4855 ;;Total ram usage:        1 bytes
  4856 ;; Hardware stack levels used:    1
  4857 ;; This function calls:
  4858 ;;		Nothing
  4859 ;; This function is called by:
  4860 ;;		_printf
  4861 ;;		__doprnt
  4862 ;; This function uses a non-reentrant model
  4863 ;;
  4864                           
  4865                           
  4866                           ;psect for function _putch
  4867  000E                     _putch:
  4868  000E                     l791:	
  4869                           ;incstack = 0
  4870                           ; Regs used in _putch: []
  4871                           
  4872  000E  0008               	return
  4873  000F                     __end_of_putch:
  4874                           
  4875                           	psect	text12
  4876  09B6                     __ptext12:	
  4877 ;; *************** function ___llmod *****************
  4878 ;; Defined at:
  4879 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\llmod.c"
  4880 ;; Parameters:    Size  Location     Type
  4881 ;;  divisor         4    0[BANK0 ] unsigned long 
  4882 ;;  dividend        4    4[BANK0 ] unsigned long 
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;  counter         1    9[BANK0 ] unsigned char 
  4885 ;; Return value:  Size  Location     Type
  4886 ;;                  4    0[BANK0 ] unsigned long 
  4887 ;; Registers used:
  4888 ;;		wreg, status,2, status,0, btemp+1
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4894 ;;      Params:         0       8       0       0       0
  4895 ;;      Locals:         0       1       0       0       0
  4896 ;;      Temps:          0       1       0       0       0
  4897 ;;      Totals:         0      10       0       0       0
  4898 ;;Total ram usage:       10 bytes
  4899 ;; Hardware stack levels used:    1
  4900 ;; This function calls:
  4901 ;;		Nothing
  4902 ;; This function is called by:
  4903 ;;		__doprnt
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907                           
  4908                           ;psect for function ___llmod
  4909  09B6                     ___llmod:
  4910  09B6                     l1396:	
  4911                           ;incstack = 0
  4912                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  4913                           
  4914  09B6  1283               	bcf	3,5	;RP0=0, select bank0
  4915  09B7  1303               	bcf	3,6	;RP1=0, select bank0
  4916  09B8  0823               	movf	___llmod@divisor+3,w
  4917  09B9  0422               	iorwf	___llmod@divisor+2,w
  4918  09BA  0421               	iorwf	___llmod@divisor+1,w
  4919  09BB  0420               	iorwf	___llmod@divisor,w
  4920  09BC  1903               	skipnz
  4921  09BD  29BF               	goto	u951
  4922  09BE  29C0               	goto	u950
  4923  09BF                     u951:
  4924  09BF  2A03               	goto	l1414
  4925  09C0                     u950:
  4926  09C0                     l1398:
  4927  09C0  01A9               	clrf	___llmod@counter
  4928  09C1  0AA9               	incf	___llmod@counter,f
  4929  09C2  29D0               	goto	l1404
  4930  09C3                     l1400:
  4931  09C3  3001               	movlw	1
  4932  09C4  00A8               	movwf	??___llmod
  4933  09C5                     u965:
  4934  09C5  1003               	clrc
  4935  09C6  0DA0               	rlf	___llmod@divisor,f
  4936  09C7  0DA1               	rlf	___llmod@divisor+1,f
  4937  09C8  0DA2               	rlf	___llmod@divisor+2,f
  4938  09C9  0DA3               	rlf	___llmod@divisor+3,f
  4939  09CA  0BA8               	decfsz	??___llmod,f
  4940  09CB  29C5               	goto	u965
  4941  09CC                     l1402:
  4942  09CC  3001               	movlw	1
  4943  09CD  00FF               	movwf	btemp+1
  4944  09CE  087F               	movf	btemp+1,w
  4945  09CF  07A9               	addwf	___llmod@counter,f
  4946  09D0                     l1404:
  4947  09D0  1FA3               	btfss	___llmod@divisor+3,7
  4948  09D1  29D3               	goto	u971
  4949  09D2  29D4               	goto	u970
  4950  09D3                     u971:
  4951  09D3  29C3               	goto	l1400
  4952  09D4                     u970:
  4953  09D4                     l1406:
  4954  09D4  0823               	movf	___llmod@divisor+3,w
  4955  09D5  0227               	subwf	___llmod@dividend+3,w
  4956  09D6  1D03               	skipz
  4957  09D7  29E2               	goto	u985
  4958  09D8  0822               	movf	___llmod@divisor+2,w
  4959  09D9  0226               	subwf	___llmod@dividend+2,w
  4960  09DA  1D03               	skipz
  4961  09DB  29E2               	goto	u985
  4962  09DC  0821               	movf	___llmod@divisor+1,w
  4963  09DD  0225               	subwf	___llmod@dividend+1,w
  4964  09DE  1D03               	skipz
  4965  09DF  29E2               	goto	u985
  4966  09E0  0820               	movf	___llmod@divisor,w
  4967  09E1  0224               	subwf	___llmod@dividend,w
  4968  09E2                     u985:
  4969  09E2  1C03               	skipc
  4970  09E3  29E5               	goto	u981
  4971  09E4  29E6               	goto	u980
  4972  09E5                     u981:
  4973  09E5  29F4               	goto	l1410
  4974  09E6                     u980:
  4975  09E6                     l1408:
  4976  09E6  0820               	movf	___llmod@divisor,w
  4977  09E7  02A4               	subwf	___llmod@dividend,f
  4978  09E8  0821               	movf	___llmod@divisor+1,w
  4979  09E9  1C03               	skipc
  4980  09EA  0F21               	incfsz	___llmod@divisor+1,w
  4981  09EB  02A5               	subwf	___llmod@dividend+1,f
  4982  09EC  0822               	movf	___llmod@divisor+2,w
  4983  09ED  1C03               	skipc
  4984  09EE  0F22               	incfsz	___llmod@divisor+2,w
  4985  09EF  02A6               	subwf	___llmod@dividend+2,f
  4986  09F0  0823               	movf	___llmod@divisor+3,w
  4987  09F1  1C03               	skipc
  4988  09F2  0F23               	incfsz	___llmod@divisor+3,w
  4989  09F3  02A7               	subwf	___llmod@dividend+3,f
  4990  09F4                     l1410:
  4991  09F4  3001               	movlw	1
  4992  09F5                     u995:
  4993  09F5  1003               	clrc
  4994  09F6  0CA3               	rrf	___llmod@divisor+3,f
  4995  09F7  0CA2               	rrf	___llmod@divisor+2,f
  4996  09F8  0CA1               	rrf	___llmod@divisor+1,f
  4997  09F9  0CA0               	rrf	___llmod@divisor,f
  4998  09FA  3EFF               	addlw	-1
  4999  09FB  1D03               	skipz
  5000  09FC  29F5               	goto	u995
  5001  09FD                     l1412:
  5002  09FD  3001               	movlw	1
  5003  09FE  02A9               	subwf	___llmod@counter,f
  5004  09FF  1D03               	btfss	3,2
  5005  0A00  2A02               	goto	u1001
  5006  0A01  2A03               	goto	u1000
  5007  0A02                     u1001:
  5008  0A02  29D4               	goto	l1406
  5009  0A03                     u1000:
  5010  0A03                     l1414:
  5011  0A03  0827               	movf	___llmod@dividend+3,w
  5012  0A04  00A3               	movwf	?___llmod+3
  5013  0A05  0826               	movf	___llmod@dividend+2,w
  5014  0A06  00A2               	movwf	?___llmod+2
  5015  0A07  0825               	movf	___llmod@dividend+1,w
  5016  0A08  00A1               	movwf	?___llmod+1
  5017  0A09  0824               	movf	___llmod@dividend,w
  5018  0A0A  00A0               	movwf	?___llmod
  5019  0A0B                     l511:
  5020  0A0B  0008               	return
  5021  0A0C                     __end_of___llmod:
  5022                           
  5023                           	psect	text13
  5024  0A0C                     __ptext13:	
  5025 ;; *************** function ___lldiv *****************
  5026 ;; Defined at:
  5027 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  divisor         4    0[COMMON] unsigned long 
  5030 ;;  dividend        4    4[COMMON] unsigned long 
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;  quotient        4    9[COMMON] unsigned long 
  5033 ;;  counter         1   13[COMMON] unsigned char 
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  4    0[COMMON] unsigned long 
  5036 ;; Registers used:
  5037 ;;		wreg, status,2, status,0, btemp+1
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5043 ;;      Params:         8       0       0       0       0
  5044 ;;      Locals:         5       0       0       0       0
  5045 ;;      Temps:          1       0       0       0       0
  5046 ;;      Totals:        14       0       0       0       0
  5047 ;;Total ram usage:       14 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; This function calls:
  5050 ;;		Nothing
  5051 ;; This function is called by:
  5052 ;;		_BMP180_readPreassure
  5053 ;;		__doprnt
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           
  5058                           ;psect for function ___lldiv
  5059  0A0C                     ___lldiv:
  5060  0A0C                     l1370:	
  5061                           ;incstack = 0
  5062                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  5063                           
  5064  0A0C  3000               	movlw	0
  5065  0A0D  00FC               	movwf	___lldiv@quotient+3
  5066  0A0E  3000               	movlw	0
  5067  0A0F  00FB               	movwf	___lldiv@quotient+2
  5068  0A10  3000               	movlw	0
  5069  0A11  00FA               	movwf	___lldiv@quotient+1
  5070  0A12  3000               	movlw	0
  5071  0A13  00F9               	movwf	___lldiv@quotient
  5072  0A14  0873               	movf	___lldiv@divisor+3,w
  5073  0A15  0472               	iorwf	___lldiv@divisor+2,w
  5074  0A16  0471               	iorwf	___lldiv@divisor+1,w
  5075  0A17  0470               	iorwf	___lldiv@divisor,w
  5076  0A18  1903               	skipnz
  5077  0A19  2A1B               	goto	u881
  5078  0A1A  2A1C               	goto	u880
  5079  0A1B                     u881:
  5080  0A1B  2A69               	goto	l1392
  5081  0A1C                     u880:
  5082  0A1C                     l1372:
  5083  0A1C  01FD               	clrf	___lldiv@counter
  5084  0A1D  0AFD               	incf	___lldiv@counter,f
  5085  0A1E  2A2C               	goto	l1378
  5086  0A1F                     l1374:
  5087  0A1F  3001               	movlw	1
  5088  0A20  00F8               	movwf	??___lldiv
  5089  0A21                     u895:
  5090  0A21  1003               	clrc
  5091  0A22  0DF0               	rlf	___lldiv@divisor,f
  5092  0A23  0DF1               	rlf	___lldiv@divisor+1,f
  5093  0A24  0DF2               	rlf	___lldiv@divisor+2,f
  5094  0A25  0DF3               	rlf	___lldiv@divisor+3,f
  5095  0A26  0BF8               	decfsz	??___lldiv,f
  5096  0A27  2A21               	goto	u895
  5097  0A28                     l1376:
  5098  0A28  3001               	movlw	1
  5099  0A29  00FF               	movwf	btemp+1
  5100  0A2A  087F               	movf	btemp+1,w
  5101  0A2B  07FD               	addwf	___lldiv@counter,f
  5102  0A2C                     l1378:
  5103  0A2C  1FF3               	btfss	___lldiv@divisor+3,7
  5104  0A2D  2A2F               	goto	u901
  5105  0A2E  2A30               	goto	u900
  5106  0A2F                     u901:
  5107  0A2F  2A1F               	goto	l1374
  5108  0A30                     u900:
  5109  0A30                     l1380:
  5110  0A30  3001               	movlw	1
  5111  0A31  00F8               	movwf	??___lldiv
  5112  0A32                     u915:
  5113  0A32  1003               	clrc
  5114  0A33  0DF9               	rlf	___lldiv@quotient,f
  5115  0A34  0DFA               	rlf	___lldiv@quotient+1,f
  5116  0A35  0DFB               	rlf	___lldiv@quotient+2,f
  5117  0A36  0DFC               	rlf	___lldiv@quotient+3,f
  5118  0A37  0BF8               	decfsz	??___lldiv,f
  5119  0A38  2A32               	goto	u915
  5120  0A39                     l1382:
  5121  0A39  0873               	movf	___lldiv@divisor+3,w
  5122  0A3A  0277               	subwf	___lldiv@dividend+3,w
  5123  0A3B  1D03               	skipz
  5124  0A3C  2A47               	goto	u925
  5125  0A3D  0872               	movf	___lldiv@divisor+2,w
  5126  0A3E  0276               	subwf	___lldiv@dividend+2,w
  5127  0A3F  1D03               	skipz
  5128  0A40  2A47               	goto	u925
  5129  0A41  0871               	movf	___lldiv@divisor+1,w
  5130  0A42  0275               	subwf	___lldiv@dividend+1,w
  5131  0A43  1D03               	skipz
  5132  0A44  2A47               	goto	u925
  5133  0A45  0870               	movf	___lldiv@divisor,w
  5134  0A46  0274               	subwf	___lldiv@dividend,w
  5135  0A47                     u925:
  5136  0A47  1C03               	skipc
  5137  0A48  2A4A               	goto	u921
  5138  0A49  2A4B               	goto	u920
  5139  0A4A                     u921:
  5140  0A4A  2A5A               	goto	l1388
  5141  0A4B                     u920:
  5142  0A4B                     l1384:
  5143  0A4B  0870               	movf	___lldiv@divisor,w
  5144  0A4C  02F4               	subwf	___lldiv@dividend,f
  5145  0A4D  0871               	movf	___lldiv@divisor+1,w
  5146  0A4E  1C03               	skipc
  5147  0A4F  0F71               	incfsz	___lldiv@divisor+1,w
  5148  0A50  02F5               	subwf	___lldiv@dividend+1,f
  5149  0A51  0872               	movf	___lldiv@divisor+2,w
  5150  0A52  1C03               	skipc
  5151  0A53  0F72               	incfsz	___lldiv@divisor+2,w
  5152  0A54  02F6               	subwf	___lldiv@dividend+2,f
  5153  0A55  0873               	movf	___lldiv@divisor+3,w
  5154  0A56  1C03               	skipc
  5155  0A57  0F73               	incfsz	___lldiv@divisor+3,w
  5156  0A58  02F7               	subwf	___lldiv@dividend+3,f
  5157  0A59                     l1386:
  5158  0A59  1479               	bsf	___lldiv@quotient,0
  5159  0A5A                     l1388:
  5160  0A5A  3001               	movlw	1
  5161  0A5B                     u935:
  5162  0A5B  1003               	clrc
  5163  0A5C  0CF3               	rrf	___lldiv@divisor+3,f
  5164  0A5D  0CF2               	rrf	___lldiv@divisor+2,f
  5165  0A5E  0CF1               	rrf	___lldiv@divisor+1,f
  5166  0A5F  0CF0               	rrf	___lldiv@divisor,f
  5167  0A60  3EFF               	addlw	-1
  5168  0A61  1D03               	skipz
  5169  0A62  2A5B               	goto	u935
  5170  0A63                     l1390:
  5171  0A63  3001               	movlw	1
  5172  0A64  02FD               	subwf	___lldiv@counter,f
  5173  0A65  1D03               	btfss	3,2
  5174  0A66  2A68               	goto	u941
  5175  0A67  2A69               	goto	u940
  5176  0A68                     u941:
  5177  0A68  2A30               	goto	l1380
  5178  0A69                     u940:
  5179  0A69                     l1392:
  5180  0A69  087C               	movf	___lldiv@quotient+3,w
  5181  0A6A  00F3               	movwf	?___lldiv+3
  5182  0A6B  087B               	movf	___lldiv@quotient+2,w
  5183  0A6C  00F2               	movwf	?___lldiv+2
  5184  0A6D  087A               	movf	___lldiv@quotient+1,w
  5185  0A6E  00F1               	movwf	?___lldiv+1
  5186  0A6F  0879               	movf	___lldiv@quotient,w
  5187  0A70  00F0               	movwf	?___lldiv
  5188  0A71                     l325:
  5189  0A71  0008               	return
  5190  0A72                     __end_of___lldiv:
  5191                           
  5192                           	psect	text14
  5193  0970                     __ptext14:	
  5194 ;; *************** function ___lmul *****************
  5195 ;; Defined at:
  5196 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul32.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;  multiplier      4    0[COMMON] unsigned long 
  5199 ;;  multiplicand    4    4[COMMON] unsigned long 
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;  product         4    9[COMMON] unsigned long 
  5202 ;; Return value:  Size  Location     Type
  5203 ;;                  4    0[COMMON] unsigned long 
  5204 ;; Registers used:
  5205 ;;		wreg, status,2, status,0
  5206 ;; Tracked objects:
  5207 ;;		On entry : 0/0
  5208 ;;		On exit  : 0/0
  5209 ;;		Unchanged: 0/0
  5210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5211 ;;      Params:         8       0       0       0       0
  5212 ;;      Locals:         4       0       0       0       0
  5213 ;;      Temps:          1       0       0       0       0
  5214 ;;      Totals:        13       0       0       0       0
  5215 ;;Total ram usage:       13 bytes
  5216 ;; Hardware stack levels used:    1
  5217 ;; This function calls:
  5218 ;;		Nothing
  5219 ;; This function is called by:
  5220 ;;		_BMP180_readTemperature
  5221 ;;		_BMP180_readPreassure
  5222 ;; This function uses a non-reentrant model
  5223 ;;
  5224                           
  5225                           
  5226                           ;psect for function ___lmul
  5227  0970                     ___lmul:
  5228  0970                     l1564:	
  5229                           ;incstack = 0
  5230                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5231                           
  5232  0970  3000               	movlw	0
  5233  0971  00FC               	movwf	___lmul@product+3
  5234  0972  3000               	movlw	0
  5235  0973  00FB               	movwf	___lmul@product+2
  5236  0974  3000               	movlw	0
  5237  0975  00FA               	movwf	___lmul@product+1
  5238  0976  3000               	movlw	0
  5239  0977  00F9               	movwf	___lmul@product
  5240  0978                     l1566:
  5241  0978  1C70               	btfss	___lmul@multiplier,0
  5242  0979  297B               	goto	u1271
  5243  097A  297C               	goto	u1270
  5244  097B                     u1271:
  5245  097B  2993               	goto	l1570
  5246  097C                     u1270:
  5247  097C                     l1568:
  5248  097C  0874               	movf	___lmul@multiplicand,w
  5249  097D  07F9               	addwf	___lmul@product,f
  5250  097E  0875               	movf	___lmul@multiplicand+1,w
  5251  097F  1103               	clrz
  5252  0980  1803               	skipnc
  5253  0981  3E01               	addlw	1
  5254  0982  1903               	skipnz
  5255  0983  2985               	goto	u1281
  5256  0984  07FA               	addwf	___lmul@product+1,f
  5257  0985                     u1281:
  5258  0985  0876               	movf	___lmul@multiplicand+2,w
  5259  0986  1103               	clrz
  5260  0987  1803               	skipnc
  5261  0988  3E01               	addlw	1
  5262  0989  1903               	skipnz
  5263  098A  298C               	goto	u1282
  5264  098B  07FB               	addwf	___lmul@product+2,f
  5265  098C                     u1282:
  5266  098C  0877               	movf	___lmul@multiplicand+3,w
  5267  098D  1103               	clrz
  5268  098E  1803               	skipnc
  5269  098F  3E01               	addlw	1
  5270  0990  1903               	skipnz
  5271  0991  2993               	goto	u1283
  5272  0992  07FC               	addwf	___lmul@product+3,f
  5273  0993                     u1283:
  5274  0993                     l1570:
  5275  0993  3001               	movlw	1
  5276  0994  00F8               	movwf	??___lmul
  5277  0995                     u1295:
  5278  0995  1003               	clrc
  5279  0996  0DF4               	rlf	___lmul@multiplicand,f
  5280  0997  0DF5               	rlf	___lmul@multiplicand+1,f
  5281  0998  0DF6               	rlf	___lmul@multiplicand+2,f
  5282  0999  0DF7               	rlf	___lmul@multiplicand+3,f
  5283  099A  0BF8               	decfsz	??___lmul,f
  5284  099B  2995               	goto	u1295
  5285  099C                     l1572:
  5286  099C  3001               	movlw	1
  5287  099D                     u1305:
  5288  099D  1003               	clrc
  5289  099E  0CF3               	rrf	___lmul@multiplier+3,f
  5290  099F  0CF2               	rrf	___lmul@multiplier+2,f
  5291  09A0  0CF1               	rrf	___lmul@multiplier+1,f
  5292  09A1  0CF0               	rrf	___lmul@multiplier,f
  5293  09A2  3EFF               	addlw	-1
  5294  09A3  1D03               	skipz
  5295  09A4  299D               	goto	u1305
  5296  09A5  0873               	movf	___lmul@multiplier+3,w
  5297  09A6  0472               	iorwf	___lmul@multiplier+2,w
  5298  09A7  0471               	iorwf	___lmul@multiplier+1,w
  5299  09A8  0470               	iorwf	___lmul@multiplier,w
  5300  09A9  1D03               	skipz
  5301  09AA  29AC               	goto	u1311
  5302  09AB  29AD               	goto	u1310
  5303  09AC                     u1311:
  5304  09AC  2978               	goto	l1566
  5305  09AD                     u1310:
  5306  09AD                     l1574:
  5307  09AD  087C               	movf	___lmul@product+3,w
  5308  09AE  00F3               	movwf	?___lmul+3
  5309  09AF  087B               	movf	___lmul@product+2,w
  5310  09B0  00F2               	movwf	?___lmul+2
  5311  09B1  087A               	movf	___lmul@product+1,w
  5312  09B2  00F1               	movwf	?___lmul+1
  5313  09B3  0879               	movf	___lmul@product,w
  5314  09B4  00F0               	movwf	?___lmul
  5315  09B5                     l303:
  5316  09B5  0008               	return
  5317  09B6                     __end_of___lmul:
  5318                           
  5319                           	psect	text15
  5320  0018                     __ptext15:	
  5321 ;; *************** function ___awdiv *****************
  5322 ;; Defined at:
  5323 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;  divisor         2    0[COMMON] int 
  5326 ;;  dividend        2    2[COMMON] int 
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;  quotient        2    6[COMMON] int 
  5329 ;;  sign            1    5[COMMON] unsigned char 
  5330 ;;  counter         1    4[COMMON] unsigned char 
  5331 ;; Return value:  Size  Location     Type
  5332 ;;                  2    0[COMMON] int 
  5333 ;; Registers used:
  5334 ;;		wreg, status,2, status,0, btemp+1
  5335 ;; Tracked objects:
  5336 ;;		On entry : 0/0
  5337 ;;		On exit  : 0/0
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5340 ;;      Params:         4       0       0       0       0
  5341 ;;      Locals:         4       0       0       0       0
  5342 ;;      Temps:          0       0       0       0       0
  5343 ;;      Totals:         8       0       0       0       0
  5344 ;;Total ram usage:        8 bytes
  5345 ;; Hardware stack levels used:    1
  5346 ;; This function calls:
  5347 ;;		Nothing
  5348 ;; This function is called by:
  5349 ;;		_BMP180_readPreassure
  5350 ;; This function uses a non-reentrant model
  5351 ;;
  5352                           
  5353                           
  5354                           ;psect for function ___awdiv
  5355  0018                     ___awdiv:
  5356  0018                     l1620:	
  5357                           ;incstack = 0
  5358                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  5359                           
  5360  0018  01F5               	clrf	___awdiv@sign
  5361  0019                     l1622:
  5362  0019  1FF1               	btfss	___awdiv@divisor+1,7
  5363  001A  281C               	goto	u1421
  5364  001B  281D               	goto	u1420
  5365  001C                     u1421:
  5366  001C  2824               	goto	l1628
  5367  001D                     u1420:
  5368  001D                     l1624:
  5369  001D  09F0               	comf	___awdiv@divisor,f
  5370  001E  09F1               	comf	___awdiv@divisor+1,f
  5371  001F  0AF0               	incf	___awdiv@divisor,f
  5372  0020  1903               	skipnz
  5373  0021  0AF1               	incf	___awdiv@divisor+1,f
  5374  0022                     l1626:
  5375  0022  01F5               	clrf	___awdiv@sign
  5376  0023  0AF5               	incf	___awdiv@sign,f
  5377  0024                     l1628:
  5378  0024  1FF3               	btfss	___awdiv@dividend+1,7
  5379  0025  2827               	goto	u1431
  5380  0026  2828               	goto	u1430
  5381  0027                     u1431:
  5382  0027  2831               	goto	l1634
  5383  0028                     u1430:
  5384  0028                     l1630:
  5385  0028  09F2               	comf	___awdiv@dividend,f
  5386  0029  09F3               	comf	___awdiv@dividend+1,f
  5387  002A  0AF2               	incf	___awdiv@dividend,f
  5388  002B  1903               	skipnz
  5389  002C  0AF3               	incf	___awdiv@dividend+1,f
  5390  002D                     l1632:
  5391  002D  3001               	movlw	1
  5392  002E  00FF               	movwf	btemp+1
  5393  002F  087F               	movf	btemp+1,w
  5394  0030  06F5               	xorwf	___awdiv@sign,f
  5395  0031                     l1634:
  5396  0031  01F6               	clrf	___awdiv@quotient
  5397  0032  01F7               	clrf	___awdiv@quotient+1
  5398  0033                     l1636:
  5399  0033  0870               	movf	___awdiv@divisor,w
  5400  0034  0471               	iorwf	___awdiv@divisor+1,w
  5401  0035  1903               	btfsc	3,2
  5402  0036  2838               	goto	u1441
  5403  0037  2839               	goto	u1440
  5404  0038                     u1441:
  5405  0038  2870               	goto	l1656
  5406  0039                     u1440:
  5407  0039                     l1638:
  5408  0039  01F4               	clrf	___awdiv@counter
  5409  003A  0AF4               	incf	___awdiv@counter,f
  5410  003B  2847               	goto	l1644
  5411  003C                     l1640:
  5412  003C  3001               	movlw	1
  5413  003D                     u1455:
  5414  003D  1003               	clrc
  5415  003E  0DF0               	rlf	___awdiv@divisor,f
  5416  003F  0DF1               	rlf	___awdiv@divisor+1,f
  5417  0040  3EFF               	addlw	-1
  5418  0041  1D03               	skipz
  5419  0042  283D               	goto	u1455
  5420  0043                     l1642:
  5421  0043  3001               	movlw	1
  5422  0044  00FF               	movwf	btemp+1
  5423  0045  087F               	movf	btemp+1,w
  5424  0046  07F4               	addwf	___awdiv@counter,f
  5425  0047                     l1644:
  5426  0047  1FF1               	btfss	___awdiv@divisor+1,7
  5427  0048  284A               	goto	u1461
  5428  0049  284B               	goto	u1460
  5429  004A                     u1461:
  5430  004A  283C               	goto	l1640
  5431  004B                     u1460:
  5432  004B                     l1646:
  5433  004B  3001               	movlw	1
  5434  004C                     u1475:
  5435  004C  1003               	clrc
  5436  004D  0DF6               	rlf	___awdiv@quotient,f
  5437  004E  0DF7               	rlf	___awdiv@quotient+1,f
  5438  004F  3EFF               	addlw	-1
  5439  0050  1D03               	skipz
  5440  0051  284C               	goto	u1475
  5441  0052  0871               	movf	___awdiv@divisor+1,w
  5442  0053  0273               	subwf	___awdiv@dividend+1,w
  5443  0054  1D03               	skipz
  5444  0055  2858               	goto	u1485
  5445  0056  0870               	movf	___awdiv@divisor,w
  5446  0057  0272               	subwf	___awdiv@dividend,w
  5447  0058                     u1485:
  5448  0058  1C03               	skipc
  5449  0059  285B               	goto	u1481
  5450  005A  285C               	goto	u1480
  5451  005B                     u1481:
  5452  005B  2863               	goto	l1652
  5453  005C                     u1480:
  5454  005C                     l1648:
  5455  005C  0870               	movf	___awdiv@divisor,w
  5456  005D  02F2               	subwf	___awdiv@dividend,f
  5457  005E  0871               	movf	___awdiv@divisor+1,w
  5458  005F  1C03               	skipc
  5459  0060  03F3               	decf	___awdiv@dividend+1,f
  5460  0061  02F3               	subwf	___awdiv@dividend+1,f
  5461  0062                     l1650:
  5462  0062  1476               	bsf	___awdiv@quotient,0
  5463  0063                     l1652:
  5464  0063  3001               	movlw	1
  5465  0064                     u1495:
  5466  0064  1003               	clrc
  5467  0065  0CF1               	rrf	___awdiv@divisor+1,f
  5468  0066  0CF0               	rrf	___awdiv@divisor,f
  5469  0067  3EFF               	addlw	-1
  5470  0068  1D03               	skipz
  5471  0069  2864               	goto	u1495
  5472  006A                     l1654:
  5473  006A  3001               	movlw	1
  5474  006B  02F4               	subwf	___awdiv@counter,f
  5475  006C  1D03               	btfss	3,2
  5476  006D  286F               	goto	u1501
  5477  006E  2870               	goto	u1500
  5478  006F                     u1501:
  5479  006F  284B               	goto	l1646
  5480  0070                     u1500:
  5481  0070                     l1656:
  5482  0070  0875               	movf	___awdiv@sign,w
  5483  0071  1903               	btfsc	3,2
  5484  0072  2874               	goto	u1511
  5485  0073  2875               	goto	u1510
  5486  0074                     u1511:
  5487  0074  287A               	goto	l1660
  5488  0075                     u1510:
  5489  0075                     l1658:
  5490  0075  09F6               	comf	___awdiv@quotient,f
  5491  0076  09F7               	comf	___awdiv@quotient+1,f
  5492  0077  0AF6               	incf	___awdiv@quotient,f
  5493  0078  1903               	skipnz
  5494  0079  0AF7               	incf	___awdiv@quotient+1,f
  5495  007A                     l1660:
  5496  007A  0877               	movf	___awdiv@quotient+1,w
  5497  007B  00F1               	movwf	?___awdiv+1
  5498  007C  0876               	movf	___awdiv@quotient,w
  5499  007D  00F0               	movwf	?___awdiv
  5500  007E                     l442:
  5501  007E  0008               	return
  5502  007F                     __end_of___awdiv:
  5503                           
  5504                           	psect	text16
  5505  0B07                     __ptext16:	
  5506 ;; *************** function ___aldiv *****************
  5507 ;; Defined at:
  5508 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\aldiv.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;  divisor         4    0[BANK0 ] long 
  5511 ;;  dividend        4    4[BANK0 ] long 
  5512 ;; Auto vars:     Size  Location     Type
  5513 ;;  quotient        4   10[BANK0 ] long 
  5514 ;;  sign            1    9[BANK0 ] unsigned char 
  5515 ;;  counter         1    8[BANK0 ] unsigned char 
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  4    0[BANK0 ] long 
  5518 ;; Registers used:
  5519 ;;		wreg, status,2, status,0, btemp+1
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5525 ;;      Params:         0       8       0       0       0
  5526 ;;      Locals:         0       6       0       0       0
  5527 ;;      Temps:          1       0       0       0       0
  5528 ;;      Totals:         1      14       0       0       0
  5529 ;;Total ram usage:       15 bytes
  5530 ;; Hardware stack levels used:    1
  5531 ;; This function calls:
  5532 ;;		Nothing
  5533 ;; This function is called by:
  5534 ;;		_BMP180_readTemperature
  5535 ;;		_BMP180_readPreassure
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           
  5540                           ;psect for function ___aldiv
  5541  0B07                     ___aldiv:
  5542  0B07                     l1578:	
  5543                           ;incstack = 0
  5544                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
  5545                           
  5546  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  5547  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  5548  0B09  01A9               	clrf	___aldiv@sign
  5549  0B0A                     l1580:
  5550  0B0A  1FA3               	btfss	___aldiv@divisor+3,7
  5551  0B0B  2B0D               	goto	u1321
  5552  0B0C  2B0E               	goto	u1320
  5553  0B0D                     u1321:
  5554  0B0D  2B1B               	goto	l354
  5555  0B0E                     u1320:
  5556  0B0E                     l1582:
  5557  0B0E  09A0               	comf	___aldiv@divisor,f
  5558  0B0F  09A1               	comf	___aldiv@divisor+1,f
  5559  0B10  09A2               	comf	___aldiv@divisor+2,f
  5560  0B11  09A3               	comf	___aldiv@divisor+3,f
  5561  0B12  0AA0               	incf	___aldiv@divisor,f
  5562  0B13  1903               	skipnz
  5563  0B14  0AA1               	incf	___aldiv@divisor+1,f
  5564  0B15  1903               	skipnz
  5565  0B16  0AA2               	incf	___aldiv@divisor+2,f
  5566  0B17  1903               	skipnz
  5567  0B18  0AA3               	incf	___aldiv@divisor+3,f
  5568  0B19  01A9               	clrf	___aldiv@sign
  5569  0B1A  0AA9               	incf	___aldiv@sign,f
  5570  0B1B                     l354:
  5571  0B1B  1FA7               	btfss	___aldiv@dividend+3,7
  5572  0B1C  2B1E               	goto	u1331
  5573  0B1D  2B1F               	goto	u1330
  5574  0B1E                     u1331:
  5575  0B1E  2B2E               	goto	l1588
  5576  0B1F                     u1330:
  5577  0B1F                     l1584:
  5578  0B1F  09A4               	comf	___aldiv@dividend,f
  5579  0B20  09A5               	comf	___aldiv@dividend+1,f
  5580  0B21  09A6               	comf	___aldiv@dividend+2,f
  5581  0B22  09A7               	comf	___aldiv@dividend+3,f
  5582  0B23  0AA4               	incf	___aldiv@dividend,f
  5583  0B24  1903               	skipnz
  5584  0B25  0AA5               	incf	___aldiv@dividend+1,f
  5585  0B26  1903               	skipnz
  5586  0B27  0AA6               	incf	___aldiv@dividend+2,f
  5587  0B28  1903               	skipnz
  5588  0B29  0AA7               	incf	___aldiv@dividend+3,f
  5589  0B2A                     l1586:
  5590  0B2A  3001               	movlw	1
  5591  0B2B  00FF               	movwf	btemp+1
  5592  0B2C  087F               	movf	btemp+1,w
  5593  0B2D  06A9               	xorwf	___aldiv@sign,f
  5594  0B2E                     l1588:
  5595  0B2E  3000               	movlw	0
  5596  0B2F  00AD               	movwf	___aldiv@quotient+3
  5597  0B30  3000               	movlw	0
  5598  0B31  00AC               	movwf	___aldiv@quotient+2
  5599  0B32  3000               	movlw	0
  5600  0B33  00AB               	movwf	___aldiv@quotient+1
  5601  0B34  3000               	movlw	0
  5602  0B35  00AA               	movwf	___aldiv@quotient
  5603  0B36                     l1590:
  5604  0B36  0823               	movf	___aldiv@divisor+3,w
  5605  0B37  0422               	iorwf	___aldiv@divisor+2,w
  5606  0B38  0421               	iorwf	___aldiv@divisor+1,w
  5607  0B39  0420               	iorwf	___aldiv@divisor,w
  5608  0B3A  1903               	skipnz
  5609  0B3B  2B3D               	goto	u1341
  5610  0B3C  2B3E               	goto	u1340
  5611  0B3D                     u1341:
  5612  0B3D  2B8B               	goto	l1612
  5613  0B3E                     u1340:
  5614  0B3E                     l1592:
  5615  0B3E  01A8               	clrf	___aldiv@counter
  5616  0B3F  0AA8               	incf	___aldiv@counter,f
  5617  0B40  2B4E               	goto	l1598
  5618  0B41                     l1594:
  5619  0B41  3001               	movlw	1
  5620  0B42  00FD               	movwf	??___aldiv
  5621  0B43                     u1355:
  5622  0B43  1003               	clrc
  5623  0B44  0DA0               	rlf	___aldiv@divisor,f
  5624  0B45  0DA1               	rlf	___aldiv@divisor+1,f
  5625  0B46  0DA2               	rlf	___aldiv@divisor+2,f
  5626  0B47  0DA3               	rlf	___aldiv@divisor+3,f
  5627  0B48  0BFD               	decfsz	??___aldiv,f
  5628  0B49  2B43               	goto	u1355
  5629  0B4A                     l1596:
  5630  0B4A  3001               	movlw	1
  5631  0B4B  00FF               	movwf	btemp+1
  5632  0B4C  087F               	movf	btemp+1,w
  5633  0B4D  07A8               	addwf	___aldiv@counter,f
  5634  0B4E                     l1598:
  5635  0B4E  1FA3               	btfss	___aldiv@divisor+3,7
  5636  0B4F  2B51               	goto	u1361
  5637  0B50  2B52               	goto	u1360
  5638  0B51                     u1361:
  5639  0B51  2B41               	goto	l1594
  5640  0B52                     u1360:
  5641  0B52                     l1600:
  5642  0B52  3001               	movlw	1
  5643  0B53  00FD               	movwf	??___aldiv
  5644  0B54                     u1375:
  5645  0B54  1003               	clrc
  5646  0B55  0DAA               	rlf	___aldiv@quotient,f
  5647  0B56  0DAB               	rlf	___aldiv@quotient+1,f
  5648  0B57  0DAC               	rlf	___aldiv@quotient+2,f
  5649  0B58  0DAD               	rlf	___aldiv@quotient+3,f
  5650  0B59  0BFD               	decfsz	??___aldiv,f
  5651  0B5A  2B54               	goto	u1375
  5652  0B5B                     l1602:
  5653  0B5B  0823               	movf	___aldiv@divisor+3,w
  5654  0B5C  0227               	subwf	___aldiv@dividend+3,w
  5655  0B5D  1D03               	skipz
  5656  0B5E  2B69               	goto	u1385
  5657  0B5F  0822               	movf	___aldiv@divisor+2,w
  5658  0B60  0226               	subwf	___aldiv@dividend+2,w
  5659  0B61  1D03               	skipz
  5660  0B62  2B69               	goto	u1385
  5661  0B63  0821               	movf	___aldiv@divisor+1,w
  5662  0B64  0225               	subwf	___aldiv@dividend+1,w
  5663  0B65  1D03               	skipz
  5664  0B66  2B69               	goto	u1385
  5665  0B67  0820               	movf	___aldiv@divisor,w
  5666  0B68  0224               	subwf	___aldiv@dividend,w
  5667  0B69                     u1385:
  5668  0B69  1C03               	skipc
  5669  0B6A  2B6C               	goto	u1381
  5670  0B6B  2B6D               	goto	u1380
  5671  0B6C                     u1381:
  5672  0B6C  2B7C               	goto	l1608
  5673  0B6D                     u1380:
  5674  0B6D                     l1604:
  5675  0B6D  0820               	movf	___aldiv@divisor,w
  5676  0B6E  02A4               	subwf	___aldiv@dividend,f
  5677  0B6F  0821               	movf	___aldiv@divisor+1,w
  5678  0B70  1C03               	skipc
  5679  0B71  0F21               	incfsz	___aldiv@divisor+1,w
  5680  0B72  02A5               	subwf	___aldiv@dividend+1,f
  5681  0B73  0822               	movf	___aldiv@divisor+2,w
  5682  0B74  1C03               	skipc
  5683  0B75  0F22               	incfsz	___aldiv@divisor+2,w
  5684  0B76  02A6               	subwf	___aldiv@dividend+2,f
  5685  0B77  0823               	movf	___aldiv@divisor+3,w
  5686  0B78  1C03               	skipc
  5687  0B79  0F23               	incfsz	___aldiv@divisor+3,w
  5688  0B7A  02A7               	subwf	___aldiv@dividend+3,f
  5689  0B7B                     l1606:
  5690  0B7B  142A               	bsf	___aldiv@quotient,0
  5691  0B7C                     l1608:
  5692  0B7C  3001               	movlw	1
  5693  0B7D                     u1395:
  5694  0B7D  1003               	clrc
  5695  0B7E  0CA3               	rrf	___aldiv@divisor+3,f
  5696  0B7F  0CA2               	rrf	___aldiv@divisor+2,f
  5697  0B80  0CA1               	rrf	___aldiv@divisor+1,f
  5698  0B81  0CA0               	rrf	___aldiv@divisor,f
  5699  0B82  3EFF               	addlw	-1
  5700  0B83  1D03               	skipz
  5701  0B84  2B7D               	goto	u1395
  5702  0B85                     l1610:
  5703  0B85  3001               	movlw	1
  5704  0B86  02A8               	subwf	___aldiv@counter,f
  5705  0B87  1D03               	btfss	3,2
  5706  0B88  2B8A               	goto	u1401
  5707  0B89  2B8B               	goto	u1400
  5708  0B8A                     u1401:
  5709  0B8A  2B52               	goto	l1600
  5710  0B8B                     u1400:
  5711  0B8B                     l1612:
  5712  0B8B  0829               	movf	___aldiv@sign,w
  5713  0B8C  1903               	btfsc	3,2
  5714  0B8D  2B8F               	goto	u1411
  5715  0B8E  2B90               	goto	u1410
  5716  0B8F                     u1411:
  5717  0B8F  2B9B               	goto	l1616
  5718  0B90                     u1410:
  5719  0B90                     l1614:
  5720  0B90  09AA               	comf	___aldiv@quotient,f
  5721  0B91  09AB               	comf	___aldiv@quotient+1,f
  5722  0B92  09AC               	comf	___aldiv@quotient+2,f
  5723  0B93  09AD               	comf	___aldiv@quotient+3,f
  5724  0B94  0AAA               	incf	___aldiv@quotient,f
  5725  0B95  1903               	skipnz
  5726  0B96  0AAB               	incf	___aldiv@quotient+1,f
  5727  0B97  1903               	skipnz
  5728  0B98  0AAC               	incf	___aldiv@quotient+2,f
  5729  0B99  1903               	skipnz
  5730  0B9A  0AAD               	incf	___aldiv@quotient+3,f
  5731  0B9B                     l1616:
  5732  0B9B  082D               	movf	___aldiv@quotient+3,w
  5733  0B9C  00A3               	movwf	?___aldiv+3
  5734  0B9D  082C               	movf	___aldiv@quotient+2,w
  5735  0B9E  00A2               	movwf	?___aldiv+2
  5736  0B9F  082B               	movf	___aldiv@quotient+1,w
  5737  0BA0  00A1               	movwf	?___aldiv+1
  5738  0BA1  082A               	movf	___aldiv@quotient,w
  5739  0BA2  00A0               	movwf	?___aldiv
  5740  0BA3                     l364:
  5741  0BA3  0008               	return
  5742  0BA4                     __end_of___aldiv:
  5743                           
  5744                           	psect	text17
  5745  000F                     __ptext17:	
  5746 ;; *************** function _BMP180_wait *****************
  5747 ;; Defined at:
  5748 ;;		line 148 in file "BMP180.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;		None
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;		None
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  1    wreg      void 
  5755 ;; Registers used:
  5756 ;;		wreg
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5762 ;;      Params:         0       0       0       0       0
  5763 ;;      Locals:         0       0       0       0       0
  5764 ;;      Temps:          2       0       0       0       0
  5765 ;;      Totals:         2       0       0       0       0
  5766 ;;Total ram usage:        2 bytes
  5767 ;; Hardware stack levels used:    1
  5768 ;; This function calls:
  5769 ;;		Nothing
  5770 ;; This function is called by:
  5771 ;;		_BMP180_readTemperature
  5772 ;;		_BMP180_readPreassure
  5773 ;; This function uses a non-reentrant model
  5774 ;;
  5775                           
  5776                           
  5777                           ;psect for function _BMP180_wait
  5778  000F                     _BMP180_wait:
  5779  000F                     l1536:	
  5780                           ;incstack = 0
  5781                           ; Regs used in _BMP180_wait: [wreg]
  5782                           
  5783                           
  5784                           ;BMP180.c: 149:     _delay((unsigned long)((5)*(4000000/4000.0)));
  5785  000F  3007               	movlw	7
  5786  0010  00F1               	movwf	??_BMP180_wait+1
  5787  0011  307D               	movlw	125
  5788  0012  00F0               	movwf	??_BMP180_wait
  5789  0013                     u1797:
  5790  0013  0BF0               	decfsz	??_BMP180_wait,f
  5791  0014  2813               	goto	u1797
  5792  0015  0BF1               	decfsz	??_BMP180_wait+1,f
  5793  0016  2813               	goto	u1797
  5794  0017                     l177:
  5795  0017  0008               	return
  5796  0018                     __end_of_BMP180_wait:
  5797                           
  5798                           	psect	text18
  5799  0A72                     __ptext18:	
  5800 ;; *************** function _BMP180_init *****************
  5801 ;; Defined at:
  5802 ;;		line 11 in file "BMP180.c"
  5803 ;; Parameters:    Size  Location     Type
  5804 ;;		None
  5805 ;; Auto vars:     Size  Location     Type
  5806 ;;  j               2   11[COMMON] int 
  5807 ;;  aux             2    7[COMMON] unsigned char [2]
  5808 ;;  i               2    9[COMMON] int 
  5809 ;;  lowReg          1    0        unsigned char 
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  1    wreg      void 
  5812 ;; Registers used:
  5813 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5819 ;;      Params:         0       0       0       0       0
  5820 ;;      Locals:         7       0       0       0       0
  5821 ;;      Temps:          5       0       0       0       0
  5822 ;;      Totals:        12       0       0       0       0
  5823 ;;Total ram usage:       12 bytes
  5824 ;; Hardware stack levels used:    1
  5825 ;; Hardware stack levels required when called:    2
  5826 ;; This function calls:
  5827 ;;		_i2c_init
  5828 ;;		_i2c_read
  5829 ;;		_i2c_restart
  5830 ;;		_i2c_sendACK
  5831 ;;		_i2c_sendNACK
  5832 ;;		_i2c_start
  5833 ;;		_i2c_stop
  5834 ;;		_i2c_write
  5835 ;; This function is called by:
  5836 ;;		_main
  5837 ;; This function uses a non-reentrant model
  5838 ;;
  5839                           
  5840                           
  5841                           ;psect for function _BMP180_init
  5842  0A72                     _BMP180_init:
  5843  0A72                     l1670:	
  5844                           ;incstack = 0
  5845                           ; Regs used in _BMP180_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5846                           
  5847  0A72                     l1672:
  5848                           
  5849                           ;BMP180.c: 13:     i2c_init();
  5850  0A72  120A  158A  2073  120A  158A  	fcall	_i2c_init
  5851  0A77                     l1674:
  5852                           
  5853                           ;BMP180.c: 14:     i2c_start();
  5854  0A77  120A  158A  20C6  120A  158A  	fcall	_i2c_start
  5855  0A7C                     l1676:
  5856                           
  5857                           ;BMP180.c: 15:     i2c_write(adressW);
  5858  0A7C  30EE               	movlw	238
  5859  0A7D  120A  158A  20D9  120A  158A  	fcall	_i2c_write
  5860  0A82                     l1678:
  5861                           
  5862                           ;BMP180.c: 16:     i2c_write(lowReg);
  5863  0A82  30AA               	movlw	170
  5864  0A83  120A  158A  20D9  120A  158A  	fcall	_i2c_write
  5865  0A88                     l1680:
  5866                           
  5867                           ;BMP180.c: 17:     i2c_restart();
  5868  0A88  120A  158A  20B3  120A  158A  	fcall	_i2c_restart
  5869  0A8D                     l1682:
  5870                           
  5871                           ;BMP180.c: 18:     i2c_write(adressR);
  5872  0A8D  30EF               	movlw	239
  5873  0A8E  120A  158A  20D9  120A  158A  	fcall	_i2c_write
  5874  0A93                     l1684:
  5875                           
  5876                           ;BMP180.c: 20:     for(int i = 0; i < 11;i++){
  5877  0A93  01F9               	clrf	BMP180_init@i
  5878  0A94  01FA               	clrf	BMP180_init@i+1
  5879  0A95                     l1690:
  5880                           
  5881                           ;BMP180.c: 21:         char aux[2];;BMP180.c: 22:         for(int j = 0; j < 2;j++){
  5882  0A95  01FB               	clrf	BMP180_init@j
  5883  0A96  01FC               	clrf	BMP180_init@j+1
  5884  0A97                     l1696:
  5885                           
  5886                           ;BMP180.c: 23:             aux[j] = i2c_read();
  5887  0A97  120A  158A  20EC  120A  158A  	fcall	_i2c_read
  5888  0A9C  00FF               	movwf	btemp+1
  5889  0A9D  087B               	movf	BMP180_init@j,w
  5890  0A9E  3E77               	addlw	(low (BMP180_init@aux| 0))& (0+255)
  5891  0A9F  0084               	movwf	4
  5892  0AA0  087F               	movf	btemp+1,w
  5893  0AA1  0080               	movwf	0
  5894  0AA2                     l1698:
  5895                           
  5896                           ;BMP180.c: 24:             if(i == 10 && j == 1){
  5897  0AA2  300A               	movlw	10
  5898  0AA3  0679               	xorwf	BMP180_init@i,w
  5899  0AA4  047A               	iorwf	BMP180_init@i+1,w
  5900  0AA5  1D03               	btfss	3,2
  5901  0AA6  2AA8               	goto	u1521
  5902  0AA7  2AA9               	goto	u1520
  5903  0AA8                     u1521:
  5904  0AA8  2ABA               	goto	l1704
  5905  0AA9                     u1520:
  5906  0AA9                     l1700:
  5907  0AA9  037B               	decf	BMP180_init@j,w
  5908  0AAA  047C               	iorwf	BMP180_init@j+1,w
  5909  0AAB  1D03               	btfss	3,2
  5910  0AAC  2AAE               	goto	u1531
  5911  0AAD  2AAF               	goto	u1530
  5912  0AAE                     u1531:
  5913  0AAE  2ABA               	goto	l1704
  5914  0AAF                     u1530:
  5915  0AAF                     l1702:
  5916                           
  5917                           ;BMP180.c: 25:                 i2c_sendNACK();
  5918  0AAF  120A  158A  2050  120A  158A  	fcall	_i2c_sendNACK
  5919                           
  5920                           ;BMP180.c: 26:                 i2c_stop();
  5921  0AB4  120A  158A  2081  120A  158A  	fcall	_i2c_stop
  5922                           
  5923                           ;BMP180.c: 27:             }
  5924  0AB9  2ABF               	goto	l1706
  5925  0ABA                     l1704:
  5926                           
  5927                           ;BMP180.c: 29:                 i2c_sendACK();
  5928  0ABA  160A  118A  27F7  120A  158A  	fcall	_i2c_sendACK
  5929  0ABF                     l1706:
  5930                           
  5931                           ;BMP180.c: 31:             dataEprom[i] = (aux[0] << 8)|(aux[1]);
  5932  0ABF  0878               	movf	BMP180_init@aux+1,w
  5933  0AC0  00F1               	movwf	??_BMP180_init
  5934  0AC1  0877               	movf	BMP180_init@aux,w
  5935  0AC2  00F2               	movwf	??_BMP180_init+1
  5936  0AC3  3000               	movlw	0
  5937  0AC4  1BF2               	btfsc	??_BMP180_init+1,7
  5938  0AC5  30FF               	movlw	255
  5939  0AC6  00F3               	movwf	??_BMP180_init+2
  5940  0AC7  00F4               	movwf	??_BMP180_init+3
  5941  0AC8  0879               	movf	BMP180_init@i,w
  5942  0AC9  00F5               	movwf	??_BMP180_init+4
  5943  0ACA  3001               	movlw	1
  5944  0ACB                     u1545:
  5945  0ACB  1003               	clrc
  5946  0ACC  0DF5               	rlf	??_BMP180_init+4,f
  5947  0ACD  3EFF               	addlw	-1
  5948  0ACE  1D03               	skipz
  5949  0ACF  2ACB               	goto	u1545
  5950  0AD0  1003               	clrc
  5951  0AD1  0D75               	rlf	??_BMP180_init+4,w
  5952  0AD2  3E90               	addlw	(low (_dataEprom| (0+256)))& (0+255)
  5953  0AD3  0084               	movwf	4
  5954  0AD4  0871               	movf	??_BMP180_init,w
  5955  0AD5  1783               	bsf	3,7	;select IRP bank3
  5956  0AD6  0080               	movwf	0
  5957  0AD7  0A84               	incf	4,f
  5958  0AD8  0872               	movf	??_BMP180_init+1,w
  5959  0AD9  0080               	movwf	0
  5960  0ADA  0A84               	incf	4,f
  5961  0ADB  0873               	movf	??_BMP180_init+2,w
  5962  0ADC  0080               	movwf	0
  5963  0ADD  0A84               	incf	4,f
  5964  0ADE  0874               	movf	??_BMP180_init+3,w
  5965  0ADF  0080               	movwf	0
  5966  0AE0                     l1708:
  5967                           
  5968                           ;BMP180.c: 32:         }
  5969  0AE0  3001               	movlw	1
  5970  0AE1  07FB               	addwf	BMP180_init@j,f
  5971  0AE2  1803               	skipnc
  5972  0AE3  0AFC               	incf	BMP180_init@j+1,f
  5973  0AE4  3000               	movlw	0
  5974  0AE5  07FC               	addwf	BMP180_init@j+1,f
  5975  0AE6                     l1710:
  5976  0AE6  087C               	movf	BMP180_init@j+1,w
  5977  0AE7  3A80               	xorlw	128
  5978  0AE8  00FF               	movwf	btemp+1
  5979  0AE9  3080               	movlw	128
  5980  0AEA  027F               	subwf	btemp+1,w
  5981  0AEB  1D03               	skipz
  5982  0AEC  2AEF               	goto	u1555
  5983  0AED  3002               	movlw	2
  5984  0AEE  027B               	subwf	BMP180_init@j,w
  5985  0AEF                     u1555:
  5986  0AEF  1C03               	skipc
  5987  0AF0  2AF2               	goto	u1551
  5988  0AF1  2AF3               	goto	u1550
  5989  0AF2                     u1551:
  5990  0AF2  2A97               	goto	l1696
  5991  0AF3                     u1550:
  5992  0AF3                     l1712:
  5993                           
  5994                           ;BMP180.c: 33:     }
  5995  0AF3  3001               	movlw	1
  5996  0AF4  07F9               	addwf	BMP180_init@i,f
  5997  0AF5  1803               	skipnc
  5998  0AF6  0AFA               	incf	BMP180_init@i+1,f
  5999  0AF7  3000               	movlw	0
  6000  0AF8  07FA               	addwf	BMP180_init@i+1,f
  6001  0AF9                     l1714:
  6002  0AF9  087A               	movf	BMP180_init@i+1,w
  6003  0AFA  3A80               	xorlw	128
  6004  0AFB  00FF               	movwf	btemp+1
  6005  0AFC  3080               	movlw	128
  6006  0AFD  027F               	subwf	btemp+1,w
  6007  0AFE  1D03               	skipz
  6008  0AFF  2B02               	goto	u1565
  6009  0B00  300B               	movlw	11
  6010  0B01  0279               	subwf	BMP180_init@i,w
  6011  0B02                     u1565:
  6012  0B02  1C03               	skipc
  6013  0B03  2B05               	goto	u1561
  6014  0B04  2B06               	goto	u1560
  6015  0B05                     u1561:
  6016  0B05  2A95               	goto	l1690
  6017  0B06                     u1560:
  6018  0B06                     l166:
  6019  0B06  0008               	return
  6020  0B07                     __end_of_BMP180_init:
  6021                           
  6022                           	psect	text19
  6023  08D9                     __ptext19:	
  6024 ;; *************** function _i2c_write *****************
  6025 ;; Defined at:
  6026 ;;		line 55 in file "i2c.c"
  6027 ;; Parameters:    Size  Location     Type
  6028 ;;  dato            1    wreg     unsigned char 
  6029 ;; Auto vars:     Size  Location     Type
  6030 ;;  dato            1    0[COMMON] unsigned char 
  6031 ;; Return value:  Size  Location     Type
  6032 ;;                  1    wreg      unsigned char 
  6033 ;; Registers used:
  6034 ;;		wreg, status,2, status,0, pclath, cstack
  6035 ;; Tracked objects:
  6036 ;;		On entry : 0/0
  6037 ;;		On exit  : 0/0
  6038 ;;		Unchanged: 0/0
  6039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6040 ;;      Params:         0       0       0       0       0
  6041 ;;      Locals:         1       0       0       0       0
  6042 ;;      Temps:          0       0       0       0       0
  6043 ;;      Totals:         1       0       0       0       0
  6044 ;;Total ram usage:        1 bytes
  6045 ;; Hardware stack levels used:    1
  6046 ;; Hardware stack levels required when called:    1
  6047 ;; This function calls:
  6048 ;;		_i2c_idle
  6049 ;; This function is called by:
  6050 ;;		_BMP180_init
  6051 ;;		_BMP180_readTemperature
  6052 ;;		_BMP180_readPreassure
  6053 ;; This function uses a non-reentrant model
  6054 ;;
  6055                           
  6056                           
  6057                           ;psect for function _i2c_write
  6058  08D9                     _i2c_write:
  6059                           
  6060                           ;incstack = 0
  6061                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  6062                           ;i2c_write@dato stored from wreg
  6063  08D9  00F0               	movwf	i2c_write@dato
  6064  08DA                     l1526:
  6065                           
  6066                           ;i2c.c: 56:     i2c_idle();
  6067  08DA  120A  158A  2059  120A  158A  	fcall	_i2c_idle
  6068  08DF                     l1528:
  6069                           
  6070                           ;i2c.c: 57:     SSPBUF = dato;
  6071  08DF  0870               	movf	i2c_write@dato,w
  6072  08E0  1283               	bcf	3,5	;RP0=0, select bank0
  6073  08E1  1303               	bcf	3,6	;RP1=0, select bank0
  6074  08E2  0093               	movwf	19	;volatile
  6075  08E3                     l1530:	
  6076                           ;i2c.c: 58:     while(SSPSTAT & 0x05);
  6077                           
  6078  08E3  1683               	bsf	3,5	;RP0=1, select bank1
  6079  08E4  1303               	bcf	3,6	;RP1=0, select bank1
  6080  08E5  0814               	movf	20,w	;volatile
  6081  08E6  3905               	andlw	5
  6082  08E7  1D03               	btfss	3,2
  6083  08E8  28EA               	goto	u1241
  6084  08E9  28EB               	goto	u1240
  6085  08EA                     u1241:
  6086  08EA  28E3               	goto	l1530
  6087  08EB                     u1240:
  6088  08EB                     l103:
  6089  08EB  0008               	return
  6090  08EC                     __end_of_i2c_write:
  6091                           
  6092                           	psect	text20
  6093  0881                     __ptext20:	
  6094 ;; *************** function _i2c_stop *****************
  6095 ;; Defined at:
  6096 ;;		line 40 in file "i2c.c"
  6097 ;; Parameters:    Size  Location     Type
  6098 ;;		None
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;		None
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  1    wreg      void 
  6103 ;; Registers used:
  6104 ;;		None
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6110 ;;      Params:         0       0       0       0       0
  6111 ;;      Locals:         0       0       0       0       0
  6112 ;;      Temps:          0       0       0       0       0
  6113 ;;      Totals:         0       0       0       0       0
  6114 ;;Total ram usage:        0 bytes
  6115 ;; Hardware stack levels used:    1
  6116 ;; This function calls:
  6117 ;;		Nothing
  6118 ;; This function is called by:
  6119 ;;		_BMP180_init
  6120 ;;		_BMP180_readTemperature
  6121 ;;		_BMP180_readPreassure
  6122 ;; This function uses a non-reentrant model
  6123 ;;
  6124                           
  6125                           
  6126                           ;psect for function _i2c_stop
  6127  0881                     _i2c_stop:
  6128  0881                     l1516:	
  6129                           ;incstack = 0
  6130                           ; Regs used in _i2c_stop: []
  6131                           
  6132                           
  6133                           ;i2c.c: 41:     SSPCON2bits.PEN = 1;
  6134  0881  1683               	bsf	3,5	;RP0=1, select bank1
  6135  0882  1303               	bcf	3,6	;RP1=0, select bank1
  6136  0883  1511               	bsf	17,2	;volatile
  6137  0884                     l82:	
  6138                           ;i2c.c: 42:     while(SSPCON2bits.PEN);
  6139                           
  6140  0884  1911               	btfsc	17,2	;volatile
  6141  0885  2887               	goto	u1201
  6142  0886  2888               	goto	u1200
  6143  0887                     u1201:
  6144  0887  2884               	goto	l82
  6145  0888                     u1200:
  6146  0888                     l85:
  6147  0888  1283               	bcf	3,5	;RP0=0, select bank0
  6148  0889  1D8C               	btfss	12,3	;volatile
  6149  088A  288C               	goto	u1211
  6150  088B  288D               	goto	u1210
  6151  088C                     u1211:
  6152  088C  2888               	goto	l85
  6153  088D                     u1210:
  6154  088D                     l87:
  6155                           
  6156                           ;i2c.c: 44:     SSPIF = 0;
  6157  088D  118C               	bcf	12,3	;volatile
  6158  088E                     l88:
  6159  088E  0008               	return
  6160  088F                     __end_of_i2c_stop:
  6161                           
  6162                           	psect	text21
  6163  08C6                     __ptext21:	
  6164 ;; *************** function _i2c_start *****************
  6165 ;; Defined at:
  6166 ;;		line 23 in file "i2c.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;		None
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;		None
  6171 ;; Return value:  Size  Location     Type
  6172 ;;                  1    wreg      void 
  6173 ;; Registers used:
  6174 ;;		wreg, status,2, status,0, pclath, cstack
  6175 ;; Tracked objects:
  6176 ;;		On entry : 0/0
  6177 ;;		On exit  : 0/0
  6178 ;;		Unchanged: 0/0
  6179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6180 ;;      Params:         0       0       0       0       0
  6181 ;;      Locals:         0       0       0       0       0
  6182 ;;      Temps:          0       0       0       0       0
  6183 ;;      Totals:         0       0       0       0       0
  6184 ;;Total ram usage:        0 bytes
  6185 ;; Hardware stack levels used:    1
  6186 ;; Hardware stack levels required when called:    1
  6187 ;; This function calls:
  6188 ;;		_i2c_idle
  6189 ;; This function is called by:
  6190 ;;		_BMP180_init
  6191 ;;		_BMP180_readTemperature
  6192 ;;		_BMP180_readPreassure
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           
  6196                           
  6197                           ;psect for function _i2c_start
  6198  08C6                     _i2c_start:
  6199  08C6                     l1508:	
  6200                           ;incstack = 0
  6201                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  6202                           
  6203                           
  6204                           ;i2c.c: 25:     i2c_idle();
  6205  08C6  120A  158A  2059  120A  158A  	fcall	_i2c_idle
  6206  08CB                     l1510:
  6207                           
  6208                           ;i2c.c: 26:     SSPCON2bits.SEN = 1;
  6209  08CB  1683               	bsf	3,5	;RP0=1, select bank1
  6210  08CC  1303               	bcf	3,6	;RP1=0, select bank1
  6211  08CD  1411               	bsf	17,0	;volatile
  6212  08CE                     l64:	
  6213                           ;i2c.c: 27:     while(SSPCON2bits.SEN == 1);
  6214                           
  6215  08CE  1811               	btfsc	17,0	;volatile
  6216  08CF  28D1               	goto	u1161
  6217  08D0  28D2               	goto	u1160
  6218  08D1                     u1161:
  6219  08D1  28CE               	goto	l64
  6220  08D2                     u1160:
  6221  08D2                     l67:
  6222  08D2  1283               	bcf	3,5	;RP0=0, select bank0
  6223  08D3  1D8C               	btfss	12,3	;volatile
  6224  08D4  28D6               	goto	u1171
  6225  08D5  28D7               	goto	u1170
  6226  08D6                     u1171:
  6227  08D6  28D2               	goto	l67
  6228  08D7                     u1170:
  6229  08D7                     l69:
  6230                           
  6231                           ;i2c.c: 29:     SSPIF = 0;
  6232  08D7  118C               	bcf	12,3	;volatile
  6233  08D8                     l70:
  6234  08D8  0008               	return
  6235  08D9                     __end_of_i2c_start:
  6236                           
  6237                           	psect	text22
  6238  0850                     __ptext22:	
  6239 ;; *************** function _i2c_sendNACK *****************
  6240 ;; Defined at:
  6241 ;;		line 73 in file "i2c.c"
  6242 ;; Parameters:    Size  Location     Type
  6243 ;;		None
  6244 ;; Auto vars:     Size  Location     Type
  6245 ;;		None
  6246 ;; Return value:  Size  Location     Type
  6247 ;;                  1    wreg      void 
  6248 ;; Registers used:
  6249 ;;		None
  6250 ;; Tracked objects:
  6251 ;;		On entry : 0/0
  6252 ;;		On exit  : 0/0
  6253 ;;		Unchanged: 0/0
  6254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6255 ;;      Params:         0       0       0       0       0
  6256 ;;      Locals:         0       0       0       0       0
  6257 ;;      Temps:          0       0       0       0       0
  6258 ;;      Totals:         0       0       0       0       0
  6259 ;;Total ram usage:        0 bytes
  6260 ;; Hardware stack levels used:    1
  6261 ;; This function calls:
  6262 ;;		Nothing
  6263 ;; This function is called by:
  6264 ;;		_BMP180_init
  6265 ;;		_BMP180_readTemperature
  6266 ;;		_BMP180_readPreassure
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270                           
  6271                           ;psect for function _i2c_sendNACK
  6272  0850                     _i2c_sendNACK:
  6273  0850                     l1532:	
  6274                           ;incstack = 0
  6275                           ; Regs used in _i2c_sendNACK: []
  6276                           
  6277                           
  6278                           ;i2c.c: 74:     SSPCON2bits.ACKDT = 1;
  6279  0850  1683               	bsf	3,5	;RP0=1, select bank1
  6280  0851  1303               	bcf	3,6	;RP1=0, select bank1
  6281  0852  1691               	bsf	17,5	;volatile
  6282                           
  6283                           ;i2c.c: 75:     SSPCON2bits.ACKEN = 1;
  6284  0853  1611               	bsf	17,4	;volatile
  6285  0854                     l106:	
  6286                           ;i2c.c: 76:     while(SSPCON2bits.ACKEN == 1);
  6287                           
  6288  0854  1A11               	btfsc	17,4	;volatile
  6289  0855  2857               	goto	u1251
  6290  0856  2858               	goto	u1250
  6291  0857                     u1251:
  6292  0857  2854               	goto	l106
  6293  0858                     u1250:
  6294  0858                     l109:
  6295  0858  0008               	return
  6296  0859                     __end_of_i2c_sendNACK:
  6297                           
  6298                           	psect	text23
  6299  17F7                     __ptext23:	
  6300 ;; *************** function _i2c_sendACK *****************
  6301 ;; Defined at:
  6302 ;;		line 79 in file "i2c.c"
  6303 ;; Parameters:    Size  Location     Type
  6304 ;;		None
  6305 ;; Auto vars:     Size  Location     Type
  6306 ;;		None
  6307 ;; Return value:  Size  Location     Type
  6308 ;;                  1    wreg      void 
  6309 ;; Registers used:
  6310 ;;		None
  6311 ;; Tracked objects:
  6312 ;;		On entry : 0/0
  6313 ;;		On exit  : 0/0
  6314 ;;		Unchanged: 0/0
  6315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6316 ;;      Params:         0       0       0       0       0
  6317 ;;      Locals:         0       0       0       0       0
  6318 ;;      Temps:          0       0       0       0       0
  6319 ;;      Totals:         0       0       0       0       0
  6320 ;;Total ram usage:        0 bytes
  6321 ;; Hardware stack levels used:    1
  6322 ;; This function calls:
  6323 ;;		Nothing
  6324 ;; This function is called by:
  6325 ;;		_BMP180_init
  6326 ;;		_BMP180_readTemperature
  6327 ;;		_BMP180_readPreassure
  6328 ;; This function uses a non-reentrant model
  6329 ;;
  6330                           
  6331                           
  6332                           ;psect for function _i2c_sendACK
  6333  17F7                     _i2c_sendACK:
  6334  17F7                     l1534:	
  6335                           ;incstack = 0
  6336                           ; Regs used in _i2c_sendACK: []
  6337                           
  6338                           
  6339                           ;i2c.c: 80:     SSPCON2bits.ACKDT = 0;
  6340  17F7  1683               	bsf	3,5	;RP0=1, select bank1
  6341  17F8  1303               	bcf	3,6	;RP1=0, select bank1
  6342  17F9  1291               	bcf	17,5	;volatile
  6343                           
  6344                           ;i2c.c: 81:     SSPCON2bits.ACKEN = 1;
  6345  17FA  1611               	bsf	17,4	;volatile
  6346  17FB                     l112:	
  6347                           ;i2c.c: 82:     while(SSPCON2bits.ACKEN == 1);
  6348                           
  6349  17FB  1A11               	btfsc	17,4	;volatile
  6350  17FC  2FFE               	goto	u1261
  6351  17FD  2FFF               	goto	u1260
  6352  17FE                     u1261:
  6353  17FE  2FFB               	goto	l112
  6354  17FF                     u1260:
  6355  17FF                     l115:
  6356  17FF  0008               	return
  6357  1800                     __end_of_i2c_sendACK:
  6358                           
  6359                           	psect	text24
  6360  08B3                     __ptext24:	
  6361 ;; *************** function _i2c_restart *****************
  6362 ;; Defined at:
  6363 ;;		line 32 in file "i2c.c"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;		None
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;		None
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  1    wreg      void 
  6370 ;; Registers used:
  6371 ;;		wreg, status,2, status,0, pclath, cstack
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6377 ;;      Params:         0       0       0       0       0
  6378 ;;      Locals:         0       0       0       0       0
  6379 ;;      Temps:          0       0       0       0       0
  6380 ;;      Totals:         0       0       0       0       0
  6381 ;;Total ram usage:        0 bytes
  6382 ;; Hardware stack levels used:    1
  6383 ;; Hardware stack levels required when called:    1
  6384 ;; This function calls:
  6385 ;;		_i2c_idle
  6386 ;; This function is called by:
  6387 ;;		_BMP180_init
  6388 ;;		_BMP180_readTemperature
  6389 ;;		_BMP180_readPreassure
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           
  6393                           
  6394                           ;psect for function _i2c_restart
  6395  08B3                     _i2c_restart:
  6396  08B3                     l1512:	
  6397                           ;incstack = 0
  6398                           ; Regs used in _i2c_restart: [wreg+status,2+status,0+pclath+cstack]
  6399                           
  6400                           
  6401                           ;i2c.c: 33:     i2c_idle();
  6402  08B3  120A  158A  2059  120A  158A  	fcall	_i2c_idle
  6403  08B8                     l1514:
  6404                           
  6405                           ;i2c.c: 34:     SSPCON2bits.RSEN = 1;
  6406  08B8  1683               	bsf	3,5	;RP0=1, select bank1
  6407  08B9  1303               	bcf	3,6	;RP1=0, select bank1
  6408  08BA  1491               	bsf	17,1	;volatile
  6409  08BB                     l73:	
  6410                           ;i2c.c: 35:     while(SSPCON2bits.RSEN == 1);
  6411                           
  6412  08BB  1891               	btfsc	17,1	;volatile
  6413  08BC  28BE               	goto	u1181
  6414  08BD  28BF               	goto	u1180
  6415  08BE                     u1181:
  6416  08BE  28BB               	goto	l73
  6417  08BF                     u1180:
  6418  08BF                     l76:
  6419  08BF  1283               	bcf	3,5	;RP0=0, select bank0
  6420  08C0  1D8C               	btfss	12,3	;volatile
  6421  08C1  28C3               	goto	u1191
  6422  08C2  28C4               	goto	u1190
  6423  08C3                     u1191:
  6424  08C3  28BF               	goto	l76
  6425  08C4                     u1190:
  6426  08C4                     l78:
  6427                           
  6428                           ;i2c.c: 37:     SSPIF = 0;
  6429  08C4  118C               	bcf	12,3	;volatile
  6430  08C5                     l79:
  6431  08C5  0008               	return
  6432  08C6                     __end_of_i2c_restart:
  6433                           
  6434                           	psect	text25
  6435  08EC                     __ptext25:	
  6436 ;; *************** function _i2c_read *****************
  6437 ;; Defined at:
  6438 ;;		line 47 in file "i2c.c"
  6439 ;; Parameters:    Size  Location     Type
  6440 ;;		None
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;		None
  6443 ;; Return value:  Size  Location     Type
  6444 ;;                  1    wreg      unsigned char 
  6445 ;; Registers used:
  6446 ;;		wreg, status,2, status,0, pclath, cstack
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/0
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6452 ;;      Params:         0       0       0       0       0
  6453 ;;      Locals:         0       0       0       0       0
  6454 ;;      Temps:          0       0       0       0       0
  6455 ;;      Totals:         0       0       0       0       0
  6456 ;;Total ram usage:        0 bytes
  6457 ;; Hardware stack levels used:    1
  6458 ;; Hardware stack levels required when called:    1
  6459 ;; This function calls:
  6460 ;;		_i2c_idle
  6461 ;; This function is called by:
  6462 ;;		_BMP180_init
  6463 ;;		_BMP180_readTemperature
  6464 ;;		_BMP180_readPreassure
  6465 ;; This function uses a non-reentrant model
  6466 ;;
  6467                           
  6468                           
  6469                           ;psect for function _i2c_read
  6470  08EC                     _i2c_read:
  6471  08EC                     l1518:	
  6472                           ;incstack = 0
  6473                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  6474                           
  6475                           
  6476                           ;i2c.c: 48:     i2c_idle();
  6477  08EC  120A  158A  2059  120A  158A  	fcall	_i2c_idle
  6478  08F1                     l1520:
  6479                           
  6480                           ;i2c.c: 49:     SSPCON2bits.RCEN = 1;
  6481  08F1  1683               	bsf	3,5	;RP0=1, select bank1
  6482  08F2  1303               	bcf	3,6	;RP1=0, select bank1
  6483  08F3  1591               	bsf	17,3	;volatile
  6484  08F4                     l91:	
  6485                           ;i2c.c: 50:     while(SSPCON2bits.RCEN == 1);
  6486                           
  6487  08F4  1991               	btfsc	17,3	;volatile
  6488  08F5  28F7               	goto	u1221
  6489  08F6  28F8               	goto	u1220
  6490  08F7                     u1221:
  6491  08F7  28F4               	goto	l91
  6492  08F8                     u1220:
  6493  08F8                     l94:
  6494  08F8  1C14               	btfss	20,0	;volatile
  6495  08F9  28FB               	goto	u1231
  6496  08FA  28FC               	goto	u1230
  6497  08FB                     u1231:
  6498  08FB  28F8               	goto	l94
  6499  08FC                     u1230:
  6500  08FC                     l1522:
  6501                           
  6502                           ;i2c.c: 52:     return SSPBUF;
  6503  08FC  1283               	bcf	3,5	;RP0=0, select bank0
  6504  08FD  1303               	bcf	3,6	;RP1=0, select bank0
  6505  08FE  0813               	movf	19,w	;volatile
  6506  08FF                     l97:
  6507  08FF  0008               	return
  6508  0900                     __end_of_i2c_read:
  6509                           
  6510                           	psect	text26
  6511  0859                     __ptext26:	
  6512 ;; *************** function _i2c_idle *****************
  6513 ;; Defined at:
  6514 ;;		line 84 in file "i2c.c"
  6515 ;; Parameters:    Size  Location     Type
  6516 ;;		None
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;		None
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  1    wreg      void 
  6521 ;; Registers used:
  6522 ;;		wreg, status,2
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6528 ;;      Params:         0       0       0       0       0
  6529 ;;      Locals:         0       0       0       0       0
  6530 ;;      Temps:          0       0       0       0       0
  6531 ;;      Totals:         0       0       0       0       0
  6532 ;;Total ram usage:        0 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; This function calls:
  6535 ;;		Nothing
  6536 ;; This function is called by:
  6537 ;;		_i2c_start
  6538 ;;		_i2c_restart
  6539 ;;		_i2c_read
  6540 ;;		_i2c_write
  6541 ;; This function uses a non-reentrant model
  6542 ;;
  6543                           
  6544                           
  6545                           ;psect for function _i2c_idle
  6546  0859                     _i2c_idle:
  6547  0859                     l1418:	
  6548                           ;incstack = 0
  6549                           ; Regs used in _i2c_idle: [wreg+status,2]
  6550                           
  6551  0859                     l1420:	
  6552                           ;i2c.c: 85:     while((SSPCON2 & 0x1F)|| (SSPSTAT & 0x04));
  6553                           
  6554  0859  1683               	bsf	3,5	;RP0=1, select bank1
  6555  085A  1303               	bcf	3,6	;RP1=0, select bank1
  6556  085B  0811               	movf	17,w	;volatile
  6557  085C  391F               	andlw	31
  6558  085D  1D03               	btfss	3,2
  6559  085E  2860               	goto	u1011
  6560  085F  2861               	goto	u1010
  6561  0860                     u1011:
  6562  0860  2859               	goto	l1420
  6563  0861                     u1010:
  6564  0861                     l1422:
  6565  0861  1914               	btfsc	20,2	;volatile
  6566  0862  2864               	goto	u1021
  6567  0863  2865               	goto	u1020
  6568  0864                     u1021:
  6569  0864  2859               	goto	l1420
  6570  0865                     u1020:
  6571  0865                     l121:
  6572  0865  0008               	return
  6573  0866                     __end_of_i2c_idle:
  6574                           
  6575                           	psect	text27
  6576  0873                     __ptext27:	
  6577 ;; *************** function _i2c_init *****************
  6578 ;; Defined at:
  6579 ;;		line 13 in file "i2c.c"
  6580 ;; Parameters:    Size  Location     Type
  6581 ;;		None
  6582 ;; Auto vars:     Size  Location     Type
  6583 ;;		None
  6584 ;; Return value:  Size  Location     Type
  6585 ;;                  1    wreg      void 
  6586 ;; Registers used:
  6587 ;;		wreg, status,2
  6588 ;; Tracked objects:
  6589 ;;		On entry : 0/0
  6590 ;;		On exit  : 0/0
  6591 ;;		Unchanged: 0/0
  6592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6593 ;;      Params:         0       0       0       0       0
  6594 ;;      Locals:         0       0       0       0       0
  6595 ;;      Temps:          0       0       0       0       0
  6596 ;;      Totals:         0       0       0       0       0
  6597 ;;Total ram usage:        0 bytes
  6598 ;; Hardware stack levels used:    1
  6599 ;; This function calls:
  6600 ;;		Nothing
  6601 ;; This function is called by:
  6602 ;;		_BMP180_init
  6603 ;; This function uses a non-reentrant model
  6604 ;;
  6605                           
  6606                           
  6607                           ;psect for function _i2c_init
  6608  0873                     _i2c_init:
  6609  0873                     l1500:	
  6610                           ;incstack = 0
  6611                           ; Regs used in _i2c_init: [wreg+status,2]
  6612                           
  6613                           
  6614                           ;i2c.c: 15:     TRISCbits.TRISC3 = 1;
  6615  0873  1683               	bsf	3,5	;RP0=1, select bank1
  6616  0874  1303               	bcf	3,6	;RP1=0, select bank1
  6617  0875  1587               	bsf	7,3	;volatile
  6618                           
  6619                           ;i2c.c: 16:     TRISCbits.TRISC4 = 1;
  6620  0876  1607               	bsf	7,4	;volatile
  6621  0877                     l1502:
  6622                           
  6623                           ;i2c.c: 17:     SSPADD = 0x09;
  6624  0877  3009               	movlw	9
  6625  0878  0093               	movwf	19	;volatile
  6626                           
  6627                           ;i2c.c: 18:     SSPSTAT = 0x80;
  6628  0879  3080               	movlw	128
  6629  087A  0094               	movwf	20	;volatile
  6630  087B                     l1504:
  6631                           
  6632                           ;i2c.c: 19:     SSPCON2 = 0x00;
  6633  087B  0191               	clrf	17	;volatile
  6634  087C                     l1506:
  6635                           
  6636                           ;i2c.c: 20:     SSPCON = 0x28;
  6637  087C  3028               	movlw	40
  6638  087D  1283               	bcf	3,5	;RP0=0, select bank0
  6639  087E  1303               	bcf	3,6	;RP1=0, select bank0
  6640  087F  0094               	movwf	20	;volatile
  6641  0880                     l61:
  6642  0880  0008               	return
  6643  0881                     __end_of_i2c_init:
  6644  0002                     
  6645                           	psect	functab
  6646  0003                     __pfunctab:
  6647  0003                     __fptable:
  6648  0003                     fptable:
  6649  0003  00FF               	movwf	(btemp+1)& (0+127)
  6650  0004  3000               	movlw	high fptable
  6651  0005  008A               	movwf	10
  6652  0006  087F               	movf	(btemp+1)& (0+127),w
  6653  0007  0782               	addwf	2,f
  6654  0008                     fpbase:
  6655  0008  2808               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  6656  0009                     fp__putch:
  6657  0009  120A  118A  280E   	ljmp	_putch
  6658  000C                     __end_of__fptable:
  6659  007E                     btemp	set	126	;btemp
  6660  007E                     wtemp0	set	126
  6661                           
  6662                           	psect	config
  6663                           
  6664                           ;Config register CONFIG1 @ 0x2007
  6665                           ;	Oscillator Selection bits
  6666                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  6667                           ;	Watchdog Timer Enable bit
  6668                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6669                           ;	Power-up Timer Enable bit
  6670                           ;	PWRTE = OFF, PWRT disabled
  6671                           ;	RE3/MCLR pin function select bit
  6672                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  6673                           ;	Code Protection bit
  6674                           ;	CP = OFF, Program memory code protection is disabled
  6675                           ;	Data Code Protection bit
  6676                           ;	CPD = OFF, Data memory code protection is disabled
  6677                           ;	Brown Out Reset Selection bits
  6678                           ;	BOREN = ON, BOR enabled
  6679                           ;	Internal External Switchover bit
  6680                           ;	IESO = ON, Internal/External Switchover mode is enabled
  6681                           ;	Fail-Safe Clock Monitor Enabled bit
  6682                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6683                           ;	Low Voltage Programming Enable bit
  6684                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  6685                           ;	In-Circuit Debugger Mode bit
  6686                           ;	DEBUG = 0x1, unprogrammed default
  6687  2007                     	org	8199
  6688  2007  3FF4               	dw	16372
  6689                           
  6690                           ;Config register CONFIG2 @ 0x2008
  6691                           ;	Brown-out Reset Selection bit
  6692                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  6693                           ;	Flash Program Memory Self Write Enable bits
  6694                           ;	WRT = OFF, Write protection off
  6695  2008                     	org	8200
  6696  2008  3FFF               	dw	16383

Data Sizes:
    Strings     26
    Constant    40
    Data        4
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     55      75
    BANK1            80     80      80
    BANK3            96      0      44
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_2(CODE[8]), STR_1(CODE[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 25
		 -> main@buffer(BANK1[25]), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 25
		 -> NULL(NULL[0]), main@buffer(BANK1[25]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_3(CODE[10]), STR_2(CODE[8]), STR_1(CODE[8]), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 25
		 -> NULL(NULL[0]), main@buffer(BANK1[25]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(BANK0[2]), printf@pb(BANK0[2]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_3(CODE[10]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    S797__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    S797__prbuf$ptr	PTR unsigned char  size(1) Largest target is 25
		 -> NULL(NULL[0]), main@buffer(BANK1[25]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 25
		 -> NULL(NULL[0]), main@buffer(BANK1[25]), 

    lcd_string@c	PTR unsigned char  size(1) Largest target is 25
		 -> main@buffer(BANK1[25]), 


Critical Paths under _main in COMMON

    _lcd_string->_lcd_write
    _lcd_init->_lcd_cmd
    _lcd_clear->_lcd_cmd
    _BMP180_readTemperature->___aldiv
    _BMP180_readPreassure->___aldiv
    _BMP180_readPreassure->___lldiv
    __doprnt->___lldiv
    ___llmod->___lldiv
    ___aldiv->___lmul
    _BMP180_init->_i2c_write

Critical Paths under _main in BANK0

    _main->_BMP180_readPreassure
    _sprintf->__doprnt
    _BMP180_readTemperature->___aldiv
    _BMP180_readPreassure->_printf
    _printf->__doprnt
    __doprnt->___llmod

Critical Paths under _main in BANK1

    _main->_BMP180_readPreassure

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0   16815
                                             52 BANK0      3     3      0
                                             47 BANK1     33    33      0
                        _BMP180_init
               _BMP180_readPreassure
             _BMP180_readTemperature
                          _lcd_clear
                           _lcd_init
                         _lcd_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                              9     4      5    2581
                                             26 BANK0      9     4      5
                            __doprnt
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           1     1      0     133
                                              2 COMMON     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      22
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0      22
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _BMP180_readTemperature                              51    47      4    4786
                                             14 BANK0     26    22      4
                        _BMP180_wait
                            ___aldiv
                             ___lmul
                           _i2c_read
                        _i2c_restart
                        _i2c_sendACK
                       _i2c_sendNACK
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _BMP180_readPreassure                                65    61      4    8831
                                             34 BANK0     18    14      4
                                              0 BANK1     47    47      0
                        _BMP180_wait
                            ___aldiv
                            ___awdiv
                            ___lldiv
                             ___lmul
                           _i2c_read
                        _i2c_restart
                        _i2c_sendACK
                       _i2c_sendNACK
                          _i2c_start
                           _i2c_stop
                          _i2c_write
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               8     4      4    2340
                                             26 BANK0      8     4      4
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             24    22      2    2196
                                             10 BANK0     16    14      2
                   Absolute function *
                            ___lldiv
                            ___llmod
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     0      1     159
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     311
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8    1916
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8    2732
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _BMP180_wait                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _BMP180_init                                         12    12      0     294
                                              1 COMMON    12    12      0
                           _i2c_init
                           _i2c_read
                        _i2c_restart
                        _i2c_sendACK
                       _i2c_sendNACK
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_sendNACK                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_sendACK                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_restart                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BMP180_init
     _i2c_init
     _i2c_read
       _i2c_idle
     _i2c_restart
       _i2c_idle
     _i2c_sendACK
     _i2c_sendNACK
     _i2c_start
       _i2c_idle
     _i2c_stop
     _i2c_write
       _i2c_idle
   _BMP180_readPreassure
     _BMP180_wait
     ___aldiv
       ___lmul (ARG)
     ___awdiv
     ___lldiv
     ___lmul
     _i2c_read
       _i2c_idle
     _i2c_restart
       _i2c_idle
     _i2c_sendACK
     _i2c_sendNACK
     _i2c_start
       _i2c_idle
     _i2c_stop
     _i2c_write
       _i2c_idle
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         _putch *
   _BMP180_readTemperature
     _BMP180_wait
     ___aldiv
       ___lmul (ARG)
     ___lmul
     _i2c_read
       _i2c_idle
     _i2c_restart
       _i2c_idle
     _i2c_sendACK
     _i2c_sendNACK
     _i2c_start
       _i2c_idle
     _i2c_stop
     _i2c_write
       _i2c_idle
   _lcd_clear
     _lcd_cmd
   _lcd_init
     _lcd_cmd
   _lcd_string
     _lcd_write
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lldiv *
       ___llmod *
         ___lldiv (ARG)
       _putch *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      2C       9       45.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     50      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     37      4B       5       93.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      D5      12        0.0%
ABS                  0      0      D5       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Feb 27 21:45:48 2021

                              pc 0002                      _SSPSTATbits 0094                               _B5 005B  
                             l61 0880                               l70 08D8                               l64 08CE  
                             l73 08BB                               l82 0884                               l91 08F4  
                             l67 08D2                               l76 08BF                               l69 08D7  
                             l85 0888                               l94 08F8                               l78 08C4  
                             l79 08C5                               l87 088D                               l88 088E  
                             l97 08FF                     ___awdiv@sign 0075                               _x1 0063  
                             _x2 005F                               _te 0057                               fsr 0004  
                            l103 08EB                              l112 17FB                              l121 0865  
                            l106 0854                              l115 17FF                              l203 0916  
                            l109 0858                              l303 09B5                              l325 0A71  
                            l173 0611                              l166 0B06                              l174 07D1  
                            l511 0A0B                              l191 0872                              l177 0017  
                            l169 0FFF                              l354 0B1B                              l442 007E  
                            l194 094E                              l364 0BA3                              l188 08A0  
                            l197 08B2                              l746 0931                              l764 0C91  
                            l791 000E                              l767 0CB2                              l788 0E03  
                            l798 096F                              u900 0A30                              u901 0A2F  
                            u920 0A4B                              u921 0A4A                              u915 0A32  
                            u940 0A69                              u941 0A68                              u925 0A47  
                            u950 09C0                              u935 0A5B                              u951 09BF  
                            u880 0A1C                              u881 0A1B                              u970 09D4  
                            u971 09D3                              u980 09E6                              u981 09E5  
                            u965 09C5                              u895 0A21                              u985 09E2  
                            u995 09F5                              fsr0 0004                              indf 0000  
           __size_of_BMP180_init 0095             __size_of_BMP180_wait 0009                             l1400 09C3  
                           l1410 09F4                             l1402 09CC                             l1500 0873  
                           l1420 0859                             l1412 09FD                             l1404 09D0  
                           l1502 0877                             l1422 0861                             l1510 08CB  
                           l1406 09D4                             l1414 0A03                             l1430 0C71  
                           l1504 087B                             l1520 08F1                             l1512 08B3  
                           l1600 0B52                             l1408 09E6                             l1440 0C92  
                           l1432 0C80                             l1424 0C62                             l1506 087C  
                           l1418 0859                             l1522 08FC                             l1514 08B8  
                           l1530 08E3                             l1610 0B85                             l1602 0B5B  
                           l1370 0A0C                             l1450 0CEA                             l1442 0CB6  
                           l1434 0C88                             l1426 0C63                             l1532 0850  
                           l1508 08C6                             l1516 0881                             l1700 0AA9  
                           l1604 0B6D                             l1612 0B8B                             l1620 0018  
                           l1380 0A30                             l1372 0A1C                             l1452 0CF5  
                           l1444 0CCB                             l1428 0C69                             l1436 0C8F  
                           l1540 091B                             l1518 08EC                             l1534 17F7  
                           l1526 08DA                             l1710 0AE6                             l1702 0AAF  
                           l1614 0B90                             l1606 0B7B                             l1630 0028  
                           l1622 0019                             l1390 0A63                             l1382 0A39  
                           l1374 0A1F                             l1470 0D46                             l1462 0D2E  
                           l1446 0CE2                             l1542 091F                             l1550 0936  
                           l1528 08DF                             l1712 0AF3                             l1704 0ABA  
                           l1536 000F                             l1616 0B9B                             l1608 0B7C  
                           l1640 003C                             l1632 002D                             l1624 001D  
                           l1384 0A4B                             l1376 0A28                             l1392 0A69  
                           l1480 0DBA                             l1472 0D53                             l1464 0D32  
                           l1448 0CE6                             l1544 0923                             l1800 0113  
                           l1720 0E25                             l1552 0938                             l1560 08A7  
                           l1714 0AF9                             l1706 0ABF                             l1650 0062  
                           l1642 0043                             l1634 0031                             l1626 0022  
                           l1570 0993                             l1386 0A59                             l1378 0A2C  
                           l1482 0DC2                             l1474 0D5B                             l1466 0D38  
                           l1458 0CF7                             l1490 0DED                             l1538 091A  
                           l1810 02D8                             l1802 019E                             l1730 0F11  
                           l1722 0E53                             l1554 0942                             l1562 08AF  
                           l1708 0AE0                             l1580 0B0A                             l1660 007A  
                           l1652 0063                             l1644 0047                             l1636 0033  
                           l1628 0024                             l1572 099C                             l1564 0970  
                           l1388 0A5A                             l1396 09B6                             l1484 0DCF  
                           l1468 0D3E                             l1476 0D61                             l1492 0E01  
                           l1820 04D2                             l1812 036C                             l1804 01D0  
                           l1732 0F7C                             l1724 0E58                             l1716 0E04  
                           l1548 0933                             l1556 08A2                             l1670 0A72  
                           l1590 0B36                             l1582 0B0E                             l1654 006A  
                           l1646 004B                             l1638 0039                             l1574 09AD  
                           l1566 0978                             l1398 09C0                             l1486 0DD7  
                           l1478 0D6B                             l1830 05F1                             l1822 04EE  
                           l1814 03BB                             l1806 01F6                             l1734 0F9F  
                           l1726 0E6F                             l1718 0E20                             l1558 08A5  
                           l1750 0969                             l1742 0952                             l1680 0A88  
                           l1672 0A72                             l1592 0B3E                             l1584 0B1F  
                           l1648 005C                             l1656 0070                             l1568 097C  
                           l1488 0DDD                             l1832 07BB                             l1824 055F  
                           l1816 0403                             l1808 023E                             l1736 0FD8  
                           l1728 0EA4                             l1664 088F                             l1760 090E  
                           l1744 0956                             l1840 0BB0                             l1690 0A95  
                           l1682 0A8D                             l1674 0A77                             l1594 0B41  
                           l1586 0B2A                             l1578 0B07                             l1658 0075  
                           l1826 05BC                             l1818 0452                             l1770 0084  
                           l1762 007F                             l1738 0FF7                             l1666 0894  
                           l1754 0901                             l1746 0957                             l1850 0BD7  
                           l1842 0BB5                             l1684 0A93                             l1676 0A7C  
                           l1596 0B4A                             l1588 0B2E                             l1828 05D0  
                           l1780 00AA                             l1772 008A                             l1764 007F  
                           l1668 0866                             l1756 0902                             l1748 095B  
                           l1860 0C48                             l1852 0BFB                             l1844 0BBA  
                           l1836 0BA4                             l1678 0A82                             l1598 0B4E  
                           l1790 00E7                             l1782 00B0                             l1774 0090  
                           l1766 007F                             l1758 090A                             l1862 0C56  
                           l1854 0C01                             l1846 0BBA                             l1838 0BAB  
                           l1696 0A97                             l1792 00FA                             l1784 00B6  
                           l1776 0096                             l1768 007F                             l1856 0C1E  
                           l1848 0BBA                             l1698 0AA2                             l1794 00FF  
                           l1786 00BB                             l1778 00A5                             l1858 0C42  
                           l1884 0CA4                             l1796 0109                             l1788 00C1  
                           l1798 010E                             STR_1 0840                             STR_2 0838  
                           STR_3 082E                             u1000 0A03                             u1001 0A02  
                           u1010 0861                             u1011 0860                             u1020 0865  
                           u1100 0D3E                             u1021 0864                             u1101 0D3D  
                           u1110 0D46                             u1030 0C69                             u1111 0D45  
                           u1031 0C68                             u1200 0888                             u1040 0C71  
                           u1201 0887                             u1041 0C70                             u1210 088D  
                           u1130 0DC2                             u1050 0CB6                             u1211 088C  
                           u1131 0DC1                             u1051 0CB5                             u1220 08F8  
                           u1140 0DED                             u1060 0CE6                             u1221 08F7  
                           u1141 0DEC                             u1125 0D76                             u1061 0CE5  
                           u1230 08FC                             u1310 09AD                             u1150 0E01  
                           u1231 08FB                             u1311 09AC                             u1151 0E00  
                           u1160 08D2                             u1240 08EB                             u1400 0B8B  
                           u1320 0B0E                             u1080 0D2D                             u1161 08D1  
                           u1241 08EA                             u1401 0B8A                             u1321 0B0D  
                           u1305 099D                             u1081 0D2C                             u1250 0858  
                           u1170 08D7                             u1410 0B90                             u1330 0B1F  
                           u1090 0D38                             u1251 0857                             u1171 08D6  
                           u1411 0B8F                             u1331 0B1E                             u1091 0D37  
                           u1075 0CFA                             u1180 08BF                             u1260 17FF  
                           u1340 0B3E                             u1500 0070                             u1420 001D  
                           u1181 08BE                             u1261 17FE                             u1341 0B3D  
                           u1501 006F                             u1421 001C                             u1085 0D29  
                           u1190 08C4                             u1510 0075                             u1430 0028  
                           u1270 097C                             u1191 08C3                             u1511 0074  
                           u1431 0027                             u1271 097B                             u1520 0AA9  
                           u1360 0B52                             u1440 0039                             u1600 0FB6  
                           u1521 0AA8                             u1361 0B51                             u1441 0038  
                           u1281 0985                             u1601 0FB7                             u1530 0AAF  
                           u1282 098C                             u1602 0FBC                             u1610 0916  
                           u1531 0AAE                             u1355 0B43                             u1283 0993  
                           u1603 0FBD                             u1611 0915                             u1380 0B6D  
                           u1460 004B                             u1700 0505                             u1620 0161  
                           u1381 0B6C                             u1461 004A                             u1701 0508  
                           u1550 0AF3                             u1710 0546                             u1702 050F  
                           u1630 016B                             u1551 0AF2                             u1375 0B54  
                           u1455 003D                             u1295 0995                             u1703 0512  
                           u1631 016C                             u1560 0B06                             u1480 005C  
                           u1640 017D                             u1632 0171                             u1561 0B05  
                           u1545 0ACB                             u1385 0B69                             u1481 005B  
                           u1721 0582                             u1641 017E                             u1633 0172  
                           u1625 015C                             u1730 05D0                             u1722 0585  
                           u1650 01AF                             u1642 0183                             u1570 0E91  
                           u1555 0AEF                             u1395 0B7D                             u1475 004C  
                           u1731 05CF                             u1723 058C                             u1715 0541  
                           u1651 01B0                             u1643 0184                             u1571 0E92  
                           u1740 0760                             u1724 058F                             u1660 0320  
                           u1652 01B5                             u1572 0E97                             u1565 0B02  
                           u1485 0058                             u1741 0761                             u1733 05CC  
                           u1725 0596                             u1653 01B6                             u1581 0EC1  
                           u1573 0E98                             u1742 0766                             u1726 0599  
                           u1670 032A                             u1590 0F62                             u1582 0EC4  
                           u1495 0064                             u1743 0767                             u1671 032B  
                           u1583 0ECB                             u1680 033C                             u1672 0330  
                           u1584 0ECE                             u1681 033D                             u1673 0331  
                           u1665 031B                             u1585 0ED5                             u1690 04A2  
                           u1682 0342                             u1586 0ED8                             u1691 04A3  
                           u1683 0343                             u1595 0F5D                             u1692 04A8  
                           u1693 04A9                             u1757 0C50                             u1767 08AA  
                           u1777 093D                             u1787 0949                             u1797 0013  
                           _main 0BA4                             btemp 007E                             start 0000  
                  ?_i2c_sendNACK 0070                    ??_i2c_sendACK 0070                      lcd_string@c 0072  
                  ??_i2c_restart 0070          ?_BMP180_readTemperature 002E                  __end_of___aldiv 0BA4  
                          ?_main 0070                  __end_of___awdiv 007F                  __end_of___lldiv 0A72  
                ___awdiv@divisor 0070                  __end_of___llmod 0A0C                  ___awdiv@counter 0074  
                          _PORTD 0008                  __end_of__doprnt 0E04                            _TRISB 0086  
                          _TRISD 0088                            _SSPIF 0063              ___lmul@multiplicand 0074  
                __end_of_lcd_cmd 094F                  __end_of_dpowers 082E                            _putch 000E  
                          fpbase 0008                            pclath 000A                            status 0003  
                          wtemp0 007E                  __end_of_sprintf 0970                   ??_i2c_sendNACK 0070  
                __initialization 07D2                     __end_of_main 0C5F                 __end_of_i2c_idle 0866  
               __end_of_i2c_init 0881                 __end_of_i2c_read 0900   __end_of_BMP180_readTemperature 1000  
               __end_of_i2c_stop 088F              __end_of_i2c_sendACK 1800        _BMP180_readPreassure$1065 00B3  
            __end_of_i2c_restart 08C6                           ??_main 0054                 ___llmod@dividend 0024  
               ___awdiv@dividend 0072       BMP180_readTemperature@temp 0044                           ?_putch 0070  
                         _ANSELH 0189                           _SSPADD 0093                           _SSPCON 0014  
                         _SSPBUF 0013                 __end_of__fptable 000C               __size_of_i2c_start 0013  
             __size_of_i2c_write 0013                 __end_of_lcd_init 08A1                           ___lmul 0970  
                      ??___aldiv 007D                        ??___awdiv 0074                        ??___lldiv 0078  
                      ??___llmod 0028                        ??__doprnt 002C                 ___awdiv@quotient 0076  
                   __doprnt@flag 0033                           _printf 0917                     __doprnt@prec 0031  
                      ??_lcd_cmd 0070                           fptable 0003                           fptotal 0002  
                         putch@c 0070                        ??_sprintf 007E          __end_of__initialization 07FC  
                    _i2c_sendACK 17F7                   __pcstackCOMMON 0070                      _i2c_restart 08B3  
                   __pidataBANK0 17F3                    __end_of_putch 000F     __end_of_BMP180_readPreassure 07D2  
              __end_of_i2c_start 08D9                __end_of_i2c_write 08EC             __end_of_i2c_sendNACK 0859  
             __size_of_lcd_clear 000D                       __doprnt@ap 002B                       __doprnt@pb 0039  
             __size_of_lcd_write 0012                          ??_putch 0071                       __pbssBANK0 0057  
                     __pbssBANK3 0190                        ?_i2c_idle 0070                        ?_i2c_init 0070  
                      ?_i2c_read 0070                        ?_i2c_stop 0070                       __pmaintext 0BA4  
                        ?___lmul 0070                   ___lmul@product 0079                          ?_printf 003A  
                  ??_BMP180_init 0071                    ??_BMP180_wait 0070                          _SSPCON2 0091  
                     _lcd_string 0900                        ?_lcd_init 0070                          _SSPSTAT 0094  
                     __stringtab 0800                       ??_i2c_idle 0070                       ??_i2c_init 0070  
                     ??_i2c_read 0070                       ??_i2c_stop 0070                     BMP180_init@i 0079  
                   BMP180_init@j 007B                __end_of_lcd_clear 0873                          ___aldiv 0B07  
                        ___awdiv 0018                  __size_of___lmul 0046                __end_of_lcd_write 08B3  
                        ___lldiv 0A0C                          ___llmod 09B6                          __doprnt 0C5F  
                        _adressR 0069                          _adressW 0067                          __ptext1 094F  
                        __ptext2 0900                          __ptext3 08A1                          __ptext4 088F  
                        __ptext5 0866                          __ptext6 0932                          __ptext7 0E04  
                        __ptext8 007F                          __ptext9 0917                          _lcd_cmd 0932  
                __size_of_printf 001B      _BMP180_readTemperature$1064 0040                          _dpowers 0806  
               ___aldiv@dividend 0024                          _sprintf 094F                          clrloop0 0849  
                     ??_lcd_init 0073             end_of_initialization 07FC              __end_of_BMP180_init 0B07  
            __end_of_BMP180_wait 0018             _BMP180_readPreassure 007F                  ___lldiv@divisor 0070  
                ___lldiv@counter 007D                          printf@f 003E                 ___aldiv@quotient 002A  
          __size_of_i2c_sendNACK 0009                        _PORTBbits 0006                    i2c_write@dato 0070  
                      _TRISCbits 0087                      ?_lcd_string 0070            ?_BMP180_readPreassure 0042  
                     main@buffer 00CF                     _i2c_sendNACK 0850                     ?_i2c_sendACK 0070  
                     lcd_write@c 0071                     ?_i2c_restart 0070                   __end_of___lmul 09B6  
                 __end_of_printf 0932              start_initialization 07D2                      _BMP180_init 0A72  
                    _BMP180_wait 000F                        _i2c_start 08C6                        _i2c_write 08D9  
                 BMP180_init@aux 0077                  ___llmod@divisor 0020                  ___llmod@counter 0029  
              __size_of_i2c_idle 000D                __size_of_i2c_init 000E                __size_of_i2c_read 0014  
              __size_of_i2c_stop 000E         ??_BMP180_readTemperature 0032                         ??___lmul 0078  
                    __doprnt@val 0034                      __pdataBANK0 0067              __size_of_lcd_string 0017  
                       ??_printf 007E                        ___latbits 0002                    __pcstackBANK0 0020  
                  __pcstackBANK1 00A0                       ?_i2c_start 0070                       ?_i2c_write 0070  
              __size_of__fptable 0009           ??_BMP180_readPreassure 0046                __size_of_lcd_init 0012  
                      __doprnt@c 0038                        __doprnt@f 002A                        _dataEprom 0190  
                      __pfunctab 0003                         ?___aldiv 0020                         ?___awdiv 0070  
                       ?___lldiv 0070                         ?___llmod 0020                         ?__doprnt 002A  
                      _lcd_clear 0866                        __pstrings 0800                         ?_lcd_cmd 0070  
                      _lcd_write 08A1                         ?_sprintf 003A         BMP180_readPreassure@pres 00A4  
                 __size_of_putch 0001                  ___aldiv@divisor 0020                  ___aldiv@counter 0028  
                      clear_ram0 0848  __size_of_BMP180_readTemperature 01FC             __size_of_i2c_sendACK 0009  
           __size_of_i2c_restart 0013                       ?_lcd_clear 0070                      __stringbase 0805  
                     ?_lcd_write 0070                        main@press 00EC                      ??_i2c_start 0070  
                    ??_i2c_write 0070                     ??_lcd_string 0072                ___lmul@multiplier 0070  
                       _i2c_idle 0859                         _i2c_init 0873                         _i2c_read 08EC  
                       _i2c_stop 0881                 __size_of___aldiv 009D                 __size_of___awdiv 0067  
               __size_of___lldiv 0066                 __size_of___llmod 0056               __end_of_lcd_string 0917  
               __size_of__doprnt 01A5               __end_of__stringtab 0806                 __size_of_lcd_cmd 001D  
                       __fptable 0003           _BMP180_readTemperature 0E04                     ?_BMP180_init 0070  
                   ?_BMP180_wait 0070                         __ptext10 0C5F                         __ptext11 000E  
                       __ptext20 0881                         __ptext12 09B6                         __ptext21 08C6  
                       __ptext13 0A0C                         __ptext22 0850                         __ptext14 0970  
                       __ptext23 17F7                         __ptext15 0018                         __ptext24 08B3  
                       __ptext16 0B07                         __ptext25 08EC                         __ptext17 000F  
                       __ptext26 0859                         __ptext18 0A72                         __ptext27 0873  
                       __ptext19 08D9                         _lcd_init 088F                 __size_of_sprintf 0021  
                  __size_of_main 00BB          BMP180_readTemperature@T 003C                         lcd_cmd@c 0072  
                       fp__putch 0009                      ??_lcd_clear 0073                      ??_lcd_write 0070  
                main@temperatura 00E8                        sprintf@ap 0040                        sprintf@pb 0041  
                      sprintf@wh 003F                 ___lldiv@dividend 0074           BMP180_readPreassure@B3 00A0  
         BMP180_readPreassure@B4 00AF           BMP180_readPreassure@B6 00CB           BMP180_readPreassure@B7 00B7  
         BMP180_readPreassure@p1 00A8           BMP180_readPreassure@p2 00AC           BMP180_readPreassure@p3 00AE  
         BMP180_readPreassure@x1 00C3           BMP180_readPreassure@x2 00BF           BMP180_readPreassure@x3 00BB  
                      stringcode 0800                         printf@ap 003F                         printf@pb 0040  
                       sprintf@f 003A                 ___lldiv@quotient 0079            BMP180_readPreassure@p 00C7  
                       stringdir 0800                         stringtab 0800                     ___aldiv@sign 0029  
                    _SSPCON2bits 0091    __size_of_BMP180_readPreassure 0753  
