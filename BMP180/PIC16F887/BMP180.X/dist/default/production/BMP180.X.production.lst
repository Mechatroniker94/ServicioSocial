

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Feb 11 06:25:32 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  0000                     	;# 
   216  0001                     	;# 
   217  0002                     	;# 
   218  0003                     	;# 
   219  0004                     	;# 
   220  0005                     	;# 
   221  0006                     	;# 
   222  0007                     	;# 
   223  0008                     	;# 
   224  0009                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000D                     	;# 
   229  000E                     	;# 
   230  000E                     	;# 
   231  000F                     	;# 
   232  0010                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0014                     	;# 
   237  0015                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  001D                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  0081                     	;# 
   251  0085                     	;# 
   252  0086                     	;# 
   253  0087                     	;# 
   254  0088                     	;# 
   255  0089                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  008F                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  0105                     	;# 
   279  0107                     	;# 
   280  0108                     	;# 
   281  0109                     	;# 
   282  010C                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  0185                     	;# 
   288  0187                     	;# 
   289  0188                     	;# 
   290  0189                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0008                     	;# 
   302  0009                     	;# 
   303  000A                     	;# 
   304  000B                     	;# 
   305  000C                     	;# 
   306  000D                     	;# 
   307  000E                     	;# 
   308  000E                     	;# 
   309  000F                     	;# 
   310  0010                     	;# 
   311  0011                     	;# 
   312  0012                     	;# 
   313  0013                     	;# 
   314  0014                     	;# 
   315  0015                     	;# 
   316  0015                     	;# 
   317  0016                     	;# 
   318  0017                     	;# 
   319  0018                     	;# 
   320  0019                     	;# 
   321  001A                     	;# 
   322  001B                     	;# 
   323  001B                     	;# 
   324  001C                     	;# 
   325  001D                     	;# 
   326  001E                     	;# 
   327  001F                     	;# 
   328  0081                     	;# 
   329  0085                     	;# 
   330  0086                     	;# 
   331  0087                     	;# 
   332  0088                     	;# 
   333  0089                     	;# 
   334  008C                     	;# 
   335  008D                     	;# 
   336  008E                     	;# 
   337  008F                     	;# 
   338  0090                     	;# 
   339  0091                     	;# 
   340  0092                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0094                     	;# 
   345  0095                     	;# 
   346  0096                     	;# 
   347  0097                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009A                     	;# 
   351  009B                     	;# 
   352  009C                     	;# 
   353  009D                     	;# 
   354  009E                     	;# 
   355  009F                     	;# 
   356  0105                     	;# 
   357  0107                     	;# 
   358  0108                     	;# 
   359  0109                     	;# 
   360  010C                     	;# 
   361  010C                     	;# 
   362  010D                     	;# 
   363  010E                     	;# 
   364  010F                     	;# 
   365  0185                     	;# 
   366  0187                     	;# 
   367  0188                     	;# 
   368  0189                     	;# 
   369  018C                     	;# 
   370  018D                     	;# 
   371  0000                     	;# 
   372  0001                     	;# 
   373  0002                     	;# 
   374  0003                     	;# 
   375  0004                     	;# 
   376  0005                     	;# 
   377  0006                     	;# 
   378  0007                     	;# 
   379  0008                     	;# 
   380  0009                     	;# 
   381  000A                     	;# 
   382  000B                     	;# 
   383  000C                     	;# 
   384  000D                     	;# 
   385  000E                     	;# 
   386  000E                     	;# 
   387  000F                     	;# 
   388  0010                     	;# 
   389  0011                     	;# 
   390  0012                     	;# 
   391  0013                     	;# 
   392  0014                     	;# 
   393  0015                     	;# 
   394  0015                     	;# 
   395  0016                     	;# 
   396  0017                     	;# 
   397  0018                     	;# 
   398  0019                     	;# 
   399  001A                     	;# 
   400  001B                     	;# 
   401  001B                     	;# 
   402  001C                     	;# 
   403  001D                     	;# 
   404  001E                     	;# 
   405  001F                     	;# 
   406  0081                     	;# 
   407  0085                     	;# 
   408  0086                     	;# 
   409  0087                     	;# 
   410  0088                     	;# 
   411  0089                     	;# 
   412  008C                     	;# 
   413  008D                     	;# 
   414  008E                     	;# 
   415  008F                     	;# 
   416  0090                     	;# 
   417  0091                     	;# 
   418  0092                     	;# 
   419  0093                     	;# 
   420  0093                     	;# 
   421  0093                     	;# 
   422  0094                     	;# 
   423  0095                     	;# 
   424  0096                     	;# 
   425  0097                     	;# 
   426  0098                     	;# 
   427  0099                     	;# 
   428  009A                     	;# 
   429  009B                     	;# 
   430  009C                     	;# 
   431  009D                     	;# 
   432  009E                     	;# 
   433  009F                     	;# 
   434  0105                     	;# 
   435  0107                     	;# 
   436  0108                     	;# 
   437  0109                     	;# 
   438  010C                     	;# 
   439  010C                     	;# 
   440  010D                     	;# 
   441  010E                     	;# 
   442  010F                     	;# 
   443  0185                     	;# 
   444  0187                     	;# 
   445  0188                     	;# 
   446  0189                     	;# 
   447  018C                     	;# 
   448  018D                     	;# 
   449                           
   450                           	psect	idataCOMMON
   451  05EE                     __pidataCOMMON:
   452                           
   453                           ;initializer for _adressR
   454  05EE  34EF               	retlw	239
   455  05EF  3400               	retlw	0
   456                           
   457                           	psect	idataBANK0
   458  05EC                     __pidataBANK0:
   459                           
   460                           ;initializer for _adressW
   461  05EC  34EE               	retlw	238
   462  05ED  3400               	retlw	0
   463                           
   464                           	psect	strings
   465  0003                     __pstrings:
   466  0003                     stringtab:
   467  0003                     __stringtab:
   468  0003                     stringcode:	
   469                           ;	String table - string pointers are 1 byte each
   470                           
   471  0003                     stringdir:
   472  0003  3000               	movlw	high stringdir
   473  0004  008A               	movwf	10
   474  0005  0804               	movf	4,w
   475  0006  0A84               	incf	4,f
   476  0007  0782               	addwf	2,f
   477  0008                     __stringbase:
   478  0008  3400               	retlw	0
   479  0009                     __end_of__stringtab:
   480  0009                     _dpowers:
   481  0009  3401               	retlw	1
   482  000A  3400               	retlw	0
   483  000B  340A               	retlw	10
   484  000C  3400               	retlw	0
   485  000D  3464               	retlw	100
   486  000E  3400               	retlw	0
   487  000F  34E8               	retlw	232
   488  0010  3403               	retlw	3
   489  0011  3410               	retlw	16
   490  0012  3427               	retlw	39
   491  0013                     __end_of_dpowers:
   492  0006                     _PORTBbits	set	6
   493  0008                     _PORTD	set	8
   494  0013                     _SSPBUF	set	19
   495  0014                     _SSPCON	set	20
   496  0063                     _SSPIF	set	99
   497  0094                     _SSPSTATbits	set	148
   498  0091                     _SSPCON2bits	set	145
   499  0091                     _SSPCON2	set	145
   500  0094                     _SSPSTAT	set	148
   501  0093                     _SSPADD	set	147
   502  0087                     _TRISCbits	set	135
   503  0086                     _TRISB	set	134
   504  0088                     _TRISD	set	136
   505  0189                     _ANSELH	set	393
   506  0013                     STR_1:
   507  0013  3464               	retlw	100	;'d'
   508  0014  3461               	retlw	97	;'a'
   509  0015  3474               	retlw	116	;'t'
   510  0016  346F               	retlw	111	;'o'
   511  0017  3420               	retlw	32	;' '
   512  0018  343D               	retlw	61	;'='
   513  0019  3420               	retlw	32	;' '
   514  001A  3425               	retlw	37	;'%'
   515  001B  3464               	retlw	100	;'d'
   516  001C  3400               	retlw	0
   517                           
   518                           	psect	cinit
   519  07DB                     start_initialization:	
   520                           ; #config settings
   521                           
   522  07DB                     __initialization:
   523                           
   524                           ; Initialize objects allocated to BANK0
   525  07DB  120A  118A  25EC  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   526  07E0  00E9               	movwf	__pdataBANK0& (0+127)
   527  07E1  120A  118A  25ED  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   528  07E6  00EA               	movwf	(__pdataBANK0+1)& (0+127)
   529                           
   530                           ; Initialize objects allocated to COMMON
   531  07E7  120A  118A  25EE  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   532  07EC  00FC               	movwf	__pdataCOMMON& (0+127)
   533  07ED  120A  118A  25EF  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   534  07F2  00FD               	movwf	(__pdataCOMMON+1)& (0+127)
   535                           
   536                           ; Clear objects allocated to BANK0
   537  07F3  1383               	bcf	3,7	;select IRP bank0
   538  07F4  3020               	movlw	low __pbssBANK0
   539  07F5  0084               	movwf	4
   540  07F6  3048               	movlw	low (__pbssBANK0+40)
   541  07F7  120A  118A  25F0  120A  118A  	fcall	clear_ram0
   542  07FC                     end_of_initialization:	
   543                           ;End of C runtime variable initialization code
   544                           
   545  07FC                     __end_of__initialization:
   546  07FC  0183               	clrf	3
   547  07FD  120A  118A  2E50   	ljmp	_main	;jump to C main() function
   548                           
   549                           	psect	dataCOMMON
   550  007C                     __pdataCOMMON:
   551  007C                     _adressR:
   552  007C                     	ds	2
   553                           
   554                           	psect	bssBANK0
   555  0020                     __pbssBANK0:
   556  0020                     _dataEprom:
   557  0020                     	ds	40
   558                           
   559                           	psect	dataBANK0
   560  0069                     __pdataBANK0:
   561  0069                     _adressW:
   562  0069                     	ds	2
   563                           
   564                           	psect	clrtext
   565  05F0                     clear_ram0:	
   566                           ;	Called with FSR containing the base address, and
   567                           ;	W with the last address+1
   568                           
   569  05F0  0064               	clrwdt	;clear the watchdog before getting into this loop
   570  05F1                     clrloop0:
   571  05F1  0180               	clrf	0	;clear RAM location pointed to by FSR
   572  05F2  0A84               	incf	4,f	;increment pointer
   573  05F3  0604               	xorwf	4,w	;XOR with final address
   574  05F4  1903               	btfsc	3,2	;have we reached the end yet?
   575  05F5  3400               	retlw	0	;all done for this memory range, return
   576  05F6  0604               	xorwf	4,w	;XOR again to restore value
   577  05F7  2DF1               	goto	clrloop0	;do the next byte
   578                           
   579                           	psect	cstackCOMMON
   580  0070                     __pcstackCOMMON:
   581  0070                     ?_lcd_init:
   582  0070                     ?_lcd_string:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_lcd_cmd:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ??_lcd_cmd:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_main:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_lcd_write:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ??_lcd_write:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?___lwdiv:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ___lwdiv@divisor:	
   604                           ; 2 bytes @ 0x0
   605                           
   606                           
   607                           ; 2 bytes @ 0x0
   608  0070                     	ds	1
   609  0071                     lcd_write@c:
   610                           
   611                           ; 1 bytes @ 0x1
   612  0071                     	ds	1
   613  0072                     ??_lcd_string:
   614  0072                     lcd_cmd@c:	
   615                           ; 1 bytes @ 0x2
   616                           
   617  0072                     lcd_string@c:	
   618                           ; 1 bytes @ 0x2
   619                           
   620  0072                     ___lwdiv@dividend:	
   621                           ; 1 bytes @ 0x2
   622                           
   623                           
   624                           ; 2 bytes @ 0x2
   625  0072                     	ds	1
   626  0073                     ??_lcd_init:
   627                           
   628                           ; 1 bytes @ 0x3
   629  0073                     	ds	1
   630  0074                     ??___lwdiv:
   631  0074                     ___lwdiv@quotient:	
   632                           ; 1 bytes @ 0x4
   633                           
   634                           
   635                           ; 2 bytes @ 0x4
   636  0074                     	ds	2
   637  0076                     ___lwdiv@counter:
   638                           
   639                           ; 1 bytes @ 0x6
   640  0076                     	ds	1
   641  0077                     ?___lwmod:
   642  0077                     ___lwmod@divisor:	
   643                           ; 2 bytes @ 0x7
   644                           
   645                           
   646                           ; 2 bytes @ 0x7
   647  0077                     	ds	2
   648  0079                     ___lwmod@dividend:
   649                           
   650                           ; 2 bytes @ 0x9
   651  0079                     	ds	2
   652  007B                     ??___lwmod:
   653  007B                     ___lwmod@counter:	
   654                           ; 1 bytes @ 0xB
   655                           
   656                           
   657                           ; 1 bytes @ 0xB
   658  007B                     	ds	1
   659  007C                     ??_main:
   660                           
   661                           	psect	cstackBANK0
   662  0048                     __pcstackBANK0:	
   663                           ; 1 bytes @ 0xC
   664                           
   665  0048                     ?_sprintf:
   666  0048                     sprintf@f:	
   667                           ; 2 bytes @ 0x0
   668                           
   669                           
   670                           ; 1 bytes @ 0x0
   671  0048                     	ds	3
   672  004B                     ??_sprintf:
   673                           
   674                           ; 1 bytes @ 0x3
   675  004B                     	ds	3
   676  004E                     sprintf@ap:
   677                           
   678                           ; 1 bytes @ 0x6
   679  004E                     	ds	1
   680  004F                     sprintf@flag:
   681                           
   682                           ; 1 bytes @ 0x7
   683  004F                     	ds	1
   684  0050                     sprintf@prec:
   685                           
   686                           ; 1 bytes @ 0x8
   687  0050                     	ds	1
   688  0051                     sprintf@val:
   689                           
   690                           ; 2 bytes @ 0x9
   691  0051                     	ds	2
   692  0053                     sprintf@sp:
   693                           
   694                           ; 1 bytes @ 0xB
   695  0053                     	ds	1
   696  0054                     sprintf@c:
   697                           
   698                           ; 1 bytes @ 0xC
   699  0054                     	ds	1
   700  0055                     main@buffer:
   701                           
   702                           ; 20 bytes @ 0xD
   703  0055                     	ds	20
   704                           
   705                           	psect	maintext
   706  0650                     __pmaintext:	
   707 ;;
   708 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   709 ;;
   710 ;; *************** function _main *****************
   711 ;; Defined at:
   712 ;;		line 15 in file "main.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;  buffer         20   13[BANK0 ] unsigned char [20]
   717 ;;  dato            1    0        unsigned char 
   718 ;; Return value:  Size  Location     Type
   719 ;;                  1    wreg      void 
   720 ;; Registers used:
   721 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   722 ;; Tracked objects:
   723 ;;		On entry : B00/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   727 ;;      Params:         0       0       0       0       0
   728 ;;      Locals:         0      21       0       0       0
   729 ;;      Temps:          0       0       0       0       0
   730 ;;      Totals:         0      21       0       0       0
   731 ;;Total ram usage:       21 bytes
   732 ;; Hardware stack levels required when called:    2
   733 ;; This function calls:
   734 ;;		_lcd_init
   735 ;;		_lcd_string
   736 ;;		_sprintf
   737 ;; This function is called by:
   738 ;;		Startup code after reset
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           
   743                           ;psect for function _main
   744  0650                     _main:
   745  0650                     l1198:	
   746                           ;incstack = 0
   747                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   748                           
   749                           
   750                           ;main.c: 17:     char buffer[20];;main.c: 18:     TRISD = 0x00;
   751  0650  1683               	bsf	3,5	;RP0=1, select bank1
   752  0651  1303               	bcf	3,6	;RP1=0, select bank1
   753  0652  0188               	clrf	8	;volatile
   754                           
   755                           ;main.c: 19:     TRISB = 0x00;
   756  0653  0186               	clrf	6	;volatile
   757                           
   758                           ;main.c: 20:     ANSELH = 0x00;
   759  0654  1683               	bsf	3,5	;RP0=1, select bank3
   760  0655  1703               	bsf	3,6	;RP1=1, select bank3
   761  0656  0189               	clrf	9	;volatile
   762  0657                     l1200:
   763                           
   764                           ;main.c: 21:     lcd_init();
   765  0657  120A  118A  25F8  120A  118A  	fcall	_lcd_init
   766  065C                     l1202:
   767                           
   768                           ;main.c: 42:     sprintf(buffer,"dato = %d",dato);
   769  065C  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   770  065D  00FF               	movwf	btemp+1
   771  065E  087F               	movf	btemp+1,w
   772  065F  1283               	bcf	3,5	;RP0=0, select bank0
   773  0660  1303               	bcf	3,6	;RP1=0, select bank0
   774  0661  00C8               	movwf	sprintf@f
   775  0662  3000               	movlw	0
   776  0663  00C9               	movwf	?_sprintf+1
   777  0664  00CA               	movwf	?_sprintf+2
   778  0665  3055               	movlw	(low (main@buffer| 0))& (0+255)
   779  0666  120A  118A  26F3  120A  118A  	fcall	_sprintf
   780  066B                     l1204:
   781                           
   782                           ;main.c: 43:     lcd_string(buffer);
   783  066B  3055               	movlw	(low (main@buffer| 0))& (0+255)
   784  066C  120A  118A  261C  120A  118A  	fcall	_lcd_string
   785  0671                     l17:	
   786                           ;main.c: 45:     while(1){
   787                           
   788  0671                     l18:	
   789                           ;main.c: 47:     }
   790                           
   791  0671  2E71               	goto	l17
   792  0672  120A  118A  2800   	ljmp	start
   793  0675                     __end_of_main:
   794                           
   795                           	psect	text1
   796  06F3                     __ptext1:	
   797 ;; *************** function _sprintf *****************
   798 ;; Defined at:
   799 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;  sp              1    wreg     PTR unsigned char 
   802 ;;		 -> main@buffer(20), 
   803 ;;  f               1    0[BANK0 ] PTR const unsigned char 
   804 ;;		 -> STR_1(10), 
   805 ;; Auto vars:     Size  Location     Type
   806 ;;  sp              1   11[BANK0 ] PTR unsigned char 
   807 ;;		 -> main@buffer(20), 
   808 ;;  tmpval          4    0        struct .
   809 ;;  val             2    9[BANK0 ] unsigned int 
   810 ;;  cp              2    0        PTR const unsigned char 
   811 ;;  len             2    0        unsigned int 
   812 ;;  c               1   12[BANK0 ] unsigned char 
   813 ;;  prec            1    8[BANK0 ] char 
   814 ;;  flag            1    7[BANK0 ] unsigned char 
   815 ;;  ap              1    6[BANK0 ] PTR void [1]
   816 ;;		 -> ?_sprintf(2), 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  2    0[BANK0 ] int 
   819 ;; Registers used:
   820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         0       3       0       0       0
   827 ;;      Locals:         0       7       0       0       0
   828 ;;      Temps:          0       3       0       0       0
   829 ;;      Totals:         0      13       0       0       0
   830 ;;Total ram usage:       13 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; Hardware stack levels required when called:    1
   833 ;; This function calls:
   834 ;;		___lwdiv
   835 ;;		___lwmod
   836 ;; This function is called by:
   837 ;;		_main
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           
   842                           ;psect for function _sprintf
   843  06F3                     _sprintf:
   844                           
   845                           ;incstack = 0
   846                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   847                           ;sprintf@sp stored from wreg
   848  06F3  1283               	bcf	3,5	;RP0=0, select bank0
   849  06F4  1303               	bcf	3,6	;RP1=0, select bank0
   850  06F5  00D3               	movwf	sprintf@sp
   851  06F6                     l1096:
   852                           
   853                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   854  06F6  3049               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   855  06F7  00FF               	movwf	btemp+1
   856  06F8  087F               	movf	btemp+1,w
   857  06F9  00CE               	movwf	sprintf@ap
   858                           
   859                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   860  06FA  2FC4               	goto	l1150
   861  06FB                     l1098:
   862                           
   863                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   864  06FB  3025               	movlw	37
   865  06FC  0654               	xorwf	sprintf@c,w
   866  06FD  1903               	btfsc	3,2
   867  06FE  2F00               	goto	u501
   868  06FF  2F01               	goto	u500
   869  0700                     u501:
   870  0700  2F0D               	goto	l1104
   871  0701                     u500:
   872  0701                     l1100:
   873                           
   874                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   875  0701  0854               	movf	sprintf@c,w
   876  0702  00FF               	movwf	btemp+1
   877  0703  0853               	movf	sprintf@sp,w
   878  0704  0084               	movwf	4
   879  0705  087F               	movf	btemp+1,w
   880  0706  1383               	bcf	3,7	;select IRP bank0
   881  0707  0080               	movwf	0
   882  0708                     l1102:
   883  0708  3001               	movlw	1
   884  0709  00FF               	movwf	btemp+1
   885  070A  087F               	movf	btemp+1,w
   886  070B  07D3               	addwf	sprintf@sp,f
   887                           
   888                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 559:    continue;
   889  070C  2FC4               	goto	l1150
   890  070D                     l1104:
   891                           
   892                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   893  070D  01CF               	clrf	sprintf@flag
   894  070E                     l1108:	
   895                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
   896                           
   897  070E  3001               	movlw	1
   898  070F  07C8               	addwf	sprintf@f,f
   899  0710  30FF               	movlw	-1
   900  0711  0748               	addwf	sprintf@f,w
   901  0712  0084               	movwf	4
   902  0713  120A  118A  2003  120A  118A  	fcall	stringdir
   903  0718  00D4               	movwf	sprintf@c
   904  0719  00CB               	movwf	??_sprintf
   905  071A  01CC               	clrf	??_sprintf+1
   906                           
   907                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   908                           ; Switch size 1, requested type "simple"
   909                           ; Number of cases is 1, Range of values is 0 to 0
   910                           ; switch strategies available:
   911                           ; Name         Instructions Cycles
   912                           ; simple_byte            4     3 (average)
   913                           ; direct_byte           11     8 (fixed)
   914                           ; jumptable            260     6 (fixed)
   915                           ;	Chosen strategy is simple_byte
   916  071B  084C               	movf	??_sprintf+1,w
   917  071C  3A00               	xorlw	0	; case 0
   918  071D  1903               	skipnz
   919  071E  2F20               	goto	l1264
   920  071F  2FC4               	goto	l1150
   921  0720                     l1264:
   922                           
   923                           ; Switch size 1, requested type "simple"
   924                           ; Number of cases is 3, Range of values is 0 to 105
   925                           ; switch strategies available:
   926                           ; Name         Instructions Cycles
   927                           ; simple_byte           10     6 (average)
   928                           ; jumptable            260     6 (fixed)
   929                           ;	Chosen strategy is simple_byte
   930  0720  084B               	movf	??_sprintf,w
   931  0721  3A00               	xorlw	0	; case 0
   932  0722  1903               	skipnz
   933  0723  2FD6               	goto	l1152
   934  0724  3A64               	xorlw	100	; case 100
   935  0725  1903               	skipnz
   936  0726  2F2B               	goto	l1110
   937  0727  3A0D               	xorlw	13	; case 105
   938  0728  1903               	skipnz
   939  0729  2F2B               	goto	l1110
   940  072A  2FC4               	goto	l1150
   941  072B                     l1110:
   942                           
   943                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
   944  072B  084E               	movf	sprintf@ap,w
   945  072C  0084               	movwf	4
   946  072D  1383               	bcf	3,7	;select IRP bank0
   947  072E  0800               	movf	0,w
   948  072F  00D1               	movwf	sprintf@val
   949  0730  0A84               	incf	4,f
   950  0731  0800               	movf	0,w
   951  0732  00D2               	movwf	sprintf@val+1
   952  0733                     l1112:
   953  0733  3002               	movlw	2
   954  0734  00FF               	movwf	btemp+1
   955  0735  087F               	movf	btemp+1,w
   956  0736  07CE               	addwf	sprintf@ap,f
   957  0737                     l1114:
   958                           
   959                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
   960  0737  1FD2               	btfss	sprintf@val+1,7
   961  0738  2F3A               	goto	u511
   962  0739  2F3B               	goto	u510
   963  073A                     u511:
   964  073A  2F44               	goto	l1120
   965  073B                     u510:
   966  073B                     l1116:
   967                           
   968                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
   969  073B  3003               	movlw	3
   970  073C  00FF               	movwf	btemp+1
   971  073D  087F               	movf	btemp+1,w
   972  073E  04CF               	iorwf	sprintf@flag,f
   973  073F                     l1118:
   974                           
   975                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
   976  073F  09D1               	comf	sprintf@val,f
   977  0740  09D2               	comf	sprintf@val+1,f
   978  0741  0AD1               	incf	sprintf@val,f
   979  0742  1903               	skipnz
   980  0743  0AD2               	incf	sprintf@val+1,f
   981  0744                     l1120:
   982                           
   983                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
   984  0744  01D4               	clrf	sprintf@c
   985  0745  0AD4               	incf	sprintf@c,f
   986  0746                     l1126:
   987                           
   988                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
   989  0746  0854               	movf	sprintf@c,w
   990  0747  00CB               	movwf	??_sprintf
   991  0748  074B               	addwf	??_sprintf,w
   992  0749  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
   993  074A  0084               	movwf	4
   994  074B  120A  118A  2003  120A  118A  	fcall	stringdir
   995  0750  00CC               	movwf	??_sprintf+1
   996  0751  120A  118A  2003  120A  118A  	fcall	stringdir
   997  0756  00CD               	movwf	??_sprintf+2
   998  0757  084D               	movf	??_sprintf+2,w
   999  0758  0252               	subwf	sprintf@val+1,w
  1000  0759  1D03               	skipz
  1001  075A  2F5D               	goto	u525
  1002  075B  084C               	movf	??_sprintf+1,w
  1003  075C  0251               	subwf	sprintf@val,w
  1004  075D                     u525:
  1005  075D  1803               	skipnc
  1006  075E  2F60               	goto	u521
  1007  075F  2F61               	goto	u520
  1008  0760                     u521:
  1009  0760  2F62               	goto	l1130
  1010  0761                     u520:
  1011  0761  2F6C               	goto	l1134
  1012  0762                     l1130:
  1013  0762  3001               	movlw	1
  1014  0763  00FF               	movwf	btemp+1
  1015  0764  087F               	movf	btemp+1,w
  1016  0765  07D4               	addwf	sprintf@c,f
  1017  0766                     l1132:
  1018  0766  3005               	movlw	5
  1019  0767  0654               	xorwf	sprintf@c,w
  1020  0768  1D03               	btfss	3,2
  1021  0769  2F6B               	goto	u531
  1022  076A  2F6C               	goto	u530
  1023  076B                     u531:
  1024  076B  2F46               	goto	l1126
  1025  076C                     u530:
  1026  076C                     l1134:
  1027                           
  1028                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1029  076C  084F               	movf	sprintf@flag,w
  1030  076D  3903               	andlw	3
  1031  076E  1903               	btfsc	3,2
  1032  076F  2F71               	goto	u541
  1033  0770  2F72               	goto	u540
  1034  0771                     u541:
  1035  0771  2F7D               	goto	l1140
  1036  0772                     u540:
  1037  0772                     l1136:
  1038                           
  1039                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1040  0772  302D               	movlw	45
  1041  0773  00FF               	movwf	btemp+1
  1042  0774  0853               	movf	sprintf@sp,w
  1043  0775  0084               	movwf	4
  1044  0776  087F               	movf	btemp+1,w
  1045  0777  1383               	bcf	3,7	;select IRP bank0
  1046  0778  0080               	movwf	0
  1047  0779                     l1138:
  1048  0779  3001               	movlw	1
  1049  077A  00FF               	movwf	btemp+1
  1050  077B  087F               	movf	btemp+1,w
  1051  077C  07D3               	addwf	sprintf@sp,f
  1052  077D                     l1140:
  1053                           
  1054                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1055  077D  0854               	movf	sprintf@c,w
  1056  077E  00FF               	movwf	btemp+1
  1057  077F  087F               	movf	btemp+1,w
  1058  0780  00D0               	movwf	sprintf@prec
  1059                           
  1060                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1061  0781  2FBB               	goto	l1148
  1062  0782                     l1142:
  1063                           
  1064                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1065  0782  300A               	movlw	10
  1066  0783  00F7               	movwf	___lwmod@divisor
  1067  0784  3000               	movlw	0
  1068  0785  00F8               	movwf	___lwmod@divisor+1
  1069  0786  0850               	movf	sprintf@prec,w
  1070  0787  00CB               	movwf	??_sprintf
  1071  0788  074B               	addwf	??_sprintf,w
  1072  0789  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1073  078A  0084               	movwf	4
  1074  078B  120A  118A  2003  120A  118A  	fcall	stringdir
  1075  0790  00F0               	movwf	___lwdiv@divisor
  1076  0791  120A  118A  2003  120A  118A  	fcall	stringdir
  1077  0796  00F1               	movwf	___lwdiv@divisor+1
  1078  0797  0852               	movf	sprintf@val+1,w
  1079  0798  00F3               	movwf	___lwdiv@dividend+1
  1080  0799  0851               	movf	sprintf@val,w
  1081  079A  00F2               	movwf	___lwdiv@dividend
  1082  079B  120A  118A  26AF  120A  118A  	fcall	___lwdiv
  1083  07A0  0871               	movf	?___lwdiv+1,w
  1084  07A1  00FA               	movwf	___lwmod@dividend+1
  1085  07A2  0870               	movf	?___lwdiv,w
  1086  07A3  00F9               	movwf	___lwmod@dividend
  1087  07A4  120A  118A  2675  120A  118A  	fcall	___lwmod
  1088  07A9  0877               	movf	?___lwmod,w
  1089  07AA  3E30               	addlw	48
  1090  07AB  00FF               	movwf	btemp+1
  1091  07AC  087F               	movf	btemp+1,w
  1092  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  1093  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  1094  07AF  00D4               	movwf	sprintf@c
  1095  07B0                     l1144:
  1096                           
  1097                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1098  07B0  0854               	movf	sprintf@c,w
  1099  07B1  00FF               	movwf	btemp+1
  1100  07B2  0853               	movf	sprintf@sp,w
  1101  07B3  0084               	movwf	4
  1102  07B4  087F               	movf	btemp+1,w
  1103  07B5  1383               	bcf	3,7	;select IRP bank0
  1104  07B6  0080               	movwf	0
  1105  07B7                     l1146:
  1106  07B7  3001               	movlw	1
  1107  07B8  00FF               	movwf	btemp+1
  1108  07B9  087F               	movf	btemp+1,w
  1109  07BA  07D3               	addwf	sprintf@sp,f
  1110  07BB                     l1148:
  1111                           
  1112                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1113  07BB  30FF               	movlw	255
  1114  07BC  00FF               	movwf	btemp+1
  1115  07BD  087F               	movf	btemp+1,w
  1116  07BE  07D0               	addwf	sprintf@prec,f
  1117  07BF  0A50               	incf	sprintf@prec,w
  1118  07C0  1D03               	btfss	3,2
  1119  07C1  2FC3               	goto	u551
  1120  07C2  2FC4               	goto	u550
  1121  07C3                     u551:
  1122  07C3  2F82               	goto	l1142
  1123  07C4                     u550:
  1124  07C4                     l1150:
  1125                           
  1126                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1127  07C4  3001               	movlw	1
  1128  07C5  07C8               	addwf	sprintf@f,f
  1129  07C6  30FF               	movlw	-1
  1130  07C7  0748               	addwf	sprintf@f,w
  1131  07C8  0084               	movwf	4
  1132  07C9  120A  118A  2003  120A  118A  	fcall	stringdir
  1133  07CE  00FF               	movwf	btemp+1
  1134  07CF  087F               	movf	btemp+1,w
  1135  07D0  00D4               	movwf	sprintf@c
  1136  07D1  0854               	movf	sprintf@c,w
  1137  07D2  1D03               	btfss	3,2
  1138  07D3  2FD5               	goto	u561
  1139  07D4  2FD6               	goto	u560
  1140  07D5                     u561:
  1141  07D5  2EFB               	goto	l1098
  1142  07D6                     u560:
  1143  07D6                     l1152:
  1144                           
  1145                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1146  07D6  0853               	movf	sprintf@sp,w
  1147  07D7  0084               	movwf	4
  1148  07D8  1383               	bcf	3,7	;select IRP bank0
  1149  07D9  0180               	clrf	0
  1150  07DA                     l270:
  1151  07DA  0008               	return
  1152  07DB                     __end_of_sprintf:
  1153                           
  1154                           	psect	text2
  1155  0675                     __ptext2:	
  1156 ;; *************** function ___lwmod *****************
  1157 ;; Defined at:
  1158 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;  divisor         2    7[COMMON] unsigned int 
  1161 ;;  dividend        2    9[COMMON] unsigned int 
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  counter         1   11[COMMON] unsigned char 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  2    7[COMMON] unsigned int 
  1166 ;; Registers used:
  1167 ;;		wreg, status,2, status,0, btemp+1
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1173 ;;      Params:         4       0       0       0       0
  1174 ;;      Locals:         1       0       0       0       0
  1175 ;;      Temps:          0       0       0       0       0
  1176 ;;      Totals:         5       0       0       0       0
  1177 ;;Total ram usage:        5 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; This function calls:
  1180 ;;		Nothing
  1181 ;; This function is called by:
  1182 ;;		_sprintf
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           
  1187                           ;psect for function ___lwmod
  1188  0675                     ___lwmod:
  1189  0675                     l1070:	
  1190                           ;incstack = 0
  1191                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1192                           
  1193  0675  0877               	movf	___lwmod@divisor,w
  1194  0676  0478               	iorwf	___lwmod@divisor+1,w
  1195  0677  1903               	btfsc	3,2
  1196  0678  2E7A               	goto	u441
  1197  0679  2E7B               	goto	u440
  1198  067A                     u441:
  1199  067A  2EAA               	goto	l1088
  1200  067B                     u440:
  1201  067B                     l1072:
  1202  067B  01FB               	clrf	___lwmod@counter
  1203  067C  0AFB               	incf	___lwmod@counter,f
  1204  067D  2E89               	goto	l1078
  1205  067E                     l1074:
  1206  067E  3001               	movlw	1
  1207  067F                     u455:
  1208  067F  1003               	clrc
  1209  0680  0DF7               	rlf	___lwmod@divisor,f
  1210  0681  0DF8               	rlf	___lwmod@divisor+1,f
  1211  0682  3EFF               	addlw	-1
  1212  0683  1D03               	skipz
  1213  0684  2E7F               	goto	u455
  1214  0685                     l1076:
  1215  0685  3001               	movlw	1
  1216  0686  00FF               	movwf	btemp+1
  1217  0687  087F               	movf	btemp+1,w
  1218  0688  07FB               	addwf	___lwmod@counter,f
  1219  0689                     l1078:
  1220  0689  1FF8               	btfss	___lwmod@divisor+1,7
  1221  068A  2E8C               	goto	u461
  1222  068B  2E8D               	goto	u460
  1223  068C                     u461:
  1224  068C  2E7E               	goto	l1074
  1225  068D                     u460:
  1226  068D                     l1080:
  1227  068D  0878               	movf	___lwmod@divisor+1,w
  1228  068E  027A               	subwf	___lwmod@dividend+1,w
  1229  068F  1D03               	skipz
  1230  0690  2E93               	goto	u475
  1231  0691  0877               	movf	___lwmod@divisor,w
  1232  0692  0279               	subwf	___lwmod@dividend,w
  1233  0693                     u475:
  1234  0693  1C03               	skipc
  1235  0694  2E96               	goto	u471
  1236  0695  2E97               	goto	u470
  1237  0696                     u471:
  1238  0696  2E9D               	goto	l1084
  1239  0697                     u470:
  1240  0697                     l1082:
  1241  0697  0877               	movf	___lwmod@divisor,w
  1242  0698  02F9               	subwf	___lwmod@dividend,f
  1243  0699  0878               	movf	___lwmod@divisor+1,w
  1244  069A  1C03               	skipc
  1245  069B  03FA               	decf	___lwmod@dividend+1,f
  1246  069C  02FA               	subwf	___lwmod@dividend+1,f
  1247  069D                     l1084:
  1248  069D  3001               	movlw	1
  1249  069E                     u485:
  1250  069E  1003               	clrc
  1251  069F  0CF8               	rrf	___lwmod@divisor+1,f
  1252  06A0  0CF7               	rrf	___lwmod@divisor,f
  1253  06A1  3EFF               	addlw	-1
  1254  06A2  1D03               	skipz
  1255  06A3  2E9E               	goto	u485
  1256  06A4                     l1086:
  1257  06A4  3001               	movlw	1
  1258  06A5  02FB               	subwf	___lwmod@counter,f
  1259  06A6  1D03               	btfss	3,2
  1260  06A7  2EA9               	goto	u491
  1261  06A8  2EAA               	goto	u490
  1262  06A9                     u491:
  1263  06A9  2E8D               	goto	l1080
  1264  06AA                     u490:
  1265  06AA                     l1088:
  1266  06AA  087A               	movf	___lwmod@dividend+1,w
  1267  06AB  00F8               	movwf	?___lwmod+1
  1268  06AC  0879               	movf	___lwmod@dividend,w
  1269  06AD  00F7               	movwf	?___lwmod
  1270  06AE                     l556:
  1271  06AE  0008               	return
  1272  06AF                     __end_of___lwmod:
  1273                           
  1274                           	psect	text3
  1275  06AF                     __ptext3:	
  1276 ;; *************** function ___lwdiv *****************
  1277 ;; Defined at:
  1278 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;  divisor         2    0[COMMON] unsigned int 
  1281 ;;  dividend        2    2[COMMON] unsigned int 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  quotient        2    4[COMMON] unsigned int 
  1284 ;;  counter         1    6[COMMON] unsigned char 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  2    0[COMMON] unsigned int 
  1287 ;; Registers used:
  1288 ;;		wreg, status,2, status,0, btemp+1
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1294 ;;      Params:         4       0       0       0       0
  1295 ;;      Locals:         3       0       0       0       0
  1296 ;;      Temps:          0       0       0       0       0
  1297 ;;      Totals:         7       0       0       0       0
  1298 ;;Total ram usage:        7 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; This function calls:
  1301 ;;		Nothing
  1302 ;; This function is called by:
  1303 ;;		_sprintf
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           
  1308                           ;psect for function ___lwdiv
  1309  06AF                     ___lwdiv:
  1310  06AF                     l1044:	
  1311                           ;incstack = 0
  1312                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1313                           
  1314  06AF  01F4               	clrf	___lwdiv@quotient
  1315  06B0  01F5               	clrf	___lwdiv@quotient+1
  1316  06B1                     l1046:
  1317  06B1  0870               	movf	___lwdiv@divisor,w
  1318  06B2  0471               	iorwf	___lwdiv@divisor+1,w
  1319  06B3  1903               	btfsc	3,2
  1320  06B4  2EB6               	goto	u371
  1321  06B5  2EB7               	goto	u370
  1322  06B6                     u371:
  1323  06B6  2EEE               	goto	l1066
  1324  06B7                     u370:
  1325  06B7                     l1048:
  1326  06B7  01F6               	clrf	___lwdiv@counter
  1327  06B8  0AF6               	incf	___lwdiv@counter,f
  1328  06B9  2EC5               	goto	l1054
  1329  06BA                     l1050:
  1330  06BA  3001               	movlw	1
  1331  06BB                     u385:
  1332  06BB  1003               	clrc
  1333  06BC  0DF0               	rlf	___lwdiv@divisor,f
  1334  06BD  0DF1               	rlf	___lwdiv@divisor+1,f
  1335  06BE  3EFF               	addlw	-1
  1336  06BF  1D03               	skipz
  1337  06C0  2EBB               	goto	u385
  1338  06C1                     l1052:
  1339  06C1  3001               	movlw	1
  1340  06C2  00FF               	movwf	btemp+1
  1341  06C3  087F               	movf	btemp+1,w
  1342  06C4  07F6               	addwf	___lwdiv@counter,f
  1343  06C5                     l1054:
  1344  06C5  1FF1               	btfss	___lwdiv@divisor+1,7
  1345  06C6  2EC8               	goto	u391
  1346  06C7  2EC9               	goto	u390
  1347  06C8                     u391:
  1348  06C8  2EBA               	goto	l1050
  1349  06C9                     u390:
  1350  06C9                     l1056:
  1351  06C9  3001               	movlw	1
  1352  06CA                     u405:
  1353  06CA  1003               	clrc
  1354  06CB  0DF4               	rlf	___lwdiv@quotient,f
  1355  06CC  0DF5               	rlf	___lwdiv@quotient+1,f
  1356  06CD  3EFF               	addlw	-1
  1357  06CE  1D03               	skipz
  1358  06CF  2ECA               	goto	u405
  1359  06D0  0871               	movf	___lwdiv@divisor+1,w
  1360  06D1  0273               	subwf	___lwdiv@dividend+1,w
  1361  06D2  1D03               	skipz
  1362  06D3  2ED6               	goto	u415
  1363  06D4  0870               	movf	___lwdiv@divisor,w
  1364  06D5  0272               	subwf	___lwdiv@dividend,w
  1365  06D6                     u415:
  1366  06D6  1C03               	skipc
  1367  06D7  2ED9               	goto	u411
  1368  06D8  2EDA               	goto	u410
  1369  06D9                     u411:
  1370  06D9  2EE1               	goto	l1062
  1371  06DA                     u410:
  1372  06DA                     l1058:
  1373  06DA  0870               	movf	___lwdiv@divisor,w
  1374  06DB  02F2               	subwf	___lwdiv@dividend,f
  1375  06DC  0871               	movf	___lwdiv@divisor+1,w
  1376  06DD  1C03               	skipc
  1377  06DE  03F3               	decf	___lwdiv@dividend+1,f
  1378  06DF  02F3               	subwf	___lwdiv@dividend+1,f
  1379  06E0                     l1060:
  1380  06E0  1474               	bsf	___lwdiv@quotient,0
  1381  06E1                     l1062:
  1382  06E1  3001               	movlw	1
  1383  06E2                     u425:
  1384  06E2  1003               	clrc
  1385  06E3  0CF1               	rrf	___lwdiv@divisor+1,f
  1386  06E4  0CF0               	rrf	___lwdiv@divisor,f
  1387  06E5  3EFF               	addlw	-1
  1388  06E6  1D03               	skipz
  1389  06E7  2EE2               	goto	u425
  1390  06E8                     l1064:
  1391  06E8  3001               	movlw	1
  1392  06E9  02F6               	subwf	___lwdiv@counter,f
  1393  06EA  1D03               	btfss	3,2
  1394  06EB  2EED               	goto	u431
  1395  06EC  2EEE               	goto	u430
  1396  06ED                     u431:
  1397  06ED  2EC9               	goto	l1056
  1398  06EE                     u430:
  1399  06EE                     l1066:
  1400  06EE  0875               	movf	___lwdiv@quotient+1,w
  1401  06EF  00F1               	movwf	?___lwdiv+1
  1402  06F0  0874               	movf	___lwdiv@quotient,w
  1403  06F1  00F0               	movwf	?___lwdiv
  1404  06F2                     l546:
  1405  06F2  0008               	return
  1406  06F3                     __end_of___lwdiv:
  1407                           
  1408                           	psect	text4
  1409  061C                     __ptext4:	
  1410 ;; *************** function _lcd_string *****************
  1411 ;; Defined at:
  1412 ;;		line 52 in file "lcd.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;  c               1    wreg     PTR unsigned char 
  1415 ;;		 -> main@buffer(20), 
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  c               1    2[COMMON] PTR unsigned char 
  1418 ;;		 -> main@buffer(20), 
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      void 
  1421 ;; Registers used:
  1422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1428 ;;      Params:         0       0       0       0       0
  1429 ;;      Locals:         1       0       0       0       0
  1430 ;;      Temps:          0       0       0       0       0
  1431 ;;      Totals:         1       0       0       0       0
  1432 ;;Total ram usage:        1 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; Hardware stack levels required when called:    1
  1435 ;; This function calls:
  1436 ;;		_lcd_write
  1437 ;; This function is called by:
  1438 ;;		_main
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           
  1443                           ;psect for function _lcd_string
  1444  061C                     _lcd_string:
  1445                           
  1446                           ;incstack = 0
  1447                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1448                           ;lcd_string@c stored from wreg
  1449  061C  00F2               	movwf	lcd_string@c
  1450  061D                     l1160:
  1451                           
  1452                           ;lcd.c: 53:     while(*c){
  1453  061D  2E2A               	goto	l1166
  1454  061E                     l1162:
  1455                           
  1456                           ;lcd.c: 54:         lcd_write(*c);
  1457  061E  0872               	movf	lcd_string@c,w
  1458  061F  0084               	movwf	4
  1459  0620  0800               	movf	0,w
  1460  0621  120A  118A  260A  120A  118A  	fcall	_lcd_write
  1461  0626                     l1164:
  1462                           
  1463                           ;lcd.c: 55:         *c++;
  1464  0626  3001               	movlw	1
  1465  0627  00FF               	movwf	btemp+1
  1466  0628  087F               	movf	btemp+1,w
  1467  0629  07F2               	addwf	lcd_string@c,f
  1468  062A                     l1166:
  1469                           
  1470                           ;lcd.c: 53:     while(*c){
  1471  062A  0872               	movf	lcd_string@c,w
  1472  062B  0084               	movwf	4
  1473  062C  1383               	bcf	3,7	;select IRP bank0
  1474  062D  0800               	movf	0,w
  1475  062E  1D03               	btfss	3,2
  1476  062F  2E31               	goto	u571
  1477  0630  2E32               	goto	u570
  1478  0631                     u571:
  1479  0631  2E1E               	goto	l1162
  1480  0632                     u570:
  1481  0632                     l160:
  1482  0632  0008               	return
  1483  0633                     __end_of_lcd_string:
  1484                           
  1485                           	psect	text5
  1486  060A                     __ptext5:	
  1487 ;; *************** function _lcd_write *****************
  1488 ;; Defined at:
  1489 ;;		line 44 in file "lcd.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;  c               1    wreg     unsigned char 
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;  c               1    1[COMMON] unsigned char 
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		wreg
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1503 ;;      Params:         0       0       0       0       0
  1504 ;;      Locals:         1       0       0       0       0
  1505 ;;      Temps:          1       0       0       0       0
  1506 ;;      Totals:         2       0       0       0       0
  1507 ;;Total ram usage:        2 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; This function calls:
  1510 ;;		Nothing
  1511 ;; This function is called by:
  1512 ;;		_lcd_string
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           
  1517                           ;psect for function _lcd_write
  1518  060A                     _lcd_write:
  1519                           
  1520                           ;incstack = 0
  1521                           ; Regs used in _lcd_write: [wreg]
  1522                           ;lcd_write@c stored from wreg
  1523  060A  00F1               	movwf	lcd_write@c
  1524  060B                     l1036:
  1525                           
  1526                           ;lcd.c: 45:     PORTBbits.RB0 = 1;
  1527  060B  1283               	bcf	3,5	;RP0=0, select bank0
  1528  060C  1303               	bcf	3,6	;RP1=0, select bank0
  1529  060D  1406               	bsf	6,0	;volatile
  1530  060E                     l1038:
  1531                           
  1532                           ;lcd.c: 46:     PORTD = c;
  1533  060E  0871               	movf	lcd_write@c,w
  1534  060F  0088               	movwf	8	;volatile
  1535  0610                     l1040:
  1536                           
  1537                           ;lcd.c: 47:     PORTBbits.RB2 = 1;
  1538  0610  1506               	bsf	6,2	;volatile
  1539                           
  1540                           ;lcd.c: 48:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1541  0611  30C7               	movlw	199
  1542  0612  00F0               	movwf	??_lcd_write
  1543  0613                     u697:
  1544  0613  2E14               	nop2
  1545  0614  0BF0               	decfsz	??_lcd_write,f
  1546  0615  2E13               	goto	u697
  1547  0616  2E17               	nop2
  1548  0617  2E18               	nop2
  1549  0618                     l1042:
  1550                           
  1551                           ;lcd.c: 49:     PORTBbits.RB2 = 0;
  1552  0618  1283               	bcf	3,5	;RP0=0, select bank0
  1553  0619  1303               	bcf	3,6	;RP1=0, select bank0
  1554  061A  1106               	bcf	6,2	;volatile
  1555  061B                     l154:
  1556  061B  0008               	return
  1557  061C                     __end_of_lcd_write:
  1558                           
  1559                           	psect	text6
  1560  05F8                     __ptext6:	
  1561 ;; *************** function _lcd_init *****************
  1562 ;; Defined at:
  1563 ;;		line 21 in file "lcd.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;		None
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;		None
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  1    wreg      void 
  1570 ;; Registers used:
  1571 ;;		wreg, status,2, status,0, pclath, cstack
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1577 ;;      Params:         0       0       0       0       0
  1578 ;;      Locals:         0       0       0       0       0
  1579 ;;      Temps:          0       0       0       0       0
  1580 ;;      Totals:         0       0       0       0       0
  1581 ;;Total ram usage:        0 bytes
  1582 ;; Hardware stack levels used:    1
  1583 ;; Hardware stack levels required when called:    1
  1584 ;; This function calls:
  1585 ;;		_lcd_cmd
  1586 ;; This function is called by:
  1587 ;;		_main
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           
  1592                           ;psect for function _lcd_init
  1593  05F8                     _lcd_init:
  1594  05F8                     l1092:	
  1595                           ;incstack = 0
  1596                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1597                           
  1598                           
  1599                           ;lcd.c: 22:     PORTBbits.RB1 = 0;
  1600  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  1601  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  1602  05FA  1086               	bcf	6,1	;volatile
  1603                           
  1604                           ;lcd.c: 23:     PORTBbits.RB0 = 0;
  1605  05FB  1006               	bcf	6,0	;volatile
  1606                           
  1607                           ;lcd.c: 24:     PORTBbits.RB2 = 0;
  1608  05FC  1106               	bcf	6,2	;volatile
  1609  05FD                     l1094:
  1610                           
  1611                           ;lcd.c: 25:     lcd_cmd(0x38);
  1612  05FD  3038               	movlw	56
  1613  05FE  120A  118A  2633  120A  118A  	fcall	_lcd_cmd
  1614                           
  1615                           ;lcd.c: 26:     lcd_cmd(0x0F);
  1616  0603  300F               	movlw	15
  1617  0604  120A  118A  2633  120A  118A  	fcall	_lcd_cmd
  1618  0609                     l145:
  1619  0609  0008               	return
  1620  060A                     __end_of_lcd_init:
  1621                           
  1622                           	psect	text7
  1623  0633                     __ptext7:	
  1624 ;; *************** function _lcd_cmd *****************
  1625 ;; Defined at:
  1626 ;;		line 35 in file "lcd.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  c               1    wreg     unsigned char 
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;  c               1    2[COMMON] unsigned char 
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		wreg
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1640 ;;      Params:         0       0       0       0       0
  1641 ;;      Locals:         1       0       0       0       0
  1642 ;;      Temps:          2       0       0       0       0
  1643 ;;      Totals:         3       0       0       0       0
  1644 ;;Total ram usage:        3 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; This function calls:
  1647 ;;		Nothing
  1648 ;; This function is called by:
  1649 ;;		_lcd_init
  1650 ;;		_lcd_clear
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           
  1655                           ;psect for function _lcd_cmd
  1656  0633                     _lcd_cmd:
  1657                           
  1658                           ;incstack = 0
  1659                           ; Regs used in _lcd_cmd: [wreg]
  1660                           ;lcd_cmd@c stored from wreg
  1661  0633  00F2               	movwf	lcd_cmd@c
  1662  0634                     l1028:
  1663                           
  1664                           ;lcd.c: 36:     PORTBbits.RB0 = 0;
  1665  0634  1283               	bcf	3,5	;RP0=0, select bank0
  1666  0635  1303               	bcf	3,6	;RP1=0, select bank0
  1667  0636  1006               	bcf	6,0	;volatile
  1668  0637                     l1030:
  1669                           
  1670                           ;lcd.c: 37:     PORTD = c;
  1671  0637  0872               	movf	lcd_cmd@c,w
  1672  0638  0088               	movwf	8	;volatile
  1673  0639                     l1032:
  1674                           
  1675                           ;lcd.c: 38:     PORTBbits.RB2 = 1;
  1676  0639  1506               	bsf	6,2	;volatile
  1677                           
  1678                           ;lcd.c: 39:     _delay((unsigned long)((3)*(4000000/4000.0)));
  1679  063A  3004               	movlw	4
  1680  063B  00F1               	movwf	??_lcd_cmd+1
  1681  063C  30E4               	movlw	228
  1682  063D  00F0               	movwf	??_lcd_cmd
  1683  063E                     u707:
  1684  063E  0BF0               	decfsz	??_lcd_cmd,f
  1685  063F  2E3E               	goto	u707
  1686  0640  0BF1               	decfsz	??_lcd_cmd+1,f
  1687  0641  2E3E               	goto	u707
  1688  0642  0000               	nop
  1689  0643                     l1034:
  1690                           
  1691                           ;lcd.c: 40:     PORTBbits.RB2 = 0;
  1692  0643  1283               	bcf	3,5	;RP0=0, select bank0
  1693  0644  1303               	bcf	3,6	;RP1=0, select bank0
  1694  0645  1106               	bcf	6,2	;volatile
  1695                           
  1696                           ;lcd.c: 41:     _delay((unsigned long)((3)*(4000000/4000.0)));
  1697  0646  3004               	movlw	4
  1698  0647  00F1               	movwf	??_lcd_cmd+1
  1699  0648  30E4               	movlw	228
  1700  0649  00F0               	movwf	??_lcd_cmd
  1701  064A                     u717:
  1702  064A  0BF0               	decfsz	??_lcd_cmd,f
  1703  064B  2E4A               	goto	u717
  1704  064C  0BF1               	decfsz	??_lcd_cmd+1,f
  1705  064D  2E4A               	goto	u717
  1706  064E  0000               	nop
  1707  064F                     l151:
  1708  064F  0008               	return
  1709  0650                     __end_of_lcd_cmd:
  1710  007E                     btemp	set	126	;btemp
  1711  007E                     wtemp0	set	126
  1712                           
  1713                           	psect	config
  1714                           
  1715                           ;Config register CONFIG1 @ 0x2007
  1716                           ;	Oscillator Selection bits
  1717                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1718                           ;	Watchdog Timer Enable bit
  1719                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1720                           ;	Power-up Timer Enable bit
  1721                           ;	PWRTE = OFF, PWRT disabled
  1722                           ;	RE3/MCLR pin function select bit
  1723                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1724                           ;	Code Protection bit
  1725                           ;	CP = OFF, Program memory code protection is disabled
  1726                           ;	Data Code Protection bit
  1727                           ;	CPD = OFF, Data memory code protection is disabled
  1728                           ;	Brown Out Reset Selection bits
  1729                           ;	BOREN = ON, BOR enabled
  1730                           ;	Internal External Switchover bit
  1731                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1732                           ;	Fail-Safe Clock Monitor Enabled bit
  1733                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1734                           ;	Low Voltage Programming Enable bit
  1735                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1736                           ;	In-Circuit Debugger Mode bit
  1737                           ;	DEBUG = 0x1, unprogrammed default
  1738  2007                     	org	8199
  1739  2007  3FF4               	dw	16372
  1740                           
  1741                           ;Config register CONFIG2 @ 0x2008
  1742                           ;	Brown-out Reset Selection bit
  1743                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1744                           ;	Flash Program Memory Self Write Enable bits
  1745                           ;	WRT = OFF, Write protection off
  1746  2008                     	org	8200
  1747  2008  3FFF               	dw	16383

Data Sizes:
    Strings     10
    Constant    10
    Data        4
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     34      76
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_string@c	PTR unsigned char  size(1) Largest target is 20
		 -> main@buffer(BANK0[20]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_string->_lcd_write
    _lcd_init->_lcd_cmd

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0    1410
                                             13 BANK0     21    21      0
                           _lcd_init
                         _lcd_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           1     1      0     100
                                              2 COMMON     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      22
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _lcd_cmd
   _lcd_string
     _lcd_write
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     22      4C       5       95.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5A      12        0.0%
ABS                  0      0      5A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Feb 11 06:25:32 2021

                      pc 0002              _SSPSTATbits 0094                       l17 0671  
                     l18 0671                       fsr 0004                      l151 064F  
                    l160 0632                      l145 0609                      l154 061B  
                    l270 07DA                      l546 06F2                      l556 06AE  
                    u410 06DA                      u411 06D9                      u500 0701  
                    u405 06CA                      u501 0700                      u430 06EE  
                    u510 073B                      u431 06ED                      u415 06D6  
                    u511 073A                      u440 067B                      u520 0761  
                    u425 06E2                      u441 067A                      u521 0760  
                    u370 06B7                      u530 076C                      u371 06B6  
                    u531 076B                      u460 068D                      u540 0772  
                    u461 068C                      u541 0771                      u525 075D  
                    u390 06C9                      u470 0697                      u550 07C4  
                    u391 06C8                      u471 0696                      u455 067F  
                    u551 07C3                      u560 07D6                      u385 06BB  
                    u561 07D5                      u570 0632                      u490 06AA  
                    u707 063E                      u571 0631                      u491 06A9  
                    u475 0693                      u717 064A                      u485 069E  
                    u697 0613                      fsr0 0004                      indf 0000  
                   l1100 0701                     l1030 0637                     l1110 072B  
                   l1102 0708                     l1032 0639                     l1040 0610  
                   l1120 0744                     l1112 0733                     l1104 070D  
                   l1200 0657                     l1034 0643                     l1042 0618  
                   l1050 06BA                     l1130 0762                     l1114 0737  
                   l1202 065C                     l1028 0634                     l1036 060B  
                   l1060 06E0                     l1052 06C1                     l1044 06AF  
                   l1140 077D                     l1132 0766                     l1116 073B  
                   l1108 070E                     l1204 066B                     l1038 060E  
                   l1062 06E1                     l1054 06C5                     l1046 06B1  
                   l1070 0675                     l1142 0782                     l1134 076C  
                   l1126 0746                     l1118 073F                     l1150 07C4  
                   l1160 061D                     l1064 06E8                     l1056 06C9  
                   l1048 06B7                     l1080 068D                     l1072 067B  
                   l1144 07B0                     l1136 0772                     l1152 07D6  
                   l1162 061E                     l1058 06DA                     l1066 06EE  
                   l1082 0697                     l1074 067E                     l1146 07B7  
                   l1138 0779                     l1092 05F8                     l1164 0626  
                   l1084 069D                     l1076 0685                     l1148 07BB  
                   l1094 05FD                     l1166 062A                     l1086 06A4  
                   l1078 0689                     l1088 06AA                     l1264 0720  
                   l1096 06F6                     l1098 06FB                     l1198 0650  
                   STR_1 0013                     _main 0650                     btemp 007E  
                   start 0000              lcd_string@c 0072                    ?_main 0070  
        __end_of___lwdiv 06F3          __end_of___lwmod 06AF                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _SSPIF 0063  
        __end_of_lcd_cmd 0650          __end_of_dpowers 0013                    pclath 000A  
                  status 0003                    wtemp0 007E          __end_of_sprintf 07DB  
        __initialization 07DB             __end_of_main 0675                   ??_main 007C  
                 _ANSELH 0189                   _SSPADD 0093                   _SSPCON 0014  
                 _SSPBUF 0013         __end_of_lcd_init 060A                ??___lwdiv 0074  
              ??___lwmod 007B                ??_lcd_cmd 0070             __pdataCOMMON 007C  
              ??_sprintf 004B  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 05EC       __size_of_lcd_write 0012               __pbssBANK0 0020  
             __pmaintext 0650                  _SSPCON2 0091               _lcd_string 061C  
              ?_lcd_init 0070                  _SSPSTAT 0094               __stringtab 0003  
      __end_of_lcd_write 061C                  ___lwdiv 06AF                  ___lwmod 0675  
                _adressR 007C                  _adressW 0069                  __ptext1 06F3  
                __ptext2 0675                  __ptext3 06AF                  __ptext4 061C  
                __ptext5 060A                  __ptext6 05F8                  __ptext7 0633  
                _lcd_cmd 0633                  _dpowers 0009                  _sprintf 06F3  
                clrloop0 05F1               ??_lcd_init 0073     end_of_initialization 07FC  
              _PORTBbits 0006                _TRISCbits 0087              ?_lcd_string 0070  
             main@buffer 0055               lcd_write@c 0071            __pidataCOMMON 05EE  
    start_initialization 07DB              __pdataBANK0 0069      __size_of_lcd_string 0017  
              ___latbits 0002            __pcstackBANK0 0048        __size_of_lcd_init 0012  
            sprintf@flag 004F              sprintf@prec 0050                _dataEprom 0020  
       ___lwdiv@dividend 0072                 ?___lwdiv 0070                 ?___lwmod 0077  
              __pstrings 0003                 ?_lcd_cmd 0070                _lcd_write 060A  
       ___lwdiv@quotient 0074                 ?_sprintf 0048                clear_ram0 05F0  
            __stringbase 0008               ?_lcd_write 0070             ??_lcd_string 0072  
       __size_of___lwdiv 0044       __end_of_lcd_string 0633         __size_of___lwmod 003A  
     __end_of__stringtab 0009         __size_of_lcd_cmd 001D               sprintf@val 0051  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0076                 _lcd_init 05F8  
       __size_of_sprintf 00E8            __size_of_main 0025                 lcd_cmd@c 0072  
            ??_lcd_write 0070                sprintf@ap 004E                sprintf@sp 0053  
       ___lwmod@dividend 0079                stringcode 0003                 sprintf@c 0054  
               sprintf@f 0048          ___lwmod@divisor 0077          ___lwmod@counter 007B  
               stringdir 0003                 stringtab 0003              _SSPCON2bits 0091  
