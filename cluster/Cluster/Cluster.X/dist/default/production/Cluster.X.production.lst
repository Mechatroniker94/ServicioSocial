

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Oct 26 23:37:24 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  001A                     _RCREG	set	26
   286  0019                     _TXREG	set	25
   287  0018                     _RCSTAbits	set	24
   288  0006                     _PORTB	set	6
   289  0009                     _PORTE	set	9
   290  0098                     _TXSTAbits	set	152
   291  0099                     _SPBRG	set	153
   292  0086                     _TRISBbits	set	134
   293  0089                     _TRISE	set	137
   294  0086                     _TRISB	set	134
   295  0189                     _ANSELH	set	393
   296                           
   297                           	psect	strings
   298  0003                     __pstrings:
   299  0003                     stringtab:
   300  0003                     __stringtab:
   301  0003                     stringcode:	
   302                           ;	String table - string pointers are 1 byte each
   303                           
   304  0003                     stringdir:
   305  0003  3000               	movlw	high stringdir
   306  0004  008A               	movwf	10
   307  0005  0804               	movf	4,w
   308  0006  0A84               	incf	4,f
   309  0007  0782               	addwf	2,f
   310  0008                     __stringbase:
   311  0008  3400               	retlw	0
   312  0009                     __end_of__stringtab:
   313  0009                     STR_4:
   314  0009  344D               	retlw	77	;'M'
   315  000A  3431               	retlw	49	;'1'
   316  000B  342C               	retlw	44	;','
   317  000C  3450               	retlw	80	;'P'
   318  000D  3431               	retlw	49	;'1'
   319  000E  342C               	retlw	44	;','
   320  000F  3461               	retlw	97	;'a'
   321  0010  340A               	retlw	10
   322  0011  3400               	retlw	0
   323  0012                     STR_12:
   324  0012  344D               	retlw	77	;'M'
   325  0013  3432               	retlw	50	;'2'
   326  0014  342C               	retlw	44	;','
   327  0015  3450               	retlw	80	;'P'
   328  0016  3431               	retlw	49	;'1'
   329  0017  342C               	retlw	44	;','
   330  0018  3461               	retlw	97	;'a'
   331  0019  340A               	retlw	10
   332  001A  3400               	retlw	0
   333  001B                     STR_20:
   334  001B  344D               	retlw	77	;'M'
   335  001C  3433               	retlw	51	;'3'
   336  001D  342C               	retlw	44	;','
   337  001E  3450               	retlw	80	;'P'
   338  001F  3431               	retlw	49	;'1'
   339  0020  342C               	retlw	44	;','
   340  0021  3461               	retlw	97	;'a'
   341  0022  340A               	retlw	10
   342  0023  3400               	retlw	0
   343  0024                     STR_8:
   344  0024  344D               	retlw	77	;'M'
   345  0025  3431               	retlw	49	;'1'
   346  0026  342C               	retlw	44	;','
   347  0027  3450               	retlw	80	;'P'
   348  0028  3432               	retlw	50	;'2'
   349  0029  342C               	retlw	44	;','
   350  002A  3461               	retlw	97	;'a'
   351  002B  340A               	retlw	10
   352  002C  3400               	retlw	0
   353  002D                     STR_16:
   354  002D  344D               	retlw	77	;'M'
   355  002E  3432               	retlw	50	;'2'
   356  002F  342C               	retlw	44	;','
   357  0030  3450               	retlw	80	;'P'
   358  0031  3432               	retlw	50	;'2'
   359  0032  342C               	retlw	44	;','
   360  0033  3461               	retlw	97	;'a'
   361  0034  340A               	retlw	10
   362  0035  3400               	retlw	0
   363  0036                     STR_24:
   364  0036  344D               	retlw	77	;'M'
   365  0037  3433               	retlw	51	;'3'
   366  0038  342C               	retlw	44	;','
   367  0039  3450               	retlw	80	;'P'
   368  003A  3432               	retlw	50	;'2'
   369  003B  342C               	retlw	44	;','
   370  003C  3461               	retlw	97	;'a'
   371  003D  340A               	retlw	10
   372  003E  3400               	retlw	0
   373  003F                     STR_3:
   374  003F  344D               	retlw	77	;'M'
   375  0040  3431               	retlw	49	;'1'
   376  0041  342C               	retlw	44	;','
   377  0042  3450               	retlw	80	;'P'
   378  0043  3431               	retlw	49	;'1'
   379  0044  342C               	retlw	44	;','
   380  0045  3462               	retlw	98	;'b'
   381  0046  340A               	retlw	10
   382  0047  3400               	retlw	0
   383  0048                     STR_11:
   384  0048  344D               	retlw	77	;'M'
   385  0049  3432               	retlw	50	;'2'
   386  004A  342C               	retlw	44	;','
   387  004B  3450               	retlw	80	;'P'
   388  004C  3431               	retlw	49	;'1'
   389  004D  342C               	retlw	44	;','
   390  004E  3462               	retlw	98	;'b'
   391  004F  340A               	retlw	10
   392  0050  3400               	retlw	0
   393  0051                     STR_19:
   394  0051  344D               	retlw	77	;'M'
   395  0052  3433               	retlw	51	;'3'
   396  0053  342C               	retlw	44	;','
   397  0054  3450               	retlw	80	;'P'
   398  0055  3431               	retlw	49	;'1'
   399  0056  342C               	retlw	44	;','
   400  0057  3462               	retlw	98	;'b'
   401  0058  340A               	retlw	10
   402  0059  3400               	retlw	0
   403  005A                     STR_7:
   404  005A  344D               	retlw	77	;'M'
   405  005B  3431               	retlw	49	;'1'
   406  005C  342C               	retlw	44	;','
   407  005D  3450               	retlw	80	;'P'
   408  005E  3432               	retlw	50	;'2'
   409  005F  342C               	retlw	44	;','
   410  0060  3462               	retlw	98	;'b'
   411  0061  340A               	retlw	10
   412  0062  3400               	retlw	0
   413  0063                     STR_15:
   414  0063  344D               	retlw	77	;'M'
   415  0064  3432               	retlw	50	;'2'
   416  0065  342C               	retlw	44	;','
   417  0066  3450               	retlw	80	;'P'
   418  0067  3432               	retlw	50	;'2'
   419  0068  342C               	retlw	44	;','
   420  0069  3462               	retlw	98	;'b'
   421  006A  340A               	retlw	10
   422  006B  3400               	retlw	0
   423  006C                     STR_23:
   424  006C  344D               	retlw	77	;'M'
   425  006D  3433               	retlw	51	;'3'
   426  006E  342C               	retlw	44	;','
   427  006F  3450               	retlw	80	;'P'
   428  0070  3432               	retlw	50	;'2'
   429  0071  342C               	retlw	44	;','
   430  0072  3462               	retlw	98	;'b'
   431  0073  340A               	retlw	10
   432  0074  3400               	retlw	0
   433  0075                     STR_2:
   434  0075  344D               	retlw	77	;'M'
   435  0076  3431               	retlw	49	;'1'
   436  0077  342C               	retlw	44	;','
   437  0078  3450               	retlw	80	;'P'
   438  0079  3431               	retlw	49	;'1'
   439  007A  342C               	retlw	44	;','
   440  007B  3467               	retlw	103	;'g'
   441  007C  340A               	retlw	10
   442  007D  3400               	retlw	0
   443  007E                     STR_10:
   444  007E  344D               	retlw	77	;'M'
   445  007F  3432               	retlw	50	;'2'
   446  0080  342C               	retlw	44	;','
   447  0081  3450               	retlw	80	;'P'
   448  0082  3431               	retlw	49	;'1'
   449  0083  342C               	retlw	44	;','
   450  0084  3467               	retlw	103	;'g'
   451  0085  340A               	retlw	10
   452  0086  3400               	retlw	0
   453  0087                     STR_18:
   454  0087  344D               	retlw	77	;'M'
   455  0088  3433               	retlw	51	;'3'
   456  0089  342C               	retlw	44	;','
   457  008A  3450               	retlw	80	;'P'
   458  008B  3431               	retlw	49	;'1'
   459  008C  342C               	retlw	44	;','
   460  008D  3467               	retlw	103	;'g'
   461  008E  340A               	retlw	10
   462  008F  3400               	retlw	0
   463  0090                     STR_6:
   464  0090  344D               	retlw	77	;'M'
   465  0091  3431               	retlw	49	;'1'
   466  0092  342C               	retlw	44	;','
   467  0093  3450               	retlw	80	;'P'
   468  0094  3432               	retlw	50	;'2'
   469  0095  342C               	retlw	44	;','
   470  0096  3467               	retlw	103	;'g'
   471  0097  340A               	retlw	10
   472  0098  3400               	retlw	0
   473  0099                     STR_14:
   474  0099  344D               	retlw	77	;'M'
   475  009A  3432               	retlw	50	;'2'
   476  009B  342C               	retlw	44	;','
   477  009C  3450               	retlw	80	;'P'
   478  009D  3432               	retlw	50	;'2'
   479  009E  342C               	retlw	44	;','
   480  009F  3467               	retlw	103	;'g'
   481  00A0  340A               	retlw	10
   482  00A1  3400               	retlw	0
   483  00A2                     STR_22:
   484  00A2  344D               	retlw	77	;'M'
   485  00A3  3433               	retlw	51	;'3'
   486  00A4  342C               	retlw	44	;','
   487  00A5  3450               	retlw	80	;'P'
   488  00A6  3432               	retlw	50	;'2'
   489  00A7  342C               	retlw	44	;','
   490  00A8  3467               	retlw	103	;'g'
   491  00A9  340A               	retlw	10
   492  00AA  3400               	retlw	0
   493  00AB                     STR_1:
   494  00AB  344D               	retlw	77	;'M'
   495  00AC  3431               	retlw	49	;'1'
   496  00AD  342C               	retlw	44	;','
   497  00AE  3450               	retlw	80	;'P'
   498  00AF  3431               	retlw	49	;'1'
   499  00B0  342C               	retlw	44	;','
   500  00B1  3472               	retlw	114	;'r'
   501  00B2  340A               	retlw	10
   502  00B3  3400               	retlw	0
   503  00B4                     STR_9:
   504  00B4  344D               	retlw	77	;'M'
   505  00B5  3432               	retlw	50	;'2'
   506  00B6  342C               	retlw	44	;','
   507  00B7  3450               	retlw	80	;'P'
   508  00B8  3431               	retlw	49	;'1'
   509  00B9  342C               	retlw	44	;','
   510  00BA  3472               	retlw	114	;'r'
   511  00BB  340A               	retlw	10
   512  00BC  3400               	retlw	0
   513  00BD                     STR_17:
   514  00BD  344D               	retlw	77	;'M'
   515  00BE  3433               	retlw	51	;'3'
   516  00BF  342C               	retlw	44	;','
   517  00C0  3450               	retlw	80	;'P'
   518  00C1  3431               	retlw	49	;'1'
   519  00C2  342C               	retlw	44	;','
   520  00C3  3472               	retlw	114	;'r'
   521  00C4  340A               	retlw	10
   522  00C5  3400               	retlw	0
   523  00C6                     STR_5:
   524  00C6  344D               	retlw	77	;'M'
   525  00C7  3431               	retlw	49	;'1'
   526  00C8  342C               	retlw	44	;','
   527  00C9  3450               	retlw	80	;'P'
   528  00CA  3432               	retlw	50	;'2'
   529  00CB  342C               	retlw	44	;','
   530  00CC  3472               	retlw	114	;'r'
   531  00CD  340A               	retlw	10
   532  00CE  3400               	retlw	0
   533  00CF                     STR_13:
   534  00CF  344D               	retlw	77	;'M'
   535  00D0  3432               	retlw	50	;'2'
   536  00D1  342C               	retlw	44	;','
   537  00D2  3450               	retlw	80	;'P'
   538  00D3  3432               	retlw	50	;'2'
   539  00D4  342C               	retlw	44	;','
   540  00D5  3472               	retlw	114	;'r'
   541  00D6  340A               	retlw	10
   542  00D7  3400               	retlw	0
   543  00D8                     STR_21:
   544  00D8  344D               	retlw	77	;'M'
   545  00D9  3433               	retlw	51	;'3'
   546  00DA  342C               	retlw	44	;','
   547  00DB  3450               	retlw	80	;'P'
   548  00DC  3432               	retlw	50	;'2'
   549  00DD  342C               	retlw	44	;','
   550  00DE  3472               	retlw	114	;'r'
   551  00DF  340A               	retlw	10
   552  00E0  3400               	retlw	0
   553                           
   554                           	psect	cinit
   555  07F9                     start_initialization:	
   556                           ; #config settings
   557                           
   558  07F9                     __initialization:
   559                           
   560                           ; Clear objects allocated to BANK0
   561  07F9  1283               	bcf	3,5	;RP0=0, select bank0
   562  07FA  1303               	bcf	3,6	;RP1=0, select bank0
   563  07FB  01AD               	clrf	__pbssBANK0& (0+127)
   564  07FC                     end_of_initialization:	
   565                           ;End of C runtime variable initialization code
   566                           
   567  07FC                     __end_of__initialization:
   568  07FC  0183               	clrf	3
   569  07FD  120A  118A  2EBF   	ljmp	_main	;jump to C main() function
   570                           
   571                           	psect	bssBANK0
   572  002D                     __pbssBANK0:
   573  002D                     _ptrCmd:
   574  002D                     	ds	1
   575                           
   576                           	psect	cstackCOMMON
   577  0070                     __pcstackCOMMON:
   578  0070                     ?_usart_TxStr:
   579  0070                     ?_main:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_usart_Tx:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ??_usart_Tx:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?___aldiv:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     usart_Tx@send:	
   592                           ; 4 bytes @ 0x0
   593                           
   594  0070                     ___aldiv@divisor:	
   595                           ; 1 bytes @ 0x0
   596                           
   597                           
   598                           ; 4 bytes @ 0x0
   599  0070                     	ds	1
   600  0071                     ??_usart_TxStr:
   601                           
   602                           ; 1 bytes @ 0x1
   603  0071                     	ds	1
   604  0072                     usart_TxStr@str:
   605                           
   606                           ; 1 bytes @ 0x2
   607  0072                     	ds	2
   608  0074                     ___aldiv@dividend:
   609                           
   610                           ; 4 bytes @ 0x4
   611  0074                     	ds	4
   612  0078                     ??___aldiv:
   613                           
   614                           ; 1 bytes @ 0x8
   615  0078                     	ds	1
   616  0079                     ??_usart_init:
   617  0079                     _usart_init$817:	
   618                           ; 1 bytes @ 0x9
   619                           
   620                           
   621                           ; 4 bytes @ 0x9
   622  0079                     	ds	4
   623  007D                     main@entrada:
   624                           
   625                           ; 1 bytes @ 0xD
   626  007D                     	ds	1
   627                           
   628                           	psect	cstackBANK0
   629  0020                     __pcstackBANK0:
   630  0020                     ___aldiv@counter:
   631                           
   632                           ; 1 bytes @ 0x0
   633  0020                     	ds	1
   634  0021                     ___aldiv@sign:
   635                           
   636                           ; 1 bytes @ 0x1
   637  0021                     	ds	1
   638  0022                     ___aldiv@quotient:
   639                           
   640                           ; 4 bytes @ 0x2
   641  0022                     	ds	4
   642  0026                     ?_usart_init:
   643  0026                     usart_init@BAUD:	
   644                           ; 1 bytes @ 0x6
   645                           
   646                           
   647                           ; 4 bytes @ 0x6
   648  0026                     	ds	4
   649  002A                     ??_main:
   650                           
   651                           ; 1 bytes @ 0xA
   652  002A                     	ds	3
   653                           
   654                           	psect	maintext
   655  06BF                     __pmaintext:	
   656 ;;
   657 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   658 ;;
   659 ;; *************** function _main *****************
   660 ;; Defined at:
   661 ;;		line 14 in file "main.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;		None
   664 ;; Auto vars:     Size  Location     Type
   665 ;;  entrada         1   13[COMMON] unsigned char 
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   670 ;; Tracked objects:
   671 ;;		On entry : B00/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   675 ;;      Params:         0       0       0       0       0
   676 ;;      Locals:         1       0       0       0       0
   677 ;;      Temps:          0       3       0       0       0
   678 ;;      Totals:         1       3       0       0       0
   679 ;;Total ram usage:        4 bytes
   680 ;; Hardware stack levels required when called:    2
   681 ;; This function calls:
   682 ;;		_usart_TxStr
   683 ;;		_usart_init
   684 ;; This function is called by:
   685 ;;		Startup code after reset
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           
   690                           ;psect for function _main
   691  06BF                     _main:
   692  06BF                     l932:	
   693                           ;incstack = 0
   694                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   695                           
   696                           
   697                           ;main.c: 15:     ANSELH = 0x00;
   698  06BF  1683               	bsf	3,5	;RP0=1, select bank3
   699  06C0  1703               	bsf	3,6	;RP1=1, select bank3
   700  06C1  0189               	clrf	9	;volatile
   701  06C2                     l934:
   702                           
   703                           ;main.c: 16:     TRISB = 0xFF;
   704  06C2  30FF               	movlw	255
   705  06C3  1683               	bsf	3,5	;RP0=1, select bank1
   706  06C4  1303               	bcf	3,6	;RP1=0, select bank1
   707  06C5  0086               	movwf	6	;volatile
   708  06C6                     l936:
   709                           
   710                           ;main.c: 17:     TRISE = 0x00;
   711  06C6  0189               	clrf	9	;volatile
   712  06C7                     l938:
   713                           
   714                           ;main.c: 18:     PORTE = 0x00;
   715  06C7  1283               	bcf	3,5	;RP0=0, select bank0
   716  06C8  1303               	bcf	3,6	;RP1=0, select bank0
   717  06C9  0189               	clrf	9	;volatile
   718  06CA                     l940:
   719                           
   720                           ;main.c: 19:     usart_init(9600);
   721  06CA  3000               	movlw	0
   722  06CB  00A9               	movwf	usart_init@BAUD+3
   723  06CC  3000               	movlw	0
   724  06CD  00A8               	movwf	usart_init@BAUD+2
   725  06CE  3025               	movlw	37
   726  06CF  00A7               	movwf	usart_init@BAUD+1
   727  06D0  3080               	movlw	128
   728  06D1  00A6               	movwf	usart_init@BAUD
   729  06D2  120A  118A  25D7  120A  118A  	fcall	_usart_init
   730  06D7                     l942:
   731  06D7                     l944:
   732                           
   733                           ;main.c: 22:         entrada = PORTB;
   734  06D7  1283               	bcf	3,5	;RP0=0, select bank0
   735  06D8  1303               	bcf	3,6	;RP1=0, select bank0
   736  06D9  0806               	movf	6,w	;volatile
   737  06DA  00AA               	movwf	??_main
   738  06DB  082A               	movf	??_main,w
   739  06DC  00FD               	movwf	main@entrada
   740  06DD                     l946:
   741                           
   742                           ;main.c: 23:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   743  06DD  301A               	movlw	26
   744  06DE  1283               	bcf	3,5	;RP0=0, select bank0
   745  06DF  1303               	bcf	3,6	;RP1=0, select bank0
   746  06E0  00AC               	movwf	??_main+2
   747  06E1  305E               	movlw	94
   748  06E2  00AB               	movwf	??_main+1
   749  06E3  306D               	movlw	109
   750  06E4  00AA               	movwf	??_main
   751  06E5                     u257:
   752  06E5  0BAA               	decfsz	??_main,f
   753  06E6  2EE5               	goto	u257
   754  06E7  0BAB               	decfsz	??_main+1,f
   755  06E8  2EE5               	goto	u257
   756  06E9  0BAC               	decfsz	??_main+2,f
   757  06EA  2EE5               	goto	u257
   758  06EB  2EEC               	nop2
   759                           
   760                           ;main.c: 24:         switch(entrada){
   761  06EC  2F9F               	goto	l1010
   762  06ED                     l948:
   763                           
   764                           ;main.c: 29:                 usart_TxStr("M1,P1,r\n");
   765  06ED  30A3               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   766  06EE  120A  118A  25B8  120A  118A  	fcall	_usart_TxStr
   767                           
   768                           ;main.c: 30:                 break;
   769  06F3  2ED7               	goto	l944
   770  06F4                     l950:
   771                           
   772                           ;main.c: 32:                 usart_TxStr("M1,P1,g\n");
   773  06F4  306D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   774  06F5  120A  118A  25B8  120A  118A  	fcall	_usart_TxStr
   775                           
   776                           ;main.c: 33:                 break;
   777  06FA  2ED7               	goto	l944
   778  06FB                     l952:
   779                           
   780                           ;main.c: 35:                 usart_TxStr("M1,P1,b\n");
   781  06FB  3037               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   782  06FC  120A  118A  25B8  120A  118A  	fcall	_usart_TxStr
   783                           
   784                           ;main.c: 36:                 break;
   785  0701  2ED7               	goto	l944
   786  0702                     l954:
   787                           
   788                           ;main.c: 38:                 PORTE = 0x00;
   789  0702  0189               	clrf	9	;volatile
   790  0703                     l956:
   791                           
   792                           ;main.c: 39:                 usart_TxStr("M1,P1,a\n");
   793  0703  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   794  0704  120A  118A  25B8  120A  118A  	fcall	_usart_TxStr
   795                           
   796                           ;main.c: 41:                 break;
   797  0709  2ED7               	goto	l944
   798  070A                     l958:
   799                           
   800                           ;main.c: 43:                 usart_TxStr("M1,P2,r\n");
   801  070A  30BE               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   802  070B  120A  118A  25B8  120A  118A  	fcall	_usart_TxStr
   803                           
   804                           ;main.c: 44:                 break;
   805  0710  2ED7               	goto	l944
   806  0711                     l960:
   807                           
   808                           ;main.c: 46:                 usart_TxStr("M1,P2,g\n");
   809  0711  3088               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   810  0712  120A  118A  25B8  120A  118A  	fcall	_usart_TxStr
   811                           
   812                           ;main.c: 47:                 break;
   813  0717  2ED7               	goto	l944
   814  0718                     l962:
   815                           
   816                           ;main.c: 49:                 usart_TxStr("M1,P2,b\n");
   817  0718  3052               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   818  0719  120A  118A  25B8  120A  118A  	fcall	_usart_TxStr
   819                           
   820                           ;main.c: 50:                 break;
   821  071E  2ED7               	goto	l944
   822  071F                     l964:
   823                           
   824                           ;main.c: 52:                 PORTE = 0x00;
   825  071F  0189               	clrf	9	;volatile
   826  0720                     l966:
   827                           
   828                           ;main.c: 53:                 usart_TxStr("M1,P2,a\n");
   829  0720  301C               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
   830  0721  120A  118A  25B8  120A  118A  	fcall	_usart_TxStr
   831                           
   832                           ;main.c: 55:                 break;
   833  0726  2ED7               	goto	l944
   834  0727                     l968:
   835                           
   836                           ;main.c: 57:                usart_TxStr("M2,P1,r\n");
   837  0727  30AC               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
   838  0728  120A  118A  25B8  120A  118A  	fcall	_usart_TxStr
   839                           
   840                           ;main.c: 58:                break;
   841  072D  2ED7               	goto	l944
   842  072E                     l970:
   843                           
   844                           ;main.c: 60:                usart_TxStr("M2,P1,g\n");
   845  072E  3076               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
   846  072F  120A  118A  25B8  120A  118A  	fcall	_usart_TxStr
   847                           
   848                           ;main.c: 61:                break;
   849  0734  2ED7               	goto	l944
   850  0735                     l972:
   851                           
   852                           ;main.c: 63:                usart_TxStr("M2,P1,b\n");
   853  0735  3040               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
   854  0736  120A  118A  25B8  120A  118A  	fcall	_usart_TxStr
   855                           
   856                           ;main.c: 64:                break;
   857  073B  2ED7               	goto	l944
   858  073C                     l974:
   859                           
   860                           ;main.c: 66:                 PORTE = 0x01;
   861  073C  3001               	movlw	1
   862  073D  0089               	movwf	9	;volatile
   863  073E                     l976:
   864                           
   865                           ;main.c: 67:                usart_TxStr("M2,P1,a\n");
   866  073E  300A               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
   867  073F  120A  118A  25B8  120A  118A  	fcall	_usart_TxStr
   868                           
   869                           ;main.c: 68:                break;
   870  0744  2ED7               	goto	l944
   871  0745                     l978:
   872                           
   873                           ;main.c: 70:                usart_TxStr("M2,P2,r\n");
   874  0745  30C7               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
   875  0746  120A  118A  25B8  120A  118A  	fcall	_usart_TxStr
   876                           
   877                           ;main.c: 71:                break;
   878  074B  2ED7               	goto	l944
   879  074C                     l980:
   880                           
   881                           ;main.c: 73:                usart_TxStr("M2,P2,g\n");
   882  074C  3091               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
   883  074D  120A  118A  25B8  120A  118A  	fcall	_usart_TxStr
   884                           
   885                           ;main.c: 74:                break;
   886  0752  2ED7               	goto	l944
   887  0753                     l982:
   888                           
   889                           ;main.c: 76:                usart_TxStr("M2,P2,b\n");
   890  0753  305B               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
   891  0754  120A  118A  25B8  120A  118A  	fcall	_usart_TxStr
   892                           
   893                           ;main.c: 77:                break;
   894  0759  2ED7               	goto	l944
   895  075A                     l984:
   896                           
   897                           ;main.c: 79:                PORTE = 0x01;
   898  075A  3001               	movlw	1
   899  075B  0089               	movwf	9	;volatile
   900  075C                     l986:
   901                           
   902                           ;main.c: 80:                usart_TxStr("M2,P2,a\n");
   903  075C  3025               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
   904  075D  120A  118A  25B8  120A  118A  	fcall	_usart_TxStr
   905                           
   906                           ;main.c: 81:                break;
   907  0762  2ED7               	goto	l944
   908  0763                     l988:
   909                           
   910                           ;main.c: 83:                usart_TxStr("M3,P1,r\n");
   911  0763  30B5               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
   912  0764  120A  118A  25B8  120A  118A  	fcall	_usart_TxStr
   913                           
   914                           ;main.c: 84:                break;
   915  0769  2ED7               	goto	l944
   916  076A                     l990:
   917                           
   918                           ;main.c: 86:                usart_TxStr("M3,P1,g\n");
   919  076A  307F               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
   920  076B  120A  118A  25B8  120A  118A  	fcall	_usart_TxStr
   921                           
   922                           ;main.c: 87:                break;
   923  0770  2ED7               	goto	l944
   924  0771                     l992:
   925                           
   926                           ;main.c: 89:                usart_TxStr("M3,P1,b\n");
   927  0771  3049               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
   928  0772  120A  118A  25B8  120A  118A  	fcall	_usart_TxStr
   929                           
   930                           ;main.c: 90:                break;
   931  0777  2ED7               	goto	l944
   932  0778                     l994:
   933                           
   934                           ;main.c: 92:                 PORTE = 0x02;
   935  0778  3002               	movlw	2
   936  0779  0089               	movwf	9	;volatile
   937  077A                     l996:
   938                           
   939                           ;main.c: 93:                usart_TxStr("M3,P1,a\n");
   940  077A  3013               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
   941  077B  120A  118A  25B8  120A  118A  	fcall	_usart_TxStr
   942                           
   943                           ;main.c: 94:                break;
   944  0780  2ED7               	goto	l944
   945  0781                     l998:
   946                           
   947                           ;main.c: 96:                usart_TxStr("M3,P2,r\n");
   948  0781  30D0               	movlw	(low ((STR_21-__stringbase)| (0+32768)))& (0+255)
   949  0782  120A  118A  25B8  120A  118A  	fcall	_usart_TxStr
   950                           
   951                           ;main.c: 97:                break;
   952  0787  2ED7               	goto	l944
   953  0788                     l1000:
   954                           
   955                           ;main.c: 99:                usart_TxStr("M3,P2,g\n");
   956  0788  309A               	movlw	(low ((STR_22-__stringbase)| (0+32768)))& (0+255)
   957  0789  120A  118A  25B8  120A  118A  	fcall	_usart_TxStr
   958                           
   959                           ;main.c: 100:                break;
   960  078E  2ED7               	goto	l944
   961  078F                     l1002:
   962                           
   963                           ;main.c: 102:                usart_TxStr("M3,P2,b\n");
   964  078F  3064               	movlw	(low ((STR_23-__stringbase)| (0+32768)))& (0+255)
   965  0790  120A  118A  25B8  120A  118A  	fcall	_usart_TxStr
   966                           
   967                           ;main.c: 103:                break;
   968  0795  2ED7               	goto	l944
   969  0796                     l1004:
   970                           
   971                           ;main.c: 105:                PORTE = 0x02;
   972  0796  3002               	movlw	2
   973  0797  0089               	movwf	9	;volatile
   974  0798                     l1006:
   975                           
   976                           ;main.c: 106:                usart_TxStr("M3,P2,a\n");
   977  0798  302E               	movlw	(low ((STR_24-__stringbase)| (0+32768)))& (0+255)
   978  0799  120A  118A  25B8  120A  118A  	fcall	_usart_TxStr
   979                           
   980                           ;main.c: 107:                break;
   981  079E  2ED7               	goto	l944
   982  079F                     l1010:
   983  079F  087D               	movf	main@entrada,w
   984  07A0  1283               	bcf	3,5	;RP0=0, select bank0
   985  07A1  1303               	bcf	3,6	;RP1=0, select bank0
   986  07A2  00AA               	movwf	??_main
   987  07A3  01AB               	clrf	??_main+1
   988                           
   989                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   990                           ; Switch size 1, requested type "simple"
   991                           ; Number of cases is 1, Range of values is 0 to 0
   992                           ; switch strategies available:
   993                           ; Name         Instructions Cycles
   994                           ; simple_byte            4     3 (average)
   995                           ; direct_byte           11     8 (fixed)
   996                           ; jumptable            260     6 (fixed)
   997                           ;	Chosen strategy is simple_byte
   998  07A4  082B               	movf	??_main+1,w
   999  07A5  3A00               	xorlw	0	; case 0
  1000  07A6  1903               	skipnz
  1001  07A7  2FA9               	goto	l1048
  1002  07A8  2ED7               	goto	l944
  1003  07A9                     l1048:
  1004                           
  1005                           ; Switch size 1, requested type "simple"
  1006                           ; Number of cases is 25, Range of values is 0 to 24
  1007                           ; switch strategies available:
  1008                           ; Name         Instructions Cycles
  1009                           ; simple_byte           76    39 (average)
  1010                           ; direct_byte           83     8 (fixed)
  1011                           ; jumptable            260     6 (fixed)
  1012                           ;	Chosen strategy is simple_byte
  1013  07A9  082A               	movf	??_main,w
  1014  07AA  3A00               	xorlw	0	; case 0
  1015  07AB  1903               	skipnz
  1016  07AC  2ED7               	goto	l944
  1017  07AD  3A01               	xorlw	1	; case 1
  1018  07AE  1903               	skipnz
  1019  07AF  2EED               	goto	l948
  1020  07B0  3A03               	xorlw	3	; case 2
  1021  07B1  1903               	skipnz
  1022  07B2  2EF4               	goto	l950
  1023  07B3  3A01               	xorlw	1	; case 3
  1024  07B4  1903               	skipnz
  1025  07B5  2EFB               	goto	l952
  1026  07B6  3A07               	xorlw	7	; case 4
  1027  07B7  1903               	skipnz
  1028  07B8  2F02               	goto	l954
  1029  07B9  3A01               	xorlw	1	; case 5
  1030  07BA  1903               	skipnz
  1031  07BB  2F0A               	goto	l958
  1032  07BC  3A03               	xorlw	3	; case 6
  1033  07BD  1903               	skipnz
  1034  07BE  2F11               	goto	l960
  1035  07BF  3A01               	xorlw	1	; case 7
  1036  07C0  1903               	skipnz
  1037  07C1  2F18               	goto	l962
  1038  07C2  3A0F               	xorlw	15	; case 8
  1039  07C3  1903               	skipnz
  1040  07C4  2F1F               	goto	l964
  1041  07C5  3A01               	xorlw	1	; case 9
  1042  07C6  1903               	skipnz
  1043  07C7  2F27               	goto	l968
  1044  07C8  3A03               	xorlw	3	; case 10
  1045  07C9  1903               	skipnz
  1046  07CA  2F2E               	goto	l970
  1047  07CB  3A01               	xorlw	1	; case 11
  1048  07CC  1903               	skipnz
  1049  07CD  2F35               	goto	l972
  1050  07CE  3A07               	xorlw	7	; case 12
  1051  07CF  1903               	skipnz
  1052  07D0  2F3C               	goto	l974
  1053  07D1  3A01               	xorlw	1	; case 13
  1054  07D2  1903               	skipnz
  1055  07D3  2F45               	goto	l978
  1056  07D4  3A03               	xorlw	3	; case 14
  1057  07D5  1903               	skipnz
  1058  07D6  2F4C               	goto	l980
  1059  07D7  3A01               	xorlw	1	; case 15
  1060  07D8  1903               	skipnz
  1061  07D9  2F53               	goto	l982
  1062  07DA  3A1F               	xorlw	31	; case 16
  1063  07DB  1903               	skipnz
  1064  07DC  2F5A               	goto	l984
  1065  07DD  3A01               	xorlw	1	; case 17
  1066  07DE  1903               	skipnz
  1067  07DF  2F63               	goto	l988
  1068  07E0  3A03               	xorlw	3	; case 18
  1069  07E1  1903               	skipnz
  1070  07E2  2F6A               	goto	l990
  1071  07E3  3A01               	xorlw	1	; case 19
  1072  07E4  1903               	skipnz
  1073  07E5  2F71               	goto	l992
  1074  07E6  3A07               	xorlw	7	; case 20
  1075  07E7  1903               	skipnz
  1076  07E8  2F78               	goto	l994
  1077  07E9  3A01               	xorlw	1	; case 21
  1078  07EA  1903               	skipnz
  1079  07EB  2F81               	goto	l998
  1080  07EC  3A03               	xorlw	3	; case 22
  1081  07ED  1903               	skipnz
  1082  07EE  2F88               	goto	l1000
  1083  07EF  3A01               	xorlw	1	; case 23
  1084  07F0  1903               	skipnz
  1085  07F1  2F8F               	goto	l1002
  1086  07F2  3A0F               	xorlw	15	; case 24
  1087  07F3  1903               	skipnz
  1088  07F4  2F96               	goto	l1004
  1089  07F5  2ED7               	goto	l944
  1090  07F6  120A  118A  2800   	ljmp	start
  1091  07F9                     __end_of_main:
  1092                           
  1093                           	psect	text1
  1094  05D7                     __ptext1:	
  1095 ;; *************** function _usart_init *****************
  1096 ;; Defined at:
  1097 ;;		line 5 in file "usart.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;  BAUD            4    6[BANK0 ] long 
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;		None
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  1    wreg      void 
  1104 ;; Registers used:
  1105 ;;		wreg, status,2, status,0, pclath, cstack
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1111 ;;      Params:         0       4       0       0       0
  1112 ;;      Locals:         4       0       0       0       0
  1113 ;;      Temps:          0       0       0       0       0
  1114 ;;      Totals:         4       4       0       0       0
  1115 ;;Total ram usage:        8 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; Hardware stack levels required when called:    1
  1118 ;; This function calls:
  1119 ;;		___aldiv
  1120 ;; This function is called by:
  1121 ;;		_main
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           
  1126                           ;psect for function _usart_init
  1127  05D7                     _usart_init:
  1128  05D7                     l906:	
  1129                           ;incstack = 0
  1130                           ; Regs used in _usart_init: [wreg+status,2+status,0+pclath+cstack]
  1131                           
  1132                           
  1133                           ;usart.c: 7:     TRISBbits.TRISB1 = 1;
  1134  05D7  1683               	bsf	3,5	;RP0=1, select bank1
  1135  05D8  1303               	bcf	3,6	;RP1=0, select bank1
  1136  05D9  1486               	bsf	6,1	;volatile
  1137                           
  1138                           ;usart.c: 8:     TRISBbits.TRISB2 = 0;
  1139  05DA  1106               	bcf	6,2	;volatile
  1140  05DB                     l908:
  1141                           
  1142                           ;usart.c: 9:     SPBRG = (unsigned char)(((20000000/BAUD)/64) - 1);
  1143  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  1144  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  1145  05DD  0829               	movf	usart_init@BAUD+3,w
  1146  05DE  00F3               	movwf	___aldiv@divisor+3
  1147  05DF  0828               	movf	usart_init@BAUD+2,w
  1148  05E0  00F2               	movwf	___aldiv@divisor+2
  1149  05E1  0827               	movf	usart_init@BAUD+1,w
  1150  05E2  00F1               	movwf	___aldiv@divisor+1
  1151  05E3  0826               	movf	usart_init@BAUD,w
  1152  05E4  00F0               	movwf	___aldiv@divisor
  1153  05E5  3001               	movlw	1
  1154  05E6  00F7               	movwf	___aldiv@dividend+3
  1155  05E7  3031               	movlw	49
  1156  05E8  00F6               	movwf	___aldiv@dividend+2
  1157  05E9  302D               	movlw	45
  1158  05EA  00F5               	movwf	___aldiv@dividend+1
  1159  05EB  3000               	movlw	0
  1160  05EC  00F4               	movwf	___aldiv@dividend
  1161  05ED  120A  118A  2622  120A  118A  	fcall	___aldiv
  1162  05F2  0873               	movf	?___aldiv+3,w
  1163  05F3  00FC               	movwf	_usart_init$817+3
  1164  05F4  0872               	movf	?___aldiv+2,w
  1165  05F5  00FB               	movwf	_usart_init$817+2
  1166  05F6  0871               	movf	?___aldiv+1,w
  1167  05F7  00FA               	movwf	_usart_init$817+1
  1168  05F8  0870               	movf	?___aldiv,w
  1169  05F9  00F9               	movwf	_usart_init$817
  1170                           
  1171                           ;usart.c: 9:     SPBRG = (unsigned char)(((20000000/BAUD)/64) - 1);
  1172  05FA  3000               	movlw	0
  1173  05FB  00F3               	movwf	___aldiv@divisor+3
  1174  05FC  3000               	movlw	0
  1175  05FD  00F2               	movwf	___aldiv@divisor+2
  1176  05FE  3000               	movlw	0
  1177  05FF  00F1               	movwf	___aldiv@divisor+1
  1178  0600  3040               	movlw	64
  1179  0601  00F0               	movwf	___aldiv@divisor
  1180  0602  087C               	movf	_usart_init$817+3,w
  1181  0603  00F7               	movwf	___aldiv@dividend+3
  1182  0604  087B               	movf	_usart_init$817+2,w
  1183  0605  00F6               	movwf	___aldiv@dividend+2
  1184  0606  087A               	movf	_usart_init$817+1,w
  1185  0607  00F5               	movwf	___aldiv@dividend+1
  1186  0608  0879               	movf	_usart_init$817,w
  1187  0609  00F4               	movwf	___aldiv@dividend
  1188  060A  120A  118A  2622  120A  118A  	fcall	___aldiv
  1189  060F  0870               	movf	?___aldiv,w
  1190  0610  3EFF               	addlw	255
  1191  0611  1683               	bsf	3,5	;RP0=1, select bank1
  1192  0612  1303               	bcf	3,6	;RP1=0, select bank1
  1193  0613  0099               	movwf	25	;volatile
  1194  0614                     l910:
  1195                           
  1196                           ;usart.c: 14:     RCSTAbits.SPEN = 1;
  1197  0614  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0615  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0616  1798               	bsf	24,7	;volatile
  1200  0617                     l912:
  1201                           
  1202                           ;usart.c: 15:     TXSTAbits.SYNC = 0;
  1203  0617  1683               	bsf	3,5	;RP0=1, select bank1
  1204  0618  1303               	bcf	3,6	;RP1=0, select bank1
  1205  0619  1218               	bcf	24,4	;volatile
  1206  061A                     l914:
  1207                           
  1208                           ;usart.c: 16:     TXSTAbits.TX9 = 0;
  1209  061A  1318               	bcf	24,6	;volatile
  1210  061B                     l916:
  1211                           
  1212                           ;usart.c: 17:     TXSTAbits.TXEN = 1;
  1213  061B  1698               	bsf	24,5	;volatile
  1214  061C                     l918:
  1215                           
  1216                           ;usart.c: 18:     RCSTAbits.RX9 = 0;
  1217  061C  1283               	bcf	3,5	;RP0=0, select bank0
  1218  061D  1303               	bcf	3,6	;RP1=0, select bank0
  1219  061E  1318               	bcf	24,6	;volatile
  1220  061F                     l920:
  1221                           
  1222                           ;usart.c: 19:     RCSTAbits.CREN = 1;
  1223  061F  1618               	bsf	24,4	;volatile
  1224  0620                     l922:
  1225                           
  1226                           ;usart.c: 20:     RCSTAbits.SPEN = 1;
  1227  0620  1798               	bsf	24,7	;volatile
  1228  0621                     l69:
  1229  0621  0008               	return
  1230  0622                     __end_of_usart_init:
  1231                           
  1232                           	psect	text2
  1233  0622                     __ptext2:	
  1234 ;; *************** function ___aldiv *****************
  1235 ;; Defined at:
  1236 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;  divisor         4    0[COMMON] long 
  1239 ;;  dividend        4    4[COMMON] long 
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;  quotient        4    2[BANK0 ] long 
  1242 ;;  sign            1    1[BANK0 ] unsigned char 
  1243 ;;  counter         1    0[BANK0 ] unsigned char 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  4    0[COMMON] long 
  1246 ;; Registers used:
  1247 ;;		wreg, status,2, status,0
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1253 ;;      Params:         8       0       0       0       0
  1254 ;;      Locals:         0       6       0       0       0
  1255 ;;      Temps:          1       0       0       0       0
  1256 ;;      Totals:         9       6       0       0       0
  1257 ;;Total ram usage:       15 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; This function calls:
  1260 ;;		Nothing
  1261 ;; This function is called by:
  1262 ;;		_usart_init
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           
  1267                           ;psect for function ___aldiv
  1268  0622                     ___aldiv:
  1269  0622                     l866:	
  1270                           ;incstack = 0
  1271                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1272                           
  1273  0622  1283               	bcf	3,5	;RP0=0, select bank0
  1274  0623  1303               	bcf	3,6	;RP1=0, select bank0
  1275  0624  01A1               	clrf	___aldiv@sign
  1276  0625                     l868:
  1277  0625  1FF3               	btfss	___aldiv@divisor+3,7
  1278  0626  2E28               	goto	u141
  1279  0627  2E29               	goto	u140
  1280  0628                     u141:
  1281  0628  2E36               	goto	l235
  1282  0629                     u140:
  1283  0629                     l870:
  1284  0629  09F0               	comf	___aldiv@divisor,f
  1285  062A  09F1               	comf	___aldiv@divisor+1,f
  1286  062B  09F2               	comf	___aldiv@divisor+2,f
  1287  062C  09F3               	comf	___aldiv@divisor+3,f
  1288  062D  0AF0               	incf	___aldiv@divisor,f
  1289  062E  1903               	skipnz
  1290  062F  0AF1               	incf	___aldiv@divisor+1,f
  1291  0630  1903               	skipnz
  1292  0631  0AF2               	incf	___aldiv@divisor+2,f
  1293  0632  1903               	skipnz
  1294  0633  0AF3               	incf	___aldiv@divisor+3,f
  1295  0634  01A1               	clrf	___aldiv@sign
  1296  0635  0AA1               	incf	___aldiv@sign,f
  1297  0636                     l235:
  1298  0636  1FF7               	btfss	___aldiv@dividend+3,7
  1299  0637  2E39               	goto	u151
  1300  0638  2E3A               	goto	u150
  1301  0639                     u151:
  1302  0639  2E49               	goto	l876
  1303  063A                     u150:
  1304  063A                     l872:
  1305  063A  09F4               	comf	___aldiv@dividend,f
  1306  063B  09F5               	comf	___aldiv@dividend+1,f
  1307  063C  09F6               	comf	___aldiv@dividend+2,f
  1308  063D  09F7               	comf	___aldiv@dividend+3,f
  1309  063E  0AF4               	incf	___aldiv@dividend,f
  1310  063F  1903               	skipnz
  1311  0640  0AF5               	incf	___aldiv@dividend+1,f
  1312  0641  1903               	skipnz
  1313  0642  0AF6               	incf	___aldiv@dividend+2,f
  1314  0643  1903               	skipnz
  1315  0644  0AF7               	incf	___aldiv@dividend+3,f
  1316  0645                     l874:
  1317  0645  3001               	movlw	1
  1318  0646  00F8               	movwf	??___aldiv
  1319  0647  0878               	movf	??___aldiv,w
  1320  0648  06A1               	xorwf	___aldiv@sign,f
  1321  0649                     l876:
  1322  0649  3000               	movlw	0
  1323  064A  00A5               	movwf	___aldiv@quotient+3
  1324  064B  3000               	movlw	0
  1325  064C  00A4               	movwf	___aldiv@quotient+2
  1326  064D  3000               	movlw	0
  1327  064E  00A3               	movwf	___aldiv@quotient+1
  1328  064F  3000               	movlw	0
  1329  0650  00A2               	movwf	___aldiv@quotient
  1330  0651                     l878:
  1331  0651  0873               	movf	___aldiv@divisor+3,w
  1332  0652  0472               	iorwf	___aldiv@divisor+2,w
  1333  0653  0471               	iorwf	___aldiv@divisor+1,w
  1334  0654  0470               	iorwf	___aldiv@divisor,w
  1335  0655  1903               	skipnz
  1336  0656  2E58               	goto	u161
  1337  0657  2E59               	goto	u160
  1338  0658                     u161:
  1339  0658  2EA6               	goto	l898
  1340  0659                     u160:
  1341  0659                     l880:
  1342  0659  01A0               	clrf	___aldiv@counter
  1343  065A  0AA0               	incf	___aldiv@counter,f
  1344  065B  2E69               	goto	l884
  1345  065C                     l882:
  1346  065C  3001               	movlw	1
  1347  065D  00F8               	movwf	??___aldiv
  1348  065E                     u175:
  1349  065E  1003               	clrc
  1350  065F  0DF0               	rlf	___aldiv@divisor,f
  1351  0660  0DF1               	rlf	___aldiv@divisor+1,f
  1352  0661  0DF2               	rlf	___aldiv@divisor+2,f
  1353  0662  0DF3               	rlf	___aldiv@divisor+3,f
  1354  0663  0BF8               	decfsz	??___aldiv,f
  1355  0664  2E5E               	goto	u175
  1356  0665  3001               	movlw	1
  1357  0666  00F8               	movwf	??___aldiv
  1358  0667  0878               	movf	??___aldiv,w
  1359  0668  07A0               	addwf	___aldiv@counter,f
  1360  0669                     l884:
  1361  0669  1FF3               	btfss	___aldiv@divisor+3,7
  1362  066A  2E6C               	goto	u181
  1363  066B  2E6D               	goto	u180
  1364  066C                     u181:
  1365  066C  2E5C               	goto	l882
  1366  066D                     u180:
  1367  066D                     l886:
  1368  066D  3001               	movlw	1
  1369  066E  00F8               	movwf	??___aldiv
  1370  066F                     u195:
  1371  066F  1003               	clrc
  1372  0670  0DA2               	rlf	___aldiv@quotient,f
  1373  0671  0DA3               	rlf	___aldiv@quotient+1,f
  1374  0672  0DA4               	rlf	___aldiv@quotient+2,f
  1375  0673  0DA5               	rlf	___aldiv@quotient+3,f
  1376  0674  0BF8               	decfsz	??___aldiv,f
  1377  0675  2E6F               	goto	u195
  1378  0676                     l888:
  1379  0676  0873               	movf	___aldiv@divisor+3,w
  1380  0677  0277               	subwf	___aldiv@dividend+3,w
  1381  0678  1D03               	skipz
  1382  0679  2E84               	goto	u205
  1383  067A  0872               	movf	___aldiv@divisor+2,w
  1384  067B  0276               	subwf	___aldiv@dividend+2,w
  1385  067C  1D03               	skipz
  1386  067D  2E84               	goto	u205
  1387  067E  0871               	movf	___aldiv@divisor+1,w
  1388  067F  0275               	subwf	___aldiv@dividend+1,w
  1389  0680  1D03               	skipz
  1390  0681  2E84               	goto	u205
  1391  0682  0870               	movf	___aldiv@divisor,w
  1392  0683  0274               	subwf	___aldiv@dividend,w
  1393  0684                     u205:
  1394  0684  1C03               	skipc
  1395  0685  2E87               	goto	u201
  1396  0686  2E88               	goto	u200
  1397  0687                     u201:
  1398  0687  2E97               	goto	l894
  1399  0688                     u200:
  1400  0688                     l890:
  1401  0688  0870               	movf	___aldiv@divisor,w
  1402  0689  02F4               	subwf	___aldiv@dividend,f
  1403  068A  0871               	movf	___aldiv@divisor+1,w
  1404  068B  1C03               	skipc
  1405  068C  0F71               	incfsz	___aldiv@divisor+1,w
  1406  068D  02F5               	subwf	___aldiv@dividend+1,f
  1407  068E  0872               	movf	___aldiv@divisor+2,w
  1408  068F  1C03               	skipc
  1409  0690  0F72               	incfsz	___aldiv@divisor+2,w
  1410  0691  02F6               	subwf	___aldiv@dividend+2,f
  1411  0692  0873               	movf	___aldiv@divisor+3,w
  1412  0693  1C03               	skipc
  1413  0694  0F73               	incfsz	___aldiv@divisor+3,w
  1414  0695  02F7               	subwf	___aldiv@dividend+3,f
  1415  0696                     l892:
  1416  0696  1422               	bsf	___aldiv@quotient,0
  1417  0697                     l894:
  1418  0697  3001               	movlw	1
  1419  0698                     u215:
  1420  0698  1003               	clrc
  1421  0699  0CF3               	rrf	___aldiv@divisor+3,f
  1422  069A  0CF2               	rrf	___aldiv@divisor+2,f
  1423  069B  0CF1               	rrf	___aldiv@divisor+1,f
  1424  069C  0CF0               	rrf	___aldiv@divisor,f
  1425  069D  3EFF               	addlw	-1
  1426  069E  1D03               	skipz
  1427  069F  2E98               	goto	u215
  1428  06A0                     l896:
  1429  06A0  3001               	movlw	1
  1430  06A1  02A0               	subwf	___aldiv@counter,f
  1431  06A2  1D03               	btfss	3,2
  1432  06A3  2EA5               	goto	u221
  1433  06A4  2EA6               	goto	u220
  1434  06A5                     u221:
  1435  06A5  2E6D               	goto	l886
  1436  06A6                     u220:
  1437  06A6                     l898:
  1438  06A6  0821               	movf	___aldiv@sign,w
  1439  06A7  1903               	btfsc	3,2
  1440  06A8  2EAA               	goto	u231
  1441  06A9  2EAB               	goto	u230
  1442  06AA                     u231:
  1443  06AA  2EB6               	goto	l902
  1444  06AB                     u230:
  1445  06AB                     l900:
  1446  06AB  09A2               	comf	___aldiv@quotient,f
  1447  06AC  09A3               	comf	___aldiv@quotient+1,f
  1448  06AD  09A4               	comf	___aldiv@quotient+2,f
  1449  06AE  09A5               	comf	___aldiv@quotient+3,f
  1450  06AF  0AA2               	incf	___aldiv@quotient,f
  1451  06B0  1903               	skipnz
  1452  06B1  0AA3               	incf	___aldiv@quotient+1,f
  1453  06B2  1903               	skipnz
  1454  06B3  0AA4               	incf	___aldiv@quotient+2,f
  1455  06B4  1903               	skipnz
  1456  06B5  0AA5               	incf	___aldiv@quotient+3,f
  1457  06B6                     l902:
  1458  06B6  0825               	movf	___aldiv@quotient+3,w
  1459  06B7  00F3               	movwf	?___aldiv+3
  1460  06B8  0824               	movf	___aldiv@quotient+2,w
  1461  06B9  00F2               	movwf	?___aldiv+2
  1462  06BA  0823               	movf	___aldiv@quotient+1,w
  1463  06BB  00F1               	movwf	?___aldiv+1
  1464  06BC  0822               	movf	___aldiv@quotient,w
  1465  06BD  00F0               	movwf	?___aldiv
  1466  06BE                     l245:
  1467  06BE  0008               	return
  1468  06BF                     __end_of___aldiv:
  1469                           
  1470                           	psect	text3
  1471  05B8                     __ptext3:	
  1472 ;; *************** function _usart_TxStr *****************
  1473 ;; Defined at:
  1474 ;;		line 34 in file "usart.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  str             1    wreg     PTR unsigned char 
  1477 ;;		 -> STR_24(9), STR_23(9), STR_22(9), STR_21(9), 
  1478 ;;		 -> STR_20(9), STR_19(9), STR_18(9), STR_17(9), 
  1479 ;;		 -> STR_16(9), STR_15(9), STR_14(9), STR_13(9), 
  1480 ;;		 -> STR_12(9), STR_11(9), STR_10(9), STR_9(9), 
  1481 ;;		 -> STR_8(9), STR_7(9), STR_6(9), STR_5(9), 
  1482 ;;		 -> STR_4(9), STR_3(9), STR_2(9), STR_1(9), 
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;  str             1    2[COMMON] PTR unsigned char 
  1485 ;;		 -> STR_24(9), STR_23(9), STR_22(9), STR_21(9), 
  1486 ;;		 -> STR_20(9), STR_19(9), STR_18(9), STR_17(9), 
  1487 ;;		 -> STR_16(9), STR_15(9), STR_14(9), STR_13(9), 
  1488 ;;		 -> STR_12(9), STR_11(9), STR_10(9), STR_9(9), 
  1489 ;;		 -> STR_8(9), STR_7(9), STR_6(9), STR_5(9), 
  1490 ;;		 -> STR_4(9), STR_3(9), STR_2(9), STR_1(9), 
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      void 
  1493 ;; Registers used:
  1494 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1500 ;;      Params:         0       0       0       0       0
  1501 ;;      Locals:         1       0       0       0       0
  1502 ;;      Temps:          1       0       0       0       0
  1503 ;;      Totals:         2       0       0       0       0
  1504 ;;Total ram usage:        2 bytes
  1505 ;; Hardware stack levels used:    1
  1506 ;; Hardware stack levels required when called:    1
  1507 ;; This function calls:
  1508 ;;		_usart_Tx
  1509 ;; This function is called by:
  1510 ;;		_main
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           
  1515                           ;psect for function _usart_TxStr
  1516  05B8                     _usart_TxStr:
  1517                           
  1518                           ;incstack = 0
  1519                           ; Regs used in _usart_TxStr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1520                           ;usart_TxStr@str stored from wreg
  1521  05B8  00F2               	movwf	usart_TxStr@str
  1522  05B9                     l924:
  1523                           
  1524                           ;usart.c: 35:     while(*str != '\0'){
  1525  05B9  2DCA               	goto	l930
  1526  05BA                     l926:
  1527                           
  1528                           ;usart.c: 36:         usart_Tx(*str);
  1529  05BA  0872               	movf	usart_TxStr@str,w
  1530  05BB  0084               	movwf	4
  1531  05BC  120A  118A  2003  120A  118A  	fcall	stringdir
  1532  05C1  120A  118A  25AC  120A  118A  	fcall	_usart_Tx
  1533  05C6                     l928:
  1534                           
  1535                           ;usart.c: 37:         str++;
  1536  05C6  3001               	movlw	1
  1537  05C7  00F1               	movwf	??_usart_TxStr
  1538  05C8  0871               	movf	??_usart_TxStr,w
  1539  05C9  07F2               	addwf	usart_TxStr@str,f
  1540  05CA                     l930:
  1541                           
  1542                           ;usart.c: 35:     while(*str != '\0'){
  1543  05CA  0872               	movf	usart_TxStr@str,w
  1544  05CB  0084               	movwf	4
  1545  05CC  120A  118A  2003  120A  118A  	fcall	stringdir
  1546  05D1  3A00               	xorlw	0
  1547  05D2  1D03               	skipz
  1548  05D3  2DD5               	goto	u241
  1549  05D4  2DD6               	goto	u240
  1550  05D5                     u241:
  1551  05D5  2DBA               	goto	l926
  1552  05D6                     u240:
  1553  05D6                     l84:
  1554  05D6  0008               	return
  1555  05D7                     __end_of_usart_TxStr:
  1556                           
  1557                           	psect	text4
  1558  05AC                     __ptext4:	
  1559 ;; *************** function _usart_Tx *****************
  1560 ;; Defined at:
  1561 ;;		line 25 in file "usart.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;  send            1    wreg     unsigned char 
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;  send            1    0[COMMON] unsigned char 
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      void 
  1568 ;; Registers used:
  1569 ;;		wreg
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1575 ;;      Params:         0       0       0       0       0
  1576 ;;      Locals:         1       0       0       0       0
  1577 ;;      Temps:          0       0       0       0       0
  1578 ;;      Totals:         1       0       0       0       0
  1579 ;;Total ram usage:        1 bytes
  1580 ;; Hardware stack levels used:    1
  1581 ;; This function calls:
  1582 ;;		Nothing
  1583 ;; This function is called by:
  1584 ;;		_usart_TxStr
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           
  1589                           ;psect for function _usart_Tx
  1590  05AC                     _usart_Tx:
  1591                           
  1592                           ;incstack = 0
  1593                           ; Regs used in _usart_Tx: [wreg]
  1594                           ;usart_Tx@send stored from wreg
  1595  05AC  00F0               	movwf	usart_Tx@send
  1596  05AD                     l864:
  1597                           
  1598                           ;usart.c: 26:     TXREG = send;
  1599  05AD  0870               	movf	usart_Tx@send,w
  1600  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  1601  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  1602  05B0  0099               	movwf	25	;volatile
  1603  05B1                     l72:	
  1604                           ;usart.c: 27:     while (!TXSTAbits.TRMT);
  1605                           
  1606  05B1  1683               	bsf	3,5	;RP0=1, select bank1
  1607  05B2  1303               	bcf	3,6	;RP1=0, select bank1
  1608  05B3  1C98               	btfss	24,1	;volatile
  1609  05B4  2DB6               	goto	u131
  1610  05B5  2DB7               	goto	u130
  1611  05B6                     u131:
  1612  05B6  2DB1               	goto	l72
  1613  05B7                     u130:
  1614  05B7                     l75:
  1615  05B7  0008               	return
  1616  05B8                     __end_of_usart_Tx:
  1617  007E                     btemp	set	126	;btemp
  1618  007E                     wtemp0	set	126
  1619                           
  1620                           	psect	config
  1621                           
  1622                           ;Config register CONFIG1 @ 0x2007
  1623                           ;	Oscillator Selection bits
  1624                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1625                           ;	Watchdog Timer Enable bit
  1626                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1627                           ;	Power-up Timer Enable bit
  1628                           ;	PWRTE = OFF, PWRT disabled
  1629                           ;	RE3/MCLR pin function select bit
  1630                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1631                           ;	Code Protection bit
  1632                           ;	CP = OFF, Program memory code protection is disabled
  1633                           ;	Data Code Protection bit
  1634                           ;	CPD = OFF, Data memory code protection is disabled
  1635                           ;	Brown Out Reset Selection bits
  1636                           ;	BOREN = ON, BOR enabled
  1637                           ;	Internal External Switchover bit
  1638                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1639                           ;	Fail-Safe Clock Monitor Enabled bit
  1640                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1641                           ;	Low Voltage Programming Enable bit
  1642                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1643                           ;	In-Circuit Debugger Mode bit
  1644                           ;	DEBUG = 0x1, unprogrammed default
  1645  2007                     	org	8199
  1646  2007  3FF2               	dw	16370
  1647                           
  1648                           ;Config register CONFIG2 @ 0x2008
  1649                           ;	Brown-out Reset Selection bit
  1650                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1651                           ;	Flash Program Memory Self Write Enable bits
  1652                           ;	WRT = OFF, Write protection off
  1653  2008                     	org	8200
  1654  2008  3FFF               	dw	16383

Data Sizes:
    Strings     216
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     13      14
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ptrCmd	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    usart_TxStr@str	PTR unsigned char  size(1) Largest target is 9
		 -> STR_24(CODE[9]), STR_23(CODE[9]), STR_22(CODE[9]), STR_21(CODE[9]), 
		 -> STR_20(CODE[9]), STR_19(CODE[9]), STR_18(CODE[9]), STR_17(CODE[9]), 
		 -> STR_16(CODE[9]), STR_15(CODE[9]), STR_14(CODE[9]), STR_13(CODE[9]), 
		 -> STR_12(CODE[9]), STR_11(CODE[9]), STR_10(CODE[9]), STR_9(CODE[9]), 
		 -> STR_8(CODE[9]), STR_7(CODE[9]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_usart_init
    _usart_init->___aldiv
    _usart_TxStr->_usart_Tx

Critical Paths under _main in BANK0

    _main->_usart_init
    _usart_init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1608
                                             13 COMMON     1     1      0
                                             10 BANK0      3     3      0
                        _usart_TxStr
                         _usart_init
 ---------------------------------------------------------------------------------
 (1) _usart_init                                           8     4      4     725
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _usart_TxStr                                          2     2      0     859
                                              1 COMMON     2     2      0
                           _usart_Tx
 ---------------------------------------------------------------------------------
 (2) _usart_Tx                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _usart_TxStr
     _usart_Tx
   _usart_init
     ___aldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D       E       5       17.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Oct 26 23:37:24 2021

                      pc 0002                       l72 05B1                       l75 05B7  
                     l84 05D6                       l69 0621                       fsr 0004  
                    l235 0636                      l245 06BE                      l900 06AB  
                    l902 06B6                      l910 0614                      l920 061F  
                    l912 0617                      l930 05CA                      l922 0620  
                    l914 061A                      l906 05D7                      l924 05B9  
                    l916 061B                      l908 05DB                      l940 06CA  
                    l932 06BF                      l926 05BA                      l870 0629  
                    l918 061C                      l950 06F4                      l942 06D7  
                    l934 06C2                      l864 05AD                      l928 05C6  
                    l880 0659                      l872 063A                      l960 0711  
                    l952 06FB                      l944 06D7                      l936 06C6  
                    l890 0688                      l882 065C                      l874 0645  
                    l866 0622                      l970 072E                      l962 0718  
                    l954 0702                      l946 06DD                      l938 06C7  
                    l892 0696                      l884 0669                      l876 0649  
                    l868 0625                      l980 074C                      l972 0735  
                    l964 071F                      l956 0703                      l948 06ED  
                    l894 0697                      l886 066D                      l878 0651  
                    l990 076A                      l982 0753                      l974 073C  
                    l966 0720                      l958 070A                      l896 06A0  
                    l888 0676                      l992 0771                      l984 075A  
                    l976 073E                      l968 0727                      l898 06A6  
                    l994 0778                      l986 075C                      l978 0745  
                    l996 077A                      l988 0763                      l998 0781  
                    u200 0688                      u201 0687                      u130 05B7  
                    u131 05B6                      u220 06A6                      u140 0629  
                    u221 06A5                      u205 0684                      u141 0628  
                    u230 06AB                      u150 063A                      u231 06AA  
                    u215 0698                      u151 0639                      u240 05D6  
                    u160 0659                      u241 05D5                      u161 0658  
                    u180 066D                      u181 066C                      u175 065E  
                    u257 06E5                      u195 066F                      fsr0 0004  
                   l1000 0788                     l1002 078F                     l1010 079F  
                   l1004 0796                     l1006 0798                     l1048 07A9  
                   STR_1 00AB                     STR_2 0075                     STR_3 003F  
                   STR_4 0009                     STR_5 00C6                     STR_6 0090  
                   STR_7 005A                     STR_8 0024                     STR_9 00B4  
            main@entrada 007D              _usart_TxStr 05B8                     _main 06BF  
                   btemp 007E                     start 0000          __end_of___aldiv 06BF  
                  ?_main 0070                    STR_10 007E                    STR_11 0048  
                  STR_20 001B                    STR_12 0012                    STR_21 00D8  
                  STR_13 00CF                    STR_22 00A2                    STR_14 0099  
                  STR_23 006C                    STR_15 0063                    STR_24 0036  
                  STR_16 002D                    STR_17 00BD                    STR_18 0087  
                  STR_19 0051                    _RCREG 001A                    _SPBRG 0099  
                  _PORTB 0006                    _PORTE 0009                    _TRISB 0086  
                  _TRISE 0089                    _TXREG 0019                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07F9  
           __end_of_main 07F9                   ??_main 002A                   _ANSELH 0189  
              ??___aldiv 0078                   _ptrCmd 002D         __end_of_usart_Tx 05B8  
__end_of__initialization 07FC           __pcstackCOMMON 0070           usart_TxStr@str 0072  
           ?_usart_TxStr 0070               __pbssBANK0 002D             usart_Tx@send 0070  
             __pmaintext 06BF           usart_init@BAUD 0026               __stringtab 0003  
         _usart_init$817 0079                  ___aldiv 0622                ?_usart_Tx 0070  
                __ptext1 05D7                  __ptext2 0622                  __ptext3 05B8  
                __ptext4 05AC         ___aldiv@dividend 0074     end_of_initialization 07FC  
              _RCSTAbits 0018         ___aldiv@quotient 0022               ??_usart_Tx 0070  
              _TRISBbits 0086     __size_of_usart_TxStr 001F                _TXSTAbits 0098  
             _usart_init 05D7      start_initialization 07F9                ___latbits 0002  
          __pcstackBANK0 0020              ?_usart_init 0026                 ?___aldiv 0070  
              __pstrings 0003        __size_of_usart_Tx 000C          ___aldiv@divisor 0070  
        ___aldiv@counter 0020              __stringbase 0008      __size_of_usart_init 004B  
       __size_of___aldiv 009D       __end_of__stringtab 0009            ??_usart_TxStr 0071  
          __size_of_main 013A                 _usart_Tx 05AC             ??_usart_init 0079  
    __end_of_usart_TxStr 05D7                stringcode 0003                 stringdir 0003  
               stringtab 0003             ___aldiv@sign 0021       __end_of_usart_init 0622  
