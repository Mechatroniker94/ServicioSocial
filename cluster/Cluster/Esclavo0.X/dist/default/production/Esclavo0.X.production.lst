

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Oct 26 23:59:58 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F887 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  008F                     	;# 
   120  0090                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  0105                     	;# 
   139  0107                     	;# 
   140  0108                     	;# 
   141  0109                     	;# 
   142  010C                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0185                     	;# 
   148  0187                     	;# 
   149  0188                     	;# 
   150  0189                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  0087                     	;# 
   192  0088                     	;# 
   193  0089                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  008F                     	;# 
   198  0090                     	;# 
   199  0091                     	;# 
   200  0092                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0094                     	;# 
   205  0095                     	;# 
   206  0096                     	;# 
   207  0097                     	;# 
   208  0098                     	;# 
   209  0099                     	;# 
   210  009A                     	;# 
   211  009B                     	;# 
   212  009C                     	;# 
   213  009D                     	;# 
   214  009E                     	;# 
   215  009F                     	;# 
   216  0105                     	;# 
   217  0107                     	;# 
   218  0108                     	;# 
   219  0109                     	;# 
   220  010C                     	;# 
   221  010C                     	;# 
   222  010D                     	;# 
   223  010E                     	;# 
   224  010F                     	;# 
   225  0185                     	;# 
   226  0187                     	;# 
   227  0188                     	;# 
   228  0189                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231  0000                     	;# 
   232  0001                     	;# 
   233  0002                     	;# 
   234  0003                     	;# 
   235  0004                     	;# 
   236  0005                     	;# 
   237  0006                     	;# 
   238  0007                     	;# 
   239  0008                     	;# 
   240  0009                     	;# 
   241  000A                     	;# 
   242  000B                     	;# 
   243  000C                     	;# 
   244  000D                     	;# 
   245  000E                     	;# 
   246  000E                     	;# 
   247  000F                     	;# 
   248  0010                     	;# 
   249  0011                     	;# 
   250  0012                     	;# 
   251  0013                     	;# 
   252  0014                     	;# 
   253  0015                     	;# 
   254  0015                     	;# 
   255  0016                     	;# 
   256  0017                     	;# 
   257  0018                     	;# 
   258  0019                     	;# 
   259  001A                     	;# 
   260  001B                     	;# 
   261  001B                     	;# 
   262  001C                     	;# 
   263  001D                     	;# 
   264  001E                     	;# 
   265  001F                     	;# 
   266  0081                     	;# 
   267  0085                     	;# 
   268  0086                     	;# 
   269  0087                     	;# 
   270  0088                     	;# 
   271  0089                     	;# 
   272  008C                     	;# 
   273  008D                     	;# 
   274  008E                     	;# 
   275  008F                     	;# 
   276  0090                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0094                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  009F                     	;# 
   294  0105                     	;# 
   295  0107                     	;# 
   296  0108                     	;# 
   297  0109                     	;# 
   298  010C                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  010E                     	;# 
   302  010F                     	;# 
   303  0185                     	;# 
   304  0187                     	;# 
   305  0188                     	;# 
   306  0189                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309  0000                     	;# 
   310  0001                     	;# 
   311  0002                     	;# 
   312  0003                     	;# 
   313  0004                     	;# 
   314  0005                     	;# 
   315  0006                     	;# 
   316  0007                     	;# 
   317  0008                     	;# 
   318  0009                     	;# 
   319  000A                     	;# 
   320  000B                     	;# 
   321  000C                     	;# 
   322  000D                     	;# 
   323  000E                     	;# 
   324  000E                     	;# 
   325  000F                     	;# 
   326  0010                     	;# 
   327  0011                     	;# 
   328  0012                     	;# 
   329  0013                     	;# 
   330  0014                     	;# 
   331  0015                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0017                     	;# 
   335  0018                     	;# 
   336  0019                     	;# 
   337  001A                     	;# 
   338  001B                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  001D                     	;# 
   342  001E                     	;# 
   343  001F                     	;# 
   344  0081                     	;# 
   345  0085                     	;# 
   346  0086                     	;# 
   347  0087                     	;# 
   348  0088                     	;# 
   349  0089                     	;# 
   350  008C                     	;# 
   351  008D                     	;# 
   352  008E                     	;# 
   353  008F                     	;# 
   354  0090                     	;# 
   355  0091                     	;# 
   356  0092                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0093                     	;# 
   360  0094                     	;# 
   361  0095                     	;# 
   362  0096                     	;# 
   363  0097                     	;# 
   364  0098                     	;# 
   365  0099                     	;# 
   366  009A                     	;# 
   367  009B                     	;# 
   368  009C                     	;# 
   369  009D                     	;# 
   370  009E                     	;# 
   371  009F                     	;# 
   372  0105                     	;# 
   373  0107                     	;# 
   374  0108                     	;# 
   375  0109                     	;# 
   376  010C                     	;# 
   377  010C                     	;# 
   378  010D                     	;# 
   379  010E                     	;# 
   380  010F                     	;# 
   381  0185                     	;# 
   382  0187                     	;# 
   383  0188                     	;# 
   384  0189                     	;# 
   385  018C                     	;# 
   386  018D                     	;# 
   387                           
   388                           	psect	strings
   389  0572                     __pstrings:
   390  0572                     stringtab:
   391  0572                     __stringtab:
   392  0572                     stringcode:	
   393                           ;	String table - string pointers are 1 byte each
   394                           
   395  0572                     stringdir:
   396  0572  3005               	movlw	high stringdir
   397  0573  008A               	movwf	10
   398  0574  0804               	movf	4,w
   399  0575  0A84               	incf	4,f
   400  0576  0782               	addwf	2,f
   401  0577                     __stringbase:
   402  0577  3400               	retlw	0
   403  0578                     __end_of__stringtab:
   404  0578                     _dpowers:
   405  0578  3401               	retlw	1
   406  0579  3400               	retlw	0
   407  057A  340A               	retlw	10
   408  057B  3400               	retlw	0
   409  057C  3464               	retlw	100
   410  057D  3400               	retlw	0
   411  057E  34E8               	retlw	232
   412  057F  3403               	retlw	3
   413  0580  3410               	retlw	16
   414  0581  3427               	retlw	39
   415  0582                     __end_of_dpowers:
   416  0014                     _SSPCONbits	set	20
   417  0013                     _SSPBUF	set	19
   418  0014                     _SSPCON	set	20
   419  001A                     _RCREG	set	26
   420  0019                     _TXREG	set	25
   421  0018                     _RCSTAbits	set	24
   422  0006                     _PORTBbits	set	6
   423  0006                     _PORTB	set	6
   424  0008                     _PORTD	set	8
   425  000C                     _PIR1bits	set	12
   426  000B                     _INTCONbits	set	11
   427  0063                     _SSPIF	set	99
   428  0094                     _SSPSTATbits	set	148
   429  0091                     _SSPCON2bits	set	145
   430  0091                     _SSPCON2	set	145
   431  0094                     _SSPSTAT	set	148
   432  0093                     _SSPADD	set	147
   433  0087                     _TRISCbits	set	135
   434  008C                     _PIE1bits	set	140
   435  0098                     _TXSTAbits	set	152
   436  0099                     _SPBRG	set	153
   437  0086                     _TRISBbits	set	134
   438  0086                     _TRISB	set	134
   439  0088                     _TRISD	set	136
   440  043C                     _TRISC4	set	1084
   441  043B                     _TRISC3	set	1083
   442  0582                     STR_3:
   443  0582  3425               	retlw	37	;'%'
   444  0583  3464               	retlw	100	;'d'
   445  0584  340A               	retlw	10
   446  0585  3400               	retlw	0
   447  0586                     STR_1:
   448  0586  344D               	retlw	77	;'M'
   449  0587  3431               	retlw	49	;'1'
   450  0588  3400               	retlw	0
   451  0589                     STR_2:
   452  0589  3450               	retlw	80	;'P'
   453  058A  3431               	retlw	49	;'1'
   454  058B  3400               	retlw	0
   455  058C                     STR_4:
   456  058C  3450               	retlw	80	;'P'
   457  058D  3432               	retlw	50	;'2'
   458  058E  3400               	retlw	0
   459  058F                     STR_6:
   460  058F  342C               	retlw	44	;','
   461  0590  3400               	retlw	0
   462  0582                     
   463                           	psect	cinit
   464  0015                     start_initialization:	
   465                           ; #config settings
   466                           
   467  0015                     __initialization:
   468                           
   469                           ; Clear objects allocated to COMMON
   470  0015  01FC               	clrf	__pbssCOMMON& (0+127)
   471                           
   472                           ; Clear objects allocated to BANK0
   473  0016  1383               	bcf	3,7	;select IRP bank0
   474  0017  3048               	movlw	low __pbssBANK0
   475  0018  0084               	movwf	4
   476  0019  3059               	movlw	low (__pbssBANK0+17)
   477  001A  120A  118A  2629  120A  118A  	fcall	clear_ram0
   478  001F                     end_of_initialization:	
   479                           ;End of C runtime variable initialization code
   480                           
   481  001F                     __end_of__initialization:
   482  001F  0183               	clrf	3
   483  0020  120A  118A  2B9B   	ljmp	_main	;jump to C main() function
   484                           
   485                           	psect	bssCOMMON
   486  007C                     __pbssCOMMON:
   487  007C                     strtok@sp:
   488  007C                     	ds	1
   489                           
   490                           	psect	bssBANK0
   491  0048                     __pbssBANK0:
   492  0048                     _dir:
   493  0048                     	ds	3
   494  004B                     _res:
   495  004B                     	ds	2
   496  004D                     _lectura:
   497  004D                     	ds	2
   498  004F                     _data:
   499  004F                     	ds	10
   500                           
   501                           	psect	clrtext
   502  0629                     clear_ram0:	
   503                           ;	Called with FSR containing the base address, and
   504                           ;	W with the last address+1
   505                           
   506  0629  0064               	clrwdt	;clear the watchdog before getting into this loop
   507  062A                     clrloop0:
   508  062A  0180               	clrf	0	;clear RAM location pointed to by FSR
   509  062B  0A84               	incf	4,f	;increment pointer
   510  062C  0604               	xorwf	4,w	;XOR with final address
   511  062D  1903               	btfsc	3,2	;have we reached the end yet?
   512  062E  3400               	retlw	0	;all done for this memory range, return
   513  062F  0604               	xorwf	4,w	;XOR again to restore value
   514  0630  2E2A               	goto	clrloop0	;do the next byte
   515                           
   516                           	psect	cstackBANK1
   517  00A0                     __pcstackBANK1:
   518  00A0                     _usart_init$1349:
   519                           
   520                           ; 4 bytes @ 0x0
   521  00A0                     	ds	4
   522  00A4                     ??_main:
   523                           
   524                           ; 1 bytes @ 0x4
   525  00A4                     	ds	3
   526                           
   527                           	psect	cstackCOMMON
   528  0070                     __pcstackCOMMON:
   529  0070                     ?_recivedCMD:
   530  0070                     ??_recivedCMD:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_token:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_i2c_start:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ??_i2c_start:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_i2c_write:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ??_i2c_write:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_i2c_read:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ??_i2c_read:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ?_i2c_sendACK:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ??_i2c_sendACK:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_i2c_stop:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ??_i2c_stop:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ?_usart_TxStr:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ?_usart_Interrupt:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_i2c_init:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_get1:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ??_get1:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_i2c_idle:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ??_i2c_idle:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_strchr:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_myISR:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_main:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_usart_Tx:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ??_usart_Tx:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_strcmp:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?___lwdiv:	
   606                           ; 2 bytes @ 0x0
   607                           
   608  0070                     usart_Tx@send:	
   609                           ; 2 bytes @ 0x0
   610                           
   611  0070                     i2c_write@dato:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     strcmp@s2:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ___lwdiv@divisor:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     strchr@chr:	
   621                           ; 2 bytes @ 0x0
   622                           
   623                           
   624                           ; 2 bytes @ 0x0
   625  0070                     	ds	1
   626  0071                     ??_usart_TxStr:
   627  0071                     usart_TxStr@str:	
   628                           ; 1 bytes @ 0x1
   629                           
   630  0071                     recivedCMD@cmd:	
   631                           ; 1 bytes @ 0x1
   632                           
   633                           
   634                           ; 1 bytes @ 0x1
   635  0071                     	ds	1
   636  0072                     ??_strcmp:
   637  0072                     ??_strchr:	
   638                           ; 1 bytes @ 0x2
   639                           
   640  0072                     recivedCMD@i:	
   641                           ; 1 bytes @ 0x2
   642                           
   643  0072                     strchr@ptr:	
   644                           ; 1 bytes @ 0x2
   645                           
   646  0072                     ___lwdiv@dividend:	
   647                           ; 1 bytes @ 0x2
   648                           
   649                           
   650                           ; 2 bytes @ 0x2
   651  0072                     	ds	1
   652  0073                     ?_strspn:
   653  0073                     ?_strcspn:	
   654                           ; 2 bytes @ 0x3
   655                           
   656  0073                     recivedCMD@j:	
   657                           ; 2 bytes @ 0x3
   658                           
   659  0073                     strcspn@s2:	
   660                           ; 1 bytes @ 0x3
   661                           
   662  0073                     strspn@s2:	
   663                           ; 1 bytes @ 0x3
   664                           
   665                           
   666                           ; 1 bytes @ 0x3
   667  0073                     	ds	1
   668  0074                     ??___lwdiv:
   669  0074                     strcmp@r:	
   670                           ; 1 bytes @ 0x4
   671                           
   672  0074                     ___lwdiv@quotient:	
   673                           ; 1 bytes @ 0x4
   674                           
   675                           
   676                           ; 2 bytes @ 0x4
   677  0074                     	ds	1
   678  0075                     ??_strspn:
   679  0075                     ??_strcspn:	
   680                           ; 1 bytes @ 0x5
   681                           
   682  0075                     strcmp@s1:	
   683                           ; 1 bytes @ 0x5
   684                           
   685                           
   686                           ; 1 bytes @ 0x5
   687  0075                     	ds	1
   688  0076                     ___lwdiv@counter:
   689                           
   690                           ; 1 bytes @ 0x6
   691  0076                     	ds	1
   692  0077                     ?___lwmod:
   693  0077                     ___lwmod@divisor:	
   694                           ; 2 bytes @ 0x7
   695                           
   696  0077                     strcspn@i:	
   697                           ; 2 bytes @ 0x7
   698                           
   699  0077                     strspn@i:	
   700                           ; 2 bytes @ 0x7
   701                           
   702                           
   703                           ; 2 bytes @ 0x7
   704  0077                     	ds	2
   705  0079                     strcspn@s1:
   706  0079                     strspn@s1:	
   707                           ; 1 bytes @ 0x9
   708                           
   709  0079                     ___lwmod@dividend:	
   710                           ; 1 bytes @ 0x9
   711                           
   712                           
   713                           ; 2 bytes @ 0x9
   714  0079                     	ds	1
   715  007A                     ?_strtok:
   716  007A                     strtok@s2:	
   717                           ; 1 bytes @ 0xA
   718                           
   719                           
   720                           ; 1 bytes @ 0xA
   721  007A                     	ds	1
   722  007B                     ??_strtok:
   723  007B                     ??___lwmod:	
   724                           ; 1 bytes @ 0xB
   725                           
   726  007B                     ___lwmod@counter:	
   727                           ; 1 bytes @ 0xB
   728                           
   729  007B                     strtok@s1:	
   730                           ; 1 bytes @ 0xB
   731                           
   732                           
   733                           ; 1 bytes @ 0xB
   734  007B                     	ds	1
   735  007C                     ??_token:
   736                           
   737                           	psect	cstackBANK0
   738  0020                     __pcstackBANK0:	
   739                           ; 1 bytes @ 0xC
   740                           
   741  0020                     ?_sprintf:
   742  0020                     sprintf@f:	
   743                           ; 2 bytes @ 0x0
   744                           
   745  0020                     token@i:	
   746                           ; 1 bytes @ 0x0
   747                           
   748                           
   749                           ; 2 bytes @ 0x0
   750  0020                     	ds	2
   751  0022                     token@cmd:
   752                           
   753                           ; 1 bytes @ 0x2
   754  0022                     	ds	1
   755  0023                     ??_sprintf:
   756  0023                     token@tok:	
   757                           ; 1 bytes @ 0x3
   758                           
   759                           
   760                           ; 1 bytes @ 0x3
   761  0023                     	ds	3
   762  0026                     sprintf@ap:
   763                           
   764                           ; 1 bytes @ 0x6
   765  0026                     	ds	1
   766  0027                     sprintf@flag:
   767                           
   768                           ; 1 bytes @ 0x7
   769  0027                     	ds	1
   770  0028                     sprintf@prec:
   771                           
   772                           ; 1 bytes @ 0x8
   773  0028                     	ds	1
   774  0029                     sprintf@val:
   775                           
   776                           ; 2 bytes @ 0x9
   777  0029                     	ds	2
   778  002B                     sprintf@sp:
   779                           
   780                           ; 1 bytes @ 0xB
   781  002B                     	ds	1
   782  002C                     sprintf@c:
   783                           
   784                           ; 1 bytes @ 0xC
   785  002C                     	ds	1
   786  002D                     ??_myISR:
   787                           
   788                           ; 1 bytes @ 0xD
   789  002D                     	ds	8
   790  0035                     ??_usart_Interrupt:
   791  0035                     ??_i2c_init:	
   792                           ; 1 bytes @ 0x15
   793                           
   794  0035                     ?___aldiv:	
   795                           ; 1 bytes @ 0x15
   796                           
   797  0035                     ___aldiv@divisor:	
   798                           ; 4 bytes @ 0x15
   799                           
   800                           
   801                           ; 4 bytes @ 0x15
   802  0035                     	ds	4
   803  0039                     ___aldiv@dividend:
   804                           
   805                           ; 4 bytes @ 0x19
   806  0039                     	ds	4
   807  003D                     ??___aldiv:
   808                           
   809                           ; 1 bytes @ 0x1D
   810  003D                     	ds	1
   811  003E                     ___aldiv@counter:
   812                           
   813                           ; 1 bytes @ 0x1E
   814  003E                     	ds	1
   815  003F                     ___aldiv@sign:
   816                           
   817                           ; 1 bytes @ 0x1F
   818  003F                     	ds	1
   819  0040                     ___aldiv@quotient:
   820                           
   821                           ; 4 bytes @ 0x20
   822  0040                     	ds	4
   823  0044                     ?_usart_init:
   824  0044                     usart_init@BAUD:	
   825                           ; 1 bytes @ 0x24
   826                           
   827                           
   828                           ; 4 bytes @ 0x24
   829  0044                     	ds	4
   830  0048                     ??_usart_init:
   831                           
   832                           	psect	maintext
   833  039B                     __pmaintext:	
   834                           ; 1 bytes @ 0x28
   835 ;;
   836 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   837 ;;
   838 ;; *************** function _main *****************
   839 ;; Defined at:
   840 ;;		line 62 in file "main.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;		None
   843 ;; Auto vars:     Size  Location     Type
   844 ;;		None
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : B00/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   854 ;;      Params:         0       0       0       0       0
   855 ;;      Locals:         0       0       0       0       0
   856 ;;      Temps:          0       0       3       0       0
   857 ;;      Totals:         0       0       3       0       0
   858 ;;Total ram usage:        3 bytes
   859 ;; Hardware stack levels required when called:    8
   860 ;; This function calls:
   861 ;;		_i2c_init
   862 ;;		_usart_Interrupt
   863 ;;		_usart_init
   864 ;; This function is called by:
   865 ;;		Startup code after reset
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           
   870                           ;psect for function _main
   871  039B                     _main:
   872  039B                     l1871:	
   873                           ;incstack = 0
   874                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   875                           
   876                           
   877                           ;main.c: 63:     TRISD = 0x00;
   878  039B  1683               	bsf	3,5	;RP0=1, select bank1
   879  039C  1303               	bcf	3,6	;RP1=0, select bank1
   880  039D  0188               	clrf	8	;volatile
   881                           
   882                           ;main.c: 64:     PORTD = 0x00;
   883  039E  1283               	bcf	3,5	;RP0=0, select bank0
   884  039F  1303               	bcf	3,6	;RP1=0, select bank0
   885  03A0  0188               	clrf	8	;volatile
   886                           
   887                           ;main.c: 65:     TRISB = 0x00;
   888  03A1  1683               	bsf	3,5	;RP0=1, select bank1
   889  03A2  1303               	bcf	3,6	;RP1=0, select bank1
   890  03A3  0186               	clrf	6	;volatile
   891                           
   892                           ;main.c: 66:     PORTB = 0x00;
   893  03A4  1283               	bcf	3,5	;RP0=0, select bank0
   894  03A5  1303               	bcf	3,6	;RP1=0, select bank0
   895  03A6  0186               	clrf	6	;volatile
   896  03A7                     l1873:
   897                           
   898                           ;main.c: 67:     usart_init(9600);
   899  03A7  3000               	movlw	0
   900  03A8  00C7               	movwf	usart_init@BAUD+3
   901  03A9  3000               	movlw	0
   902  03AA  00C6               	movwf	usart_init@BAUD+2
   903  03AB  3025               	movlw	37
   904  03AC  00C5               	movwf	usart_init@BAUD+1
   905  03AD  3080               	movlw	128
   906  03AE  00C4               	movwf	usart_init@BAUD
   907  03AF  120A  118A  22E0  120A  118A  	fcall	_usart_init
   908  03B4                     l1875:
   909                           
   910                           ;main.c: 68:     usart_Interrupt();
   911  03B4  120A  118A  2617  120A  118A  	fcall	_usart_Interrupt
   912  03B9                     l1877:
   913                           
   914                           ;main.c: 69:     i2c_init();
   915  03B9  120A  118A  25E2  120A  118A  	fcall	_i2c_init
   916  03BE                     l1879:
   917                           
   918                           ;main.c: 72:         PORTBbits.RB0 = 1;
   919  03BE  1283               	bcf	3,5	;RP0=0, select bank0
   920  03BF  1303               	bcf	3,6	;RP1=0, select bank0
   921  03C0  1406               	bsf	6,0	;volatile
   922  03C1                     l1881:
   923                           
   924                           ;main.c: 73:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   925  03C1  301A               	movlw	26
   926  03C2  1683               	bsf	3,5	;RP0=1, select bank1
   927  03C3  1303               	bcf	3,6	;RP1=0, select bank1
   928  03C4  00A6               	movwf	(??_main^(0+128)+2)
   929  03C5  305E               	movlw	94
   930  03C6  00A5               	movwf	(??_main^(0+128)+1)
   931  03C7  306D               	movlw	109
   932  03C8  00A4               	movwf	??_main^(0+128)
   933  03C9                     u1427:
   934  03C9  0BA4               	decfsz	??_main^(0+128),f
   935  03CA  2BC9               	goto	u1427
   936  03CB  0BA5               	decfsz	(??_main^(0+128)+1),f
   937  03CC  2BC9               	goto	u1427
   938  03CD  0BA6               	decfsz	(??_main^(0+128)+2),f
   939  03CE  2BC9               	goto	u1427
   940  03CF  2BD0               	nop2
   941  03D0                     l1883:
   942                           
   943                           ;main.c: 75:         PORTBbits.RB0 = 0;
   944  03D0  1283               	bcf	3,5	;RP0=0, select bank0
   945  03D1  1303               	bcf	3,6	;RP1=0, select bank0
   946  03D2  1006               	bcf	6,0	;volatile
   947  03D3                     l1885:
   948                           
   949                           ;main.c: 76:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   950  03D3  301A               	movlw	26
   951  03D4  1683               	bsf	3,5	;RP0=1, select bank1
   952  03D5  1303               	bcf	3,6	;RP1=0, select bank1
   953  03D6  00A6               	movwf	(??_main^(0+128)+2)
   954  03D7  305E               	movlw	94
   955  03D8  00A5               	movwf	(??_main^(0+128)+1)
   956  03D9  306D               	movlw	109
   957  03DA  00A4               	movwf	??_main^(0+128)
   958  03DB                     u1437:
   959  03DB  0BA4               	decfsz	??_main^(0+128),f
   960  03DC  2BDB               	goto	u1437
   961  03DD  0BA5               	decfsz	(??_main^(0+128)+1),f
   962  03DE  2BDB               	goto	u1437
   963  03DF  0BA6               	decfsz	(??_main^(0+128)+2),f
   964  03E0  2BDB               	goto	u1437
   965  03E1  2BE2               	nop2
   966  03E2  2BBE               	goto	l1879
   967  03E3  120A  118A  2812   	ljmp	start
   968  03E6                     __end_of_main:
   969                           
   970                           	psect	text1
   971  02E0                     __ptext1:	
   972 ;; *************** function _usart_init *****************
   973 ;; Defined at:
   974 ;;		line 4 in file "usart.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;  BAUD            4   36[BANK0 ] long 
   977 ;; Auto vars:     Size  Location     Type
   978 ;;		None
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   988 ;;      Params:         0       4       0       0       0
   989 ;;      Locals:         0       0       4       0       0
   990 ;;      Temps:          0       0       0       0       0
   991 ;;      Totals:         0       4       4       0       0
   992 ;;Total ram usage:        8 bytes
   993 ;; Hardware stack levels used:    1
   994 ;; Hardware stack levels required when called:    7
   995 ;; This function calls:
   996 ;;		___aldiv
   997 ;; This function is called by:
   998 ;;		_main
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           
  1003                           ;psect for function _usart_init
  1004  02E0                     _usart_init:
  1005  02E0                     l1853:	
  1006                           ;incstack = 0
  1007                           ; Regs used in _usart_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1008                           
  1009                           
  1010                           ;usart.c: 6:     TRISBbits.TRISB1 = 1;
  1011  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  1012  02E1  1303               	bcf	3,6	;RP1=0, select bank1
  1013  02E2  1486               	bsf	6,1	;volatile
  1014                           
  1015                           ;usart.c: 7:     TRISBbits.TRISB2 = 0;
  1016  02E3  1106               	bcf	6,2	;volatile
  1017  02E4                     l1855:
  1018                           
  1019                           ;usart.c: 8:     SPBRG = (unsigned char)(((20000000/BAUD)/64) - 1);
  1020  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  1021  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  1022  02E6  0847               	movf	usart_init@BAUD+3,w
  1023  02E7  00B8               	movwf	___aldiv@divisor+3
  1024  02E8  0846               	movf	usart_init@BAUD+2,w
  1025  02E9  00B7               	movwf	___aldiv@divisor+2
  1026  02EA  0845               	movf	usart_init@BAUD+1,w
  1027  02EB  00B6               	movwf	___aldiv@divisor+1
  1028  02EC  0844               	movf	usart_init@BAUD,w
  1029  02ED  00B5               	movwf	___aldiv@divisor
  1030  02EE  3001               	movlw	1
  1031  02EF  00BC               	movwf	___aldiv@dividend+3
  1032  02F0  3031               	movlw	49
  1033  02F1  00BB               	movwf	___aldiv@dividend+2
  1034  02F2  302D               	movlw	45
  1035  02F3  00BA               	movwf	___aldiv@dividend+1
  1036  02F4  3000               	movlw	0
  1037  02F5  00B9               	movwf	___aldiv@dividend
  1038  02F6  120A  118A  2243  120A  118A  	fcall	___aldiv
  1039  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  1040  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  1041  02FD  0838               	movf	?___aldiv+3,w
  1042  02FE  1683               	bsf	3,5	;RP0=1, select bank1
  1043  02FF  1303               	bcf	3,6	;RP1=0, select bank1
  1044  0300  00A3               	movwf	(_usart_init$1349+3)^(0+128)
  1045  0301  1283               	bcf	3,5	;RP0=0, select bank0
  1046  0302  1303               	bcf	3,6	;RP1=0, select bank0
  1047  0303  0837               	movf	?___aldiv+2,w
  1048  0304  1683               	bsf	3,5	;RP0=1, select bank1
  1049  0305  1303               	bcf	3,6	;RP1=0, select bank1
  1050  0306  00A2               	movwf	(_usart_init$1349+2)^(0+128)
  1051  0307  1283               	bcf	3,5	;RP0=0, select bank0
  1052  0308  1303               	bcf	3,6	;RP1=0, select bank0
  1053  0309  0836               	movf	?___aldiv+1,w
  1054  030A  1683               	bsf	3,5	;RP0=1, select bank1
  1055  030B  1303               	bcf	3,6	;RP1=0, select bank1
  1056  030C  00A1               	movwf	(_usart_init$1349+1)^(0+128)
  1057  030D  1283               	bcf	3,5	;RP0=0, select bank0
  1058  030E  1303               	bcf	3,6	;RP1=0, select bank0
  1059  030F  0835               	movf	?___aldiv,w
  1060  0310  1683               	bsf	3,5	;RP0=1, select bank1
  1061  0311  1303               	bcf	3,6	;RP1=0, select bank1
  1062  0312  00A0               	movwf	_usart_init$1349^(0+128)
  1063                           
  1064                           ;usart.c: 8:     SPBRG = (unsigned char)(((20000000/BAUD)/64) - 1);
  1065  0313  3000               	movlw	0
  1066  0314  1283               	bcf	3,5	;RP0=0, select bank0
  1067  0315  1303               	bcf	3,6	;RP1=0, select bank0
  1068  0316  00B8               	movwf	___aldiv@divisor+3
  1069  0317  3000               	movlw	0
  1070  0318  00B7               	movwf	___aldiv@divisor+2
  1071  0319  3000               	movlw	0
  1072  031A  00B6               	movwf	___aldiv@divisor+1
  1073  031B  3040               	movlw	64
  1074  031C  00B5               	movwf	___aldiv@divisor
  1075  031D  1683               	bsf	3,5	;RP0=1, select bank1
  1076  031E  1303               	bcf	3,6	;RP1=0, select bank1
  1077  031F  0823               	movf	(_usart_init$1349+3)^(0+128),w
  1078  0320  1283               	bcf	3,5	;RP0=0, select bank0
  1079  0321  1303               	bcf	3,6	;RP1=0, select bank0
  1080  0322  00BC               	movwf	___aldiv@dividend+3
  1081  0323  1683               	bsf	3,5	;RP0=1, select bank1
  1082  0324  1303               	bcf	3,6	;RP1=0, select bank1
  1083  0325  0822               	movf	(_usart_init$1349+2)^(0+128),w
  1084  0326  1283               	bcf	3,5	;RP0=0, select bank0
  1085  0327  1303               	bcf	3,6	;RP1=0, select bank0
  1086  0328  00BB               	movwf	___aldiv@dividend+2
  1087  0329  1683               	bsf	3,5	;RP0=1, select bank1
  1088  032A  1303               	bcf	3,6	;RP1=0, select bank1
  1089  032B  0821               	movf	(_usart_init$1349+1)^(0+128),w
  1090  032C  1283               	bcf	3,5	;RP0=0, select bank0
  1091  032D  1303               	bcf	3,6	;RP1=0, select bank0
  1092  032E  00BA               	movwf	___aldiv@dividend+1
  1093  032F  1683               	bsf	3,5	;RP0=1, select bank1
  1094  0330  1303               	bcf	3,6	;RP1=0, select bank1
  1095  0331  0820               	movf	_usart_init$1349^(0+128),w
  1096  0332  1283               	bcf	3,5	;RP0=0, select bank0
  1097  0333  1303               	bcf	3,6	;RP1=0, select bank0
  1098  0334  00B9               	movwf	___aldiv@dividend
  1099  0335  120A  118A  2243  120A  118A  	fcall	___aldiv
  1100  033A  1283               	bcf	3,5	;RP0=0, select bank0
  1101  033B  1303               	bcf	3,6	;RP1=0, select bank0
  1102  033C  0835               	movf	?___aldiv,w
  1103  033D  3EFF               	addlw	255
  1104  033E  1683               	bsf	3,5	;RP0=1, select bank1
  1105  033F  1303               	bcf	3,6	;RP1=0, select bank1
  1106  0340  0099               	movwf	25	;volatile
  1107  0341                     l1857:
  1108                           
  1109                           ;usart.c: 13:     RCSTAbits.SPEN = 1;
  1110  0341  1283               	bcf	3,5	;RP0=0, select bank0
  1111  0342  1303               	bcf	3,6	;RP1=0, select bank0
  1112  0343  1798               	bsf	24,7	;volatile
  1113  0344                     l1859:
  1114                           
  1115                           ;usart.c: 14:     TXSTAbits.SYNC = 0;
  1116  0344  1683               	bsf	3,5	;RP0=1, select bank1
  1117  0345  1303               	bcf	3,6	;RP1=0, select bank1
  1118  0346  1218               	bcf	24,4	;volatile
  1119  0347                     l1861:
  1120                           
  1121                           ;usart.c: 15:     TXSTAbits.TX9 = 0;
  1122  0347  1318               	bcf	24,6	;volatile
  1123  0348                     l1863:
  1124                           
  1125                           ;usart.c: 16:     TXSTAbits.TXEN = 1;
  1126  0348  1698               	bsf	24,5	;volatile
  1127  0349                     l1865:
  1128                           
  1129                           ;usart.c: 17:     RCSTAbits.RX9 = 0;
  1130  0349  1283               	bcf	3,5	;RP0=0, select bank0
  1131  034A  1303               	bcf	3,6	;RP1=0, select bank0
  1132  034B  1318               	bcf	24,6	;volatile
  1133  034C                     l1867:
  1134                           
  1135                           ;usart.c: 18:     RCSTAbits.CREN = 1;
  1136  034C  1618               	bsf	24,4	;volatile
  1137  034D                     l1869:
  1138                           
  1139                           ;usart.c: 19:     RCSTAbits.SPEN = 1;
  1140  034D  1798               	bsf	24,7	;volatile
  1141  034E                     l102:
  1142  034E  0008               	return
  1143  034F                     __end_of_usart_init:
  1144                           
  1145                           	psect	text2
  1146  0243                     __ptext2:	
  1147 ;; *************** function ___aldiv *****************
  1148 ;; Defined at:
  1149 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\aldiv.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;  divisor         4   21[BANK0 ] long 
  1152 ;;  dividend        4   25[BANK0 ] long 
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;  quotient        4   32[BANK0 ] long 
  1155 ;;  sign            1   31[BANK0 ] unsigned char 
  1156 ;;  counter         1   30[BANK0 ] unsigned char 
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  4   21[BANK0 ] long 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2, status,0, btemp+1
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1166 ;;      Params:         0       8       0       0       0
  1167 ;;      Locals:         0       6       0       0       0
  1168 ;;      Temps:          0       1       0       0       0
  1169 ;;      Totals:         0      15       0       0       0
  1170 ;;Total ram usage:       15 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; Hardware stack levels required when called:    6
  1173 ;; This function calls:
  1174 ;;		Nothing
  1175 ;; This function is called by:
  1176 ;;		_usart_init
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           
  1181                           ;psect for function ___aldiv
  1182  0243                     ___aldiv:
  1183  0243                     l1811:	
  1184                           ;incstack = 0
  1185                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
  1186                           
  1187  0243  1283               	bcf	3,5	;RP0=0, select bank0
  1188  0244  1303               	bcf	3,6	;RP1=0, select bank0
  1189  0245  01BF               	clrf	___aldiv@sign
  1190  0246                     l1813:
  1191  0246  1FB8               	btfss	___aldiv@divisor+3,7
  1192  0247  2A49               	goto	u1321
  1193  0248  2A4A               	goto	u1320
  1194  0249                     u1321:
  1195  0249  2A57               	goto	l424
  1196  024A                     u1320:
  1197  024A                     l1815:
  1198  024A  09B5               	comf	___aldiv@divisor,f
  1199  024B  09B6               	comf	___aldiv@divisor+1,f
  1200  024C  09B7               	comf	___aldiv@divisor+2,f
  1201  024D  09B8               	comf	___aldiv@divisor+3,f
  1202  024E  0AB5               	incf	___aldiv@divisor,f
  1203  024F  1903               	skipnz
  1204  0250  0AB6               	incf	___aldiv@divisor+1,f
  1205  0251  1903               	skipnz
  1206  0252  0AB7               	incf	___aldiv@divisor+2,f
  1207  0253  1903               	skipnz
  1208  0254  0AB8               	incf	___aldiv@divisor+3,f
  1209  0255  01BF               	clrf	___aldiv@sign
  1210  0256  0ABF               	incf	___aldiv@sign,f
  1211  0257                     l424:
  1212  0257  1FBC               	btfss	___aldiv@dividend+3,7
  1213  0258  2A5A               	goto	u1331
  1214  0259  2A5B               	goto	u1330
  1215  025A                     u1331:
  1216  025A  2A6A               	goto	l1821
  1217  025B                     u1330:
  1218  025B                     l1817:
  1219  025B  09B9               	comf	___aldiv@dividend,f
  1220  025C  09BA               	comf	___aldiv@dividend+1,f
  1221  025D  09BB               	comf	___aldiv@dividend+2,f
  1222  025E  09BC               	comf	___aldiv@dividend+3,f
  1223  025F  0AB9               	incf	___aldiv@dividend,f
  1224  0260  1903               	skipnz
  1225  0261  0ABA               	incf	___aldiv@dividend+1,f
  1226  0262  1903               	skipnz
  1227  0263  0ABB               	incf	___aldiv@dividend+2,f
  1228  0264  1903               	skipnz
  1229  0265  0ABC               	incf	___aldiv@dividend+3,f
  1230  0266                     l1819:
  1231  0266  3001               	movlw	1
  1232  0267  00FF               	movwf	btemp+1
  1233  0268  087F               	movf	btemp+1,w
  1234  0269  06BF               	xorwf	___aldiv@sign,f
  1235  026A                     l1821:
  1236  026A  3000               	movlw	0
  1237  026B  00C3               	movwf	___aldiv@quotient+3
  1238  026C  3000               	movlw	0
  1239  026D  00C2               	movwf	___aldiv@quotient+2
  1240  026E  3000               	movlw	0
  1241  026F  00C1               	movwf	___aldiv@quotient+1
  1242  0270  3000               	movlw	0
  1243  0271  00C0               	movwf	___aldiv@quotient
  1244  0272                     l1823:
  1245  0272  0838               	movf	___aldiv@divisor+3,w
  1246  0273  0437               	iorwf	___aldiv@divisor+2,w
  1247  0274  0436               	iorwf	___aldiv@divisor+1,w
  1248  0275  0435               	iorwf	___aldiv@divisor,w
  1249  0276  1903               	skipnz
  1250  0277  2A79               	goto	u1341
  1251  0278  2A7A               	goto	u1340
  1252  0279                     u1341:
  1253  0279  2AC7               	goto	l1845
  1254  027A                     u1340:
  1255  027A                     l1825:
  1256  027A  01BE               	clrf	___aldiv@counter
  1257  027B  0ABE               	incf	___aldiv@counter,f
  1258  027C  2A8A               	goto	l1831
  1259  027D                     l1827:
  1260  027D  3001               	movlw	1
  1261  027E  00BD               	movwf	??___aldiv
  1262  027F                     u1355:
  1263  027F  1003               	clrc
  1264  0280  0DB5               	rlf	___aldiv@divisor,f
  1265  0281  0DB6               	rlf	___aldiv@divisor+1,f
  1266  0282  0DB7               	rlf	___aldiv@divisor+2,f
  1267  0283  0DB8               	rlf	___aldiv@divisor+3,f
  1268  0284  0BBD               	decfsz	??___aldiv,f
  1269  0285  2A7F               	goto	u1355
  1270  0286                     l1829:
  1271  0286  3001               	movlw	1
  1272  0287  00FF               	movwf	btemp+1
  1273  0288  087F               	movf	btemp+1,w
  1274  0289  07BE               	addwf	___aldiv@counter,f
  1275  028A                     l1831:
  1276  028A  1FB8               	btfss	___aldiv@divisor+3,7
  1277  028B  2A8D               	goto	u1361
  1278  028C  2A8E               	goto	u1360
  1279  028D                     u1361:
  1280  028D  2A7D               	goto	l1827
  1281  028E                     u1360:
  1282  028E                     l1833:
  1283  028E  3001               	movlw	1
  1284  028F  00BD               	movwf	??___aldiv
  1285  0290                     u1375:
  1286  0290  1003               	clrc
  1287  0291  0DC0               	rlf	___aldiv@quotient,f
  1288  0292  0DC1               	rlf	___aldiv@quotient+1,f
  1289  0293  0DC2               	rlf	___aldiv@quotient+2,f
  1290  0294  0DC3               	rlf	___aldiv@quotient+3,f
  1291  0295  0BBD               	decfsz	??___aldiv,f
  1292  0296  2A90               	goto	u1375
  1293  0297                     l1835:
  1294  0297  0838               	movf	___aldiv@divisor+3,w
  1295  0298  023C               	subwf	___aldiv@dividend+3,w
  1296  0299  1D03               	skipz
  1297  029A  2AA5               	goto	u1385
  1298  029B  0837               	movf	___aldiv@divisor+2,w
  1299  029C  023B               	subwf	___aldiv@dividend+2,w
  1300  029D  1D03               	skipz
  1301  029E  2AA5               	goto	u1385
  1302  029F  0836               	movf	___aldiv@divisor+1,w
  1303  02A0  023A               	subwf	___aldiv@dividend+1,w
  1304  02A1  1D03               	skipz
  1305  02A2  2AA5               	goto	u1385
  1306  02A3  0835               	movf	___aldiv@divisor,w
  1307  02A4  0239               	subwf	___aldiv@dividend,w
  1308  02A5                     u1385:
  1309  02A5  1C03               	skipc
  1310  02A6  2AA8               	goto	u1381
  1311  02A7  2AA9               	goto	u1380
  1312  02A8                     u1381:
  1313  02A8  2AB8               	goto	l1841
  1314  02A9                     u1380:
  1315  02A9                     l1837:
  1316  02A9  0835               	movf	___aldiv@divisor,w
  1317  02AA  02B9               	subwf	___aldiv@dividend,f
  1318  02AB  0836               	movf	___aldiv@divisor+1,w
  1319  02AC  1C03               	skipc
  1320  02AD  0F36               	incfsz	___aldiv@divisor+1,w
  1321  02AE  02BA               	subwf	___aldiv@dividend+1,f
  1322  02AF  0837               	movf	___aldiv@divisor+2,w
  1323  02B0  1C03               	skipc
  1324  02B1  0F37               	incfsz	___aldiv@divisor+2,w
  1325  02B2  02BB               	subwf	___aldiv@dividend+2,f
  1326  02B3  0838               	movf	___aldiv@divisor+3,w
  1327  02B4  1C03               	skipc
  1328  02B5  0F38               	incfsz	___aldiv@divisor+3,w
  1329  02B6  02BC               	subwf	___aldiv@dividend+3,f
  1330  02B7                     l1839:
  1331  02B7  1440               	bsf	___aldiv@quotient,0
  1332  02B8                     l1841:
  1333  02B8  3001               	movlw	1
  1334  02B9                     u1395:
  1335  02B9  1003               	clrc
  1336  02BA  0CB8               	rrf	___aldiv@divisor+3,f
  1337  02BB  0CB7               	rrf	___aldiv@divisor+2,f
  1338  02BC  0CB6               	rrf	___aldiv@divisor+1,f
  1339  02BD  0CB5               	rrf	___aldiv@divisor,f
  1340  02BE  3EFF               	addlw	-1
  1341  02BF  1D03               	skipz
  1342  02C0  2AB9               	goto	u1395
  1343  02C1                     l1843:
  1344  02C1  3001               	movlw	1
  1345  02C2  02BE               	subwf	___aldiv@counter,f
  1346  02C3  1D03               	btfss	3,2
  1347  02C4  2AC6               	goto	u1401
  1348  02C5  2AC7               	goto	u1400
  1349  02C6                     u1401:
  1350  02C6  2A8E               	goto	l1833
  1351  02C7                     u1400:
  1352  02C7                     l1845:
  1353  02C7  083F               	movf	___aldiv@sign,w
  1354  02C8  1903               	btfsc	3,2
  1355  02C9  2ACB               	goto	u1411
  1356  02CA  2ACC               	goto	u1410
  1357  02CB                     u1411:
  1358  02CB  2AD7               	goto	l1849
  1359  02CC                     u1410:
  1360  02CC                     l1847:
  1361  02CC  09C0               	comf	___aldiv@quotient,f
  1362  02CD  09C1               	comf	___aldiv@quotient+1,f
  1363  02CE  09C2               	comf	___aldiv@quotient+2,f
  1364  02CF  09C3               	comf	___aldiv@quotient+3,f
  1365  02D0  0AC0               	incf	___aldiv@quotient,f
  1366  02D1  1903               	skipnz
  1367  02D2  0AC1               	incf	___aldiv@quotient+1,f
  1368  02D3  1903               	skipnz
  1369  02D4  0AC2               	incf	___aldiv@quotient+2,f
  1370  02D5  1903               	skipnz
  1371  02D6  0AC3               	incf	___aldiv@quotient+3,f
  1372  02D7                     l1849:
  1373  02D7  0843               	movf	___aldiv@quotient+3,w
  1374  02D8  00B8               	movwf	?___aldiv+3
  1375  02D9  0842               	movf	___aldiv@quotient+2,w
  1376  02DA  00B7               	movwf	?___aldiv+2
  1377  02DB  0841               	movf	___aldiv@quotient+1,w
  1378  02DC  00B6               	movwf	?___aldiv+1
  1379  02DD  0840               	movf	___aldiv@quotient,w
  1380  02DE  00B5               	movwf	?___aldiv
  1381  02DF                     l434:
  1382  02DF  0008               	return
  1383  02E0                     __end_of___aldiv:
  1384                           
  1385                           	psect	text3
  1386  0617                     __ptext3:	
  1387 ;; *************** function _usart_Interrupt *****************
  1388 ;; Defined at:
  1389 ;;		line 41 in file "usart.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;		None
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;		None
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      void 
  1396 ;; Registers used:
  1397 ;;		None
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1403 ;;      Params:         0       0       0       0       0
  1404 ;;      Locals:         0       0       0       0       0
  1405 ;;      Temps:          0       0       0       0       0
  1406 ;;      Totals:         0       0       0       0       0
  1407 ;;Total ram usage:        0 bytes
  1408 ;; Hardware stack levels used:    1
  1409 ;; Hardware stack levels required when called:    6
  1410 ;; This function calls:
  1411 ;;		Nothing
  1412 ;; This function is called by:
  1413 ;;		_main
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           
  1418                           ;psect for function _usart_Interrupt
  1419  0617                     _usart_Interrupt:
  1420  0617                     l1701:	
  1421                           ;incstack = 0
  1422                           ; Regs used in _usart_Interrupt: []
  1423                           
  1424                           
  1425                           ;usart.c: 42:     PIR1bits.RCIF = 0;
  1426  0617  1283               	bcf	3,5	;RP0=0, select bank0
  1427  0618  1303               	bcf	3,6	;RP1=0, select bank0
  1428  0619  128C               	bcf	12,5	;volatile
  1429                           
  1430                           ;usart.c: 43:     PIE1bits.RCIE = 1;
  1431  061A  1683               	bsf	3,5	;RP0=1, select bank1
  1432  061B  1303               	bcf	3,6	;RP1=0, select bank1
  1433  061C  168C               	bsf	12,5	;volatile
  1434                           
  1435                           ;usart.c: 44:     INTCONbits.PEIE = 1;
  1436  061D  170B               	bsf	11,6	;volatile
  1437                           
  1438                           ;usart.c: 45:     INTCONbits.GIE = 1;
  1439  061E  178B               	bsf	11,7	;volatile
  1440  061F                     l120:
  1441  061F  0008               	return
  1442  0620                     __end_of_usart_Interrupt:
  1443                           
  1444                           	psect	text4
  1445  05E2                     __ptext4:	
  1446 ;; *************** function _i2c_init *****************
  1447 ;; Defined at:
  1448 ;;		line 10 in file "i2c.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;		None
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;		None
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      void 
  1455 ;; Registers used:
  1456 ;;		wreg, status,2
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1462 ;;      Params:         0       0       0       0       0
  1463 ;;      Locals:         0       0       0       0       0
  1464 ;;      Temps:          0       0       0       0       0
  1465 ;;      Totals:         0       0       0       0       0
  1466 ;;Total ram usage:        0 bytes
  1467 ;; Hardware stack levels used:    1
  1468 ;; Hardware stack levels required when called:    6
  1469 ;; This function calls:
  1470 ;;		Nothing
  1471 ;; This function is called by:
  1472 ;;		_main
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           
  1477                           ;psect for function _i2c_init
  1478  05E2                     _i2c_init:
  1479  05E2                     l1703:	
  1480                           ;incstack = 0
  1481                           ; Regs used in _i2c_init: [wreg+status,2]
  1482                           
  1483                           
  1484                           ;i2c.c: 12:     TRISCbits.TRISC3 = 1;
  1485  05E2  1683               	bsf	3,5	;RP0=1, select bank1
  1486  05E3  1303               	bcf	3,6	;RP1=0, select bank1
  1487  05E4  1587               	bsf	7,3	;volatile
  1488                           
  1489                           ;i2c.c: 13:     TRISCbits.TRISC4 = 1;
  1490  05E5  1607               	bsf	7,4	;volatile
  1491  05E6                     l1705:
  1492                           
  1493                           ;i2c.c: 14:     SSPADD = 0x09;
  1494  05E6  3009               	movlw	9
  1495  05E7  0093               	movwf	19	;volatile
  1496                           
  1497                           ;i2c.c: 15:     SSPSTAT = 0x80;
  1498  05E8  3080               	movlw	128
  1499  05E9  0094               	movwf	20	;volatile
  1500  05EA                     l1707:
  1501                           
  1502                           ;i2c.c: 16:     SSPCON2 = 0x00;
  1503  05EA  0191               	clrf	17	;volatile
  1504  05EB                     l1709:
  1505                           
  1506                           ;i2c.c: 17:     SSPCON = 0x28;
  1507  05EB  3028               	movlw	40
  1508  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  1509  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  1510  05EE  0094               	movwf	20	;volatile
  1511  05EF                     l182:
  1512  05EF  0008               	return
  1513  05F0                     __end_of_i2c_init:
  1514                           
  1515                           	psect	text5
  1516  0023                     __ptext5:	
  1517 ;; *************** function _myISR *****************
  1518 ;; Defined at:
  1519 ;;		line 14 in file "main.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;		None
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;		None
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      void 
  1526 ;; Registers used:
  1527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1533 ;;      Params:         0       0       0       0       0
  1534 ;;      Locals:         0       0       0       0       0
  1535 ;;      Temps:          0       8       0       0       0
  1536 ;;      Totals:         0       8       0       0       0
  1537 ;;Total ram usage:        8 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; Hardware stack levels required when called:    5
  1540 ;; This function calls:
  1541 ;;		_i2c_read
  1542 ;;		_i2c_sendACK
  1543 ;;		_i2c_start
  1544 ;;		_i2c_stop
  1545 ;;		_i2c_write
  1546 ;;		_recivedCMD
  1547 ;;		_sprintf
  1548 ;;		_strcmp
  1549 ;;		_token
  1550 ;;		_usart_TxStr
  1551 ;; This function is called by:
  1552 ;;		Interrupt level 1
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           
  1557                           ;psect for function _myISR
  1558  0023                     _myISR:
  1559  0023                     i1l1711:
  1560                           
  1561                           ;main.c: 15:     INTCONbits.GIE = 0;
  1562  0023  138B               	bcf	11,7	;volatile
  1563  0024                     i1l1713:
  1564                           
  1565                           ;main.c: 16:     recivedCMD(data);
  1566  0024  304F               	movlw	(low (_data| 0))& (0+255)
  1567  0025  120A  118A  2528  120A  118A  	fcall	_recivedCMD
  1568                           
  1569                           ;main.c: 17:     token(data);
  1570  002A  304F               	movlw	(low (_data| 0))& (0+255)
  1571  002B  120A  118A  2464  120A  118A  	fcall	_token
  1572                           
  1573                           ;main.c: 18:     if(strcmp(dir[0],"M1") == 0){
  1574  0030  300F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1575  0031  00FF               	movwf	btemp+1
  1576  0032  087F               	movf	btemp+1,w
  1577  0033  00F0               	movwf	strcmp@s2
  1578  0034  1283               	bcf	3,5	;RP0=0, select bank0
  1579  0035  1303               	bcf	3,6	;RP1=0, select bank0
  1580  0036  0848               	movf	_dir,w
  1581  0037  120A  118A  24FA  120A  118A  	fcall	_strcmp
  1582  003C  0870               	movf	?_strcmp,w
  1583  003D  0471               	iorwf	?_strcmp+1,w
  1584  003E  1D03               	btfss	3,2
  1585  003F  2841               	goto	u125_21
  1586  0040  2842               	goto	u125_20
  1587  0041                     u125_21:
  1588  0041  294C               	goto	i1l1767
  1589  0042                     u125_20:
  1590  0042                     i1l1715:
  1591                           
  1592                           ;main.c: 19:         if(strcmp(dir[1],"P1") == 0){
  1593  0042  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1594  0043  00FF               	movwf	btemp+1
  1595  0044  087F               	movf	btemp+1,w
  1596  0045  00F0               	movwf	strcmp@s2
  1597  0046  1283               	bcf	3,5	;RP0=0, select bank0
  1598  0047  1303               	bcf	3,6	;RP1=0, select bank0
  1599  0048  0849               	movf	low ((_dir| 0+1)),w
  1600  0049  120A  118A  24FA  120A  118A  	fcall	_strcmp
  1601  004E  0870               	movf	?_strcmp,w
  1602  004F  0471               	iorwf	?_strcmp+1,w
  1603  0050  1D03               	btfss	3,2
  1604  0051  2853               	goto	u126_21
  1605  0052  2854               	goto	u126_20
  1606  0053                     u126_21:
  1607  0053  28C9               	goto	i1l1741
  1608  0054                     u126_20:
  1609  0054                     i1l1717:
  1610                           
  1611                           ;main.c: 20:             if(*dir[2] == 'a'){
  1612  0054  1283               	bcf	3,5	;RP0=0, select bank0
  1613  0055  1303               	bcf	3,6	;RP1=0, select bank0
  1614  0056  084A               	movf	low ((_dir| 0+2)),w
  1615  0057  0084               	movwf	4
  1616  0058  3061               	movlw	97
  1617  0059  1383               	bcf	3,7	;select IRP bank0
  1618  005A  0600               	xorwf	0,w
  1619  005B  1D03               	btfss	3,2
  1620  005C  285E               	goto	u127_21
  1621  005D  285F               	goto	u127_20
  1622  005E                     u127_21:
  1623  005E  28AD               	goto	i1l1735
  1624  005F                     u127_20:
  1625  005F                     i1l1719:
  1626                           
  1627                           ;main.c: 21:                 i2c_start();
  1628  005F  120A  118A  25CF  120A  118A  	fcall	_i2c_start
  1629                           
  1630                           ;main.c: 22:                 i2c_write(0x31);
  1631  0064  3031               	movlw	49
  1632  0065  120A  118A  25BC  120A  118A  	fcall	_i2c_write
  1633  006A                     i1l1721:
  1634                           
  1635                           ;main.c: 23:                 lectura[0] = i2c_read();
  1636  006A  120A  118A  25A8  120A  118A  	fcall	_i2c_read
  1637  006F  00FF               	movwf	btemp+1
  1638  0070  087F               	movf	btemp+1,w
  1639  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1640  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1641  0073  00CD               	movwf	_lectura
  1642  0074                     i1l1723:
  1643                           
  1644                           ;main.c: 24:                 i2c_sendACK();
  1645  0074  120A  118A  2620  120A  118A  	fcall	_i2c_sendACK
  1646  0079                     i1l1725:
  1647                           
  1648                           ;main.c: 25:                 lectura[1] = i2c_read();
  1649  0079  120A  118A  25A8  120A  118A  	fcall	_i2c_read
  1650  007E  00FF               	movwf	btemp+1
  1651  007F  087F               	movf	btemp+1,w
  1652  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1653  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1654  0082  00CE               	movwf	_lectura+1
  1655  0083                     i1l1727:
  1656                           
  1657                           ;main.c: 26:                 i2c_stop();
  1658  0083  120A  118A  25F0  120A  118A  	fcall	_i2c_stop
  1659  0088                     i1l1729:
  1660                           
  1661                           ;main.c: 27:                 res = (int)((lectura[1] << 8) + (lectura[0]));
  1662  0088  1283               	bcf	3,5	;RP0=0, select bank0
  1663  0089  1303               	bcf	3,6	;RP1=0, select bank0
  1664  008A  084E               	movf	_lectura+1,w
  1665  008B  00AD               	movwf	??_myISR
  1666  008C  01AE               	clrf	??_myISR+1
  1667  008D  082D               	movf	??_myISR,w
  1668  008E  00AE               	movwf	??_myISR+1
  1669  008F  01AD               	clrf	??_myISR
  1670  0090  084D               	movf	_lectura,w
  1671  0091  072D               	addwf	??_myISR,w
  1672  0092  00CB               	movwf	_res
  1673  0093  3000               	movlw	0
  1674  0094  1803               	skipnc
  1675  0095  3001               	movlw	1
  1676  0096  072E               	addwf	??_myISR+1,w
  1677  0097  00CC               	movwf	_res+1
  1678  0098                     i1l1731:
  1679                           
  1680                           ;main.c: 28:                 sprintf(data,"%d\n", res);
  1681  0098  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1682  0099  00FF               	movwf	btemp+1
  1683  009A  087F               	movf	btemp+1,w
  1684  009B  00A0               	movwf	sprintf@f
  1685  009C  084C               	movf	_res+1,w
  1686  009D  00A2               	movwf	?_sprintf+2
  1687  009E  084B               	movf	_res,w
  1688  009F  00A1               	movwf	?_sprintf+1
  1689  00A0  304F               	movlw	(low (_data| 0))& (0+255)
  1690  00A1  120A  118A  215B  120A  118A  	fcall	_sprintf
  1691  00A6                     i1l1733:
  1692                           
  1693                           ;main.c: 29:                 usart_TxStr(data);
  1694  00A6  304F               	movlw	(low (_data| 0))& (0+255)
  1695  00A7  120A  118A  2591  120A  118A  	fcall	_usart_TxStr
  1696                           
  1697                           ;main.c: 30:             }
  1698  00AC  294C               	goto	i1l1767
  1699  00AD                     i1l1735:
  1700                           
  1701                           ;main.c: 32:                 i2c_start();
  1702  00AD  120A  118A  25CF  120A  118A  	fcall	_i2c_start
  1703                           
  1704                           ;main.c: 33:                 i2c_write(0x30);
  1705  00B2  3030               	movlw	48
  1706  00B3  120A  118A  25BC  120A  118A  	fcall	_i2c_write
  1707  00B8                     i1l1737:
  1708                           
  1709                           ;main.c: 34:                 i2c_write(*dir[2]);
  1710  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1711  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1712  00BA  084A               	movf	low ((_dir| 0+2)),w
  1713  00BB  0084               	movwf	4
  1714  00BC  1383               	bcf	3,7	;select IRP bank0
  1715  00BD  0800               	movf	0,w
  1716  00BE  120A  118A  25BC  120A  118A  	fcall	_i2c_write
  1717  00C3                     i1l1739:
  1718                           
  1719                           ;main.c: 35:                 i2c_stop();
  1720  00C3  120A  118A  25F0  120A  118A  	fcall	_i2c_stop
  1721  00C8  294C               	goto	i1l1767
  1722  00C9                     i1l1741:
  1723  00C9  3015               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1724  00CA  00FF               	movwf	btemp+1
  1725  00CB  087F               	movf	btemp+1,w
  1726  00CC  00F0               	movwf	strcmp@s2
  1727  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1728  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1729  00CF  0849               	movf	low ((_dir| 0+1)),w
  1730  00D0  120A  118A  24FA  120A  118A  	fcall	_strcmp
  1731  00D5  0870               	movf	?_strcmp,w
  1732  00D6  0471               	iorwf	?_strcmp+1,w
  1733  00D7  1D03               	btfss	3,2
  1734  00D8  28DA               	goto	u128_21
  1735  00D9  28DB               	goto	u128_20
  1736  00DA                     u128_21:
  1737  00DA  294C               	goto	i1l1767
  1738  00DB                     u128_20:
  1739  00DB                     i1l1743:
  1740                           
  1741                           ;main.c: 39:         if(*dir[2] == 'a'){
  1742  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1743  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1744  00DD  084A               	movf	low ((_dir| 0+2)),w
  1745  00DE  0084               	movwf	4
  1746  00DF  3061               	movlw	97
  1747  00E0  1383               	bcf	3,7	;select IRP bank0
  1748  00E1  0600               	xorwf	0,w
  1749  00E2  1D03               	btfss	3,2
  1750  00E3  28E5               	goto	u129_21
  1751  00E4  28E6               	goto	u129_20
  1752  00E5                     u129_21:
  1753  00E5  2935               	goto	i1l1761
  1754  00E6                     u129_20:
  1755  00E6                     i1l1745:
  1756                           
  1757                           ;main.c: 40:                 i2c_start();
  1758  00E6  120A  118A  25CF  120A  118A  	fcall	_i2c_start
  1759                           
  1760                           ;main.c: 41:                 i2c_write(0x33);
  1761  00EB  3033               	movlw	51
  1762  00EC  120A  118A  25BC  120A  118A  	fcall	_i2c_write
  1763  00F1                     i1l1747:
  1764                           
  1765                           ;main.c: 42:                 lectura[0] = i2c_read();
  1766  00F1  120A  118A  25A8  120A  118A  	fcall	_i2c_read
  1767  00F6  00FF               	movwf	btemp+1
  1768  00F7  087F               	movf	btemp+1,w
  1769  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1770  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1771  00FA  00CD               	movwf	_lectura
  1772  00FB                     i1l1749:
  1773                           
  1774                           ;main.c: 43:                 i2c_sendACK();
  1775  00FB  120A  118A  2620  120A  118A  	fcall	_i2c_sendACK
  1776  0100                     i1l1751:
  1777                           
  1778                           ;main.c: 44:                 lectura[1] = i2c_read();
  1779  0100  120A  118A  25A8  120A  118A  	fcall	_i2c_read
  1780  0105  00FF               	movwf	btemp+1
  1781  0106  087F               	movf	btemp+1,w
  1782  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1783  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1784  0109  00CE               	movwf	_lectura+1
  1785  010A                     i1l1753:
  1786                           
  1787                           ;main.c: 45:                 i2c_stop();
  1788  010A  120A  118A  25F0  120A  118A  	fcall	_i2c_stop
  1789  010F                     i1l1755:
  1790                           
  1791                           ;main.c: 46:                 res = (int)(lectura[1] << 8)|(lectura[0]);
  1792  010F  1283               	bcf	3,5	;RP0=0, select bank0
  1793  0110  1303               	bcf	3,6	;RP1=0, select bank0
  1794  0111  084D               	movf	_lectura,w
  1795  0112  00AD               	movwf	??_myISR
  1796  0113  01AE               	clrf	??_myISR+1
  1797  0114  084E               	movf	_lectura+1,w
  1798  0115  00AF               	movwf	??_myISR+2
  1799  0116  01B0               	clrf	??_myISR+3
  1800  0117  082F               	movf	??_myISR+2,w
  1801  0118  00B0               	movwf	??_myISR+3
  1802  0119  01AF               	clrf	??_myISR+2
  1803  011A  082D               	movf	??_myISR,w
  1804  011B  042F               	iorwf	??_myISR+2,w
  1805  011C  00CB               	movwf	_res
  1806  011D  082E               	movf	??_myISR+1,w
  1807  011E  0430               	iorwf	??_myISR+3,w
  1808  011F  00CC               	movwf	_res+1
  1809  0120                     i1l1757:
  1810                           
  1811                           ;main.c: 47:                 sprintf(data,"%d\n", res);
  1812  0120  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1813  0121  00FF               	movwf	btemp+1
  1814  0122  087F               	movf	btemp+1,w
  1815  0123  00A0               	movwf	sprintf@f
  1816  0124  084C               	movf	_res+1,w
  1817  0125  00A2               	movwf	?_sprintf+2
  1818  0126  084B               	movf	_res,w
  1819  0127  00A1               	movwf	?_sprintf+1
  1820  0128  304F               	movlw	(low (_data| 0))& (0+255)
  1821  0129  120A  118A  215B  120A  118A  	fcall	_sprintf
  1822  012E                     i1l1759:
  1823                           
  1824                           ;main.c: 48:                 usart_TxStr(data);
  1825  012E  304F               	movlw	(low (_data| 0))& (0+255)
  1826  012F  120A  118A  2591  120A  118A  	fcall	_usart_TxStr
  1827                           
  1828                           ;main.c: 49:             }
  1829  0134  294C               	goto	i1l1767
  1830  0135                     i1l1761:
  1831                           
  1832                           ;main.c: 51:                 i2c_start();
  1833  0135  120A  118A  25CF  120A  118A  	fcall	_i2c_start
  1834                           
  1835                           ;main.c: 52:                 i2c_write(0x32);
  1836  013A  3032               	movlw	50
  1837  013B  120A  118A  25BC  120A  118A  	fcall	_i2c_write
  1838  0140                     i1l1763:
  1839                           
  1840                           ;main.c: 53:                 i2c_write(*dir[2]);
  1841  0140  1283               	bcf	3,5	;RP0=0, select bank0
  1842  0141  1303               	bcf	3,6	;RP1=0, select bank0
  1843  0142  084A               	movf	low ((_dir| 0+2)),w
  1844  0143  0084               	movwf	4
  1845  0144  1383               	bcf	3,7	;select IRP bank0
  1846  0145  0800               	movf	0,w
  1847  0146  120A  118A  25BC  120A  118A  	fcall	_i2c_write
  1848  014B  28C3               	goto	i1l1739
  1849  014C                     i1l1767:
  1850                           
  1851                           ;main.c: 58:     PIR1bits.RCIF = 0;
  1852  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1853  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1854  014E  128C               	bcf	12,5	;volatile
  1855  014F                     i1l1769:
  1856                           
  1857                           ;main.c: 59:     INTCONbits.GIE = 1;
  1858  014F  178B               	bsf	11,7	;volatile
  1859  0150                     i1l63:
  1860  0150  0834               	movf	??_myISR+7,w
  1861  0151  00FF               	movwf	btemp+1
  1862  0152  0833               	movf	??_myISR+6,w
  1863  0153  008A               	movwf	10
  1864  0154  0832               	movf	??_myISR+5,w
  1865  0155  0084               	movwf	4
  1866  0156  0E31               	swapf	(??_myISR+4)^0,w
  1867  0157  0083               	movwf	3
  1868  0158  0EFE               	swapf	btemp,f
  1869  0159  0E7E               	swapf	btemp,w
  1870  015A  0009               	retfie
  1871  015B                     __end_of_myISR:
  1872                           
  1873                           	psect	intentry
  1874  0004                     __pintentry:	
  1875                           ;incstack = 0
  1876                           ; Regs used in _myISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1877                           
  1878  0004                     interrupt_function:
  1879  007E                     saved_w	set	btemp
  1880  0004  00FE               	movwf	btemp
  1881  0005  0E03               	swapf	3,w
  1882  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1883  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1884  0008  00B1               	movwf	??_myISR+4
  1885  0009  0804               	movf	4,w
  1886  000A  00B2               	movwf	??_myISR+5
  1887  000B  080A               	movf	10,w
  1888  000C  00B3               	movwf	??_myISR+6
  1889  000D  087F               	movf	btemp+1,w
  1890  000E  00B4               	movwf	??_myISR+7
  1891  000F  120A  118A  2823   	ljmp	_myISR
  1892                           
  1893                           	psect	text6
  1894  0591                     __ptext6:	
  1895 ;; *************** function _usart_TxStr *****************
  1896 ;; Defined at:
  1897 ;;		line 33 in file "usart.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  str             1    wreg     PTR unsigned char 
  1900 ;;		 -> data(10), 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  str             1    1[COMMON] PTR unsigned char 
  1903 ;;		 -> data(10), 
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      void 
  1906 ;; Registers used:
  1907 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1913 ;;      Params:         0       0       0       0       0
  1914 ;;      Locals:         1       0       0       0       0
  1915 ;;      Temps:          0       0       0       0       0
  1916 ;;      Totals:         1       0       0       0       0
  1917 ;;Total ram usage:        1 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; Hardware stack levels required when called:    1
  1920 ;; This function calls:
  1921 ;;		_usart_Tx
  1922 ;; This function is called by:
  1923 ;;		_myISR
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           
  1928                           ;psect for function _usart_TxStr
  1929  0591                     _usart_TxStr:
  1930                           
  1931                           ;incstack = 0
  1932                           ; Regs used in _usart_TxStr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1933                           ;usart_TxStr@str stored from wreg
  1934  0591  00F1               	movwf	usart_TxStr@str
  1935  0592                     i1l1675:
  1936                           
  1937                           ;usart.c: 34:     while(*str != '\0'){
  1938  0592  2D9F               	goto	i1l1681
  1939  0593                     i1l1677:
  1940                           
  1941                           ;usart.c: 35:         usart_Tx(*str);
  1942  0593  0871               	movf	usart_TxStr@str,w
  1943  0594  0084               	movwf	4
  1944  0595  0800               	movf	0,w
  1945  0596  120A  118A  260B  120A  118A  	fcall	_usart_Tx
  1946  059B                     i1l1679:
  1947                           
  1948                           ;usart.c: 36:         str++;
  1949  059B  3001               	movlw	1
  1950  059C  00FF               	movwf	btemp+1
  1951  059D  087F               	movf	btemp+1,w
  1952  059E  07F1               	addwf	usart_TxStr@str,f
  1953  059F                     i1l1681:
  1954                           
  1955                           ;usart.c: 34:     while(*str != '\0'){
  1956  059F  0871               	movf	usart_TxStr@str,w
  1957  05A0  0084               	movwf	4
  1958  05A1  1383               	bcf	3,7	;select IRP bank0
  1959  05A2  0800               	movf	0,w
  1960  05A3  1D03               	btfss	3,2
  1961  05A4  2DA6               	goto	u124_21
  1962  05A5  2DA7               	goto	u124_20
  1963  05A6                     u124_21:
  1964  05A6  2D93               	goto	i1l1677
  1965  05A7                     u124_20:
  1966  05A7                     i1l117:
  1967  05A7  0008               	return
  1968  05A8                     __end_of_usart_TxStr:
  1969                           
  1970                           	psect	text7
  1971  060B                     __ptext7:	
  1972 ;; *************** function _usart_Tx *****************
  1973 ;; Defined at:
  1974 ;;		line 24 in file "usart.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  send            1    wreg     unsigned char 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;  send            1    0[COMMON] unsigned char 
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      void 
  1981 ;; Registers used:
  1982 ;;		wreg
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1988 ;;      Params:         0       0       0       0       0
  1989 ;;      Locals:         1       0       0       0       0
  1990 ;;      Temps:          0       0       0       0       0
  1991 ;;      Totals:         1       0       0       0       0
  1992 ;;Total ram usage:        1 bytes
  1993 ;; Hardware stack levels used:    1
  1994 ;; This function calls:
  1995 ;;		Nothing
  1996 ;; This function is called by:
  1997 ;;		_usart_TxStr
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           
  2002                           ;psect for function _usart_Tx
  2003  060B                     _usart_Tx:
  2004                           
  2005                           ;incstack = 0
  2006                           ; Regs used in _usart_Tx: [wreg]
  2007                           ;usart_Tx@send stored from wreg
  2008  060B  00F0               	movwf	usart_Tx@send
  2009  060C                     i1l1415:
  2010                           
  2011                           ;usart.c: 25:     TXREG = send;
  2012  060C  0870               	movf	usart_Tx@send,w
  2013  060D  1283               	bcf	3,5	;RP0=0, select bank0
  2014  060E  1303               	bcf	3,6	;RP1=0, select bank0
  2015  060F  0099               	movwf	25	;volatile
  2016  0610                     i1l105:	
  2017                           ;usart.c: 26:     while (!TXSTAbits.TRMT);
  2018                           
  2019  0610  1683               	bsf	3,5	;RP0=1, select bank1
  2020  0611  1303               	bcf	3,6	;RP1=0, select bank1
  2021  0612  1C98               	btfss	24,1	;volatile
  2022  0613  2E15               	goto	u73_21
  2023  0614  2E16               	goto	u73_20
  2024  0615                     u73_21:
  2025  0615  2E10               	goto	i1l105
  2026  0616                     u73_20:
  2027  0616                     i1l108:
  2028  0616  0008               	return
  2029  0617                     __end_of_usart_Tx:
  2030                           
  2031                           	psect	text8
  2032  0464                     __ptext8:	
  2033 ;; *************** function _token *****************
  2034 ;; Defined at:
  2035 ;;		line 68 in file "usart.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  cmd             1    wreg     PTR unsigned char 
  2038 ;;		 -> data(10), 
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  cmd             1    2[BANK0 ] PTR unsigned char 
  2041 ;;		 -> data(10), 
  2042 ;;  i               2    0[BANK0 ] int 
  2043 ;;  tok             1    3[BANK0 ] PTR unsigned char 
  2044 ;;		 -> NULL(0), data(10), 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      void 
  2047 ;; Registers used:
  2048 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2054 ;;      Params:         0       0       0       0       0
  2055 ;;      Locals:         0       4       0       0       0
  2056 ;;      Temps:          0       0       0       0       0
  2057 ;;      Totals:         0       4       0       0       0
  2058 ;;Total ram usage:        4 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; Hardware stack levels required when called:    4
  2061 ;; This function calls:
  2062 ;;		_strtok
  2063 ;; This function is called by:
  2064 ;;		_myISR
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           
  2069                           ;psect for function _token
  2070  0464                     _token:
  2071                           
  2072                           ;incstack = 0
  2073                           ; Regs used in _token: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2074                           ;token@cmd stored from wreg
  2075  0464  1283               	bcf	3,5	;RP0=0, select bank0
  2076  0465  1303               	bcf	3,6	;RP1=0, select bank0
  2077  0466  00A2               	movwf	token@cmd
  2078  0467                     i1l1563:
  2079                           
  2080                           ;usart.c: 70:     int i = 0;
  2081  0467  01A0               	clrf	token@i
  2082  0468  01A1               	clrf	token@i+1
  2083  0469                     i1l1565:
  2084                           
  2085                           ;usart.c: 71:     tok = strtok(cmd, ",");
  2086  0469  3018               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2087  046A  00FF               	movwf	btemp+1
  2088  046B  087F               	movf	btemp+1,w
  2089  046C  00FA               	movwf	strtok@s2
  2090  046D  0822               	movf	token@cmd,w
  2091  046E  120A  118A  234F  120A  118A  	fcall	_strtok
  2092  0473  00FF               	movwf	btemp+1
  2093  0474  087F               	movf	btemp+1,w
  2094  0475  1283               	bcf	3,5	;RP0=0, select bank0
  2095  0476  1303               	bcf	3,6	;RP1=0, select bank0
  2096  0477  00A3               	movwf	token@tok
  2097                           
  2098                           ;usart.c: 72:     while( tok != (0) ) {
  2099  0478  2C96               	goto	i1l1573
  2100  0479                     i1l1567:
  2101                           
  2102                           ;usart.c: 73:         dir[i] = tok;
  2103  0479  0823               	movf	token@tok,w
  2104  047A  00FF               	movwf	btemp+1
  2105  047B  0820               	movf	token@i,w
  2106  047C  3E48               	addlw	(low (_dir| 0))& (0+255)
  2107  047D  0084               	movwf	4
  2108  047E  087F               	movf	btemp+1,w
  2109  047F  1383               	bcf	3,7	;select IRP bank0
  2110  0480  0080               	movwf	0
  2111  0481                     i1l1569:
  2112                           
  2113                           ;usart.c: 74:         tok = strtok((0), ",");
  2114  0481  3018               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2115  0482  00FF               	movwf	btemp+1
  2116  0483  087F               	movf	btemp+1,w
  2117  0484  00FA               	movwf	strtok@s2
  2118  0485  3000               	movlw	0
  2119  0486  120A  118A  234F  120A  118A  	fcall	_strtok
  2120  048B  00FF               	movwf	btemp+1
  2121  048C  087F               	movf	btemp+1,w
  2122  048D  1283               	bcf	3,5	;RP0=0, select bank0
  2123  048E  1303               	bcf	3,6	;RP1=0, select bank0
  2124  048F  00A3               	movwf	token@tok
  2125  0490                     i1l1571:
  2126                           
  2127                           ;usart.c: 75:         i++;
  2128  0490  3001               	movlw	1
  2129  0491  07A0               	addwf	token@i,f
  2130  0492  1803               	skipnc
  2131  0493  0AA1               	incf	token@i+1,f
  2132  0494  3000               	movlw	0
  2133  0495  07A1               	addwf	token@i+1,f
  2134  0496                     i1l1573:
  2135                           
  2136                           ;usart.c: 72:     while( tok != (0) ) {
  2137  0496  0823               	movf	token@tok,w
  2138  0497  1D03               	btfss	3,2
  2139  0498  2C9A               	goto	u106_21
  2140  0499  2C9B               	goto	u106_20
  2141  049A                     u106_21:
  2142  049A  2C79               	goto	i1l1567
  2143  049B                     u106_20:
  2144  049B                     i1l139:
  2145  049B  0008               	return
  2146  049C                     __end_of_token:
  2147                           
  2148                           	psect	text9
  2149  034F                     __ptext9:	
  2150 ;; *************** function _strtok *****************
  2151 ;; Defined at:
  2152 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\strtok.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  s1              1    wreg     PTR unsigned char 
  2155 ;;		 -> NULL(0), data(10), 
  2156 ;;  s2              1   10[COMMON] PTR const unsigned char 
  2157 ;;		 -> STR_7(2), STR_6(2), 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  s1              1   11[COMMON] PTR unsigned char 
  2160 ;;		 -> NULL(0), data(10), 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      PTR unsigned char 
  2163 ;; Registers used:
  2164 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2170 ;;      Params:         1       0       0       0       0
  2171 ;;      Locals:         1       0       0       0       0
  2172 ;;      Temps:          0       0       0       0       0
  2173 ;;      Totals:         2       0       0       0       0
  2174 ;;Total ram usage:        2 bytes
  2175 ;; Hardware stack levels used:    1
  2176 ;; Hardware stack levels required when called:    3
  2177 ;; This function calls:
  2178 ;;		_strcspn
  2179 ;;		_strspn
  2180 ;; This function is called by:
  2181 ;;		_token
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           
  2186                           ;psect for function _strtok
  2187  034F                     _strtok:
  2188                           
  2189                           ;incstack = 0
  2190                           ; Regs used in _strtok: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2191                           ;strtok@s1 stored from wreg
  2192  034F  00FB               	movwf	strtok@s1
  2193  0350                     i1l1423:
  2194  0350  087B               	movf	strtok@s1,w
  2195  0351  1D03               	btfss	3,2
  2196  0352  2B54               	goto	u75_21
  2197  0353  2B55               	goto	u75_20
  2198  0354                     u75_21:
  2199  0354  2B59               	goto	i1l1427
  2200  0355                     u75_20:
  2201  0355                     i1l1425:
  2202  0355  087C               	movf	strtok@sp,w
  2203  0356  00FF               	movwf	btemp+1
  2204  0357  087F               	movf	btemp+1,w
  2205  0358  00FB               	movwf	strtok@s1
  2206  0359                     i1l1427:
  2207  0359  087B               	movf	strtok@s1,w
  2208  035A  1D03               	btfss	3,2
  2209  035B  2B5D               	goto	u76_21
  2210  035C  2B5E               	goto	u76_20
  2211  035D                     u76_21:
  2212  035D  2B60               	goto	i1l1433
  2213  035E                     u76_20:
  2214  035E                     i1l1429:
  2215  035E  3000               	movlw	0
  2216  035F  2B9A               	goto	i1l826
  2217  0360                     i1l1433:
  2218  0360  087A               	movf	strtok@s2,w
  2219  0361  00FF               	movwf	btemp+1
  2220  0362  087F               	movf	btemp+1,w
  2221  0363  00F3               	movwf	strspn@s2
  2222  0364  087B               	movf	strtok@s1,w
  2223  0365  120A  118A  249C  120A  118A  	fcall	_strspn
  2224  036A  0873               	movf	?_strspn,w
  2225  036B  00FF               	movwf	btemp+1
  2226  036C  087F               	movf	btemp+1,w
  2227  036D  07FB               	addwf	strtok@s1,f
  2228  036E                     i1l1435:
  2229  036E  087B               	movf	strtok@s1,w
  2230  036F  0084               	movwf	4
  2231  0370  1383               	bcf	3,7	;select IRP bank0
  2232  0371  0800               	movf	0,w
  2233  0372  1D03               	btfss	3,2
  2234  0373  2B75               	goto	u77_21
  2235  0374  2B76               	goto	u77_20
  2236  0375                     u77_21:
  2237  0375  2B79               	goto	i1l1441
  2238  0376                     u77_20:
  2239  0376                     i1l1437:
  2240  0376  01FC               	clrf	strtok@sp
  2241  0377  3000               	movlw	0
  2242  0378  2B9A               	goto	i1l826
  2243  0379                     i1l1441:
  2244  0379  087A               	movf	strtok@s2,w
  2245  037A  00FF               	movwf	btemp+1
  2246  037B  087F               	movf	btemp+1,w
  2247  037C  00F3               	movwf	strcspn@s2
  2248  037D  087B               	movf	strtok@s1,w
  2249  037E  120A  118A  24CB  120A  118A  	fcall	_strcspn
  2250  0383  0873               	movf	?_strcspn,w
  2251  0384  077B               	addwf	strtok@s1,w
  2252  0385  00FF               	movwf	btemp+1
  2253  0386  087F               	movf	btemp+1,w
  2254  0387  00FC               	movwf	strtok@sp
  2255  0388                     i1l1443:
  2256  0388  087C               	movf	strtok@sp,w
  2257  0389  0084               	movwf	4
  2258  038A  1383               	bcf	3,7	;select IRP bank0
  2259  038B  0800               	movf	0,w
  2260  038C  1903               	btfsc	3,2
  2261  038D  2B8F               	goto	u78_21
  2262  038E  2B90               	goto	u78_20
  2263  038F                     u78_21:
  2264  038F  2B98               	goto	i1l1449
  2265  0390                     u78_20:
  2266  0390                     i1l1445:
  2267  0390  087C               	movf	strtok@sp,w
  2268  0391  0084               	movwf	4
  2269  0392  0180               	clrf	0
  2270  0393                     i1l1447:
  2271  0393  3001               	movlw	1
  2272  0394  00FF               	movwf	btemp+1
  2273  0395  087F               	movf	btemp+1,w
  2274  0396  07FC               	addwf	strtok@sp,f
  2275  0397  2B99               	goto	i1l1451
  2276  0398                     i1l1449:
  2277  0398  01FC               	clrf	strtok@sp
  2278  0399                     i1l1451:
  2279  0399  087B               	movf	strtok@s1,w
  2280  039A                     i1l826:
  2281  039A  0008               	return
  2282  039B                     __end_of_strtok:
  2283                           
  2284                           	psect	text10
  2285  049C                     __ptext10:	
  2286 ;; *************** function _strspn *****************
  2287 ;; Defined at:
  2288 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\strspn.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;  s1              1    wreg     PTR const unsigned char 
  2291 ;;		 -> NULL(0), data(10), 
  2292 ;;  s2              1    3[COMMON] PTR const unsigned char 
  2293 ;;		 -> STR_7(2), STR_6(2), 
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;  s1              1    9[COMMON] PTR const unsigned char 
  2296 ;;		 -> NULL(0), data(10), 
  2297 ;;  i               2    7[COMMON] unsigned int 
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  2    3[COMMON] unsigned int 
  2300 ;; Registers used:
  2301 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2307 ;;      Params:         2       0       0       0       0
  2308 ;;      Locals:         3       0       0       0       0
  2309 ;;      Temps:          2       0       0       0       0
  2310 ;;      Totals:         7       0       0       0       0
  2311 ;;Total ram usage:        7 bytes
  2312 ;; Hardware stack levels used:    1
  2313 ;; Hardware stack levels required when called:    2
  2314 ;; This function calls:
  2315 ;;		_strchr
  2316 ;; This function is called by:
  2317 ;;		_strtok
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           
  2322                           ;psect for function _strspn
  2323  049C                     _strspn:
  2324                           
  2325                           ;incstack = 0
  2326                           ; Regs used in _strspn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2327                           ;strspn@s1 stored from wreg
  2328  049C  00F9               	movwf	strspn@s1
  2329  049D                     i1l1391:
  2330  049D  01F7               	clrf	strspn@i
  2331  049E  01F8               	clrf	strspn@i+1
  2332  049F  2CAA               	goto	i1l1395
  2333  04A0                     i1l1393:
  2334  04A0  3001               	movlw	1
  2335  04A1  00FF               	movwf	btemp+1
  2336  04A2  087F               	movf	btemp+1,w
  2337  04A3  07F9               	addwf	strspn@s1,f
  2338  04A4  3001               	movlw	1
  2339  04A5  07F7               	addwf	strspn@i,f
  2340  04A6  1803               	skipnc
  2341  04A7  0AF8               	incf	strspn@i+1,f
  2342  04A8  3000               	movlw	0
  2343  04A9  07F8               	addwf	strspn@i+1,f
  2344  04AA                     i1l1395:
  2345  04AA  0879               	movf	strspn@s1,w
  2346  04AB  0084               	movwf	4
  2347  04AC  1383               	bcf	3,7	;select IRP bank0
  2348  04AD  0800               	movf	0,w
  2349  04AE  1903               	btfsc	3,2
  2350  04AF  2CB1               	goto	u69_21
  2351  04B0  2CB2               	goto	u69_20
  2352  04B1                     u69_21:
  2353  04B1  2CC6               	goto	i1l1399
  2354  04B2                     u69_20:
  2355  04B2                     i1l1397:
  2356  04B2  0879               	movf	strspn@s1,w
  2357  04B3  0084               	movwf	4
  2358  04B4  0800               	movf	0,w
  2359  04B5  00F5               	movwf	??_strspn
  2360  04B6  01F6               	clrf	??_strspn+1
  2361  04B7  0875               	movf	??_strspn,w
  2362  04B8  00F0               	movwf	strchr@chr
  2363  04B9  0876               	movf	??_strspn+1,w
  2364  04BA  00F1               	movwf	strchr@chr+1
  2365  04BB  0873               	movf	strspn@s2,w
  2366  04BC  120A  118A  2552  120A  118A  	fcall	_strchr
  2367  04C1  3A00               	xorlw	0
  2368  04C2  1D03               	skipz
  2369  04C3  2CC5               	goto	u70_21
  2370  04C4  2CC6               	goto	u70_20
  2371  04C5                     u70_21:
  2372  04C5  2CA0               	goto	i1l1393
  2373  04C6                     u70_20:
  2374  04C6                     i1l1399:
  2375  04C6  0878               	movf	strspn@i+1,w
  2376  04C7  00F4               	movwf	?_strspn+1
  2377  04C8  0877               	movf	strspn@i,w
  2378  04C9  00F3               	movwf	?_strspn
  2379  04CA                     i1l855:
  2380  04CA  0008               	return
  2381  04CB                     __end_of_strspn:
  2382                           
  2383                           	psect	text11
  2384  04CB                     __ptext11:	
  2385 ;; *************** function _strcspn *****************
  2386 ;; Defined at:
  2387 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\strcspn.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  s1              1    wreg     PTR const unsigned char 
  2390 ;;		 -> NULL(0), data(10), 
  2391 ;;  s2              1    3[COMMON] PTR const unsigned char 
  2392 ;;		 -> STR_7(2), STR_6(2), 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  s1              1    9[COMMON] PTR const unsigned char 
  2395 ;;		 -> NULL(0), data(10), 
  2396 ;;  i               2    7[COMMON] unsigned int 
  2397 ;; Return value:  Size  Location     Type
  2398 ;;                  2    3[COMMON] unsigned int 
  2399 ;; Registers used:
  2400 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2401 ;; Tracked objects:
  2402 ;;		On entry : 0/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2406 ;;      Params:         2       0       0       0       0
  2407 ;;      Locals:         3       0       0       0       0
  2408 ;;      Temps:          2       0       0       0       0
  2409 ;;      Totals:         7       0       0       0       0
  2410 ;;Total ram usage:        7 bytes
  2411 ;; Hardware stack levels used:    1
  2412 ;; Hardware stack levels required when called:    2
  2413 ;; This function calls:
  2414 ;;		_strchr
  2415 ;; This function is called by:
  2416 ;;		_strtok
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           
  2421                           ;psect for function _strcspn
  2422  04CB                     _strcspn:
  2423                           
  2424                           ;incstack = 0
  2425                           ; Regs used in _strcspn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2426                           ;strcspn@s1 stored from wreg
  2427  04CB  00F9               	movwf	strcspn@s1
  2428  04CC                     i1l1403:
  2429  04CC  01F7               	clrf	strcspn@i
  2430  04CD  01F8               	clrf	strcspn@i+1
  2431  04CE  2CD9               	goto	i1l1407
  2432  04CF                     i1l1405:
  2433  04CF  3001               	movlw	1
  2434  04D0  00FF               	movwf	btemp+1
  2435  04D1  087F               	movf	btemp+1,w
  2436  04D2  07F9               	addwf	strcspn@s1,f
  2437  04D3  3001               	movlw	1
  2438  04D4  07F7               	addwf	strcspn@i,f
  2439  04D5  1803               	skipnc
  2440  04D6  0AF8               	incf	strcspn@i+1,f
  2441  04D7  3000               	movlw	0
  2442  04D8  07F8               	addwf	strcspn@i+1,f
  2443  04D9                     i1l1407:
  2444  04D9  0879               	movf	strcspn@s1,w
  2445  04DA  0084               	movwf	4
  2446  04DB  1383               	bcf	3,7	;select IRP bank0
  2447  04DC  0800               	movf	0,w
  2448  04DD  1903               	btfsc	3,2
  2449  04DE  2CE0               	goto	u71_21
  2450  04DF  2CE1               	goto	u71_20
  2451  04E0                     u71_21:
  2452  04E0  2CF5               	goto	i1l1411
  2453  04E1                     u71_20:
  2454  04E1                     i1l1409:
  2455  04E1  0879               	movf	strcspn@s1,w
  2456  04E2  0084               	movwf	4
  2457  04E3  0800               	movf	0,w
  2458  04E4  00F5               	movwf	??_strcspn
  2459  04E5  01F6               	clrf	??_strcspn+1
  2460  04E6  0875               	movf	??_strcspn,w
  2461  04E7  00F0               	movwf	strchr@chr
  2462  04E8  0876               	movf	??_strcspn+1,w
  2463  04E9  00F1               	movwf	strchr@chr+1
  2464  04EA  0873               	movf	strcspn@s2,w
  2465  04EB  120A  118A  2552  120A  118A  	fcall	_strchr
  2466  04F0  3A00               	xorlw	0
  2467  04F1  1903               	skipnz
  2468  04F2  2CF4               	goto	u72_21
  2469  04F3  2CF5               	goto	u72_20
  2470  04F4                     u72_21:
  2471  04F4  2CCF               	goto	i1l1405
  2472  04F5                     u72_20:
  2473  04F5                     i1l1411:
  2474  04F5  0878               	movf	strcspn@i+1,w
  2475  04F6  00F4               	movwf	?_strcspn+1
  2476  04F7  0877               	movf	strcspn@i,w
  2477  04F8  00F3               	movwf	?_strcspn
  2478  04F9                     i1l839:
  2479  04F9  0008               	return
  2480  04FA                     __end_of_strcspn:
  2481                           
  2482                           	psect	text12
  2483  0552                     __ptext12:	
  2484 ;; *************** function _strchr *****************
  2485 ;; Defined at:
  2486 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\strchr.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;  ptr             1    wreg     PTR const unsigned char 
  2489 ;;		 -> STR_7(2), STR_6(2), 
  2490 ;;  chr             2    0[COMMON] int 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  ptr             1    2[COMMON] PTR const unsigned char 
  2493 ;;		 -> STR_7(2), STR_6(2), 
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      PTR unsigned char 
  2496 ;; Registers used:
  2497 ;;		wreg, fsr0l, fsr0h, pclath
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2503 ;;      Params:         2       0       0       0       0
  2504 ;;      Locals:         1       0       0       0       0
  2505 ;;      Temps:          0       0       0       0       0
  2506 ;;      Totals:         3       0       0       0       0
  2507 ;;Total ram usage:        3 bytes
  2508 ;; Hardware stack levels used:    2
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_strcspn
  2513 ;;		_strspn
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           
  2518                           ;psect for function _strchr
  2519  0552                     _strchr:
  2520                           
  2521                           ;incstack = 0
  2522 ;; using string table level
  2523                           ; Regs used in _strchr: [wreg-fsr0h+pclath]
  2524                           ;strchr@ptr stored from wreg
  2525  0552  00F2               	movwf	strchr@ptr
  2526  0553                     i1l842:
  2527  0553                     i1l1379:
  2528  0553  0872               	movf	strchr@ptr,w
  2529  0554  0084               	movwf	4
  2530  0555  120A  118A  2572  120A  118A  	fcall	stringdir
  2531  055A  0670               	xorwf	strchr@chr,w
  2532  055B  1D03               	skipz
  2533  055C  2D5E               	goto	u67_21
  2534  055D  2D5F               	goto	u67_20
  2535  055E                     u67_21:
  2536  055E  2D61               	goto	i1l1385
  2537  055F                     u67_20:
  2538  055F                     i1l1381:
  2539  055F  0872               	movf	strchr@ptr,w
  2540  0560  2D71               	goto	i1l844
  2541  0561                     i1l1385:
  2542  0561  3001               	movlw	1
  2543  0562  07F2               	addwf	strchr@ptr,f
  2544  0563  30FF               	movlw	-1
  2545  0564  0772               	addwf	strchr@ptr,w
  2546  0565  0084               	movwf	4
  2547  0566  120A  118A  2572  120A  118A  	fcall	stringdir
  2548  056B  3A00               	xorlw	0
  2549  056C  1D03               	skipz
  2550  056D  2D6F               	goto	u68_21
  2551  056E  2D70               	goto	u68_20
  2552  056F                     u68_21:
  2553  056F  2D53               	goto	i1l842
  2554  0570                     u68_20:
  2555  0570                     i1l1387:
  2556  0570  3000               	movlw	0
  2557  0571                     i1l844:
  2558  0571  0008               	return
  2559  0572                     __end_of_strchr:
  2560                           
  2561                           	psect	text13
  2562  04FA                     __ptext13:	
  2563 ;; *************** function _strcmp *****************
  2564 ;; Defined at:
  2565 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\strcmp.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  s1              1    wreg     PTR const unsigned char 
  2568 ;;		 -> NULL(0), data(10), 
  2569 ;;  s2              1    0[COMMON] PTR const unsigned char 
  2570 ;;		 -> STR_4(3), STR_2(3), STR_1(3), 
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;  s1              1    5[COMMON] PTR const unsigned char 
  2573 ;;		 -> NULL(0), data(10), 
  2574 ;;  r               1    4[COMMON] char 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  2    0[COMMON] int 
  2577 ;; Registers used:
  2578 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2584 ;;      Params:         2       0       0       0       0
  2585 ;;      Locals:         2       0       0       0       0
  2586 ;;      Temps:          2       0       0       0       0
  2587 ;;      Totals:         6       0       0       0       0
  2588 ;;Total ram usage:        6 bytes
  2589 ;; Hardware stack levels used:    2
  2590 ;; This function calls:
  2591 ;;		Nothing
  2592 ;; This function is called by:
  2593 ;;		_myISR
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           
  2597                           
  2598                           ;psect for function _strcmp
  2599  04FA                     _strcmp:
  2600                           
  2601                           ;incstack = 0
  2602                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2603                           ;strcmp@s1 stored from wreg
  2604  04FA  00F5               	movwf	strcmp@s1
  2605  04FB                     i1l1575:
  2606  04FB  2D04               	goto	i1l1581
  2607  04FC                     i1l1577:
  2608  04FC  3001               	movlw	1
  2609  04FD  00FF               	movwf	btemp+1
  2610  04FE  087F               	movf	btemp+1,w
  2611  04FF  07F5               	addwf	strcmp@s1,f
  2612  0500                     i1l1579:
  2613  0500  3001               	movlw	1
  2614  0501  00FF               	movwf	btemp+1
  2615  0502  087F               	movf	btemp+1,w
  2616  0503  07F0               	addwf	strcmp@s2,f
  2617  0504                     i1l1581:
  2618  0504  0870               	movf	strcmp@s2,w
  2619  0505  0084               	movwf	4
  2620  0506  120A  118A  2572  120A  118A  	fcall	stringdir
  2621  050B  00F2               	movwf	??_strcmp
  2622  050C  0875               	movf	strcmp@s1,w
  2623  050D  0084               	movwf	4
  2624  050E  1383               	bcf	3,7	;select IRP bank0
  2625  050F  0800               	movf	0,w
  2626  0510  00F3               	movwf	??_strcmp+1
  2627  0511  0872               	movf	??_strcmp,w
  2628  0512  0273               	subwf	??_strcmp+1,w
  2629  0513  00FF               	movwf	btemp+1
  2630  0514  087F               	movf	btemp+1,w
  2631  0515  00F4               	movwf	strcmp@r
  2632  0516  0874               	movf	strcmp@r,w
  2633  0517  1D03               	btfss	3,2
  2634  0518  2D1A               	goto	u107_21
  2635  0519  2D1B               	goto	u107_20
  2636  051A                     u107_21:
  2637  051A  2D22               	goto	i1l1585
  2638  051B                     u107_20:
  2639  051B                     i1l1583:
  2640  051B  0875               	movf	strcmp@s1,w
  2641  051C  0084               	movwf	4
  2642  051D  0800               	movf	0,w
  2643  051E  1D03               	btfss	3,2
  2644  051F  2D21               	goto	u108_21
  2645  0520  2D22               	goto	u108_20
  2646  0521                     u108_21:
  2647  0521  2CFC               	goto	i1l1577
  2648  0522                     u108_20:
  2649  0522                     i1l1585:
  2650  0522  0874               	movf	strcmp@r,w
  2651  0523  00F0               	movwf	?_strcmp
  2652  0524  01F1               	clrf	?_strcmp+1
  2653  0525  1BF0               	btfsc	?_strcmp,7
  2654  0526  03F1               	decf	?_strcmp+1,f
  2655  0527                     i1l815:
  2656  0527  0008               	return
  2657  0528                     __end_of_strcmp:
  2658                           
  2659                           	psect	text14
  2660  015B                     __ptext14:	
  2661 ;; *************** function _sprintf *****************
  2662 ;; Defined at:
  2663 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;  sp              1    wreg     PTR unsigned char 
  2666 ;;		 -> data(10), 
  2667 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2668 ;;		 -> STR_5(4), STR_3(4), 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  2671 ;;		 -> data(10), 
  2672 ;;  tmpval          4    0        struct .
  2673 ;;  val             2    9[BANK0 ] unsigned int 
  2674 ;;  cp              2    0        PTR const unsigned char 
  2675 ;;  len             2    0        unsigned int 
  2676 ;;  c               1   12[BANK0 ] unsigned char 
  2677 ;;  prec            1    8[BANK0 ] char 
  2678 ;;  flag            1    7[BANK0 ] unsigned char 
  2679 ;;  ap              1    6[BANK0 ] PTR void [1]
  2680 ;;		 -> ?_sprintf(2), 
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  2    0[BANK0 ] int 
  2683 ;; Registers used:
  2684 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2690 ;;      Params:         0       3       0       0       0
  2691 ;;      Locals:         0       7       0       0       0
  2692 ;;      Temps:          0       3       0       0       0
  2693 ;;      Totals:         0      13       0       0       0
  2694 ;;Total ram usage:       13 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; Hardware stack levels required when called:    1
  2697 ;; This function calls:
  2698 ;;		___lwdiv
  2699 ;;		___lwmod
  2700 ;; This function is called by:
  2701 ;;		_myISR
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           
  2706                           ;psect for function _sprintf
  2707  015B                     _sprintf:
  2708                           
  2709                           ;incstack = 0
  2710                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2711                           ;sprintf@sp stored from wreg
  2712  015B  1283               	bcf	3,5	;RP0=0, select bank0
  2713  015C  1303               	bcf	3,6	;RP1=0, select bank0
  2714  015D  00AB               	movwf	sprintf@sp
  2715  015E                     i1l1611:
  2716                           
  2717                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2718  015E  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2719  015F  00FF               	movwf	btemp+1
  2720  0160  087F               	movf	btemp+1,w
  2721  0161  00A6               	movwf	sprintf@ap
  2722                           
  2723                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2724  0162  2A2C               	goto	i1l1665
  2725  0163                     i1l1613:
  2726                           
  2727                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2728  0163  3025               	movlw	37
  2729  0164  062C               	xorwf	sprintf@c,w
  2730  0165  1903               	btfsc	3,2
  2731  0166  2968               	goto	u117_21
  2732  0167  2969               	goto	u117_20
  2733  0168                     u117_21:
  2734  0168  2975               	goto	i1l1619
  2735  0169                     u117_20:
  2736  0169                     i1l1615:
  2737                           
  2738                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2739  0169  082C               	movf	sprintf@c,w
  2740  016A  00FF               	movwf	btemp+1
  2741  016B  082B               	movf	sprintf@sp,w
  2742  016C  0084               	movwf	4
  2743  016D  087F               	movf	btemp+1,w
  2744  016E  1383               	bcf	3,7	;select IRP bank0
  2745  016F  0080               	movwf	0
  2746  0170                     i1l1617:
  2747  0170  3001               	movlw	1
  2748  0171  00FF               	movwf	btemp+1
  2749  0172  087F               	movf	btemp+1,w
  2750  0173  07AB               	addwf	sprintf@sp,f
  2751                           
  2752                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 559:    continue;
  2753  0174  2A2C               	goto	i1l1665
  2754  0175                     i1l1619:
  2755                           
  2756                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2757  0175  01A7               	clrf	sprintf@flag
  2758  0176                     i1l1623:	
  2759                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2760                           
  2761  0176  3001               	movlw	1
  2762  0177  07A0               	addwf	sprintf@f,f
  2763  0178  30FF               	movlw	-1
  2764  0179  0720               	addwf	sprintf@f,w
  2765  017A  0084               	movwf	4
  2766  017B  120A  118A  2572  120A  118A  	fcall	stringdir
  2767  0180  00AC               	movwf	sprintf@c
  2768  0181  00A3               	movwf	??_sprintf
  2769  0182  01A4               	clrf	??_sprintf+1
  2770                           
  2771                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2772                           ; Switch size 1, requested type "simple"
  2773                           ; Number of cases is 1, Range of values is 0 to 0
  2774                           ; switch strategies available:
  2775                           ; Name         Instructions Cycles
  2776                           ; simple_byte            4     3 (average)
  2777                           ; direct_byte           11     8 (fixed)
  2778                           ; jumptable            260     6 (fixed)
  2779                           ;	Chosen strategy is simple_byte
  2780  0183  0824               	movf	??_sprintf+1,w
  2781  0184  3A00               	xorlw	0	; case 0
  2782  0185  1903               	skipnz
  2783  0186  2988               	goto	i1l1907
  2784  0187  2A2C               	goto	i1l1665
  2785  0188                     i1l1907:
  2786                           
  2787                           ; Switch size 1, requested type "simple"
  2788                           ; Number of cases is 3, Range of values is 0 to 105
  2789                           ; switch strategies available:
  2790                           ; Name         Instructions Cycles
  2791                           ; simple_byte           10     6 (average)
  2792                           ; jumptable            260     6 (fixed)
  2793                           ;	Chosen strategy is simple_byte
  2794  0188  0823               	movf	??_sprintf,w
  2795  0189  3A00               	xorlw	0	; case 0
  2796  018A  1903               	skipnz
  2797  018B  2A3E               	goto	i1l1667
  2798  018C  3A64               	xorlw	100	; case 100
  2799  018D  1903               	skipnz
  2800  018E  2993               	goto	i1l1625
  2801  018F  3A0D               	xorlw	13	; case 105
  2802  0190  1903               	skipnz
  2803  0191  2993               	goto	i1l1625
  2804  0192  2A2C               	goto	i1l1665
  2805  0193                     i1l1625:
  2806                           
  2807                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2808  0193  0826               	movf	sprintf@ap,w
  2809  0194  0084               	movwf	4
  2810  0195  1383               	bcf	3,7	;select IRP bank0
  2811  0196  0800               	movf	0,w
  2812  0197  00A9               	movwf	sprintf@val
  2813  0198  0A84               	incf	4,f
  2814  0199  0800               	movf	0,w
  2815  019A  00AA               	movwf	sprintf@val+1
  2816  019B                     i1l1627:
  2817  019B  3002               	movlw	2
  2818  019C  00FF               	movwf	btemp+1
  2819  019D  087F               	movf	btemp+1,w
  2820  019E  07A6               	addwf	sprintf@ap,f
  2821  019F                     i1l1629:
  2822                           
  2823                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2824  019F  1FAA               	btfss	sprintf@val+1,7
  2825  01A0  29A2               	goto	u118_21
  2826  01A1  29A3               	goto	u118_20
  2827  01A2                     u118_21:
  2828  01A2  29AC               	goto	i1l1635
  2829  01A3                     u118_20:
  2830  01A3                     i1l1631:
  2831                           
  2832                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2833  01A3  3003               	movlw	3
  2834  01A4  00FF               	movwf	btemp+1
  2835  01A5  087F               	movf	btemp+1,w
  2836  01A6  04A7               	iorwf	sprintf@flag,f
  2837  01A7                     i1l1633:
  2838                           
  2839                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2840  01A7  09A9               	comf	sprintf@val,f
  2841  01A8  09AA               	comf	sprintf@val+1,f
  2842  01A9  0AA9               	incf	sprintf@val,f
  2843  01AA  1903               	skipnz
  2844  01AB  0AAA               	incf	sprintf@val+1,f
  2845  01AC                     i1l1635:
  2846                           
  2847                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2848  01AC  01AC               	clrf	sprintf@c
  2849  01AD  0AAC               	incf	sprintf@c,f
  2850  01AE                     i1l1641:
  2851                           
  2852                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2853  01AE  082C               	movf	sprintf@c,w
  2854  01AF  00A3               	movwf	??_sprintf
  2855  01B0  0723               	addwf	??_sprintf,w
  2856  01B1  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2857  01B2  0084               	movwf	4
  2858  01B3  120A  118A  2572  120A  118A  	fcall	stringdir
  2859  01B8  00A4               	movwf	??_sprintf+1
  2860  01B9  120A  118A  2572  120A  118A  	fcall	stringdir
  2861  01BE  00A5               	movwf	??_sprintf+2
  2862  01BF  0825               	movf	??_sprintf+2,w
  2863  01C0  022A               	subwf	sprintf@val+1,w
  2864  01C1  1D03               	skipz
  2865  01C2  29C5               	goto	u119_25
  2866  01C3  0824               	movf	??_sprintf+1,w
  2867  01C4  0229               	subwf	sprintf@val,w
  2868  01C5                     u119_25:
  2869  01C5  1803               	skipnc
  2870  01C6  29C8               	goto	u119_21
  2871  01C7  29C9               	goto	u119_20
  2872  01C8                     u119_21:
  2873  01C8  29CA               	goto	i1l1645
  2874  01C9                     u119_20:
  2875  01C9  29D4               	goto	i1l1649
  2876  01CA                     i1l1645:
  2877  01CA  3001               	movlw	1
  2878  01CB  00FF               	movwf	btemp+1
  2879  01CC  087F               	movf	btemp+1,w
  2880  01CD  07AC               	addwf	sprintf@c,f
  2881  01CE                     i1l1647:
  2882  01CE  3005               	movlw	5
  2883  01CF  062C               	xorwf	sprintf@c,w
  2884  01D0  1D03               	btfss	3,2
  2885  01D1  29D3               	goto	u120_21
  2886  01D2  29D4               	goto	u120_20
  2887  01D3                     u120_21:
  2888  01D3  29AE               	goto	i1l1641
  2889  01D4                     u120_20:
  2890  01D4                     i1l1649:
  2891                           
  2892                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2893  01D4  0827               	movf	sprintf@flag,w
  2894  01D5  3903               	andlw	3
  2895  01D6  1903               	btfsc	3,2
  2896  01D7  29D9               	goto	u121_21
  2897  01D8  29DA               	goto	u121_20
  2898  01D9                     u121_21:
  2899  01D9  29E5               	goto	i1l1655
  2900  01DA                     u121_20:
  2901  01DA                     i1l1651:
  2902                           
  2903                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2904  01DA  302D               	movlw	45
  2905  01DB  00FF               	movwf	btemp+1
  2906  01DC  082B               	movf	sprintf@sp,w
  2907  01DD  0084               	movwf	4
  2908  01DE  087F               	movf	btemp+1,w
  2909  01DF  1383               	bcf	3,7	;select IRP bank0
  2910  01E0  0080               	movwf	0
  2911  01E1                     i1l1653:
  2912  01E1  3001               	movlw	1
  2913  01E2  00FF               	movwf	btemp+1
  2914  01E3  087F               	movf	btemp+1,w
  2915  01E4  07AB               	addwf	sprintf@sp,f
  2916  01E5                     i1l1655:
  2917                           
  2918                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2919  01E5  082C               	movf	sprintf@c,w
  2920  01E6  00FF               	movwf	btemp+1
  2921  01E7  087F               	movf	btemp+1,w
  2922  01E8  00A8               	movwf	sprintf@prec
  2923                           
  2924                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2925  01E9  2A23               	goto	i1l1663
  2926  01EA                     i1l1657:
  2927                           
  2928                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2929  01EA  300A               	movlw	10
  2930  01EB  00F7               	movwf	___lwmod@divisor
  2931  01EC  3000               	movlw	0
  2932  01ED  00F8               	movwf	___lwmod@divisor+1
  2933  01EE  0828               	movf	sprintf@prec,w
  2934  01EF  00A3               	movwf	??_sprintf
  2935  01F0  0723               	addwf	??_sprintf,w
  2936  01F1  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2937  01F2  0084               	movwf	4
  2938  01F3  120A  118A  2572  120A  118A  	fcall	stringdir
  2939  01F8  00F0               	movwf	___lwdiv@divisor
  2940  01F9  120A  118A  2572  120A  118A  	fcall	stringdir
  2941  01FE  00F1               	movwf	___lwdiv@divisor+1
  2942  01FF  082A               	movf	sprintf@val+1,w
  2943  0200  00F3               	movwf	___lwdiv@dividend+1
  2944  0201  0829               	movf	sprintf@val,w
  2945  0202  00F2               	movwf	___lwdiv@dividend
  2946  0203  120A  118A  23E6  120A  118A  	fcall	___lwdiv
  2947  0208  0871               	movf	?___lwdiv+1,w
  2948  0209  00FA               	movwf	___lwmod@dividend+1
  2949  020A  0870               	movf	?___lwdiv,w
  2950  020B  00F9               	movwf	___lwmod@dividend
  2951  020C  120A  118A  242A  120A  118A  	fcall	___lwmod
  2952  0211  0877               	movf	?___lwmod,w
  2953  0212  3E30               	addlw	48
  2954  0213  00FF               	movwf	btemp+1
  2955  0214  087F               	movf	btemp+1,w
  2956  0215  1283               	bcf	3,5	;RP0=0, select bank0
  2957  0216  1303               	bcf	3,6	;RP1=0, select bank0
  2958  0217  00AC               	movwf	sprintf@c
  2959  0218                     i1l1659:
  2960                           
  2961                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2962  0218  082C               	movf	sprintf@c,w
  2963  0219  00FF               	movwf	btemp+1
  2964  021A  082B               	movf	sprintf@sp,w
  2965  021B  0084               	movwf	4
  2966  021C  087F               	movf	btemp+1,w
  2967  021D  1383               	bcf	3,7	;select IRP bank0
  2968  021E  0080               	movwf	0
  2969  021F                     i1l1661:
  2970  021F  3001               	movlw	1
  2971  0220  00FF               	movwf	btemp+1
  2972  0221  087F               	movf	btemp+1,w
  2973  0222  07AB               	addwf	sprintf@sp,f
  2974  0223                     i1l1663:
  2975                           
  2976                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2977  0223  30FF               	movlw	255
  2978  0224  00FF               	movwf	btemp+1
  2979  0225  087F               	movf	btemp+1,w
  2980  0226  07A8               	addwf	sprintf@prec,f
  2981  0227  0A28               	incf	sprintf@prec,w
  2982  0228  1D03               	btfss	3,2
  2983  0229  2A2B               	goto	u122_21
  2984  022A  2A2C               	goto	u122_20
  2985  022B                     u122_21:
  2986  022B  29EA               	goto	i1l1657
  2987  022C                     u122_20:
  2988  022C                     i1l1665:
  2989                           
  2990                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2991  022C  3001               	movlw	1
  2992  022D  07A0               	addwf	sprintf@f,f
  2993  022E  30FF               	movlw	-1
  2994  022F  0720               	addwf	sprintf@f,w
  2995  0230  0084               	movwf	4
  2996  0231  120A  118A  2572  120A  118A  	fcall	stringdir
  2997  0236  00FF               	movwf	btemp+1
  2998  0237  087F               	movf	btemp+1,w
  2999  0238  00AC               	movwf	sprintf@c
  3000  0239  082C               	movf	sprintf@c,w
  3001  023A  1D03               	btfss	3,2
  3002  023B  2A3D               	goto	u123_21
  3003  023C  2A3E               	goto	u123_20
  3004  023D                     u123_21:
  3005  023D  2963               	goto	i1l1613
  3006  023E                     u123_20:
  3007  023E                     i1l1667:
  3008                           
  3009                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3010  023E  082B               	movf	sprintf@sp,w
  3011  023F  0084               	movwf	4
  3012  0240  1383               	bcf	3,7	;select IRP bank0
  3013  0241  0180               	clrf	0
  3014  0242                     i1l355:
  3015  0242  0008               	return
  3016  0243                     __end_of_sprintf:
  3017                           
  3018                           	psect	text15
  3019  042A                     __ptext15:	
  3020 ;; *************** function ___lwmod *****************
  3021 ;; Defined at:
  3022 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;  divisor         2    7[COMMON] unsigned int 
  3025 ;;  dividend        2    9[COMMON] unsigned int 
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;  counter         1   11[COMMON] unsigned char 
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  2    7[COMMON] unsigned int 
  3030 ;; Registers used:
  3031 ;;		wreg, status,2, status,0, btemp+1
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3037 ;;      Params:         4       0       0       0       0
  3038 ;;      Locals:         1       0       0       0       0
  3039 ;;      Temps:          0       0       0       0       0
  3040 ;;      Totals:         5       0       0       0       0
  3041 ;;Total ram usage:        5 bytes
  3042 ;; Hardware stack levels used:    1
  3043 ;; This function calls:
  3044 ;;		Nothing
  3045 ;; This function is called by:
  3046 ;;		_sprintf
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           
  3051                           ;psect for function ___lwmod
  3052  042A                     ___lwmod:
  3053  042A                     i1l1529:	
  3054                           ;incstack = 0
  3055                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  3056                           
  3057  042A  0877               	movf	___lwmod@divisor,w
  3058  042B  0478               	iorwf	___lwmod@divisor+1,w
  3059  042C  1903               	btfsc	3,2
  3060  042D  2C2F               	goto	u98_21
  3061  042E  2C30               	goto	u98_20
  3062  042F                     u98_21:
  3063  042F  2C5F               	goto	i1l1547
  3064  0430                     u98_20:
  3065  0430                     i1l1531:
  3066  0430  01FB               	clrf	___lwmod@counter
  3067  0431  0AFB               	incf	___lwmod@counter,f
  3068  0432  2C3E               	goto	i1l1537
  3069  0433                     i1l1533:
  3070  0433  3001               	movlw	1
  3071  0434                     u99_25:
  3072  0434  1003               	clrc
  3073  0435  0DF7               	rlf	___lwmod@divisor,f
  3074  0436  0DF8               	rlf	___lwmod@divisor+1,f
  3075  0437  3EFF               	addlw	-1
  3076  0438  1D03               	skipz
  3077  0439  2C34               	goto	u99_25
  3078  043A                     i1l1535:
  3079  043A  3001               	movlw	1
  3080  043B  00FF               	movwf	btemp+1
  3081  043C  087F               	movf	btemp+1,w
  3082  043D  07FB               	addwf	___lwmod@counter,f
  3083  043E                     i1l1537:
  3084  043E  1FF8               	btfss	___lwmod@divisor+1,7
  3085  043F  2C41               	goto	u100_21
  3086  0440  2C42               	goto	u100_20
  3087  0441                     u100_21:
  3088  0441  2C33               	goto	i1l1533
  3089  0442                     u100_20:
  3090  0442                     i1l1539:
  3091  0442  0878               	movf	___lwmod@divisor+1,w
  3092  0443  027A               	subwf	___lwmod@dividend+1,w
  3093  0444  1D03               	skipz
  3094  0445  2C48               	goto	u101_25
  3095  0446  0877               	movf	___lwmod@divisor,w
  3096  0447  0279               	subwf	___lwmod@dividend,w
  3097  0448                     u101_25:
  3098  0448  1C03               	skipc
  3099  0449  2C4B               	goto	u101_21
  3100  044A  2C4C               	goto	u101_20
  3101  044B                     u101_21:
  3102  044B  2C52               	goto	i1l1543
  3103  044C                     u101_20:
  3104  044C                     i1l1541:
  3105  044C  0877               	movf	___lwmod@divisor,w
  3106  044D  02F9               	subwf	___lwmod@dividend,f
  3107  044E  0878               	movf	___lwmod@divisor+1,w
  3108  044F  1C03               	skipc
  3109  0450  03FA               	decf	___lwmod@dividend+1,f
  3110  0451  02FA               	subwf	___lwmod@dividend+1,f
  3111  0452                     i1l1543:
  3112  0452  3001               	movlw	1
  3113  0453                     u102_25:
  3114  0453  1003               	clrc
  3115  0454  0CF8               	rrf	___lwmod@divisor+1,f
  3116  0455  0CF7               	rrf	___lwmod@divisor,f
  3117  0456  3EFF               	addlw	-1
  3118  0457  1D03               	skipz
  3119  0458  2C53               	goto	u102_25
  3120  0459                     i1l1545:
  3121  0459  3001               	movlw	1
  3122  045A  02FB               	subwf	___lwmod@counter,f
  3123  045B  1D03               	btfss	3,2
  3124  045C  2C5E               	goto	u103_21
  3125  045D  2C5F               	goto	u103_20
  3126  045E                     u103_21:
  3127  045E  2C42               	goto	i1l1539
  3128  045F                     u103_20:
  3129  045F                     i1l1547:
  3130  045F  087A               	movf	___lwmod@dividend+1,w
  3131  0460  00F8               	movwf	?___lwmod+1
  3132  0461  0879               	movf	___lwmod@dividend,w
  3133  0462  00F7               	movwf	?___lwmod
  3134  0463                     i1l641:
  3135  0463  0008               	return
  3136  0464                     __end_of___lwmod:
  3137                           
  3138                           	psect	text16
  3139  03E6                     __ptext16:	
  3140 ;; *************** function ___lwdiv *****************
  3141 ;; Defined at:
  3142 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  divisor         2    0[COMMON] unsigned int 
  3145 ;;  dividend        2    2[COMMON] unsigned int 
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  quotient        2    4[COMMON] unsigned int 
  3148 ;;  counter         1    6[COMMON] unsigned char 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  2    0[COMMON] unsigned int 
  3151 ;; Registers used:
  3152 ;;		wreg, status,2, status,0, btemp+1
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3158 ;;      Params:         4       0       0       0       0
  3159 ;;      Locals:         3       0       0       0       0
  3160 ;;      Temps:          0       0       0       0       0
  3161 ;;      Totals:         7       0       0       0       0
  3162 ;;Total ram usage:        7 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; This function calls:
  3165 ;;		Nothing
  3166 ;; This function is called by:
  3167 ;;		_sprintf
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           
  3172                           ;psect for function ___lwdiv
  3173  03E6                     ___lwdiv:
  3174  03E6                     i1l1503:	
  3175                           ;incstack = 0
  3176                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  3177                           
  3178  03E6  01F4               	clrf	___lwdiv@quotient
  3179  03E7  01F5               	clrf	___lwdiv@quotient+1
  3180  03E8                     i1l1505:
  3181  03E8  0870               	movf	___lwdiv@divisor,w
  3182  03E9  0471               	iorwf	___lwdiv@divisor+1,w
  3183  03EA  1903               	btfsc	3,2
  3184  03EB  2BED               	goto	u91_21
  3185  03EC  2BEE               	goto	u91_20
  3186  03ED                     u91_21:
  3187  03ED  2C25               	goto	i1l1525
  3188  03EE                     u91_20:
  3189  03EE                     i1l1507:
  3190  03EE  01F6               	clrf	___lwdiv@counter
  3191  03EF  0AF6               	incf	___lwdiv@counter,f
  3192  03F0  2BFC               	goto	i1l1513
  3193  03F1                     i1l1509:
  3194  03F1  3001               	movlw	1
  3195  03F2                     u92_25:
  3196  03F2  1003               	clrc
  3197  03F3  0DF0               	rlf	___lwdiv@divisor,f
  3198  03F4  0DF1               	rlf	___lwdiv@divisor+1,f
  3199  03F5  3EFF               	addlw	-1
  3200  03F6  1D03               	skipz
  3201  03F7  2BF2               	goto	u92_25
  3202  03F8                     i1l1511:
  3203  03F8  3001               	movlw	1
  3204  03F9  00FF               	movwf	btemp+1
  3205  03FA  087F               	movf	btemp+1,w
  3206  03FB  07F6               	addwf	___lwdiv@counter,f
  3207  03FC                     i1l1513:
  3208  03FC  1FF1               	btfss	___lwdiv@divisor+1,7
  3209  03FD  2BFF               	goto	u93_21
  3210  03FE  2C00               	goto	u93_20
  3211  03FF                     u93_21:
  3212  03FF  2BF1               	goto	i1l1509
  3213  0400                     u93_20:
  3214  0400                     i1l1515:
  3215  0400  3001               	movlw	1
  3216  0401                     u94_25:
  3217  0401  1003               	clrc
  3218  0402  0DF4               	rlf	___lwdiv@quotient,f
  3219  0403  0DF5               	rlf	___lwdiv@quotient+1,f
  3220  0404  3EFF               	addlw	-1
  3221  0405  1D03               	skipz
  3222  0406  2C01               	goto	u94_25
  3223  0407  0871               	movf	___lwdiv@divisor+1,w
  3224  0408  0273               	subwf	___lwdiv@dividend+1,w
  3225  0409  1D03               	skipz
  3226  040A  2C0D               	goto	u95_25
  3227  040B  0870               	movf	___lwdiv@divisor,w
  3228  040C  0272               	subwf	___lwdiv@dividend,w
  3229  040D                     u95_25:
  3230  040D  1C03               	skipc
  3231  040E  2C10               	goto	u95_21
  3232  040F  2C11               	goto	u95_20
  3233  0410                     u95_21:
  3234  0410  2C18               	goto	i1l1521
  3235  0411                     u95_20:
  3236  0411                     i1l1517:
  3237  0411  0870               	movf	___lwdiv@divisor,w
  3238  0412  02F2               	subwf	___lwdiv@dividend,f
  3239  0413  0871               	movf	___lwdiv@divisor+1,w
  3240  0414  1C03               	skipc
  3241  0415  03F3               	decf	___lwdiv@dividend+1,f
  3242  0416  02F3               	subwf	___lwdiv@dividend+1,f
  3243  0417                     i1l1519:
  3244  0417  1474               	bsf	___lwdiv@quotient,0
  3245  0418                     i1l1521:
  3246  0418  3001               	movlw	1
  3247  0419                     u96_25:
  3248  0419  1003               	clrc
  3249  041A  0CF1               	rrf	___lwdiv@divisor+1,f
  3250  041B  0CF0               	rrf	___lwdiv@divisor,f
  3251  041C  3EFF               	addlw	-1
  3252  041D  1D03               	skipz
  3253  041E  2C19               	goto	u96_25
  3254  041F                     i1l1523:
  3255  041F  3001               	movlw	1
  3256  0420  02F6               	subwf	___lwdiv@counter,f
  3257  0421  1D03               	btfss	3,2
  3258  0422  2C24               	goto	u97_21
  3259  0423  2C25               	goto	u97_20
  3260  0424                     u97_21:
  3261  0424  2C00               	goto	i1l1515
  3262  0425                     u97_20:
  3263  0425                     i1l1525:
  3264  0425  0875               	movf	___lwdiv@quotient+1,w
  3265  0426  00F1               	movwf	?___lwdiv+1
  3266  0427  0874               	movf	___lwdiv@quotient,w
  3267  0428  00F0               	movwf	?___lwdiv
  3268  0429                     i1l631:
  3269  0429  0008               	return
  3270  042A                     __end_of___lwdiv:
  3271                           
  3272                           	psect	text17
  3273  0528                     __ptext17:	
  3274 ;; *************** function _recivedCMD *****************
  3275 ;; Defined at:
  3276 ;;		line 48 in file "usart.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;  cmd             1    wreg     PTR unsigned char 
  3279 ;;		 -> data(10), 
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;  cmd             1    1[COMMON] PTR unsigned char 
  3282 ;;		 -> data(10), 
  3283 ;;  j               1    3[COMMON] unsigned char 
  3284 ;;  i               1    2[COMMON] unsigned char 
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      void 
  3287 ;; Registers used:
  3288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3294 ;;      Params:         0       0       0       0       0
  3295 ;;      Locals:         3       0       0       0       0
  3296 ;;      Temps:          1       0       0       0       0
  3297 ;;      Totals:         4       0       0       0       0
  3298 ;;Total ram usage:        4 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; Hardware stack levels required when called:    1
  3301 ;; This function calls:
  3302 ;;		_get1
  3303 ;; This function is called by:
  3304 ;;		_myISR
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           
  3309                           ;psect for function _recivedCMD
  3310  0528                     _recivedCMD:
  3311                           
  3312                           ;incstack = 0
  3313                           ; Regs used in _recivedCMD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3314                           ;recivedCMD@cmd stored from wreg
  3315  0528  00F1               	movwf	recivedCMD@cmd
  3316  0529                     i1l1551:
  3317                           
  3318                           ;usart.c: 49:     unsigned char i = 0;
  3319  0529  01F2               	clrf	recivedCMD@i
  3320  052A                     i1l1553:
  3321                           
  3322                           ;usart.c: 52:         cmd[i] = get1();
  3323  052A  120A  118A  2631  120A  118A  	fcall	_get1
  3324  052F  00FF               	movwf	btemp+1
  3325  0530  0872               	movf	recivedCMD@i,w
  3326  0531  0771               	addwf	recivedCMD@cmd,w
  3327  0532  00F0               	movwf	??_recivedCMD
  3328  0533  0870               	movf	??_recivedCMD,w
  3329  0534  0084               	movwf	4
  3330  0535  087F               	movf	btemp+1,w
  3331  0536  1383               	bcf	3,7	;select IRP bank0
  3332  0537  0080               	movwf	0
  3333  0538                     i1l1555:
  3334                           
  3335                           ;usart.c: 53:         j = cmd[i];
  3336  0538  0872               	movf	recivedCMD@i,w
  3337  0539  0771               	addwf	recivedCMD@cmd,w
  3338  053A  00F0               	movwf	??_recivedCMD
  3339  053B  0870               	movf	??_recivedCMD,w
  3340  053C  0084               	movwf	4
  3341  053D  0800               	movf	0,w
  3342  053E  00FF               	movwf	btemp+1
  3343  053F  087F               	movf	btemp+1,w
  3344  0540  00F3               	movwf	recivedCMD@j
  3345  0541                     i1l1557:
  3346                           
  3347                           ;usart.c: 54:         i++;
  3348  0541  3001               	movlw	1
  3349  0542  00FF               	movwf	btemp+1
  3350  0543  087F               	movf	btemp+1,w
  3351  0544  07F2               	addwf	recivedCMD@i,f
  3352  0545                     i1l1559:
  3353                           
  3354                           ;usart.c: 55:         }
  3355  0545  300A               	movlw	10
  3356  0546  0673               	xorwf	recivedCMD@j,w
  3357  0547  1903               	btfsc	3,2
  3358  0548  2D4A               	goto	u104_21
  3359  0549  2D4B               	goto	u104_20
  3360  054A                     u104_21:
  3361  054A  2D51               	goto	i1l127
  3362  054B                     u104_20:
  3363  054B                     i1l1561:
  3364  054B  300D               	movlw	13
  3365  054C  0673               	xorwf	recivedCMD@j,w
  3366  054D  1D03               	btfss	3,2
  3367  054E  2D50               	goto	u105_21
  3368  054F  2D51               	goto	u105_20
  3369  0550                     u105_21:
  3370  0550  2D2A               	goto	i1l1553
  3371  0551                     u105_20:
  3372  0551                     i1l127:
  3373  0551  0008               	return
  3374  0552                     __end_of_recivedCMD:
  3375                           
  3376                           	psect	text18
  3377  0631                     __ptext18:	
  3378 ;; *************** function _get1 *****************
  3379 ;; Defined at:
  3380 ;;		line 61 in file "usart.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;		None
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  1    wreg      unsigned char 
  3387 ;; Registers used:
  3388 ;;		wreg
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3394 ;;      Params:         0       0       0       0       0
  3395 ;;      Locals:         0       0       0       0       0
  3396 ;;      Temps:          0       0       0       0       0
  3397 ;;      Totals:         0       0       0       0       0
  3398 ;;Total ram usage:        0 bytes
  3399 ;; Hardware stack levels used:    1
  3400 ;; This function calls:
  3401 ;;		Nothing
  3402 ;; This function is called by:
  3403 ;;		_recivedCMD
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407                           
  3408                           ;psect for function _get1
  3409  0631                     _get1:
  3410  0631                     i1l1417:	
  3411                           ;incstack = 0
  3412                           ; Regs used in _get1: [wreg]
  3413                           
  3414  0631                     i1l130:	
  3415                           ;usart.c: 64:     }
  3416                           
  3417                           
  3418                           ;usart.c: 62:     while(!PIR1bits.RCIF){
  3419  0631  1283               	bcf	3,5	;RP0=0, select bank0
  3420  0632  1303               	bcf	3,6	;RP1=0, select bank0
  3421  0633  1E8C               	btfss	12,5	;volatile
  3422  0634  2E36               	goto	u74_21
  3423  0635  2E37               	goto	u74_20
  3424  0636                     u74_21:
  3425  0636  2E31               	goto	i1l130
  3426  0637                     u74_20:
  3427  0637                     i1l1419:
  3428                           
  3429                           ;usart.c: 65:     return RCREG;
  3430  0637  081A               	movf	26,w	;volatile
  3431  0638                     i1l133:
  3432  0638  0008               	return
  3433  0639                     __end_of_get1:
  3434                           
  3435                           	psect	text19
  3436  05BC                     __ptext19:	
  3437 ;; *************** function _i2c_write *****************
  3438 ;; Defined at:
  3439 ;;		line 52 in file "i2c.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  dato            1    wreg     unsigned char 
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;  dato            1    0[COMMON] unsigned char 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  1    wreg      unsigned char 
  3446 ;; Registers used:
  3447 ;;		wreg, status,2, status,0, pclath, cstack
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3453 ;;      Params:         0       0       0       0       0
  3454 ;;      Locals:         1       0       0       0       0
  3455 ;;      Temps:          0       0       0       0       0
  3456 ;;      Totals:         1       0       0       0       0
  3457 ;;Total ram usage:        1 bytes
  3458 ;; Hardware stack levels used:    1
  3459 ;; Hardware stack levels required when called:    1
  3460 ;; This function calls:
  3461 ;;		_i2c_idle
  3462 ;; This function is called by:
  3463 ;;		_myISR
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           
  3468                           ;psect for function _i2c_write
  3469  05BC                     _i2c_write:
  3470                           
  3471                           ;incstack = 0
  3472                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  3473                           ;i2c_write@dato stored from wreg
  3474  05BC  00F0               	movwf	i2c_write@dato
  3475  05BD                     i1l1593:
  3476                           
  3477                           ;i2c.c: 53:     i2c_idle();
  3478  05BD  120A  118A  25FE  120A  118A  	fcall	_i2c_idle
  3479  05C2                     i1l1595:
  3480                           
  3481                           ;i2c.c: 54:     SSPBUF = dato;
  3482  05C2  0870               	movf	i2c_write@dato,w
  3483  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  3484  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  3485  05C5  0093               	movwf	19	;volatile
  3486  05C6                     i1l1597:	
  3487                           ;i2c.c: 55:     while(SSPSTAT & 0x05);
  3488                           
  3489  05C6  1683               	bsf	3,5	;RP0=1, select bank1
  3490  05C7  1303               	bcf	3,6	;RP1=0, select bank1
  3491  05C8  0814               	movf	20,w	;volatile
  3492  05C9  3905               	andlw	5
  3493  05CA  1D03               	btfss	3,2
  3494  05CB  2DCD               	goto	u111_21
  3495  05CC  2DCE               	goto	u111_20
  3496  05CD                     u111_21:
  3497  05CD  2DC6               	goto	i1l1597
  3498  05CE                     u111_20:
  3499  05CE                     i1l224:
  3500  05CE  0008               	return
  3501  05CF                     __end_of_i2c_write:
  3502                           
  3503                           	psect	text20
  3504  05F0                     __ptext20:	
  3505 ;; *************** function _i2c_stop *****************
  3506 ;; Defined at:
  3507 ;;		line 37 in file "i2c.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;		None
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;		None
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  1    wreg      void 
  3514 ;; Registers used:
  3515 ;;		None
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3521 ;;      Params:         0       0       0       0       0
  3522 ;;      Locals:         0       0       0       0       0
  3523 ;;      Temps:          0       0       0       0       0
  3524 ;;      Totals:         0       0       0       0       0
  3525 ;;Total ram usage:        0 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; This function calls:
  3528 ;;		Nothing
  3529 ;; This function is called by:
  3530 ;;		_myISR
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           
  3535                           ;psect for function _i2c_stop
  3536  05F0                     _i2c_stop:
  3537  05F0                     i1l1609:	
  3538                           ;incstack = 0
  3539                           ; Regs used in _i2c_stop: []
  3540                           
  3541                           
  3542                           ;i2c.c: 38:     SSPCON2bits.PEN = 1;
  3543  05F0  1683               	bsf	3,5	;RP0=1, select bank1
  3544  05F1  1303               	bcf	3,6	;RP1=0, select bank1
  3545  05F2  1511               	bsf	17,2	;volatile
  3546  05F3                     i1l203:	
  3547                           ;i2c.c: 39:     while(SSPCON2bits.PEN);
  3548                           
  3549  05F3  1911               	btfsc	17,2	;volatile
  3550  05F4  2DF6               	goto	u115_21
  3551  05F5  2DF7               	goto	u115_20
  3552  05F6                     u115_21:
  3553  05F6  2DF3               	goto	i1l203
  3554  05F7                     u115_20:
  3555  05F7                     i1l206:
  3556  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  3557  05F8  1D8C               	btfss	12,3	;volatile
  3558  05F9  2DFB               	goto	u116_21
  3559  05FA  2DFC               	goto	u116_20
  3560  05FB                     u116_21:
  3561  05FB  2DF7               	goto	i1l206
  3562  05FC                     u116_20:
  3563  05FC                     i1l208:
  3564                           
  3565                           ;i2c.c: 41:     SSPIF = 0;
  3566  05FC  118C               	bcf	12,3	;volatile
  3567  05FD                     i1l209:
  3568  05FD  0008               	return
  3569  05FE                     __end_of_i2c_stop:
  3570                           
  3571                           	psect	text21
  3572  05CF                     __ptext21:	
  3573 ;; *************** function _i2c_start *****************
  3574 ;; Defined at:
  3575 ;;		line 20 in file "i2c.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;		None
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;		None
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  1    wreg      void 
  3582 ;; Registers used:
  3583 ;;		wreg, status,2, status,0, pclath, cstack
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3589 ;;      Params:         0       0       0       0       0
  3590 ;;      Locals:         0       0       0       0       0
  3591 ;;      Temps:          0       0       0       0       0
  3592 ;;      Totals:         0       0       0       0       0
  3593 ;;Total ram usage:        0 bytes
  3594 ;; Hardware stack levels used:    1
  3595 ;; Hardware stack levels required when called:    1
  3596 ;; This function calls:
  3597 ;;		_i2c_idle
  3598 ;; This function is called by:
  3599 ;;		_myISR
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           
  3604                           ;psect for function _i2c_start
  3605  05CF                     _i2c_start:
  3606  05CF                     i1l1589:	
  3607                           ;incstack = 0
  3608                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  3609                           
  3610                           
  3611                           ;i2c.c: 22:     i2c_idle();
  3612  05CF  120A  118A  25FE  120A  118A  	fcall	_i2c_idle
  3613  05D4                     i1l1591:
  3614                           
  3615                           ;i2c.c: 23:     SSPCON2bits.SEN = 1;
  3616  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  3617  05D5  1303               	bcf	3,6	;RP1=0, select bank1
  3618  05D6  1411               	bsf	17,0	;volatile
  3619  05D7                     i1l185:	
  3620                           ;i2c.c: 24:     while(SSPCON2bits.SEN == 1);
  3621                           
  3622  05D7  1811               	btfsc	17,0	;volatile
  3623  05D8  2DDA               	goto	u109_21
  3624  05D9  2DDB               	goto	u109_20
  3625  05DA                     u109_21:
  3626  05DA  2DD7               	goto	i1l185
  3627  05DB                     u109_20:
  3628  05DB                     i1l188:
  3629  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  3630  05DC  1D8C               	btfss	12,3	;volatile
  3631  05DD  2DDF               	goto	u110_21
  3632  05DE  2DE0               	goto	u110_20
  3633  05DF                     u110_21:
  3634  05DF  2DDB               	goto	i1l188
  3635  05E0                     u110_20:
  3636  05E0                     i1l190:
  3637                           
  3638                           ;i2c.c: 26:     SSPIF = 0;
  3639  05E0  118C               	bcf	12,3	;volatile
  3640  05E1                     i1l191:
  3641  05E1  0008               	return
  3642  05E2                     __end_of_i2c_start:
  3643                           
  3644                           	psect	text22
  3645  0620                     __ptext22:	
  3646 ;; *************** function _i2c_sendACK *****************
  3647 ;; Defined at:
  3648 ;;		line 76 in file "i2c.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;		None
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;		None
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  1    wreg      void 
  3655 ;; Registers used:
  3656 ;;		None
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3662 ;;      Params:         0       0       0       0       0
  3663 ;;      Locals:         0       0       0       0       0
  3664 ;;      Temps:          0       0       0       0       0
  3665 ;;      Totals:         0       0       0       0       0
  3666 ;;Total ram usage:        0 bytes
  3667 ;; Hardware stack levels used:    1
  3668 ;; This function calls:
  3669 ;;		Nothing
  3670 ;; This function is called by:
  3671 ;;		_myISR
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           
  3676                           ;psect for function _i2c_sendACK
  3677  0620                     _i2c_sendACK:
  3678  0620                     i1l1607:	
  3679                           ;incstack = 0
  3680                           ; Regs used in _i2c_sendACK: []
  3681                           
  3682                           
  3683                           ;i2c.c: 77:     SSPCON2bits.ACKDT = 0;
  3684  0620  1683               	bsf	3,5	;RP0=1, select bank1
  3685  0621  1303               	bcf	3,6	;RP1=0, select bank1
  3686  0622  1291               	bcf	17,5	;volatile
  3687                           
  3688                           ;i2c.c: 78:     SSPCON2bits.ACKEN = 1;
  3689  0623  1611               	bsf	17,4	;volatile
  3690  0624                     i1l233:	
  3691                           ;i2c.c: 79:     while(SSPCON2bits.ACKEN == 1);
  3692                           
  3693  0624  1A11               	btfsc	17,4	;volatile
  3694  0625  2E27               	goto	u114_21
  3695  0626  2E28               	goto	u114_20
  3696  0627                     u114_21:
  3697  0627  2E24               	goto	i1l233
  3698  0628                     u114_20:
  3699  0628                     i1l236:
  3700  0628  0008               	return
  3701  0629                     __end_of_i2c_sendACK:
  3702                           
  3703                           	psect	text23
  3704  05A8                     __ptext23:	
  3705 ;; *************** function _i2c_read *****************
  3706 ;; Defined at:
  3707 ;;		line 44 in file "i2c.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;		None
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;		None
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1    wreg      unsigned char 
  3714 ;; Registers used:
  3715 ;;		wreg, status,2, status,0, pclath, cstack
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3721 ;;      Params:         0       0       0       0       0
  3722 ;;      Locals:         0       0       0       0       0
  3723 ;;      Temps:          0       0       0       0       0
  3724 ;;      Totals:         0       0       0       0       0
  3725 ;;Total ram usage:        0 bytes
  3726 ;; Hardware stack levels used:    1
  3727 ;; Hardware stack levels required when called:    1
  3728 ;; This function calls:
  3729 ;;		_i2c_idle
  3730 ;; This function is called by:
  3731 ;;		_myISR
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           
  3736                           ;psect for function _i2c_read
  3737  05A8                     _i2c_read:
  3738  05A8                     i1l1599:	
  3739                           ;incstack = 0
  3740                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  3741                           
  3742                           
  3743                           ;i2c.c: 45:     i2c_idle();
  3744  05A8  120A  118A  25FE  120A  118A  	fcall	_i2c_idle
  3745  05AD                     i1l1601:
  3746                           
  3747                           ;i2c.c: 46:     SSPCON2bits.RCEN = 1;
  3748  05AD  1683               	bsf	3,5	;RP0=1, select bank1
  3749  05AE  1303               	bcf	3,6	;RP1=0, select bank1
  3750  05AF  1591               	bsf	17,3	;volatile
  3751  05B0                     i1l212:	
  3752                           ;i2c.c: 47:     while(SSPCON2bits.RCEN == 1);
  3753                           
  3754  05B0  1991               	btfsc	17,3	;volatile
  3755  05B1  2DB3               	goto	u112_21
  3756  05B2  2DB4               	goto	u112_20
  3757  05B3                     u112_21:
  3758  05B3  2DB0               	goto	i1l212
  3759  05B4                     u112_20:
  3760  05B4                     i1l215:
  3761  05B4  1C14               	btfss	20,0	;volatile
  3762  05B5  2DB7               	goto	u113_21
  3763  05B6  2DB8               	goto	u113_20
  3764  05B7                     u113_21:
  3765  05B7  2DB4               	goto	i1l215
  3766  05B8                     u113_20:
  3767  05B8                     i1l1603:
  3768                           
  3769                           ;i2c.c: 49:     return SSPBUF;
  3770  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  3771  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  3772  05BA  0813               	movf	19,w	;volatile
  3773  05BB                     i1l218:
  3774  05BB  0008               	return
  3775  05BC                     __end_of_i2c_read:
  3776                           
  3777                           	psect	text24
  3778  05FE                     __ptext24:	
  3779 ;; *************** function _i2c_idle *****************
  3780 ;; Defined at:
  3781 ;;		line 81 in file "i2c.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;		None
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;		None
  3786 ;; Return value:  Size  Location     Type
  3787 ;;                  1    wreg      void 
  3788 ;; Registers used:
  3789 ;;		wreg, status,2
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/0
  3792 ;;		On exit  : 0/0
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3795 ;;      Params:         0       0       0       0       0
  3796 ;;      Locals:         0       0       0       0       0
  3797 ;;      Temps:          0       0       0       0       0
  3798 ;;      Totals:         0       0       0       0       0
  3799 ;;Total ram usage:        0 bytes
  3800 ;; Hardware stack levels used:    1
  3801 ;; This function calls:
  3802 ;;		Nothing
  3803 ;; This function is called by:
  3804 ;;		_i2c_start
  3805 ;;		_i2c_read
  3806 ;;		_i2c_write
  3807 ;;		_i2c_restart
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           
  3812                           ;psect for function _i2c_idle
  3813  05FE                     _i2c_idle:
  3814  05FE                     i1l1455:	
  3815                           ;incstack = 0
  3816                           ; Regs used in _i2c_idle: [wreg+status,2]
  3817                           
  3818  05FE                     i1l1457:	
  3819                           ;i2c.c: 82:     while((SSPCON2 & 0x1F)|| (SSPSTAT & 0x04));
  3820                           
  3821  05FE  1683               	bsf	3,5	;RP0=1, select bank1
  3822  05FF  1303               	bcf	3,6	;RP1=0, select bank1
  3823  0600  0811               	movf	17,w	;volatile
  3824  0601  391F               	andlw	31
  3825  0602  1D03               	btfss	3,2
  3826  0603  2E05               	goto	u79_21
  3827  0604  2E06               	goto	u79_20
  3828  0605                     u79_21:
  3829  0605  2DFE               	goto	i1l1457
  3830  0606                     u79_20:
  3831  0606                     i1l1459:
  3832  0606  1914               	btfsc	20,2	;volatile
  3833  0607  2E09               	goto	u80_21
  3834  0608  2E0A               	goto	u80_20
  3835  0609                     u80_21:
  3836  0609  2DFE               	goto	i1l1457
  3837  060A                     u80_20:
  3838  060A                     i1l242:
  3839  060A  0008               	return
  3840  060B                     __end_of_i2c_idle:
  3841  007E                     btemp	set	126	;btemp
  3842  007E                     wtemp0	set	126
  3843                           
  3844                           	psect	config
  3845                           
  3846                           ;Config register CONFIG1 @ 0x2007
  3847                           ;	Oscillator Selection bits
  3848                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  3849                           ;	Watchdog Timer Enable bit
  3850                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3851                           ;	Power-up Timer Enable bit
  3852                           ;	PWRTE = OFF, PWRT disabled
  3853                           ;	RE3/MCLR pin function select bit
  3854                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  3855                           ;	Code Protection bit
  3856                           ;	CP = OFF, Program memory code protection is disabled
  3857                           ;	Data Code Protection bit
  3858                           ;	CPD = OFF, Data memory code protection is disabled
  3859                           ;	Brown Out Reset Selection bits
  3860                           ;	BOREN = ON, BOR enabled
  3861                           ;	Internal External Switchover bit
  3862                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3863                           ;	Fail-Safe Clock Monitor Enabled bit
  3864                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3865                           ;	Low Voltage Programming Enable bit
  3866                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  3867                           ;	In-Circuit Debugger Mode bit
  3868                           ;	DEBUG = 0x1, unprogrammed default
  3869  2007                     	org	8199
  3870  2007  3FF2               	dw	16370
  3871                           
  3872                           ;Config register CONFIG2 @ 0x2008
  3873                           ;	Brown-out Reset Selection bit
  3874                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3875                           ;	Flash Program Memory Self Write Enable bits
  3876                           ;	WRT = OFF, Write protection off
  3877  2008                     	org	8200
  3878  2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    10
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     40      57
    BANK1            80      7       7
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_7(CODE[2]), STR_6(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), data(BANK0[10]), 

    strchr@ptr	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_7(CODE[2]), STR_6(CODE[2]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 2
		 -> STR_7(CODE[2]), STR_6(CODE[2]), NULL(NULL[0]), 

    strcspn@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_7(CODE[2]), STR_6(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), data(BANK0[10]), 

    strtok@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_7(CODE[2]), STR_6(CODE[2]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), data(BANK0[10]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), data(BANK0[10]), 

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_4(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), data(BANK0[10]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_5(CODE[4]), STR_3(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), data(BANK0[10]), 

    token@cmd	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    token@tok	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), data(BANK0[10]), 

    recivedCMD@cmd	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    usart_TxStr@str	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    dir	PTR unsigned char [3] size(1) Largest target is 10
		 -> NULL(NULL[0]), data(BANK0[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myISR in COMMON

    _usart_TxStr->_usart_Tx
    _token->_strtok
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    _main->_usart_init
    _usart_init->___aldiv

Critical Paths under _myISR in BANK0

    _myISR->_sprintf

Critical Paths under _main in BANK1

    _main->_usart_init

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     960
                                              4 BANK1      3     3      0
                           _i2c_init
                    _usart_Interrupt
                         _usart_init
 ---------------------------------------------------------------------------------
 (1) _usart_init                                           8     4      4     960
                                             36 BANK0      4     0      4
                                              0 BANK1      4     4      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     805
                                             21 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _usart_Interrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _myISR                                                8     8      0    3618
                                             13 BANK0      8     8      0
                           _i2c_read
                        _i2c_sendACK
                          _i2c_start
                           _i2c_stop
                          _i2c_write
                         _recivedCMD
                            _sprintf
                             _strcmp
                              _token
                        _usart_TxStr
 ---------------------------------------------------------------------------------
 (4) _usart_TxStr                                          1     1      0     133
                                              1 COMMON     1     1      0
                           _usart_Tx
 ---------------------------------------------------------------------------------
 (5) _usart_Tx                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _token                                                4     4      0    1556
                                              0 BANK0      4     4      0
                             _strtok
 ---------------------------------------------------------------------------------
 (5) _strtok                                               2     1      1    1430
                                             10 COMMON     2     1      1
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (6) _strspn                                               7     5      2     506
                                              3 COMMON     7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (6) _strcspn                                              7     5      2     506
                                              3 COMMON     7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (8) _strchr                                               3     1      2     306
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (5) _strcmp                                               6     4      2     418
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             21    18      3    1320
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) _recivedCMD                                           4     4      0     169
                                              0 COMMON     4     4      0
                               _get1
 ---------------------------------------------------------------------------------
 (5) _get1                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_sendACK                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_read                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (5) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_init
   _usart_Interrupt
   _usart_init
     ___aldiv

 _myISR (ROOT)
   _i2c_read
     _i2c_idle
   _i2c_sendACK
   _i2c_start
     _i2c_idle
   _i2c_stop
   _i2c_write
     _i2c_idle
   _recivedCMD
     _get1
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _strcmp
   _token
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr
   _usart_TxStr
     _usart_Tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     28      39       5       71.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      7       7       7        8.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4D      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Oct 26 23:59:58 2021

                       pc 0002               _SSPSTATbits 0094                        fsr 0004  
                     l102 034E                       l120 061F                       l182 05EF  
                     l424 0257                       l434 02DF                       _dir 0048  
                     _res 004B                       fsr0 0004                       indf 0000  
                    l1701 0617                      l1703 05E2                      l1705 05E6  
                    l1707 05EA                      l1811 0243                      l1709 05EB  
                    l1821 026A                      l1813 0246                      l1831 028A  
                    l1823 0272                      l1815 024A                      l1841 02B8  
                    l1833 028E                      l1825 027A                      l1817 025B  
                    l1843 02C1                      l1835 0297                      l1827 027D  
                    l1819 0266                      l1837 02A9                      l1829 0286  
                    l1845 02C7                      l1861 0347                      l1853 02E0  
                    l1847 02CC                      l1839 02B7                      l1863 0348  
                    l1855 02E4                      l1871 039B                      l1849 02D7  
                    l1865 0349                      l1857 0341                      l1881 03C1  
                    l1873 03A7                      l1867 034C                      l1859 0344  
                    l1883 03D0                      l1875 03B4                      l1869 034D  
                    l1885 03D3                      l1877 03B9                      l1879 03BE  
                    STR_1 0586                      STR_2 0589                      STR_3 0582  
                    STR_4 058C                      STR_5 0582                      STR_6 058F  
                    STR_7 058F                      u1400 02C7                      u1320 024A  
                    u1401 02C6                      u1321 0249                      u1410 02CC  
                    u1330 025B                      u1411 02CB                      u1331 025A  
                    u1340 027A                      u1341 0279                      u1360 028E  
                    u1361 028D                      u1355 027F                      u1427 03C9  
                    u1380 02A9                      u1381 02A8                      u1437 03DB  
                    u1375 0290                      u1385 02A5                      u1395 02B9  
                    i1l63 0150               _usart_TxStr 0591                      _get1 0631  
                    _data 004F                      _main 039B                      btemp 007E  
                    start 0012             ??_i2c_sendACK 0070                     ?_get1 0070  
         __end_of___aldiv 02E0                     ?_main 0070           __end_of___lwdiv 042A  
                   i1l105 0610                     i1l130 0631                     i1l203 05F3  
                   i1l212 05B0                     i1l108 0616                     i1l133 0638  
                   i1l117 05A7                     i1l206 05F7                     i1l215 05B4  
                   i1l127 0551                     i1l208 05FC                     i1l224 05CE  
                   i1l233 0624                     i1l209 05FD                     i1l242 060A  
                   i1l218 05BB                     i1l139 049B                     i1l236 0628  
                   i1l190 05E0                     i1l191 05E1                     i1l185 05D7  
         __end_of___lwmod 0464                     i1l355 0242                     i1l188 05DB  
                   i1l631 0429                     i1l641 0463                     i1l815 0527  
                   i1l842 0553                     i1l826 039A                     i1l844 0571  
                   i1l839 04F9                     i1l855 04CA                     _RCREG 001A  
                   _SPBRG 0099                     _PORTB 0006                     _PORTD 0008  
                   u70_20 04C6                     u70_21 04C5                     u71_20 04E1  
                   u71_21 04E0                     u80_20 060A                     u72_20 04F5  
                   u80_21 0609                     u72_21 04F4                     u73_20 0616  
                   u73_21 0615                     _TRISB 0086                     _TRISD 0088  
                   u74_20 0637                     _SSPIF 0063                     u74_21 0636  
                   u91_20 03EE                     u67_20 055F                     u75_20 0355  
                   u91_21 03ED                     u67_21 055E                     u75_21 0354  
                   u68_20 0570                     u76_20 035E                     u68_21 056F  
                   u76_21 035D                     u92_25 03F2                     u93_20 0400  
                   u69_20 04B2                     u77_20 0376                     u93_21 03FF  
                   u69_21 04B1                     u77_21 0375                     u78_20 0390  
                   u78_21 038F                     u94_25 0401                     u79_20 0606  
                   u95_20 0411                     u79_21 0605                     u95_21 0410  
                   u95_25 040D                     u96_25 0419                     u97_20 0425  
                   u97_21 0424                     _TXREG 0019                     u98_20 0430  
                   u98_21 042F                     u99_25 0434           __end_of_dpowers 0582  
                   _myISR 0023                     _token 0464                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 0243  
         __end_of_strcspn 04FA           __initialization 0015              __end_of_get1 0639  
            __end_of_main 03E6          __end_of_i2c_idle 060B          __end_of_i2c_init 05F0  
        __end_of_i2c_read 05BC          __end_of_i2c_stop 05FE       __end_of_i2c_sendACK 0629  
                  ??_get1 0070                    ??_main 00A4                    ?_myISR 0070  
                  ?_token 0070                    u100_20 0442                    u100_21 0441  
                  u101_20 044C                    u101_21 044B                    u101_25 0448  
                  u110_20 05E0                    u110_21 05DF                    u102_25 0453  
                  u111_20 05CE                    u103_20 045F                    u111_21 05CD  
                  u103_21 045E                    i1l1411 04F5                    i1l1403 04CC  
                  i1l1405 04CF                    i1l1511 03F8                    i1l1503 03E6  
                  i1l1407 04D9                    i1l1423 0350                    i1l1415 060C  
                  u112_20 05B4                    u104_20 054B                    u120_20 01D4  
                  u112_21 05B3                    i1l1601 05AD                    i1l1417 0631  
                  u104_21 054A                    i1l1521 0418                    i1l1513 03FC  
                  i1l1505 03E8                    u120_21 01D3                    i1l1409 04E1  
                  i1l1441 0379                    i1l1433 0360                    i1l1425 0355  
                  i1l1603 05B8                    i1l1419 0637                    i1l1523 041F  
                  i1l1515 0400                    i1l1507 03EE                    i1l1531 0430  
                  i1l1611 015E                    i1l1451 0399                    i1l1443 0388  
                  i1l1435 036E                    i1l1427 0359                    i1l1517 0411  
                  i1l1509 03F1                    i1l1525 0425                    i1l1541 044C  
                  i1l1533 0433                    i1l1613 0163                    i1l1381 055F  
                  i1l1445 0390                    i1l1437 0376                    i1l1429 035E  
                  i1l1455 05FE                    i1l1607 0620                    i1l1551 0529  
                  i1l1519 0417                    i1l1543 0452                    i1l1535 043A  
                  i1l1631 01A3                    i1l1623 0176                    i1l1615 0169  
                  i1l1391 049D                    i1l1447 0393                    i1l1711 0023  
                  u113_20 05B8                    u105_20 0551                    u121_20 01DA  
                  i1l1457 05FE                    u113_21 05B7                    i1l1609 05F0  
                  u105_21 0550                    i1l1561 054B                    i1l1553 052A  
                  i1l1545 0459                    i1l1537 043E                    i1l1529 042A  
                  u121_21 01D9                    i1l1641 01AE                    i1l1633 01A7  
                  i1l1625 0193                    i1l1617 0170                    i1l1385 0561  
                  i1l1393 04A0                    i1l1449 0398                    i1l1721 006A  
                  i1l1713 0024                    i1l1459 0606                    i1l1555 0538  
                  i1l1539 0442                    i1l1547 045F                    i1l1651 01DA  
                  i1l1635 01AC                    i1l1627 019B                    i1l1619 0175  
                  i1l1387 0570                    i1l1379 0553                    i1l1395 04AA  
                  i1l1571 0490                    i1l1563 0467                    i1l1731 0098  
                  i1l1723 0074                    i1l1715 0042                    i1l1557 0541  
                  i1l1661 021F                    i1l1653 01E1                    i1l1645 01CA  
                  i1l1629 019F                    i1l1581 0504                    i1l1397 04B2  
                  i1l1573 0496                    i1l1565 0469                    i1l1733 00A6  
                  i1l1725 0079                    i1l1717 0054                    i1l1741 00C9  
                  i1l1591 05D4                    i1l1559 0545                    i1l1663 0223  
                  i1l1655 01E5                    i1l1647 01CE                    i1l1583 051B  
                  i1l1575 04FB                    i1l1399 04C6                    i1l1567 0479  
                  i1l1751 0100                    i1l1743 00DB                    i1l1727 0083  
                  i1l1719 005F                    i1l1735 00AD                    u114_20 0628  
                  u122_20 022C                    u106_20 049B                    u114_21 0627  
                  i1l1593 05BD                    u122_21 022B                    i1l1657 01EA  
                  i1l1649 01D4                    i1l1665 022C                    i1l1585 0522  
                  i1l1577 04FC                    u106_21 049A                    i1l1569 0481  
                  i1l1681 059F                    i1l1753 010A                    i1l1745 00E6  
                  i1l1761 0135                    i1l1737 00B8                    i1l1729 0088  
                  i1l1595 05C2                    i1l1659 0218                    i1l1667 023E  
                  i1l1907 0188                    i1l1579 0500                    i1l1675 0592  
                  i1l1763 0140                    i1l1755 010F                    i1l1747 00F1  
                  i1l1739 00C3                    i1l1589 05CF                    i1l1597 05C6  
                  i1l1677 0593                    i1l1757 0120                    i1l1749 00FB  
                  i1l1599 05A8                    i1l1679 059B                    i1l1759 012E  
                  i1l1767 014C                    u115_20 05F7                    u123_20 023E  
                  u107_20 051B                    u115_21 05F6                    u123_21 023D  
                  u107_21 051A                    i1l1769 014F                    u116_20 05FC  
                  u108_20 0522                    u124_20 05A7                    u116_21 05FB  
                  u108_21 0521                    u124_21 05A6                    u109_20 05DB  
                  u117_20 0169                    u125_20 0042                    u109_21 05DA  
                  u117_21 0168                    u125_21 0041                    u118_20 01A3  
                  u126_20 0054                    u118_21 01A2                    u126_21 0053  
                  u119_20 01C9                    u127_20 005F                    u119_21 01C8  
                  u127_21 005E                    u119_25 01C5                    u128_20 00DB  
                  u128_21 00DA                    u129_20 00E6                    u129_21 00E5  
                  _SSPADD 0093                    _TRISC3 043B                    _TRISC4 043C  
                  _SSPCON 0014                    _SSPBUF 0013        __size_of_i2c_start 0013  
      __size_of_i2c_write 0013             recivedCMD@cmd 0071                 ??___aldiv 003D  
               ??___lwdiv 0074                 ??___lwmod 007B                    _strchr 0552  
                  _strcmp 04FA                    _strtok 034F                    _strspn 049C  
                  saved_w 007E                    token@i 0020                 ??_sprintf 0023  
        __end_of_usart_Tx 0617                 ??_strcspn 0075   __end_of__initialization 001F  
             _i2c_sendACK 0620            __pcstackCOMMON 0070            usart_TxStr@str 0071  
           __end_of_myISR 015B             __end_of_token 049C         __end_of_i2c_start 05E2  
       __end_of_i2c_write 05CF               recivedCMD@i 0072               recivedCMD@j 0073  
__size_of_usart_Interrupt 0009                   ??_myISR 002D                   ??_token 007C  
            ?_usart_TxStr 0070                __pbssBANK0 0048              usart_Tx@send 0070  
               ?_i2c_idle 0070                 ?_i2c_init 0070                 ?_i2c_read 0070  
               ?_i2c_stop 0070                __pmaintext 039B            usart_init@BAUD 0044  
              __pintentry 0004                   ?_strchr 0070                   ?_strcmp 0070  
                 ?_strtok 007A                   ?_strspn 0073                   _SSPCON2 0091  
                 _SSPSTAT 0094                __stringtab 0572                ??_i2c_idle 0070  
              ??_i2c_init 0035                ??_i2c_read 0070                ??_i2c_stop 0070  
                 ___aldiv 0243                   ___lwdiv 03E6                   ___lwmod 042A  
               ?_usart_Tx 0070                   __ptext1 02E0                   __ptext2 0243  
                 __ptext3 0617                   __ptext4 05E2                   __ptext5 0023  
                 __ptext6 0591                   __ptext7 060B                   __ptext8 0464  
                 __ptext9 034F           __size_of_strchr 0020           __size_of_strcmp 002E  
         __size_of_strtok 004C           __size_of_strspn 002F                   _lectura 004D  
                 _dpowers 0578          ___aldiv@dividend 0039                _recivedCMD 0528  
                 _sprintf 015B                   clrloop0 062A                   _strcspn 04CB  
    end_of_initialization 001F         ??_usart_Interrupt 0035                 _RCSTAbits 0018  
        ___aldiv@quotient 0040                   strcmp@r 0074                ??_usart_Tx 0070  
                 strspn@i 0077                 _PORTBbits 0006             i2c_write@dato 0070  
               _TRISBbits 0086                 _TRISCbits 0087      __size_of_usart_TxStr 0017  
               _TXSTAbits 0098                _usart_init 02E0              ?_i2c_sendACK 0070  
          __end_of_strchr 0572            __end_of_strcmp 0528            __end_of_strtok 039B  
          __end_of_strspn 04CB       start_initialization 0015               ?_recivedCMD 0070  
               _i2c_start 05CF                 _i2c_write 05BC         __size_of_i2c_idle 000D  
       __size_of_i2c_init 000E         __size_of_i2c_read 0014         __size_of_i2c_stop 000E  
                ??_strchr 0072                  ??_strcmp 0072                  ??_strtok 007B  
                ??_strspn 0075               __pbssCOMMON 007C                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK1 00A0                ?_i2c_start 0070  
              ?_i2c_write 0070               sprintf@flag 0027               sprintf@prec 0028  
             ?_usart_init 0044          ___lwdiv@dividend 0072       __size_of_recivedCMD 002A  
                ?___aldiv 0035                  ?___lwdiv 0070                  ?___lwmod 0077  
               __pstrings 0572         __size_of_usart_Tx 000C           _usart_Interrupt 0617  
        ___lwdiv@quotient 0074            __size_of_myISR 0138                  ?_sprintf 0020  
                ?_strcspn 0073            __size_of_token 0038           ___aldiv@divisor 0035  
       interrupt_function 0004           ___aldiv@counter 003E                 clear_ram0 0629  
                _PIE1bits 008C                  _PIR1bits 000C      __size_of_i2c_sendACK 0009  
             __stringbase 0577       __size_of_usart_init 006F               ??_i2c_start 0070  
             ??_i2c_write 0070                  _i2c_idle 05FE                  _i2c_init 05E2  
                _i2c_read 05A8                  _i2c_stop 05F0           _usart_init$1349 00A0  
        __size_of___aldiv 009D   __end_of_usart_Interrupt 0620          __size_of___lwdiv 0044  
        __size_of___lwmod 003A        __end_of__stringtab 0578                sprintf@val 0029  
            ??_recivedCMD 0070           ___lwdiv@divisor 0070           ___lwdiv@counter 0076  
                __ptext10 049C                  __ptext11 04CB                  __ptext20 05F0  
                __ptext12 0552                  __ptext21 05CF                  __ptext13 04FA  
                __ptext22 0620                  __ptext14 015B                  __ptext23 05A8  
                __ptext15 042A                  __ptext24 05FE                  __ptext16 03E6  
                __ptext17 0528                  __ptext18 0631                  __ptext19 05BC  
           ??_usart_TxStr 0071          __size_of_sprintf 00E8          __size_of_strcspn 002F  
           __size_of_get1 0008             __size_of_main 004B        __end_of_recivedCMD 0552  
                _usart_Tx 060B                _INTCONbits 000B                  intlevel1 0000  
               sprintf@ap 0026                 sprintf@sp 002B                 strchr@chr 0070  
        ___lwmod@dividend 0079                 strchr@ptr 0072              ??_usart_init 0048  
               strcspn@s1 0079                 strcspn@s2 0073       __end_of_usart_TxStr 05A8  
               stringcode 0572                  token@cmd 0022                  token@tok 0023  
        ?_usart_Interrupt 0070                  sprintf@c 002C                  sprintf@f 0020  
                strcmp@s1 0075                  strcmp@s2 0070           ___lwmod@divisor 0077  
         ___lwmod@counter 007B                  strcspn@i 0077                  stringdir 0572  
                stringtab 0572              ___aldiv@sign 003F        __end_of_usart_init 034F  
                strtok@s1 007B                  strtok@s2 007A                  strspn@s1 0079  
                strspn@s2 0073                  strtok@sp 007C               _SSPCON2bits 0091  
              _SSPCONbits 0014  
