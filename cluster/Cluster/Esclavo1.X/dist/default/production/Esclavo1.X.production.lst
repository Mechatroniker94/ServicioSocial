

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Oct 27 00:19:29 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F887 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  008F                     	;# 
   120  0090                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  0105                     	;# 
   139  0107                     	;# 
   140  0108                     	;# 
   141  0109                     	;# 
   142  010C                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0185                     	;# 
   148  0187                     	;# 
   149  0188                     	;# 
   150  0189                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  0087                     	;# 
   192  0088                     	;# 
   193  0089                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  008F                     	;# 
   198  0090                     	;# 
   199  0091                     	;# 
   200  0092                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0094                     	;# 
   205  0095                     	;# 
   206  0096                     	;# 
   207  0097                     	;# 
   208  0098                     	;# 
   209  0099                     	;# 
   210  009A                     	;# 
   211  009B                     	;# 
   212  009C                     	;# 
   213  009D                     	;# 
   214  009E                     	;# 
   215  009F                     	;# 
   216  0105                     	;# 
   217  0107                     	;# 
   218  0108                     	;# 
   219  0109                     	;# 
   220  010C                     	;# 
   221  010C                     	;# 
   222  010D                     	;# 
   223  010E                     	;# 
   224  010F                     	;# 
   225  0185                     	;# 
   226  0187                     	;# 
   227  0188                     	;# 
   228  0189                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231  0000                     	;# 
   232  0001                     	;# 
   233  0002                     	;# 
   234  0003                     	;# 
   235  0004                     	;# 
   236  0005                     	;# 
   237  0006                     	;# 
   238  0007                     	;# 
   239  0008                     	;# 
   240  0009                     	;# 
   241  000A                     	;# 
   242  000B                     	;# 
   243  000C                     	;# 
   244  000D                     	;# 
   245  000E                     	;# 
   246  000E                     	;# 
   247  000F                     	;# 
   248  0010                     	;# 
   249  0011                     	;# 
   250  0012                     	;# 
   251  0013                     	;# 
   252  0014                     	;# 
   253  0015                     	;# 
   254  0015                     	;# 
   255  0016                     	;# 
   256  0017                     	;# 
   257  0018                     	;# 
   258  0019                     	;# 
   259  001A                     	;# 
   260  001B                     	;# 
   261  001B                     	;# 
   262  001C                     	;# 
   263  001D                     	;# 
   264  001E                     	;# 
   265  001F                     	;# 
   266  0081                     	;# 
   267  0085                     	;# 
   268  0086                     	;# 
   269  0087                     	;# 
   270  0088                     	;# 
   271  0089                     	;# 
   272  008C                     	;# 
   273  008D                     	;# 
   274  008E                     	;# 
   275  008F                     	;# 
   276  0090                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0094                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  009F                     	;# 
   294  0105                     	;# 
   295  0107                     	;# 
   296  0108                     	;# 
   297  0109                     	;# 
   298  010C                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  010E                     	;# 
   302  010F                     	;# 
   303  0185                     	;# 
   304  0187                     	;# 
   305  0188                     	;# 
   306  0189                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309  0000                     	;# 
   310  0001                     	;# 
   311  0002                     	;# 
   312  0003                     	;# 
   313  0004                     	;# 
   314  0005                     	;# 
   315  0006                     	;# 
   316  0007                     	;# 
   317  0008                     	;# 
   318  0009                     	;# 
   319  000A                     	;# 
   320  000B                     	;# 
   321  000C                     	;# 
   322  000D                     	;# 
   323  000E                     	;# 
   324  000E                     	;# 
   325  000F                     	;# 
   326  0010                     	;# 
   327  0011                     	;# 
   328  0012                     	;# 
   329  0013                     	;# 
   330  0014                     	;# 
   331  0015                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0017                     	;# 
   335  0018                     	;# 
   336  0019                     	;# 
   337  001A                     	;# 
   338  001B                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  001D                     	;# 
   342  001E                     	;# 
   343  001F                     	;# 
   344  0081                     	;# 
   345  0085                     	;# 
   346  0086                     	;# 
   347  0087                     	;# 
   348  0088                     	;# 
   349  0089                     	;# 
   350  008C                     	;# 
   351  008D                     	;# 
   352  008E                     	;# 
   353  008F                     	;# 
   354  0090                     	;# 
   355  0091                     	;# 
   356  0092                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0093                     	;# 
   360  0094                     	;# 
   361  0095                     	;# 
   362  0096                     	;# 
   363  0097                     	;# 
   364  0098                     	;# 
   365  0099                     	;# 
   366  009A                     	;# 
   367  009B                     	;# 
   368  009C                     	;# 
   369  009D                     	;# 
   370  009E                     	;# 
   371  009F                     	;# 
   372  0105                     	;# 
   373  0107                     	;# 
   374  0108                     	;# 
   375  0109                     	;# 
   376  010C                     	;# 
   377  010C                     	;# 
   378  010D                     	;# 
   379  010E                     	;# 
   380  010F                     	;# 
   381  0185                     	;# 
   382  0187                     	;# 
   383  0188                     	;# 
   384  0189                     	;# 
   385  018C                     	;# 
   386  018D                     	;# 
   387                           
   388                           	psect	strings
   389  0578                     __pstrings:
   390  0578                     stringtab:
   391  0578                     __stringtab:
   392  0578                     stringcode:	
   393                           ;	String table - string pointers are 1 byte each
   394                           
   395  0578                     stringdir:
   396  0578  3005               	movlw	high stringdir
   397  0579  008A               	movwf	10
   398  057A  0804               	movf	4,w
   399  057B  0A84               	incf	4,f
   400  057C  0782               	addwf	2,f
   401  057D                     __stringbase:
   402  057D  3400               	retlw	0
   403  057E                     __end_of__stringtab:
   404  057E                     _dpowers:
   405  057E  3401               	retlw	1
   406  057F  3400               	retlw	0
   407  0580  340A               	retlw	10
   408  0581  3400               	retlw	0
   409  0582  3464               	retlw	100
   410  0583  3400               	retlw	0
   411  0584  34E8               	retlw	232
   412  0585  3403               	retlw	3
   413  0586  3410               	retlw	16
   414  0587  3427               	retlw	39
   415  0588                     __end_of_dpowers:
   416  0006                     _PORTBbits	set	6
   417  0006                     _PORTB	set	6
   418  0008                     _PORTD	set	8
   419  001A                     _RCREG	set	26
   420  0019                     _TXREG	set	25
   421  0018                     _RCSTAbits	set	24
   422  000C                     _PIR1bits	set	12
   423  000B                     _INTCONbits	set	11
   424  0014                     _SSPCONbits	set	20
   425  0013                     _SSPBUF	set	19
   426  0014                     _SSPCON	set	20
   427  0063                     _SSPIF	set	99
   428  0086                     _TRISB	set	134
   429  0088                     _TRISD	set	136
   430  0098                     _TXSTAbits	set	152
   431  0099                     _SPBRG	set	153
   432  008C                     _PIE1bits	set	140
   433  0086                     _TRISBbits	set	134
   434  0094                     _SSPSTATbits	set	148
   435  0091                     _SSPCON2bits	set	145
   436  0091                     _SSPCON2	set	145
   437  0094                     _SSPSTAT	set	148
   438  0093                     _SSPADD	set	147
   439  0087                     _TRISCbits	set	135
   440  043C                     _TRISC4	set	1084
   441  043B                     _TRISC3	set	1083
   442  0588                     STR_5:
   443  0588  3425               	retlw	37	;'%'
   444  0589  3464               	retlw	100	;'d'
   445  058A  340A               	retlw	10
   446  058B  3400               	retlw	0
   447  058C                     STR_4:
   448  058C  3450               	retlw	80	;'P'
   449  058D  3431               	retlw	49	;'1'
   450  058E  3400               	retlw	0
   451  058F                     STR_3:
   452  058F  344D               	retlw	77	;'M'
   453  0590  3432               	retlw	50	;'2'
   454  0591  3400               	retlw	0
   455  0592                     STR_6:
   456  0592  3450               	retlw	80	;'P'
   457  0593  3432               	retlw	50	;'2'
   458  0594  3400               	retlw	0
   459  0595                     STR_1:
   460  0595  342C               	retlw	44	;','
   461  0596  3400               	retlw	0
   462  0588                     
   463                           	psect	cinit
   464  0015                     start_initialization:	
   465                           ; #config settings
   466                           
   467  0015                     __initialization:
   468                           
   469                           ; Clear objects allocated to COMMON
   470  0015  01FC               	clrf	__pbssCOMMON& (0+127)
   471                           
   472                           ; Clear objects allocated to BANK0
   473  0016  1383               	bcf	3,7	;select IRP bank0
   474  0017  3048               	movlw	low __pbssBANK0
   475  0018  0084               	movwf	4
   476  0019  3059               	movlw	low (__pbssBANK0+17)
   477  001A  120A  118A  262F  120A  118A  	fcall	clear_ram0
   478  001F                     end_of_initialization:	
   479                           ;End of C runtime variable initialization code
   480                           
   481  001F                     __end_of__initialization:
   482  001F  0183               	clrf	3
   483  0020  120A  118A  2BA1   	ljmp	_main	;jump to C main() function
   484                           
   485                           	psect	bssCOMMON
   486  007C                     __pbssCOMMON:
   487  007C                     strtok@sp:
   488  007C                     	ds	1
   489                           
   490                           	psect	bssBANK0
   491  0048                     __pbssBANK0:
   492  0048                     _dir:
   493  0048                     	ds	3
   494  004B                     _res:
   495  004B                     	ds	2
   496  004D                     _lectura:
   497  004D                     	ds	2
   498  004F                     _data:
   499  004F                     	ds	10
   500                           
   501                           	psect	clrtext
   502  062F                     clear_ram0:	
   503                           ;	Called with FSR containing the base address, and
   504                           ;	W with the last address+1
   505                           
   506  062F  0064               	clrwdt	;clear the watchdog before getting into this loop
   507  0630                     clrloop0:
   508  0630  0180               	clrf	0	;clear RAM location pointed to by FSR
   509  0631  0A84               	incf	4,f	;increment pointer
   510  0632  0604               	xorwf	4,w	;XOR with final address
   511  0633  1903               	btfsc	3,2	;have we reached the end yet?
   512  0634  3400               	retlw	0	;all done for this memory range, return
   513  0635  0604               	xorwf	4,w	;XOR again to restore value
   514  0636  2E30               	goto	clrloop0	;do the next byte
   515                           
   516                           	psect	cstackBANK1
   517  00A0                     __pcstackBANK1:
   518  00A0                     _usart_init$1345:
   519                           
   520                           ; 4 bytes @ 0x0
   521  00A0                     	ds	4
   522  00A4                     ??_main:
   523                           
   524                           ; 1 bytes @ 0x4
   525  00A4                     	ds	3
   526                           
   527                           	psect	cstackCOMMON
   528  0070                     __pcstackCOMMON:
   529  0070                     ?_i2c_idle:
   530  0070                     ??_i2c_idle:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_get1:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ??_get1:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?_strchr:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_i2c_init:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_i2c_start:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ??_i2c_start:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_i2c_stop:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ??_i2c_stop:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_i2c_read:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ??_i2c_read:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ?_i2c_write:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ??_i2c_write:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ?_i2c_sendACK:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ??_i2c_sendACK:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_usart_Tx:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ??_usart_Tx:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_usart_TxStr:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_usart_Interrupt:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_recivedCMD:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ??_recivedCMD:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_token:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_myISR:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_main:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_strcmp:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?___lwdiv:	
   606                           ; 2 bytes @ 0x0
   607                           
   608  0070                     i2c_write@dato:	
   609                           ; 2 bytes @ 0x0
   610                           
   611  0070                     usart_Tx@send:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     strcmp@s2:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ___lwdiv@divisor:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     strchr@chr:	
   621                           ; 2 bytes @ 0x0
   622                           
   623                           
   624                           ; 2 bytes @ 0x0
   625  0070                     	ds	1
   626  0071                     ??_usart_TxStr:
   627  0071                     usart_TxStr@str:	
   628                           ; 1 bytes @ 0x1
   629                           
   630  0071                     recivedCMD@cmd:	
   631                           ; 1 bytes @ 0x1
   632                           
   633                           
   634                           ; 1 bytes @ 0x1
   635  0071                     	ds	1
   636  0072                     ??_strcmp:
   637  0072                     ??_strchr:	
   638                           ; 1 bytes @ 0x2
   639                           
   640  0072                     recivedCMD@i:	
   641                           ; 1 bytes @ 0x2
   642                           
   643  0072                     strchr@ptr:	
   644                           ; 1 bytes @ 0x2
   645                           
   646  0072                     ___lwdiv@dividend:	
   647                           ; 1 bytes @ 0x2
   648                           
   649                           
   650                           ; 2 bytes @ 0x2
   651  0072                     	ds	1
   652  0073                     ?_strspn:
   653  0073                     ?_strcspn:	
   654                           ; 2 bytes @ 0x3
   655                           
   656  0073                     recivedCMD@j:	
   657                           ; 2 bytes @ 0x3
   658                           
   659  0073                     strcspn@s2:	
   660                           ; 1 bytes @ 0x3
   661                           
   662  0073                     strspn@s2:	
   663                           ; 1 bytes @ 0x3
   664                           
   665                           
   666                           ; 1 bytes @ 0x3
   667  0073                     	ds	1
   668  0074                     ??___lwdiv:
   669  0074                     strcmp@r:	
   670                           ; 1 bytes @ 0x4
   671                           
   672  0074                     ___lwdiv@quotient:	
   673                           ; 1 bytes @ 0x4
   674                           
   675                           
   676                           ; 2 bytes @ 0x4
   677  0074                     	ds	1
   678  0075                     ??_strspn:
   679  0075                     ??_strcspn:	
   680                           ; 1 bytes @ 0x5
   681                           
   682  0075                     strcmp@s1:	
   683                           ; 1 bytes @ 0x5
   684                           
   685                           
   686                           ; 1 bytes @ 0x5
   687  0075                     	ds	1
   688  0076                     ___lwdiv@counter:
   689                           
   690                           ; 1 bytes @ 0x6
   691  0076                     	ds	1
   692  0077                     ?___lwmod:
   693  0077                     ___lwmod@divisor:	
   694                           ; 2 bytes @ 0x7
   695                           
   696  0077                     strcspn@i:	
   697                           ; 2 bytes @ 0x7
   698                           
   699  0077                     strspn@i:	
   700                           ; 2 bytes @ 0x7
   701                           
   702                           
   703                           ; 2 bytes @ 0x7
   704  0077                     	ds	2
   705  0079                     strcspn@s1:
   706  0079                     strspn@s1:	
   707                           ; 1 bytes @ 0x9
   708                           
   709  0079                     ___lwmod@dividend:	
   710                           ; 1 bytes @ 0x9
   711                           
   712                           
   713                           ; 2 bytes @ 0x9
   714  0079                     	ds	1
   715  007A                     ?_strtok:
   716  007A                     strtok@s2:	
   717                           ; 1 bytes @ 0xA
   718                           
   719                           
   720                           ; 1 bytes @ 0xA
   721  007A                     	ds	1
   722  007B                     ??_strtok:
   723  007B                     ??___lwmod:	
   724                           ; 1 bytes @ 0xB
   725                           
   726  007B                     ___lwmod@counter:	
   727                           ; 1 bytes @ 0xB
   728                           
   729  007B                     strtok@s1:	
   730                           ; 1 bytes @ 0xB
   731                           
   732                           
   733                           ; 1 bytes @ 0xB
   734  007B                     	ds	1
   735  007C                     ??_token:
   736                           
   737                           	psect	cstackBANK0
   738  0020                     __pcstackBANK0:	
   739                           ; 1 bytes @ 0xC
   740                           
   741  0020                     ?_sprintf:
   742  0020                     sprintf@f:	
   743                           ; 2 bytes @ 0x0
   744                           
   745  0020                     token@i:	
   746                           ; 1 bytes @ 0x0
   747                           
   748                           
   749                           ; 2 bytes @ 0x0
   750  0020                     	ds	2
   751  0022                     token@cmd:
   752                           
   753                           ; 1 bytes @ 0x2
   754  0022                     	ds	1
   755  0023                     ??_sprintf:
   756  0023                     token@tok:	
   757                           ; 1 bytes @ 0x3
   758                           
   759                           
   760                           ; 1 bytes @ 0x3
   761  0023                     	ds	3
   762  0026                     sprintf@ap:
   763                           
   764                           ; 1 bytes @ 0x6
   765  0026                     	ds	1
   766  0027                     sprintf@flag:
   767                           
   768                           ; 1 bytes @ 0x7
   769  0027                     	ds	1
   770  0028                     sprintf@prec:
   771                           
   772                           ; 1 bytes @ 0x8
   773  0028                     	ds	1
   774  0029                     sprintf@val:
   775                           
   776                           ; 2 bytes @ 0x9
   777  0029                     	ds	2
   778  002B                     sprintf@sp:
   779                           
   780                           ; 1 bytes @ 0xB
   781  002B                     	ds	1
   782  002C                     sprintf@c:
   783                           
   784                           ; 1 bytes @ 0xC
   785  002C                     	ds	1
   786  002D                     ??_myISR:
   787                           
   788                           ; 1 bytes @ 0xD
   789  002D                     	ds	8
   790  0035                     ??_i2c_init:
   791  0035                     ??_usart_Interrupt:	
   792                           ; 1 bytes @ 0x15
   793                           
   794  0035                     ?___aldiv:	
   795                           ; 1 bytes @ 0x15
   796                           
   797  0035                     ___aldiv@divisor:	
   798                           ; 4 bytes @ 0x15
   799                           
   800                           
   801                           ; 4 bytes @ 0x15
   802  0035                     	ds	4
   803  0039                     ___aldiv@dividend:
   804                           
   805                           ; 4 bytes @ 0x19
   806  0039                     	ds	4
   807  003D                     ??___aldiv:
   808                           
   809                           ; 1 bytes @ 0x1D
   810  003D                     	ds	1
   811  003E                     ___aldiv@counter:
   812                           
   813                           ; 1 bytes @ 0x1E
   814  003E                     	ds	1
   815  003F                     ___aldiv@sign:
   816                           
   817                           ; 1 bytes @ 0x1F
   818  003F                     	ds	1
   819  0040                     ___aldiv@quotient:
   820                           
   821                           ; 4 bytes @ 0x20
   822  0040                     	ds	4
   823  0044                     ?_usart_init:
   824  0044                     usart_init@BAUD:	
   825                           ; 1 bytes @ 0x24
   826                           
   827                           
   828                           ; 4 bytes @ 0x24
   829  0044                     	ds	4
   830  0048                     ??_usart_init:
   831                           
   832                           	psect	maintext
   833  03A1                     __pmaintext:	
   834                           ; 1 bytes @ 0x28
   835 ;;
   836 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   837 ;;
   838 ;; *************** function _main *****************
   839 ;; Defined at:
   840 ;;		line 61 in file "main.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;		None
   843 ;; Auto vars:     Size  Location     Type
   844 ;;		None
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : B00/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   854 ;;      Params:         0       0       0       0       0
   855 ;;      Locals:         0       0       0       0       0
   856 ;;      Temps:          0       0       3       0       0
   857 ;;      Totals:         0       0       3       0       0
   858 ;;Total ram usage:        3 bytes
   859 ;; Hardware stack levels required when called:    8
   860 ;; This function calls:
   861 ;;		_i2c_init
   862 ;;		_usart_Interrupt
   863 ;;		_usart_init
   864 ;; This function is called by:
   865 ;;		Startup code after reset
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           
   870                           ;psect for function _main
   871  03A1                     _main:
   872  03A1                     l1885:	
   873                           ;incstack = 0
   874                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   875                           
   876                           
   877                           ;main.c: 62:     TRISD = 0x00;
   878  03A1  1683               	bsf	3,5	;RP0=1, select bank1
   879  03A2  1303               	bcf	3,6	;RP1=0, select bank1
   880  03A3  0188               	clrf	8	;volatile
   881                           
   882                           ;main.c: 63:     PORTD = 0x00;
   883  03A4  1283               	bcf	3,5	;RP0=0, select bank0
   884  03A5  1303               	bcf	3,6	;RP1=0, select bank0
   885  03A6  0188               	clrf	8	;volatile
   886                           
   887                           ;main.c: 64:     TRISB = 0x00;
   888  03A7  1683               	bsf	3,5	;RP0=1, select bank1
   889  03A8  1303               	bcf	3,6	;RP1=0, select bank1
   890  03A9  0186               	clrf	6	;volatile
   891                           
   892                           ;main.c: 65:     PORTB = 0x00;
   893  03AA  1283               	bcf	3,5	;RP0=0, select bank0
   894  03AB  1303               	bcf	3,6	;RP1=0, select bank0
   895  03AC  0186               	clrf	6	;volatile
   896  03AD                     l1887:
   897                           
   898                           ;main.c: 66:     usart_init(9600);
   899  03AD  3000               	movlw	0
   900  03AE  00C7               	movwf	usart_init@BAUD+3
   901  03AF  3000               	movlw	0
   902  03B0  00C6               	movwf	usart_init@BAUD+2
   903  03B1  3025               	movlw	37
   904  03B2  00C5               	movwf	usart_init@BAUD+1
   905  03B3  3080               	movlw	128
   906  03B4  00C4               	movwf	usart_init@BAUD
   907  03B5  120A  118A  22E6  120A  118A  	fcall	_usart_init
   908  03BA                     l1889:
   909                           
   910                           ;main.c: 67:     usart_Interrupt();
   911  03BA  120A  118A  261D  120A  118A  	fcall	_usart_Interrupt
   912  03BF                     l1891:
   913                           
   914                           ;main.c: 68:     i2c_init();
   915  03BF  120A  118A  25E8  120A  118A  	fcall	_i2c_init
   916  03C4                     l1893:
   917                           
   918                           ;main.c: 71:         PORTBbits.RB0 = 1;
   919  03C4  1283               	bcf	3,5	;RP0=0, select bank0
   920  03C5  1303               	bcf	3,6	;RP1=0, select bank0
   921  03C6  1406               	bsf	6,0	;volatile
   922  03C7                     l1895:
   923                           
   924                           ;main.c: 72:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   925  03C7  301A               	movlw	26
   926  03C8  1683               	bsf	3,5	;RP0=1, select bank1
   927  03C9  1303               	bcf	3,6	;RP1=0, select bank1
   928  03CA  00A6               	movwf	(??_main^(0+128)+2)
   929  03CB  305E               	movlw	94
   930  03CC  00A5               	movwf	(??_main^(0+128)+1)
   931  03CD  306D               	movlw	109
   932  03CE  00A4               	movwf	??_main^(0+128)
   933  03CF                     u1427:
   934  03CF  0BA4               	decfsz	??_main^(0+128),f
   935  03D0  2BCF               	goto	u1427
   936  03D1  0BA5               	decfsz	(??_main^(0+128)+1),f
   937  03D2  2BCF               	goto	u1427
   938  03D3  0BA6               	decfsz	(??_main^(0+128)+2),f
   939  03D4  2BCF               	goto	u1427
   940  03D5  2BD6               	nop2
   941  03D6                     l1897:
   942                           
   943                           ;main.c: 74:         PORTBbits.RB0 = 0;
   944  03D6  1283               	bcf	3,5	;RP0=0, select bank0
   945  03D7  1303               	bcf	3,6	;RP1=0, select bank0
   946  03D8  1006               	bcf	6,0	;volatile
   947  03D9                     l1899:
   948                           
   949                           ;main.c: 75:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   950  03D9  301A               	movlw	26
   951  03DA  1683               	bsf	3,5	;RP0=1, select bank1
   952  03DB  1303               	bcf	3,6	;RP1=0, select bank1
   953  03DC  00A6               	movwf	(??_main^(0+128)+2)
   954  03DD  305E               	movlw	94
   955  03DE  00A5               	movwf	(??_main^(0+128)+1)
   956  03DF  306D               	movlw	109
   957  03E0  00A4               	movwf	??_main^(0+128)
   958  03E1                     u1437:
   959  03E1  0BA4               	decfsz	??_main^(0+128),f
   960  03E2  2BE1               	goto	u1437
   961  03E3  0BA5               	decfsz	(??_main^(0+128)+1),f
   962  03E4  2BE1               	goto	u1437
   963  03E5  0BA6               	decfsz	(??_main^(0+128)+2),f
   964  03E6  2BE1               	goto	u1437
   965  03E7  2BE8               	nop2
   966  03E8  2BC4               	goto	l1893
   967  03E9  120A  118A  2812   	ljmp	start
   968  03EC                     __end_of_main:
   969                           
   970                           	psect	text1
   971  02E6                     __ptext1:	
   972 ;; *************** function _usart_init *****************
   973 ;; Defined at:
   974 ;;		line 4 in file "usart.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;  BAUD            4   36[BANK0 ] long 
   977 ;; Auto vars:     Size  Location     Type
   978 ;;		None
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   988 ;;      Params:         0       4       0       0       0
   989 ;;      Locals:         0       0       4       0       0
   990 ;;      Temps:          0       0       0       0       0
   991 ;;      Totals:         0       4       4       0       0
   992 ;;Total ram usage:        8 bytes
   993 ;; Hardware stack levels used:    1
   994 ;; Hardware stack levels required when called:    7
   995 ;; This function calls:
   996 ;;		___aldiv
   997 ;; This function is called by:
   998 ;;		_main
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           
  1003                           ;psect for function _usart_init
  1004  02E6                     _usart_init:
  1005  02E6                     l1867:	
  1006                           ;incstack = 0
  1007                           ; Regs used in _usart_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1008                           
  1009                           
  1010                           ;usart.c: 6:     TRISBbits.TRISB1 = 1;
  1011  02E6  1683               	bsf	3,5	;RP0=1, select bank1
  1012  02E7  1303               	bcf	3,6	;RP1=0, select bank1
  1013  02E8  1486               	bsf	6,1	;volatile
  1014                           
  1015                           ;usart.c: 7:     TRISBbits.TRISB2 = 0;
  1016  02E9  1106               	bcf	6,2	;volatile
  1017  02EA                     l1869:
  1018                           
  1019                           ;usart.c: 8:     SPBRG = (unsigned char)(((20000000/BAUD)/64) - 1);
  1020  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  1021  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  1022  02EC  0847               	movf	usart_init@BAUD+3,w
  1023  02ED  00B8               	movwf	___aldiv@divisor+3
  1024  02EE  0846               	movf	usart_init@BAUD+2,w
  1025  02EF  00B7               	movwf	___aldiv@divisor+2
  1026  02F0  0845               	movf	usart_init@BAUD+1,w
  1027  02F1  00B6               	movwf	___aldiv@divisor+1
  1028  02F2  0844               	movf	usart_init@BAUD,w
  1029  02F3  00B5               	movwf	___aldiv@divisor
  1030  02F4  3001               	movlw	1
  1031  02F5  00BC               	movwf	___aldiv@dividend+3
  1032  02F6  3031               	movlw	49
  1033  02F7  00BB               	movwf	___aldiv@dividend+2
  1034  02F8  302D               	movlw	45
  1035  02F9  00BA               	movwf	___aldiv@dividend+1
  1036  02FA  3000               	movlw	0
  1037  02FB  00B9               	movwf	___aldiv@dividend
  1038  02FC  120A  118A  2249  120A  118A  	fcall	___aldiv
  1039  0301  1283               	bcf	3,5	;RP0=0, select bank0
  1040  0302  1303               	bcf	3,6	;RP1=0, select bank0
  1041  0303  0838               	movf	?___aldiv+3,w
  1042  0304  1683               	bsf	3,5	;RP0=1, select bank1
  1043  0305  1303               	bcf	3,6	;RP1=0, select bank1
  1044  0306  00A3               	movwf	(_usart_init$1345+3)^(0+128)
  1045  0307  1283               	bcf	3,5	;RP0=0, select bank0
  1046  0308  1303               	bcf	3,6	;RP1=0, select bank0
  1047  0309  0837               	movf	?___aldiv+2,w
  1048  030A  1683               	bsf	3,5	;RP0=1, select bank1
  1049  030B  1303               	bcf	3,6	;RP1=0, select bank1
  1050  030C  00A2               	movwf	(_usart_init$1345+2)^(0+128)
  1051  030D  1283               	bcf	3,5	;RP0=0, select bank0
  1052  030E  1303               	bcf	3,6	;RP1=0, select bank0
  1053  030F  0836               	movf	?___aldiv+1,w
  1054  0310  1683               	bsf	3,5	;RP0=1, select bank1
  1055  0311  1303               	bcf	3,6	;RP1=0, select bank1
  1056  0312  00A1               	movwf	(_usart_init$1345+1)^(0+128)
  1057  0313  1283               	bcf	3,5	;RP0=0, select bank0
  1058  0314  1303               	bcf	3,6	;RP1=0, select bank0
  1059  0315  0835               	movf	?___aldiv,w
  1060  0316  1683               	bsf	3,5	;RP0=1, select bank1
  1061  0317  1303               	bcf	3,6	;RP1=0, select bank1
  1062  0318  00A0               	movwf	_usart_init$1345^(0+128)
  1063                           
  1064                           ;usart.c: 8:     SPBRG = (unsigned char)(((20000000/BAUD)/64) - 1);
  1065  0319  3000               	movlw	0
  1066  031A  1283               	bcf	3,5	;RP0=0, select bank0
  1067  031B  1303               	bcf	3,6	;RP1=0, select bank0
  1068  031C  00B8               	movwf	___aldiv@divisor+3
  1069  031D  3000               	movlw	0
  1070  031E  00B7               	movwf	___aldiv@divisor+2
  1071  031F  3000               	movlw	0
  1072  0320  00B6               	movwf	___aldiv@divisor+1
  1073  0321  3040               	movlw	64
  1074  0322  00B5               	movwf	___aldiv@divisor
  1075  0323  1683               	bsf	3,5	;RP0=1, select bank1
  1076  0324  1303               	bcf	3,6	;RP1=0, select bank1
  1077  0325  0823               	movf	(_usart_init$1345+3)^(0+128),w
  1078  0326  1283               	bcf	3,5	;RP0=0, select bank0
  1079  0327  1303               	bcf	3,6	;RP1=0, select bank0
  1080  0328  00BC               	movwf	___aldiv@dividend+3
  1081  0329  1683               	bsf	3,5	;RP0=1, select bank1
  1082  032A  1303               	bcf	3,6	;RP1=0, select bank1
  1083  032B  0822               	movf	(_usart_init$1345+2)^(0+128),w
  1084  032C  1283               	bcf	3,5	;RP0=0, select bank0
  1085  032D  1303               	bcf	3,6	;RP1=0, select bank0
  1086  032E  00BB               	movwf	___aldiv@dividend+2
  1087  032F  1683               	bsf	3,5	;RP0=1, select bank1
  1088  0330  1303               	bcf	3,6	;RP1=0, select bank1
  1089  0331  0821               	movf	(_usart_init$1345+1)^(0+128),w
  1090  0332  1283               	bcf	3,5	;RP0=0, select bank0
  1091  0333  1303               	bcf	3,6	;RP1=0, select bank0
  1092  0334  00BA               	movwf	___aldiv@dividend+1
  1093  0335  1683               	bsf	3,5	;RP0=1, select bank1
  1094  0336  1303               	bcf	3,6	;RP1=0, select bank1
  1095  0337  0820               	movf	_usart_init$1345^(0+128),w
  1096  0338  1283               	bcf	3,5	;RP0=0, select bank0
  1097  0339  1303               	bcf	3,6	;RP1=0, select bank0
  1098  033A  00B9               	movwf	___aldiv@dividend
  1099  033B  120A  118A  2249  120A  118A  	fcall	___aldiv
  1100  0340  1283               	bcf	3,5	;RP0=0, select bank0
  1101  0341  1303               	bcf	3,6	;RP1=0, select bank0
  1102  0342  0835               	movf	?___aldiv,w
  1103  0343  3EFF               	addlw	255
  1104  0344  1683               	bsf	3,5	;RP0=1, select bank1
  1105  0345  1303               	bcf	3,6	;RP1=0, select bank1
  1106  0346  0099               	movwf	25	;volatile
  1107  0347                     l1871:
  1108                           
  1109                           ;usart.c: 13:     RCSTAbits.SPEN = 1;
  1110  0347  1283               	bcf	3,5	;RP0=0, select bank0
  1111  0348  1303               	bcf	3,6	;RP1=0, select bank0
  1112  0349  1798               	bsf	24,7	;volatile
  1113  034A                     l1873:
  1114                           
  1115                           ;usart.c: 14:     TXSTAbits.SYNC = 0;
  1116  034A  1683               	bsf	3,5	;RP0=1, select bank1
  1117  034B  1303               	bcf	3,6	;RP1=0, select bank1
  1118  034C  1218               	bcf	24,4	;volatile
  1119  034D                     l1875:
  1120                           
  1121                           ;usart.c: 15:     TXSTAbits.TX9 = 0;
  1122  034D  1318               	bcf	24,6	;volatile
  1123  034E                     l1877:
  1124                           
  1125                           ;usart.c: 16:     TXSTAbits.TXEN = 1;
  1126  034E  1698               	bsf	24,5	;volatile
  1127  034F                     l1879:
  1128                           
  1129                           ;usart.c: 17:     RCSTAbits.RX9 = 0;
  1130  034F  1283               	bcf	3,5	;RP0=0, select bank0
  1131  0350  1303               	bcf	3,6	;RP1=0, select bank0
  1132  0351  1318               	bcf	24,6	;volatile
  1133  0352                     l1881:
  1134                           
  1135                           ;usart.c: 18:     RCSTAbits.CREN = 1;
  1136  0352  1618               	bsf	24,4	;volatile
  1137  0353                     l1883:
  1138                           
  1139                           ;usart.c: 19:     RCSTAbits.SPEN = 1;
  1140  0353  1798               	bsf	24,7	;volatile
  1141  0354                     l137:
  1142  0354  0008               	return
  1143  0355                     __end_of_usart_init:
  1144                           
  1145                           	psect	text2
  1146  0249                     __ptext2:	
  1147 ;; *************** function ___aldiv *****************
  1148 ;; Defined at:
  1149 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\aldiv.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;  divisor         4   21[BANK0 ] long 
  1152 ;;  dividend        4   25[BANK0 ] long 
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;  quotient        4   32[BANK0 ] long 
  1155 ;;  sign            1   31[BANK0 ] unsigned char 
  1156 ;;  counter         1   30[BANK0 ] unsigned char 
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  4   21[BANK0 ] long 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2, status,0, btemp+1
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1166 ;;      Params:         0       8       0       0       0
  1167 ;;      Locals:         0       6       0       0       0
  1168 ;;      Temps:          0       1       0       0       0
  1169 ;;      Totals:         0      15       0       0       0
  1170 ;;Total ram usage:       15 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; Hardware stack levels required when called:    6
  1173 ;; This function calls:
  1174 ;;		Nothing
  1175 ;; This function is called by:
  1176 ;;		_usart_init
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           
  1181                           ;psect for function ___aldiv
  1182  0249                     ___aldiv:
  1183  0249                     l1825:	
  1184                           ;incstack = 0
  1185                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
  1186                           
  1187  0249  1283               	bcf	3,5	;RP0=0, select bank0
  1188  024A  1303               	bcf	3,6	;RP1=0, select bank0
  1189  024B  01BF               	clrf	___aldiv@sign
  1190  024C                     l1827:
  1191  024C  1FB8               	btfss	___aldiv@divisor+3,7
  1192  024D  2A4F               	goto	u1321
  1193  024E  2A50               	goto	u1320
  1194  024F                     u1321:
  1195  024F  2A5D               	goto	l426
  1196  0250                     u1320:
  1197  0250                     l1829:
  1198  0250  09B5               	comf	___aldiv@divisor,f
  1199  0251  09B6               	comf	___aldiv@divisor+1,f
  1200  0252  09B7               	comf	___aldiv@divisor+2,f
  1201  0253  09B8               	comf	___aldiv@divisor+3,f
  1202  0254  0AB5               	incf	___aldiv@divisor,f
  1203  0255  1903               	skipnz
  1204  0256  0AB6               	incf	___aldiv@divisor+1,f
  1205  0257  1903               	skipnz
  1206  0258  0AB7               	incf	___aldiv@divisor+2,f
  1207  0259  1903               	skipnz
  1208  025A  0AB8               	incf	___aldiv@divisor+3,f
  1209  025B  01BF               	clrf	___aldiv@sign
  1210  025C  0ABF               	incf	___aldiv@sign,f
  1211  025D                     l426:
  1212  025D  1FBC               	btfss	___aldiv@dividend+3,7
  1213  025E  2A60               	goto	u1331
  1214  025F  2A61               	goto	u1330
  1215  0260                     u1331:
  1216  0260  2A70               	goto	l1835
  1217  0261                     u1330:
  1218  0261                     l1831:
  1219  0261  09B9               	comf	___aldiv@dividend,f
  1220  0262  09BA               	comf	___aldiv@dividend+1,f
  1221  0263  09BB               	comf	___aldiv@dividend+2,f
  1222  0264  09BC               	comf	___aldiv@dividend+3,f
  1223  0265  0AB9               	incf	___aldiv@dividend,f
  1224  0266  1903               	skipnz
  1225  0267  0ABA               	incf	___aldiv@dividend+1,f
  1226  0268  1903               	skipnz
  1227  0269  0ABB               	incf	___aldiv@dividend+2,f
  1228  026A  1903               	skipnz
  1229  026B  0ABC               	incf	___aldiv@dividend+3,f
  1230  026C                     l1833:
  1231  026C  3001               	movlw	1
  1232  026D  00FF               	movwf	btemp+1
  1233  026E  087F               	movf	btemp+1,w
  1234  026F  06BF               	xorwf	___aldiv@sign,f
  1235  0270                     l1835:
  1236  0270  3000               	movlw	0
  1237  0271  00C3               	movwf	___aldiv@quotient+3
  1238  0272  3000               	movlw	0
  1239  0273  00C2               	movwf	___aldiv@quotient+2
  1240  0274  3000               	movlw	0
  1241  0275  00C1               	movwf	___aldiv@quotient+1
  1242  0276  3000               	movlw	0
  1243  0277  00C0               	movwf	___aldiv@quotient
  1244  0278                     l1837:
  1245  0278  0838               	movf	___aldiv@divisor+3,w
  1246  0279  0437               	iorwf	___aldiv@divisor+2,w
  1247  027A  0436               	iorwf	___aldiv@divisor+1,w
  1248  027B  0435               	iorwf	___aldiv@divisor,w
  1249  027C  1903               	skipnz
  1250  027D  2A7F               	goto	u1341
  1251  027E  2A80               	goto	u1340
  1252  027F                     u1341:
  1253  027F  2ACD               	goto	l1859
  1254  0280                     u1340:
  1255  0280                     l1839:
  1256  0280  01BE               	clrf	___aldiv@counter
  1257  0281  0ABE               	incf	___aldiv@counter,f
  1258  0282  2A90               	goto	l1845
  1259  0283                     l1841:
  1260  0283  3001               	movlw	1
  1261  0284  00BD               	movwf	??___aldiv
  1262  0285                     u1355:
  1263  0285  1003               	clrc
  1264  0286  0DB5               	rlf	___aldiv@divisor,f
  1265  0287  0DB6               	rlf	___aldiv@divisor+1,f
  1266  0288  0DB7               	rlf	___aldiv@divisor+2,f
  1267  0289  0DB8               	rlf	___aldiv@divisor+3,f
  1268  028A  0BBD               	decfsz	??___aldiv,f
  1269  028B  2A85               	goto	u1355
  1270  028C                     l1843:
  1271  028C  3001               	movlw	1
  1272  028D  00FF               	movwf	btemp+1
  1273  028E  087F               	movf	btemp+1,w
  1274  028F  07BE               	addwf	___aldiv@counter,f
  1275  0290                     l1845:
  1276  0290  1FB8               	btfss	___aldiv@divisor+3,7
  1277  0291  2A93               	goto	u1361
  1278  0292  2A94               	goto	u1360
  1279  0293                     u1361:
  1280  0293  2A83               	goto	l1841
  1281  0294                     u1360:
  1282  0294                     l1847:
  1283  0294  3001               	movlw	1
  1284  0295  00BD               	movwf	??___aldiv
  1285  0296                     u1375:
  1286  0296  1003               	clrc
  1287  0297  0DC0               	rlf	___aldiv@quotient,f
  1288  0298  0DC1               	rlf	___aldiv@quotient+1,f
  1289  0299  0DC2               	rlf	___aldiv@quotient+2,f
  1290  029A  0DC3               	rlf	___aldiv@quotient+3,f
  1291  029B  0BBD               	decfsz	??___aldiv,f
  1292  029C  2A96               	goto	u1375
  1293  029D                     l1849:
  1294  029D  0838               	movf	___aldiv@divisor+3,w
  1295  029E  023C               	subwf	___aldiv@dividend+3,w
  1296  029F  1D03               	skipz
  1297  02A0  2AAB               	goto	u1385
  1298  02A1  0837               	movf	___aldiv@divisor+2,w
  1299  02A2  023B               	subwf	___aldiv@dividend+2,w
  1300  02A3  1D03               	skipz
  1301  02A4  2AAB               	goto	u1385
  1302  02A5  0836               	movf	___aldiv@divisor+1,w
  1303  02A6  023A               	subwf	___aldiv@dividend+1,w
  1304  02A7  1D03               	skipz
  1305  02A8  2AAB               	goto	u1385
  1306  02A9  0835               	movf	___aldiv@divisor,w
  1307  02AA  0239               	subwf	___aldiv@dividend,w
  1308  02AB                     u1385:
  1309  02AB  1C03               	skipc
  1310  02AC  2AAE               	goto	u1381
  1311  02AD  2AAF               	goto	u1380
  1312  02AE                     u1381:
  1313  02AE  2ABE               	goto	l1855
  1314  02AF                     u1380:
  1315  02AF                     l1851:
  1316  02AF  0835               	movf	___aldiv@divisor,w
  1317  02B0  02B9               	subwf	___aldiv@dividend,f
  1318  02B1  0836               	movf	___aldiv@divisor+1,w
  1319  02B2  1C03               	skipc
  1320  02B3  0F36               	incfsz	___aldiv@divisor+1,w
  1321  02B4  02BA               	subwf	___aldiv@dividend+1,f
  1322  02B5  0837               	movf	___aldiv@divisor+2,w
  1323  02B6  1C03               	skipc
  1324  02B7  0F37               	incfsz	___aldiv@divisor+2,w
  1325  02B8  02BB               	subwf	___aldiv@dividend+2,f
  1326  02B9  0838               	movf	___aldiv@divisor+3,w
  1327  02BA  1C03               	skipc
  1328  02BB  0F38               	incfsz	___aldiv@divisor+3,w
  1329  02BC  02BC               	subwf	___aldiv@dividend+3,f
  1330  02BD                     l1853:
  1331  02BD  1440               	bsf	___aldiv@quotient,0
  1332  02BE                     l1855:
  1333  02BE  3001               	movlw	1
  1334  02BF                     u1395:
  1335  02BF  1003               	clrc
  1336  02C0  0CB8               	rrf	___aldiv@divisor+3,f
  1337  02C1  0CB7               	rrf	___aldiv@divisor+2,f
  1338  02C2  0CB6               	rrf	___aldiv@divisor+1,f
  1339  02C3  0CB5               	rrf	___aldiv@divisor,f
  1340  02C4  3EFF               	addlw	-1
  1341  02C5  1D03               	skipz
  1342  02C6  2ABF               	goto	u1395
  1343  02C7                     l1857:
  1344  02C7  3001               	movlw	1
  1345  02C8  02BE               	subwf	___aldiv@counter,f
  1346  02C9  1D03               	btfss	3,2
  1347  02CA  2ACC               	goto	u1401
  1348  02CB  2ACD               	goto	u1400
  1349  02CC                     u1401:
  1350  02CC  2A94               	goto	l1847
  1351  02CD                     u1400:
  1352  02CD                     l1859:
  1353  02CD  083F               	movf	___aldiv@sign,w
  1354  02CE  1903               	btfsc	3,2
  1355  02CF  2AD1               	goto	u1411
  1356  02D0  2AD2               	goto	u1410
  1357  02D1                     u1411:
  1358  02D1  2ADD               	goto	l1863
  1359  02D2                     u1410:
  1360  02D2                     l1861:
  1361  02D2  09C0               	comf	___aldiv@quotient,f
  1362  02D3  09C1               	comf	___aldiv@quotient+1,f
  1363  02D4  09C2               	comf	___aldiv@quotient+2,f
  1364  02D5  09C3               	comf	___aldiv@quotient+3,f
  1365  02D6  0AC0               	incf	___aldiv@quotient,f
  1366  02D7  1903               	skipnz
  1367  02D8  0AC1               	incf	___aldiv@quotient+1,f
  1368  02D9  1903               	skipnz
  1369  02DA  0AC2               	incf	___aldiv@quotient+2,f
  1370  02DB  1903               	skipnz
  1371  02DC  0AC3               	incf	___aldiv@quotient+3,f
  1372  02DD                     l1863:
  1373  02DD  0843               	movf	___aldiv@quotient+3,w
  1374  02DE  00B8               	movwf	?___aldiv+3
  1375  02DF  0842               	movf	___aldiv@quotient+2,w
  1376  02E0  00B7               	movwf	?___aldiv+2
  1377  02E1  0841               	movf	___aldiv@quotient+1,w
  1378  02E2  00B6               	movwf	?___aldiv+1
  1379  02E3  0840               	movf	___aldiv@quotient,w
  1380  02E4  00B5               	movwf	?___aldiv
  1381  02E5                     l436:
  1382  02E5  0008               	return
  1383  02E6                     __end_of___aldiv:
  1384                           
  1385                           	psect	text3
  1386  061D                     __ptext3:	
  1387 ;; *************** function _usart_Interrupt *****************
  1388 ;; Defined at:
  1389 ;;		line 41 in file "usart.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;		None
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;		None
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      void 
  1396 ;; Registers used:
  1397 ;;		None
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1403 ;;      Params:         0       0       0       0       0
  1404 ;;      Locals:         0       0       0       0       0
  1405 ;;      Temps:          0       0       0       0       0
  1406 ;;      Totals:         0       0       0       0       0
  1407 ;;Total ram usage:        0 bytes
  1408 ;; Hardware stack levels used:    1
  1409 ;; Hardware stack levels required when called:    6
  1410 ;; This function calls:
  1411 ;;		Nothing
  1412 ;; This function is called by:
  1413 ;;		_main
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           
  1418                           ;psect for function _usart_Interrupt
  1419  061D                     _usart_Interrupt:
  1420  061D                     l1615:	
  1421                           ;incstack = 0
  1422                           ; Regs used in _usart_Interrupt: []
  1423                           
  1424                           
  1425                           ;usart.c: 42:     PIR1bits.RCIF = 0;
  1426  061D  1283               	bcf	3,5	;RP0=0, select bank0
  1427  061E  1303               	bcf	3,6	;RP1=0, select bank0
  1428  061F  128C               	bcf	12,5	;volatile
  1429                           
  1430                           ;usart.c: 43:     PIE1bits.RCIE = 1;
  1431  0620  1683               	bsf	3,5	;RP0=1, select bank1
  1432  0621  1303               	bcf	3,6	;RP1=0, select bank1
  1433  0622  168C               	bsf	12,5	;volatile
  1434                           
  1435                           ;usart.c: 44:     INTCONbits.PEIE = 1;
  1436  0623  170B               	bsf	11,6	;volatile
  1437                           
  1438                           ;usart.c: 45:     INTCONbits.GIE = 1;
  1439  0624  178B               	bsf	11,7	;volatile
  1440  0625                     l155:
  1441  0625  0008               	return
  1442  0626                     __end_of_usart_Interrupt:
  1443                           
  1444                           	psect	text4
  1445  05E8                     __ptext4:	
  1446 ;; *************** function _i2c_init *****************
  1447 ;; Defined at:
  1448 ;;		line 10 in file "i2c.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;		None
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;		None
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      void 
  1455 ;; Registers used:
  1456 ;;		wreg, status,2
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1462 ;;      Params:         0       0       0       0       0
  1463 ;;      Locals:         0       0       0       0       0
  1464 ;;      Temps:          0       0       0       0       0
  1465 ;;      Totals:         0       0       0       0       0
  1466 ;;Total ram usage:        0 bytes
  1467 ;; Hardware stack levels used:    1
  1468 ;; Hardware stack levels required when called:    6
  1469 ;; This function calls:
  1470 ;;		Nothing
  1471 ;; This function is called by:
  1472 ;;		_main
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           
  1477                           ;psect for function _i2c_init
  1478  05E8                     _i2c_init:
  1479  05E8                     l1559:	
  1480                           ;incstack = 0
  1481                           ; Regs used in _i2c_init: [wreg+status,2]
  1482                           
  1483                           
  1484                           ;i2c.c: 12:     TRISCbits.TRISC3 = 1;
  1485  05E8  1683               	bsf	3,5	;RP0=1, select bank1
  1486  05E9  1303               	bcf	3,6	;RP1=0, select bank1
  1487  05EA  1587               	bsf	7,3	;volatile
  1488                           
  1489                           ;i2c.c: 13:     TRISCbits.TRISC4 = 1;
  1490  05EB  1607               	bsf	7,4	;volatile
  1491  05EC                     l1561:
  1492                           
  1493                           ;i2c.c: 14:     SSPADD = 0x09;
  1494  05EC  3009               	movlw	9
  1495  05ED  0093               	movwf	19	;volatile
  1496                           
  1497                           ;i2c.c: 15:     SSPSTAT = 0x80;
  1498  05EE  3080               	movlw	128
  1499  05EF  0094               	movwf	20	;volatile
  1500  05F0                     l1563:
  1501                           
  1502                           ;i2c.c: 16:     SSPCON2 = 0x00;
  1503  05F0  0191               	clrf	17	;volatile
  1504  05F1                     l1565:
  1505                           
  1506                           ;i2c.c: 17:     SSPCON = 0x28;
  1507  05F1  3028               	movlw	40
  1508  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  1509  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  1510  05F4  0094               	movwf	20	;volatile
  1511  05F5                     l43:
  1512  05F5  0008               	return
  1513  05F6                     __end_of_i2c_init:
  1514                           
  1515                           	psect	text5
  1516  0023                     __ptext5:	
  1517 ;; *************** function _myISR *****************
  1518 ;; Defined at:
  1519 ;;		line 12 in file "main.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;		None
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;		None
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      void 
  1526 ;; Registers used:
  1527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1533 ;;      Params:         0       0       0       0       0
  1534 ;;      Locals:         0       0       0       0       0
  1535 ;;      Temps:          0       8       0       0       0
  1536 ;;      Totals:         0       8       0       0       0
  1537 ;;Total ram usage:        8 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; Hardware stack levels required when called:    5
  1540 ;; This function calls:
  1541 ;;		_i2c_read
  1542 ;;		_i2c_sendACK
  1543 ;;		_i2c_start
  1544 ;;		_i2c_stop
  1545 ;;		_i2c_write
  1546 ;;		_recivedCMD
  1547 ;;		_sprintf
  1548 ;;		_strcmp
  1549 ;;		_token
  1550 ;;		_usart_Tx
  1551 ;;		_usart_TxStr
  1552 ;; This function is called by:
  1553 ;;		Interrupt level 1
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           
  1558                           ;psect for function _myISR
  1559  0023                     _myISR:
  1560  0023                     i1l1723:
  1561                           
  1562                           ;main.c: 13:     INTCONbits.GIE = 0;
  1563  0023  138B               	bcf	11,7	;volatile
  1564  0024                     i1l1725:
  1565                           
  1566                           ;main.c: 14:     usart_Tx(' ');
  1567  0024  3020               	movlw	32
  1568  0025  120A  118A  2611  120A  118A  	fcall	_usart_Tx
  1569  002A                     i1l1727:
  1570                           
  1571                           ;main.c: 15:     recivedCMD(data);
  1572  002A  304F               	movlw	(low (_data| 0))& (0+255)
  1573  002B  120A  118A  252E  120A  118A  	fcall	_recivedCMD
  1574  0030                     i1l1729:
  1575                           
  1576                           ;main.c: 16:     token(data);
  1577  0030  304F               	movlw	(low (_data| 0))& (0+255)
  1578  0031  120A  118A  246A  120A  118A  	fcall	_token
  1579  0036                     i1l1731:
  1580                           
  1581                           ;main.c: 17:     if(strcmp(dir[0],"M2") == 0){
  1582  0036  3012               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1583  0037  00FF               	movwf	btemp+1
  1584  0038  087F               	movf	btemp+1,w
  1585  0039  00F0               	movwf	strcmp@s2
  1586  003A  1283               	bcf	3,5	;RP0=0, select bank0
  1587  003B  1303               	bcf	3,6	;RP1=0, select bank0
  1588  003C  0848               	movf	_dir,w
  1589  003D  120A  118A  2500  120A  118A  	fcall	_strcmp
  1590  0042  0870               	movf	?_strcmp,w
  1591  0043  0471               	iorwf	?_strcmp+1,w
  1592  0044  1D03               	btfss	3,2
  1593  0045  2847               	goto	u127_21
  1594  0046  2848               	goto	u127_20
  1595  0047                     u127_21:
  1596  0047  2952               	goto	i1l1785
  1597  0048                     u127_20:
  1598  0048                     i1l1733:
  1599                           
  1600                           ;main.c: 18:         if(strcmp(dir[1],"P1") == 0){
  1601  0048  300F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1602  0049  00FF               	movwf	btemp+1
  1603  004A  087F               	movf	btemp+1,w
  1604  004B  00F0               	movwf	strcmp@s2
  1605  004C  1283               	bcf	3,5	;RP0=0, select bank0
  1606  004D  1303               	bcf	3,6	;RP1=0, select bank0
  1607  004E  0849               	movf	low ((_dir| 0+1)),w
  1608  004F  120A  118A  2500  120A  118A  	fcall	_strcmp
  1609  0054  0870               	movf	?_strcmp,w
  1610  0055  0471               	iorwf	?_strcmp+1,w
  1611  0056  1D03               	btfss	3,2
  1612  0057  2859               	goto	u128_21
  1613  0058  285A               	goto	u128_20
  1614  0059                     u128_21:
  1615  0059  28CF               	goto	i1l1759
  1616  005A                     u128_20:
  1617  005A                     i1l1735:
  1618                           
  1619                           ;main.c: 19:             if(*dir[2] == 'a'){
  1620  005A  1283               	bcf	3,5	;RP0=0, select bank0
  1621  005B  1303               	bcf	3,6	;RP1=0, select bank0
  1622  005C  084A               	movf	low ((_dir| 0+2)),w
  1623  005D  0084               	movwf	4
  1624  005E  3061               	movlw	97
  1625  005F  1383               	bcf	3,7	;select IRP bank0
  1626  0060  0600               	xorwf	0,w
  1627  0061  1D03               	btfss	3,2
  1628  0062  2864               	goto	u129_21
  1629  0063  2865               	goto	u129_20
  1630  0064                     u129_21:
  1631  0064  28B3               	goto	i1l1753
  1632  0065                     u129_20:
  1633  0065                     i1l1737:
  1634                           
  1635                           ;main.c: 20:                 i2c_start();
  1636  0065  120A  118A  25D5  120A  118A  	fcall	_i2c_start
  1637                           
  1638                           ;main.c: 21:                 i2c_write(0x31);
  1639  006A  3031               	movlw	49
  1640  006B  120A  118A  25C2  120A  118A  	fcall	_i2c_write
  1641  0070                     i1l1739:
  1642                           
  1643                           ;main.c: 22:                 lectura[0] = i2c_read();
  1644  0070  120A  118A  25AE  120A  118A  	fcall	_i2c_read
  1645  0075  00FF               	movwf	btemp+1
  1646  0076  087F               	movf	btemp+1,w
  1647  0077  1283               	bcf	3,5	;RP0=0, select bank0
  1648  0078  1303               	bcf	3,6	;RP1=0, select bank0
  1649  0079  00CD               	movwf	_lectura
  1650  007A                     i1l1741:
  1651                           
  1652                           ;main.c: 23:                 i2c_sendACK();
  1653  007A  120A  118A  2626  120A  118A  	fcall	_i2c_sendACK
  1654  007F                     i1l1743:
  1655                           
  1656                           ;main.c: 24:                 lectura[1] = i2c_read();
  1657  007F  120A  118A  25AE  120A  118A  	fcall	_i2c_read
  1658  0084  00FF               	movwf	btemp+1
  1659  0085  087F               	movf	btemp+1,w
  1660  0086  1283               	bcf	3,5	;RP0=0, select bank0
  1661  0087  1303               	bcf	3,6	;RP1=0, select bank0
  1662  0088  00CE               	movwf	_lectura+1
  1663  0089                     i1l1745:
  1664                           
  1665                           ;main.c: 25:                 i2c_stop();
  1666  0089  120A  118A  25F6  120A  118A  	fcall	_i2c_stop
  1667  008E                     i1l1747:
  1668                           
  1669                           ;main.c: 26:                 res = (int)((lectura[1] << 8) + (lectura[0]));
  1670  008E  1283               	bcf	3,5	;RP0=0, select bank0
  1671  008F  1303               	bcf	3,6	;RP1=0, select bank0
  1672  0090  084E               	movf	_lectura+1,w
  1673  0091  00AD               	movwf	??_myISR
  1674  0092  01AE               	clrf	??_myISR+1
  1675  0093  082D               	movf	??_myISR,w
  1676  0094  00AE               	movwf	??_myISR+1
  1677  0095  01AD               	clrf	??_myISR
  1678  0096  084D               	movf	_lectura,w
  1679  0097  072D               	addwf	??_myISR,w
  1680  0098  00CB               	movwf	_res
  1681  0099  3000               	movlw	0
  1682  009A  1803               	skipnc
  1683  009B  3001               	movlw	1
  1684  009C  072E               	addwf	??_myISR+1,w
  1685  009D  00CC               	movwf	_res+1
  1686  009E                     i1l1749:
  1687                           
  1688                           ;main.c: 27:                 sprintf(data,"%d\n", res);
  1689  009E  300B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1690  009F  00FF               	movwf	btemp+1
  1691  00A0  087F               	movf	btemp+1,w
  1692  00A1  00A0               	movwf	sprintf@f
  1693  00A2  084C               	movf	_res+1,w
  1694  00A3  00A2               	movwf	?_sprintf+2
  1695  00A4  084B               	movf	_res,w
  1696  00A5  00A1               	movwf	?_sprintf+1
  1697  00A6  304F               	movlw	(low (_data| 0))& (0+255)
  1698  00A7  120A  118A  2161  120A  118A  	fcall	_sprintf
  1699  00AC                     i1l1751:
  1700                           
  1701                           ;main.c: 28:                 usart_TxStr(data);
  1702  00AC  304F               	movlw	(low (_data| 0))& (0+255)
  1703  00AD  120A  118A  2597  120A  118A  	fcall	_usart_TxStr
  1704                           
  1705                           ;main.c: 29:             }
  1706  00B2  2952               	goto	i1l1785
  1707  00B3                     i1l1753:
  1708                           
  1709                           ;main.c: 31:                 i2c_start();
  1710  00B3  120A  118A  25D5  120A  118A  	fcall	_i2c_start
  1711                           
  1712                           ;main.c: 32:                 i2c_write(0x30);
  1713  00B8  3030               	movlw	48
  1714  00B9  120A  118A  25C2  120A  118A  	fcall	_i2c_write
  1715  00BE                     i1l1755:
  1716                           
  1717                           ;main.c: 33:                 i2c_write(*dir[2]);
  1718  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1719  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1720  00C0  084A               	movf	low ((_dir| 0+2)),w
  1721  00C1  0084               	movwf	4
  1722  00C2  1383               	bcf	3,7	;select IRP bank0
  1723  00C3  0800               	movf	0,w
  1724  00C4  120A  118A  25C2  120A  118A  	fcall	_i2c_write
  1725  00C9                     i1l1757:
  1726                           
  1727                           ;main.c: 34:                 i2c_stop();
  1728  00C9  120A  118A  25F6  120A  118A  	fcall	_i2c_stop
  1729  00CE  2952               	goto	i1l1785
  1730  00CF                     i1l1759:
  1731  00CF  3015               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1732  00D0  00FF               	movwf	btemp+1
  1733  00D1  087F               	movf	btemp+1,w
  1734  00D2  00F0               	movwf	strcmp@s2
  1735  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1736  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1737  00D5  0849               	movf	low ((_dir| 0+1)),w
  1738  00D6  120A  118A  2500  120A  118A  	fcall	_strcmp
  1739  00DB  0870               	movf	?_strcmp,w
  1740  00DC  0471               	iorwf	?_strcmp+1,w
  1741  00DD  1D03               	btfss	3,2
  1742  00DE  28E0               	goto	u130_21
  1743  00DF  28E1               	goto	u130_20
  1744  00E0                     u130_21:
  1745  00E0  2952               	goto	i1l1785
  1746  00E1                     u130_20:
  1747  00E1                     i1l1761:
  1748                           
  1749                           ;main.c: 38:         if(*dir[2] == 'a'){
  1750  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1751  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1752  00E3  084A               	movf	low ((_dir| 0+2)),w
  1753  00E4  0084               	movwf	4
  1754  00E5  3061               	movlw	97
  1755  00E6  1383               	bcf	3,7	;select IRP bank0
  1756  00E7  0600               	xorwf	0,w
  1757  00E8  1D03               	btfss	3,2
  1758  00E9  28EB               	goto	u131_21
  1759  00EA  28EC               	goto	u131_20
  1760  00EB                     u131_21:
  1761  00EB  293B               	goto	i1l1779
  1762  00EC                     u131_20:
  1763  00EC                     i1l1763:
  1764                           
  1765                           ;main.c: 39:                 i2c_start();
  1766  00EC  120A  118A  25D5  120A  118A  	fcall	_i2c_start
  1767                           
  1768                           ;main.c: 40:                 i2c_write(0x33);
  1769  00F1  3033               	movlw	51
  1770  00F2  120A  118A  25C2  120A  118A  	fcall	_i2c_write
  1771  00F7                     i1l1765:
  1772                           
  1773                           ;main.c: 41:                 lectura[0] = i2c_read();
  1774  00F7  120A  118A  25AE  120A  118A  	fcall	_i2c_read
  1775  00FC  00FF               	movwf	btemp+1
  1776  00FD  087F               	movf	btemp+1,w
  1777  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1778  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1779  0100  00CD               	movwf	_lectura
  1780  0101                     i1l1767:
  1781                           
  1782                           ;main.c: 42:                 i2c_sendACK();
  1783  0101  120A  118A  2626  120A  118A  	fcall	_i2c_sendACK
  1784  0106                     i1l1769:
  1785                           
  1786                           ;main.c: 43:                 lectura[1] = i2c_read();
  1787  0106  120A  118A  25AE  120A  118A  	fcall	_i2c_read
  1788  010B  00FF               	movwf	btemp+1
  1789  010C  087F               	movf	btemp+1,w
  1790  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1791  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1792  010F  00CE               	movwf	_lectura+1
  1793  0110                     i1l1771:
  1794                           
  1795                           ;main.c: 44:                 i2c_stop();
  1796  0110  120A  118A  25F6  120A  118A  	fcall	_i2c_stop
  1797  0115                     i1l1773:
  1798                           
  1799                           ;main.c: 45:                 res = (int)(lectura[1] << 8)|(lectura[0]);
  1800  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1801  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1802  0117  084D               	movf	_lectura,w
  1803  0118  00AD               	movwf	??_myISR
  1804  0119  01AE               	clrf	??_myISR+1
  1805  011A  084E               	movf	_lectura+1,w
  1806  011B  00AF               	movwf	??_myISR+2
  1807  011C  01B0               	clrf	??_myISR+3
  1808  011D  082F               	movf	??_myISR+2,w
  1809  011E  00B0               	movwf	??_myISR+3
  1810  011F  01AF               	clrf	??_myISR+2
  1811  0120  082D               	movf	??_myISR,w
  1812  0121  042F               	iorwf	??_myISR+2,w
  1813  0122  00CB               	movwf	_res
  1814  0123  082E               	movf	??_myISR+1,w
  1815  0124  0430               	iorwf	??_myISR+3,w
  1816  0125  00CC               	movwf	_res+1
  1817  0126                     i1l1775:
  1818                           
  1819                           ;main.c: 46:                 sprintf(data,"%d\n", res);
  1820  0126  300B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1821  0127  00FF               	movwf	btemp+1
  1822  0128  087F               	movf	btemp+1,w
  1823  0129  00A0               	movwf	sprintf@f
  1824  012A  084C               	movf	_res+1,w
  1825  012B  00A2               	movwf	?_sprintf+2
  1826  012C  084B               	movf	_res,w
  1827  012D  00A1               	movwf	?_sprintf+1
  1828  012E  304F               	movlw	(low (_data| 0))& (0+255)
  1829  012F  120A  118A  2161  120A  118A  	fcall	_sprintf
  1830  0134                     i1l1777:
  1831                           
  1832                           ;main.c: 47:                 usart_TxStr(data);
  1833  0134  304F               	movlw	(low (_data| 0))& (0+255)
  1834  0135  120A  118A  2597  120A  118A  	fcall	_usart_TxStr
  1835                           
  1836                           ;main.c: 48:             }
  1837  013A  2952               	goto	i1l1785
  1838  013B                     i1l1779:
  1839                           
  1840                           ;main.c: 50:                 i2c_start();
  1841  013B  120A  118A  25D5  120A  118A  	fcall	_i2c_start
  1842                           
  1843                           ;main.c: 51:                 i2c_write(0x32);
  1844  0140  3032               	movlw	50
  1845  0141  120A  118A  25C2  120A  118A  	fcall	_i2c_write
  1846  0146                     i1l1781:
  1847                           
  1848                           ;main.c: 52:                 i2c_write(*dir[2]);
  1849  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1850  0147  1303               	bcf	3,6	;RP1=0, select bank0
  1851  0148  084A               	movf	low ((_dir| 0+2)),w
  1852  0149  0084               	movwf	4
  1853  014A  1383               	bcf	3,7	;select IRP bank0
  1854  014B  0800               	movf	0,w
  1855  014C  120A  118A  25C2  120A  118A  	fcall	_i2c_write
  1856  0151  28C9               	goto	i1l1757
  1857  0152                     i1l1785:
  1858                           
  1859                           ;main.c: 57:     PIR1bits.RCIF = 0;
  1860  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1861  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1862  0154  128C               	bcf	12,5	;volatile
  1863  0155                     i1l1787:
  1864                           
  1865                           ;main.c: 58:     INTCONbits.GIE = 1;
  1866  0155  178B               	bsf	11,7	;volatile
  1867  0156                     i1l239:
  1868  0156  0834               	movf	??_myISR+7,w
  1869  0157  00FF               	movwf	btemp+1
  1870  0158  0833               	movf	??_myISR+6,w
  1871  0159  008A               	movwf	10
  1872  015A  0832               	movf	??_myISR+5,w
  1873  015B  0084               	movwf	4
  1874  015C  0E31               	swapf	(??_myISR+4)^0,w
  1875  015D  0083               	movwf	3
  1876  015E  0EFE               	swapf	btemp,f
  1877  015F  0E7E               	swapf	btemp,w
  1878  0160  0009               	retfie
  1879  0161                     __end_of_myISR:
  1880                           
  1881                           	psect	intentry
  1882  0004                     __pintentry:	
  1883                           ;incstack = 0
  1884                           ; Regs used in _myISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1885                           
  1886  0004                     interrupt_function:
  1887  007E                     saved_w	set	btemp
  1888  0004  00FE               	movwf	btemp
  1889  0005  0E03               	swapf	3,w
  1890  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1891  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1892  0008  00B1               	movwf	??_myISR+4
  1893  0009  0804               	movf	4,w
  1894  000A  00B2               	movwf	??_myISR+5
  1895  000B  080A               	movf	10,w
  1896  000C  00B3               	movwf	??_myISR+6
  1897  000D  087F               	movf	btemp+1,w
  1898  000E  00B4               	movwf	??_myISR+7
  1899  000F  120A  118A  2823   	ljmp	_myISR
  1900                           
  1901                           	psect	text6
  1902  0597                     __ptext6:	
  1903 ;; *************** function _usart_TxStr *****************
  1904 ;; Defined at:
  1905 ;;		line 33 in file "usart.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  str             1    wreg     PTR unsigned char 
  1908 ;;		 -> data(10), 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  str             1    1[COMMON] PTR unsigned char 
  1911 ;;		 -> data(10), 
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      void 
  1914 ;; Registers used:
  1915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1921 ;;      Params:         0       0       0       0       0
  1922 ;;      Locals:         1       0       0       0       0
  1923 ;;      Temps:          0       0       0       0       0
  1924 ;;      Totals:         1       0       0       0       0
  1925 ;;Total ram usage:        1 bytes
  1926 ;; Hardware stack levels used:    1
  1927 ;; Hardware stack levels required when called:    1
  1928 ;; This function calls:
  1929 ;;		_usart_Tx
  1930 ;; This function is called by:
  1931 ;;		_myISR
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           
  1936                           ;psect for function _usart_TxStr
  1937  0597                     _usart_TxStr:
  1938                           
  1939                           ;incstack = 0
  1940                           ; Regs used in _usart_TxStr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1941                           ;usart_TxStr@str stored from wreg
  1942  0597  00F1               	movwf	usart_TxStr@str
  1943  0598                     i1l1607:
  1944                           
  1945                           ;usart.c: 34:     while(*str != '\0'){
  1946  0598  2DA5               	goto	i1l1613
  1947  0599                     i1l1609:
  1948                           
  1949                           ;usart.c: 35:         usart_Tx(*str);
  1950  0599  0871               	movf	usart_TxStr@str,w
  1951  059A  0084               	movwf	4
  1952  059B  0800               	movf	0,w
  1953  059C  120A  118A  2611  120A  118A  	fcall	_usart_Tx
  1954  05A1                     i1l1611:
  1955                           
  1956                           ;usart.c: 36:         str++;
  1957  05A1  3001               	movlw	1
  1958  05A2  00FF               	movwf	btemp+1
  1959  05A3  087F               	movf	btemp+1,w
  1960  05A4  07F1               	addwf	usart_TxStr@str,f
  1961  05A5                     i1l1613:
  1962                           
  1963                           ;usart.c: 34:     while(*str != '\0'){
  1964  05A5  0871               	movf	usart_TxStr@str,w
  1965  05A6  0084               	movwf	4
  1966  05A7  1383               	bcf	3,7	;select IRP bank0
  1967  05A8  0800               	movf	0,w
  1968  05A9  1D03               	btfss	3,2
  1969  05AA  2DAC               	goto	u112_21
  1970  05AB  2DAD               	goto	u112_20
  1971  05AC                     u112_21:
  1972  05AC  2D99               	goto	i1l1609
  1973  05AD                     u112_20:
  1974  05AD                     i1l152:
  1975  05AD  0008               	return
  1976  05AE                     __end_of_usart_TxStr:
  1977                           
  1978                           	psect	text7
  1979  0611                     __ptext7:	
  1980 ;; *************** function _usart_Tx *****************
  1981 ;; Defined at:
  1982 ;;		line 24 in file "usart.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;  send            1    wreg     unsigned char 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  send            1    0[COMMON] unsigned char 
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  1    wreg      void 
  1989 ;; Registers used:
  1990 ;;		wreg
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1996 ;;      Params:         0       0       0       0       0
  1997 ;;      Locals:         1       0       0       0       0
  1998 ;;      Temps:          0       0       0       0       0
  1999 ;;      Totals:         1       0       0       0       0
  2000 ;;Total ram usage:        1 bytes
  2001 ;; Hardware stack levels used:    1
  2002 ;; This function calls:
  2003 ;;		Nothing
  2004 ;; This function is called by:
  2005 ;;		_usart_TxStr
  2006 ;;		_myISR
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           
  2011                           ;psect for function _usart_Tx
  2012  0611                     _usart_Tx:
  2013                           
  2014                           ;incstack = 0
  2015                           ; Regs used in _usart_Tx: [wreg]
  2016                           ;usart_Tx@send stored from wreg
  2017  0611  00F0               	movwf	usart_Tx@send
  2018  0612                     i1l1429:
  2019                           
  2020                           ;usart.c: 25:     TXREG = send;
  2021  0612  0870               	movf	usart_Tx@send,w
  2022  0613  1283               	bcf	3,5	;RP0=0, select bank0
  2023  0614  1303               	bcf	3,6	;RP1=0, select bank0
  2024  0615  0099               	movwf	25	;volatile
  2025  0616                     i1l140:	
  2026                           ;usart.c: 26:     while (!TXSTAbits.TRMT);
  2027                           
  2028  0616  1683               	bsf	3,5	;RP0=1, select bank1
  2029  0617  1303               	bcf	3,6	;RP1=0, select bank1
  2030  0618  1C98               	btfss	24,1	;volatile
  2031  0619  2E1B               	goto	u75_21
  2032  061A  2E1C               	goto	u75_20
  2033  061B                     u75_21:
  2034  061B  2E16               	goto	i1l140
  2035  061C                     u75_20:
  2036  061C                     i1l143:
  2037  061C  0008               	return
  2038  061D                     __end_of_usart_Tx:
  2039                           
  2040                           	psect	text8
  2041  046A                     __ptext8:	
  2042 ;; *************** function _token *****************
  2043 ;; Defined at:
  2044 ;;		line 68 in file "usart.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;  cmd             1    wreg     PTR unsigned char 
  2047 ;;		 -> data(10), 
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;  cmd             1    2[BANK0 ] PTR unsigned char 
  2050 ;;		 -> data(10), 
  2051 ;;  i               2    0[BANK0 ] int 
  2052 ;;  tok             1    3[BANK0 ] PTR unsigned char 
  2053 ;;		 -> data(10), NULL(0), 
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  1    wreg      void 
  2056 ;; Registers used:
  2057 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2063 ;;      Params:         0       0       0       0       0
  2064 ;;      Locals:         0       4       0       0       0
  2065 ;;      Temps:          0       0       0       0       0
  2066 ;;      Totals:         0       4       0       0       0
  2067 ;;Total ram usage:        4 bytes
  2068 ;; Hardware stack levels used:    1
  2069 ;; Hardware stack levels required when called:    4
  2070 ;; This function calls:
  2071 ;;		_strtok
  2072 ;; This function is called by:
  2073 ;;		_myISR
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           
  2078                           ;psect for function _token
  2079  046A                     _token:
  2080                           
  2081                           ;incstack = 0
  2082                           ; Regs used in _token: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2083                           ;token@cmd stored from wreg
  2084  046A  1283               	bcf	3,5	;RP0=0, select bank0
  2085  046B  1303               	bcf	3,6	;RP1=0, select bank0
  2086  046C  00A2               	movwf	token@cmd
  2087  046D                     i1l1629:
  2088                           
  2089                           ;usart.c: 70:     int i = 0;
  2090  046D  01A0               	clrf	token@i
  2091  046E  01A1               	clrf	token@i+1
  2092  046F                     i1l1631:
  2093                           
  2094                           ;usart.c: 71:     tok = strtok(cmd, ",");
  2095  046F  3018               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2096  0470  00FF               	movwf	btemp+1
  2097  0471  087F               	movf	btemp+1,w
  2098  0472  00FA               	movwf	strtok@s2
  2099  0473  0822               	movf	token@cmd,w
  2100  0474  120A  118A  2355  120A  118A  	fcall	_strtok
  2101  0479  00FF               	movwf	btemp+1
  2102  047A  087F               	movf	btemp+1,w
  2103  047B  1283               	bcf	3,5	;RP0=0, select bank0
  2104  047C  1303               	bcf	3,6	;RP1=0, select bank0
  2105  047D  00A3               	movwf	token@tok
  2106                           
  2107                           ;usart.c: 72:     while( tok != (0) ) {
  2108  047E  2C9C               	goto	i1l1639
  2109  047F                     i1l1633:
  2110                           
  2111                           ;usart.c: 73:         dir[i] = tok;
  2112  047F  0823               	movf	token@tok,w
  2113  0480  00FF               	movwf	btemp+1
  2114  0481  0820               	movf	token@i,w
  2115  0482  3E48               	addlw	(low (_dir| 0))& (0+255)
  2116  0483  0084               	movwf	4
  2117  0484  087F               	movf	btemp+1,w
  2118  0485  1383               	bcf	3,7	;select IRP bank0
  2119  0486  0080               	movwf	0
  2120  0487                     i1l1635:
  2121                           
  2122                           ;usart.c: 74:         tok = strtok((0), ",");
  2123  0487  3018               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2124  0488  00FF               	movwf	btemp+1
  2125  0489  087F               	movf	btemp+1,w
  2126  048A  00FA               	movwf	strtok@s2
  2127  048B  3000               	movlw	0
  2128  048C  120A  118A  2355  120A  118A  	fcall	_strtok
  2129  0491  00FF               	movwf	btemp+1
  2130  0492  087F               	movf	btemp+1,w
  2131  0493  1283               	bcf	3,5	;RP0=0, select bank0
  2132  0494  1303               	bcf	3,6	;RP1=0, select bank0
  2133  0495  00A3               	movwf	token@tok
  2134  0496                     i1l1637:
  2135                           
  2136                           ;usart.c: 75:         i++;
  2137  0496  3001               	movlw	1
  2138  0497  07A0               	addwf	token@i,f
  2139  0498  1803               	skipnc
  2140  0499  0AA1               	incf	token@i+1,f
  2141  049A  3000               	movlw	0
  2142  049B  07A1               	addwf	token@i+1,f
  2143  049C                     i1l1639:
  2144                           
  2145                           ;usart.c: 72:     while( tok != (0) ) {
  2146  049C  0823               	movf	token@tok,w
  2147  049D  1D03               	btfss	3,2
  2148  049E  2CA0               	goto	u115_21
  2149  049F  2CA1               	goto	u115_20
  2150  04A0                     u115_21:
  2151  04A0  2C7F               	goto	i1l1633
  2152  04A1                     u115_20:
  2153  04A1                     i1l174:
  2154  04A1  0008               	return
  2155  04A2                     __end_of_token:
  2156                           
  2157                           	psect	text9
  2158  0355                     __ptext9:	
  2159 ;; *************** function _strtok *****************
  2160 ;; Defined at:
  2161 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\strtok.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  s1              1    wreg     PTR unsigned char 
  2164 ;;		 -> data(10), NULL(0), 
  2165 ;;  s2              1   10[COMMON] PTR const unsigned char 
  2166 ;;		 -> STR_2(2), STR_1(2), 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;  s1              1   11[COMMON] PTR unsigned char 
  2169 ;;		 -> data(10), NULL(0), 
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  1    wreg      PTR unsigned char 
  2172 ;; Registers used:
  2173 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2179 ;;      Params:         1       0       0       0       0
  2180 ;;      Locals:         1       0       0       0       0
  2181 ;;      Temps:          0       0       0       0       0
  2182 ;;      Totals:         2       0       0       0       0
  2183 ;;Total ram usage:        2 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; Hardware stack levels required when called:    3
  2186 ;; This function calls:
  2187 ;;		_strcspn
  2188 ;;		_strspn
  2189 ;; This function is called by:
  2190 ;;		_token
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           
  2195                           ;psect for function _strtok
  2196  0355                     _strtok:
  2197                           
  2198                           ;incstack = 0
  2199                           ; Regs used in _strtok: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2200                           ;strtok@s1 stored from wreg
  2201  0355  00FB               	movwf	strtok@s1
  2202  0356                     i1l1437:
  2203  0356  087B               	movf	strtok@s1,w
  2204  0357  1D03               	btfss	3,2
  2205  0358  2B5A               	goto	u77_21
  2206  0359  2B5B               	goto	u77_20
  2207  035A                     u77_21:
  2208  035A  2B5F               	goto	i1l1441
  2209  035B                     u77_20:
  2210  035B                     i1l1439:
  2211  035B  087C               	movf	strtok@sp,w
  2212  035C  00FF               	movwf	btemp+1
  2213  035D  087F               	movf	btemp+1,w
  2214  035E  00FB               	movwf	strtok@s1
  2215  035F                     i1l1441:
  2216  035F  087B               	movf	strtok@s1,w
  2217  0360  1D03               	btfss	3,2
  2218  0361  2B63               	goto	u78_21
  2219  0362  2B64               	goto	u78_20
  2220  0363                     u78_21:
  2221  0363  2B66               	goto	i1l1447
  2222  0364                     u78_20:
  2223  0364                     i1l1443:
  2224  0364  3000               	movlw	0
  2225  0365  2BA0               	goto	i1l828
  2226  0366                     i1l1447:
  2227  0366  087A               	movf	strtok@s2,w
  2228  0367  00FF               	movwf	btemp+1
  2229  0368  087F               	movf	btemp+1,w
  2230  0369  00F3               	movwf	strspn@s2
  2231  036A  087B               	movf	strtok@s1,w
  2232  036B  120A  118A  24A2  120A  118A  	fcall	_strspn
  2233  0370  0873               	movf	?_strspn,w
  2234  0371  00FF               	movwf	btemp+1
  2235  0372  087F               	movf	btemp+1,w
  2236  0373  07FB               	addwf	strtok@s1,f
  2237  0374                     i1l1449:
  2238  0374  087B               	movf	strtok@s1,w
  2239  0375  0084               	movwf	4
  2240  0376  1383               	bcf	3,7	;select IRP bank0
  2241  0377  0800               	movf	0,w
  2242  0378  1D03               	btfss	3,2
  2243  0379  2B7B               	goto	u79_21
  2244  037A  2B7C               	goto	u79_20
  2245  037B                     u79_21:
  2246  037B  2B7F               	goto	i1l1455
  2247  037C                     u79_20:
  2248  037C                     i1l1451:
  2249  037C  01FC               	clrf	strtok@sp
  2250  037D  3000               	movlw	0
  2251  037E  2BA0               	goto	i1l828
  2252  037F                     i1l1455:
  2253  037F  087A               	movf	strtok@s2,w
  2254  0380  00FF               	movwf	btemp+1
  2255  0381  087F               	movf	btemp+1,w
  2256  0382  00F3               	movwf	strcspn@s2
  2257  0383  087B               	movf	strtok@s1,w
  2258  0384  120A  118A  24D1  120A  118A  	fcall	_strcspn
  2259  0389  0873               	movf	?_strcspn,w
  2260  038A  077B               	addwf	strtok@s1,w
  2261  038B  00FF               	movwf	btemp+1
  2262  038C  087F               	movf	btemp+1,w
  2263  038D  00FC               	movwf	strtok@sp
  2264  038E                     i1l1457:
  2265  038E  087C               	movf	strtok@sp,w
  2266  038F  0084               	movwf	4
  2267  0390  1383               	bcf	3,7	;select IRP bank0
  2268  0391  0800               	movf	0,w
  2269  0392  1903               	btfsc	3,2
  2270  0393  2B95               	goto	u80_21
  2271  0394  2B96               	goto	u80_20
  2272  0395                     u80_21:
  2273  0395  2B9E               	goto	i1l1463
  2274  0396                     u80_20:
  2275  0396                     i1l1459:
  2276  0396  087C               	movf	strtok@sp,w
  2277  0397  0084               	movwf	4
  2278  0398  0180               	clrf	0
  2279  0399                     i1l1461:
  2280  0399  3001               	movlw	1
  2281  039A  00FF               	movwf	btemp+1
  2282  039B  087F               	movf	btemp+1,w
  2283  039C  07FC               	addwf	strtok@sp,f
  2284  039D  2B9F               	goto	i1l1465
  2285  039E                     i1l1463:
  2286  039E  01FC               	clrf	strtok@sp
  2287  039F                     i1l1465:
  2288  039F  087B               	movf	strtok@s1,w
  2289  03A0                     i1l828:
  2290  03A0  0008               	return
  2291  03A1                     __end_of_strtok:
  2292                           
  2293                           	psect	text10
  2294  04A2                     __ptext10:	
  2295 ;; *************** function _strspn *****************
  2296 ;; Defined at:
  2297 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\strspn.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;  s1              1    wreg     PTR const unsigned char 
  2300 ;;		 -> data(10), NULL(0), 
  2301 ;;  s2              1    3[COMMON] PTR const unsigned char 
  2302 ;;		 -> STR_2(2), STR_1(2), 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;  s1              1    9[COMMON] PTR const unsigned char 
  2305 ;;		 -> data(10), NULL(0), 
  2306 ;;  i               2    7[COMMON] unsigned int 
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  2    3[COMMON] unsigned int 
  2309 ;; Registers used:
  2310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2316 ;;      Params:         2       0       0       0       0
  2317 ;;      Locals:         3       0       0       0       0
  2318 ;;      Temps:          2       0       0       0       0
  2319 ;;      Totals:         7       0       0       0       0
  2320 ;;Total ram usage:        7 bytes
  2321 ;; Hardware stack levels used:    1
  2322 ;; Hardware stack levels required when called:    2
  2323 ;; This function calls:
  2324 ;;		_strchr
  2325 ;; This function is called by:
  2326 ;;		_strtok
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           
  2331                           ;psect for function _strspn
  2332  04A2                     _strspn:
  2333                           
  2334                           ;incstack = 0
  2335                           ; Regs used in _strspn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2336                           ;strspn@s1 stored from wreg
  2337  04A2  00F9               	movwf	strspn@s1
  2338  04A3                     i1l1399:
  2339  04A3  01F7               	clrf	strspn@i
  2340  04A4  01F8               	clrf	strspn@i+1
  2341  04A5  2CB0               	goto	i1l1403
  2342  04A6                     i1l1401:
  2343  04A6  3001               	movlw	1
  2344  04A7  00FF               	movwf	btemp+1
  2345  04A8  087F               	movf	btemp+1,w
  2346  04A9  07F9               	addwf	strspn@s1,f
  2347  04AA  3001               	movlw	1
  2348  04AB  07F7               	addwf	strspn@i,f
  2349  04AC  1803               	skipnc
  2350  04AD  0AF8               	incf	strspn@i+1,f
  2351  04AE  3000               	movlw	0
  2352  04AF  07F8               	addwf	strspn@i+1,f
  2353  04B0                     i1l1403:
  2354  04B0  0879               	movf	strspn@s1,w
  2355  04B1  0084               	movwf	4
  2356  04B2  1383               	bcf	3,7	;select IRP bank0
  2357  04B3  0800               	movf	0,w
  2358  04B4  1903               	btfsc	3,2
  2359  04B5  2CB7               	goto	u69_21
  2360  04B6  2CB8               	goto	u69_20
  2361  04B7                     u69_21:
  2362  04B7  2CCC               	goto	i1l1407
  2363  04B8                     u69_20:
  2364  04B8                     i1l1405:
  2365  04B8  0879               	movf	strspn@s1,w
  2366  04B9  0084               	movwf	4
  2367  04BA  0800               	movf	0,w
  2368  04BB  00F5               	movwf	??_strspn
  2369  04BC  01F6               	clrf	??_strspn+1
  2370  04BD  0875               	movf	??_strspn,w
  2371  04BE  00F0               	movwf	strchr@chr
  2372  04BF  0876               	movf	??_strspn+1,w
  2373  04C0  00F1               	movwf	strchr@chr+1
  2374  04C1  0873               	movf	strspn@s2,w
  2375  04C2  120A  118A  2558  120A  118A  	fcall	_strchr
  2376  04C7  3A00               	xorlw	0
  2377  04C8  1D03               	skipz
  2378  04C9  2CCB               	goto	u70_21
  2379  04CA  2CCC               	goto	u70_20
  2380  04CB                     u70_21:
  2381  04CB  2CA6               	goto	i1l1401
  2382  04CC                     u70_20:
  2383  04CC                     i1l1407:
  2384  04CC  0878               	movf	strspn@i+1,w
  2385  04CD  00F4               	movwf	?_strspn+1
  2386  04CE  0877               	movf	strspn@i,w
  2387  04CF  00F3               	movwf	?_strspn
  2388  04D0                     i1l857:
  2389  04D0  0008               	return
  2390  04D1                     __end_of_strspn:
  2391                           
  2392                           	psect	text11
  2393  04D1                     __ptext11:	
  2394 ;; *************** function _strcspn *****************
  2395 ;; Defined at:
  2396 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\strcspn.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;  s1              1    wreg     PTR const unsigned char 
  2399 ;;		 -> data(10), NULL(0), 
  2400 ;;  s2              1    3[COMMON] PTR const unsigned char 
  2401 ;;		 -> STR_2(2), STR_1(2), 
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;  s1              1    9[COMMON] PTR const unsigned char 
  2404 ;;		 -> data(10), NULL(0), 
  2405 ;;  i               2    7[COMMON] unsigned int 
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  2    3[COMMON] unsigned int 
  2408 ;; Registers used:
  2409 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2415 ;;      Params:         2       0       0       0       0
  2416 ;;      Locals:         3       0       0       0       0
  2417 ;;      Temps:          2       0       0       0       0
  2418 ;;      Totals:         7       0       0       0       0
  2419 ;;Total ram usage:        7 bytes
  2420 ;; Hardware stack levels used:    1
  2421 ;; Hardware stack levels required when called:    2
  2422 ;; This function calls:
  2423 ;;		_strchr
  2424 ;; This function is called by:
  2425 ;;		_strtok
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           
  2430                           ;psect for function _strcspn
  2431  04D1                     _strcspn:
  2432                           
  2433                           ;incstack = 0
  2434                           ; Regs used in _strcspn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2435                           ;strcspn@s1 stored from wreg
  2436  04D1  00F9               	movwf	strcspn@s1
  2437  04D2                     i1l1411:
  2438  04D2  01F7               	clrf	strcspn@i
  2439  04D3  01F8               	clrf	strcspn@i+1
  2440  04D4  2CDF               	goto	i1l1415
  2441  04D5                     i1l1413:
  2442  04D5  3001               	movlw	1
  2443  04D6  00FF               	movwf	btemp+1
  2444  04D7  087F               	movf	btemp+1,w
  2445  04D8  07F9               	addwf	strcspn@s1,f
  2446  04D9  3001               	movlw	1
  2447  04DA  07F7               	addwf	strcspn@i,f
  2448  04DB  1803               	skipnc
  2449  04DC  0AF8               	incf	strcspn@i+1,f
  2450  04DD  3000               	movlw	0
  2451  04DE  07F8               	addwf	strcspn@i+1,f
  2452  04DF                     i1l1415:
  2453  04DF  0879               	movf	strcspn@s1,w
  2454  04E0  0084               	movwf	4
  2455  04E1  1383               	bcf	3,7	;select IRP bank0
  2456  04E2  0800               	movf	0,w
  2457  04E3  1903               	btfsc	3,2
  2458  04E4  2CE6               	goto	u71_21
  2459  04E5  2CE7               	goto	u71_20
  2460  04E6                     u71_21:
  2461  04E6  2CFB               	goto	i1l1419
  2462  04E7                     u71_20:
  2463  04E7                     i1l1417:
  2464  04E7  0879               	movf	strcspn@s1,w
  2465  04E8  0084               	movwf	4
  2466  04E9  0800               	movf	0,w
  2467  04EA  00F5               	movwf	??_strcspn
  2468  04EB  01F6               	clrf	??_strcspn+1
  2469  04EC  0875               	movf	??_strcspn,w
  2470  04ED  00F0               	movwf	strchr@chr
  2471  04EE  0876               	movf	??_strcspn+1,w
  2472  04EF  00F1               	movwf	strchr@chr+1
  2473  04F0  0873               	movf	strcspn@s2,w
  2474  04F1  120A  118A  2558  120A  118A  	fcall	_strchr
  2475  04F6  3A00               	xorlw	0
  2476  04F7  1903               	skipnz
  2477  04F8  2CFA               	goto	u72_21
  2478  04F9  2CFB               	goto	u72_20
  2479  04FA                     u72_21:
  2480  04FA  2CD5               	goto	i1l1413
  2481  04FB                     u72_20:
  2482  04FB                     i1l1419:
  2483  04FB  0878               	movf	strcspn@i+1,w
  2484  04FC  00F4               	movwf	?_strcspn+1
  2485  04FD  0877               	movf	strcspn@i,w
  2486  04FE  00F3               	movwf	?_strcspn
  2487  04FF                     i1l841:
  2488  04FF  0008               	return
  2489  0500                     __end_of_strcspn:
  2490                           
  2491                           	psect	text12
  2492  0558                     __ptext12:	
  2493 ;; *************** function _strchr *****************
  2494 ;; Defined at:
  2495 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\strchr.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  ptr             1    wreg     PTR const unsigned char 
  2498 ;;		 -> STR_2(2), STR_1(2), 
  2499 ;;  chr             2    0[COMMON] int 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;  ptr             1    2[COMMON] PTR const unsigned char 
  2502 ;;		 -> STR_2(2), STR_1(2), 
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      PTR unsigned char 
  2505 ;; Registers used:
  2506 ;;		wreg, fsr0l, fsr0h, pclath
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2512 ;;      Params:         2       0       0       0       0
  2513 ;;      Locals:         1       0       0       0       0
  2514 ;;      Temps:          0       0       0       0       0
  2515 ;;      Totals:         3       0       0       0       0
  2516 ;;Total ram usage:        3 bytes
  2517 ;; Hardware stack levels used:    2
  2518 ;; This function calls:
  2519 ;;		Nothing
  2520 ;; This function is called by:
  2521 ;;		_strcspn
  2522 ;;		_strspn
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           
  2527                           ;psect for function _strchr
  2528  0558                     _strchr:
  2529                           
  2530                           ;incstack = 0
  2531 ;; using string table level
  2532                           ; Regs used in _strchr: [wreg-fsr0h+pclath]
  2533                           ;strchr@ptr stored from wreg
  2534  0558  00F2               	movwf	strchr@ptr
  2535  0559                     i1l844:
  2536  0559                     i1l1387:
  2537  0559  0872               	movf	strchr@ptr,w
  2538  055A  0084               	movwf	4
  2539  055B  120A  118A  2578  120A  118A  	fcall	stringdir
  2540  0560  0670               	xorwf	strchr@chr,w
  2541  0561  1D03               	skipz
  2542  0562  2D64               	goto	u67_21
  2543  0563  2D65               	goto	u67_20
  2544  0564                     u67_21:
  2545  0564  2D67               	goto	i1l1393
  2546  0565                     u67_20:
  2547  0565                     i1l1389:
  2548  0565  0872               	movf	strchr@ptr,w
  2549  0566  2D77               	goto	i1l846
  2550  0567                     i1l1393:
  2551  0567  3001               	movlw	1
  2552  0568  07F2               	addwf	strchr@ptr,f
  2553  0569  30FF               	movlw	-1
  2554  056A  0772               	addwf	strchr@ptr,w
  2555  056B  0084               	movwf	4
  2556  056C  120A  118A  2578  120A  118A  	fcall	stringdir
  2557  0571  3A00               	xorlw	0
  2558  0572  1D03               	skipz
  2559  0573  2D75               	goto	u68_21
  2560  0574  2D76               	goto	u68_20
  2561  0575                     u68_21:
  2562  0575  2D59               	goto	i1l844
  2563  0576                     u68_20:
  2564  0576                     i1l1395:
  2565  0576  3000               	movlw	0
  2566  0577                     i1l846:
  2567  0577  0008               	return
  2568  0578                     __end_of_strchr:
  2569                           
  2570                           	psect	text13
  2571  0500                     __ptext13:	
  2572 ;; *************** function _strcmp *****************
  2573 ;; Defined at:
  2574 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\strcmp.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  s1              1    wreg     PTR const unsigned char 
  2577 ;;		 -> data(10), NULL(0), 
  2578 ;;  s2              1    0[COMMON] PTR const unsigned char 
  2579 ;;		 -> STR_6(3), STR_4(3), STR_3(3), 
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;  s1              1    5[COMMON] PTR const unsigned char 
  2582 ;;		 -> data(10), NULL(0), 
  2583 ;;  r               1    4[COMMON] char 
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  2    0[COMMON] int 
  2586 ;; Registers used:
  2587 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2593 ;;      Params:         2       0       0       0       0
  2594 ;;      Locals:         2       0       0       0       0
  2595 ;;      Temps:          2       0       0       0       0
  2596 ;;      Totals:         6       0       0       0       0
  2597 ;;Total ram usage:        6 bytes
  2598 ;; Hardware stack levels used:    2
  2599 ;; This function calls:
  2600 ;;		Nothing
  2601 ;; This function is called by:
  2602 ;;		_myISR
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           
  2607                           ;psect for function _strcmp
  2608  0500                     _strcmp:
  2609                           
  2610                           ;incstack = 0
  2611                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2612                           ;strcmp@s1 stored from wreg
  2613  0500  00F5               	movwf	strcmp@s1
  2614  0501                     i1l1641:
  2615  0501  2D0A               	goto	i1l1647
  2616  0502                     i1l1643:
  2617  0502  3001               	movlw	1
  2618  0503  00FF               	movwf	btemp+1
  2619  0504  087F               	movf	btemp+1,w
  2620  0505  07F5               	addwf	strcmp@s1,f
  2621  0506                     i1l1645:
  2622  0506  3001               	movlw	1
  2623  0507  00FF               	movwf	btemp+1
  2624  0508  087F               	movf	btemp+1,w
  2625  0509  07F0               	addwf	strcmp@s2,f
  2626  050A                     i1l1647:
  2627  050A  0870               	movf	strcmp@s2,w
  2628  050B  0084               	movwf	4
  2629  050C  120A  118A  2578  120A  118A  	fcall	stringdir
  2630  0511  00F2               	movwf	??_strcmp
  2631  0512  0875               	movf	strcmp@s1,w
  2632  0513  0084               	movwf	4
  2633  0514  1383               	bcf	3,7	;select IRP bank0
  2634  0515  0800               	movf	0,w
  2635  0516  00F3               	movwf	??_strcmp+1
  2636  0517  0872               	movf	??_strcmp,w
  2637  0518  0273               	subwf	??_strcmp+1,w
  2638  0519  00FF               	movwf	btemp+1
  2639  051A  087F               	movf	btemp+1,w
  2640  051B  00F4               	movwf	strcmp@r
  2641  051C  0874               	movf	strcmp@r,w
  2642  051D  1D03               	btfss	3,2
  2643  051E  2D20               	goto	u116_21
  2644  051F  2D21               	goto	u116_20
  2645  0520                     u116_21:
  2646  0520  2D28               	goto	i1l1651
  2647  0521                     u116_20:
  2648  0521                     i1l1649:
  2649  0521  0875               	movf	strcmp@s1,w
  2650  0522  0084               	movwf	4
  2651  0523  0800               	movf	0,w
  2652  0524  1D03               	btfss	3,2
  2653  0525  2D27               	goto	u117_21
  2654  0526  2D28               	goto	u117_20
  2655  0527                     u117_21:
  2656  0527  2D02               	goto	i1l1643
  2657  0528                     u117_20:
  2658  0528                     i1l1651:
  2659  0528  0874               	movf	strcmp@r,w
  2660  0529  00F0               	movwf	?_strcmp
  2661  052A  01F1               	clrf	?_strcmp+1
  2662  052B  1BF0               	btfsc	?_strcmp,7
  2663  052C  03F1               	decf	?_strcmp+1,f
  2664  052D                     i1l817:
  2665  052D  0008               	return
  2666  052E                     __end_of_strcmp:
  2667                           
  2668                           	psect	text14
  2669  0161                     __ptext14:	
  2670 ;; *************** function _sprintf *****************
  2671 ;; Defined at:
  2672 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;  sp              1    wreg     PTR unsigned char 
  2675 ;;		 -> data(10), 
  2676 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2677 ;;		 -> STR_7(4), STR_5(4), 
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  2680 ;;		 -> data(10), 
  2681 ;;  tmpval          4    0        struct .
  2682 ;;  val             2    9[BANK0 ] unsigned int 
  2683 ;;  cp              2    0        PTR const unsigned char 
  2684 ;;  len             2    0        unsigned int 
  2685 ;;  c               1   12[BANK0 ] unsigned char 
  2686 ;;  prec            1    8[BANK0 ] char 
  2687 ;;  flag            1    7[BANK0 ] unsigned char 
  2688 ;;  ap              1    6[BANK0 ] PTR void [1]
  2689 ;;		 -> ?_sprintf(2), 
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  2    0[BANK0 ] int 
  2692 ;; Registers used:
  2693 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2699 ;;      Params:         0       3       0       0       0
  2700 ;;      Locals:         0       7       0       0       0
  2701 ;;      Temps:          0       3       0       0       0
  2702 ;;      Totals:         0      13       0       0       0
  2703 ;;Total ram usage:       13 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:    1
  2706 ;; This function calls:
  2707 ;;		___lwdiv
  2708 ;;		___lwmod
  2709 ;; This function is called by:
  2710 ;;		_myISR
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           
  2715                           ;psect for function _sprintf
  2716  0161                     _sprintf:
  2717                           
  2718                           ;incstack = 0
  2719                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2720                           ;sprintf@sp stored from wreg
  2721  0161  1283               	bcf	3,5	;RP0=0, select bank0
  2722  0162  1303               	bcf	3,6	;RP1=0, select bank0
  2723  0163  00AB               	movwf	sprintf@sp
  2724  0164                     i1l1655:
  2725                           
  2726                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2727  0164  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2728  0165  00FF               	movwf	btemp+1
  2729  0166  087F               	movf	btemp+1,w
  2730  0167  00A6               	movwf	sprintf@ap
  2731                           
  2732                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2733  0168  2A32               	goto	i1l1709
  2734  0169                     i1l1657:
  2735                           
  2736                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2737  0169  3025               	movlw	37
  2738  016A  062C               	xorwf	sprintf@c,w
  2739  016B  1903               	btfsc	3,2
  2740  016C  296E               	goto	u118_21
  2741  016D  296F               	goto	u118_20
  2742  016E                     u118_21:
  2743  016E  297B               	goto	i1l1663
  2744  016F                     u118_20:
  2745  016F                     i1l1659:
  2746                           
  2747                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2748  016F  082C               	movf	sprintf@c,w
  2749  0170  00FF               	movwf	btemp+1
  2750  0171  082B               	movf	sprintf@sp,w
  2751  0172  0084               	movwf	4
  2752  0173  087F               	movf	btemp+1,w
  2753  0174  1383               	bcf	3,7	;select IRP bank0
  2754  0175  0080               	movwf	0
  2755  0176                     i1l1661:
  2756  0176  3001               	movlw	1
  2757  0177  00FF               	movwf	btemp+1
  2758  0178  087F               	movf	btemp+1,w
  2759  0179  07AB               	addwf	sprintf@sp,f
  2760                           
  2761                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 559:    continue;
  2762  017A  2A32               	goto	i1l1709
  2763  017B                     i1l1663:
  2764                           
  2765                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2766  017B  01A7               	clrf	sprintf@flag
  2767  017C                     i1l1667:	
  2768                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2769                           
  2770  017C  3001               	movlw	1
  2771  017D  07A0               	addwf	sprintf@f,f
  2772  017E  30FF               	movlw	-1
  2773  017F  0720               	addwf	sprintf@f,w
  2774  0180  0084               	movwf	4
  2775  0181  120A  118A  2578  120A  118A  	fcall	stringdir
  2776  0186  00AC               	movwf	sprintf@c
  2777  0187  00A3               	movwf	??_sprintf
  2778  0188  01A4               	clrf	??_sprintf+1
  2779                           
  2780                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2781                           ; Switch size 1, requested type "simple"
  2782                           ; Number of cases is 1, Range of values is 0 to 0
  2783                           ; switch strategies available:
  2784                           ; Name         Instructions Cycles
  2785                           ; simple_byte            4     3 (average)
  2786                           ; direct_byte           11     8 (fixed)
  2787                           ; jumptable            260     6 (fixed)
  2788                           ;	Chosen strategy is simple_byte
  2789  0189  0824               	movf	??_sprintf+1,w
  2790  018A  3A00               	xorlw	0	; case 0
  2791  018B  1903               	skipnz
  2792  018C  298E               	goto	i1l1921
  2793  018D  2A32               	goto	i1l1709
  2794  018E                     i1l1921:
  2795                           
  2796                           ; Switch size 1, requested type "simple"
  2797                           ; Number of cases is 3, Range of values is 0 to 105
  2798                           ; switch strategies available:
  2799                           ; Name         Instructions Cycles
  2800                           ; simple_byte           10     6 (average)
  2801                           ; jumptable            260     6 (fixed)
  2802                           ;	Chosen strategy is simple_byte
  2803  018E  0823               	movf	??_sprintf,w
  2804  018F  3A00               	xorlw	0	; case 0
  2805  0190  1903               	skipnz
  2806  0191  2A44               	goto	i1l1711
  2807  0192  3A64               	xorlw	100	; case 100
  2808  0193  1903               	skipnz
  2809  0194  2999               	goto	i1l1669
  2810  0195  3A0D               	xorlw	13	; case 105
  2811  0196  1903               	skipnz
  2812  0197  2999               	goto	i1l1669
  2813  0198  2A32               	goto	i1l1709
  2814  0199                     i1l1669:
  2815                           
  2816                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2817  0199  0826               	movf	sprintf@ap,w
  2818  019A  0084               	movwf	4
  2819  019B  1383               	bcf	3,7	;select IRP bank0
  2820  019C  0800               	movf	0,w
  2821  019D  00A9               	movwf	sprintf@val
  2822  019E  0A84               	incf	4,f
  2823  019F  0800               	movf	0,w
  2824  01A0  00AA               	movwf	sprintf@val+1
  2825  01A1                     i1l1671:
  2826  01A1  3002               	movlw	2
  2827  01A2  00FF               	movwf	btemp+1
  2828  01A3  087F               	movf	btemp+1,w
  2829  01A4  07A6               	addwf	sprintf@ap,f
  2830  01A5                     i1l1673:
  2831                           
  2832                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2833  01A5  1FAA               	btfss	sprintf@val+1,7
  2834  01A6  29A8               	goto	u119_21
  2835  01A7  29A9               	goto	u119_20
  2836  01A8                     u119_21:
  2837  01A8  29B2               	goto	i1l1679
  2838  01A9                     u119_20:
  2839  01A9                     i1l1675:
  2840                           
  2841                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2842  01A9  3003               	movlw	3
  2843  01AA  00FF               	movwf	btemp+1
  2844  01AB  087F               	movf	btemp+1,w
  2845  01AC  04A7               	iorwf	sprintf@flag,f
  2846  01AD                     i1l1677:
  2847                           
  2848                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2849  01AD  09A9               	comf	sprintf@val,f
  2850  01AE  09AA               	comf	sprintf@val+1,f
  2851  01AF  0AA9               	incf	sprintf@val,f
  2852  01B0  1903               	skipnz
  2853  01B1  0AAA               	incf	sprintf@val+1,f
  2854  01B2                     i1l1679:
  2855                           
  2856                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2857  01B2  01AC               	clrf	sprintf@c
  2858  01B3  0AAC               	incf	sprintf@c,f
  2859  01B4                     i1l1685:
  2860                           
  2861                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2862  01B4  082C               	movf	sprintf@c,w
  2863  01B5  00A3               	movwf	??_sprintf
  2864  01B6  0723               	addwf	??_sprintf,w
  2865  01B7  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2866  01B8  0084               	movwf	4
  2867  01B9  120A  118A  2578  120A  118A  	fcall	stringdir
  2868  01BE  00A4               	movwf	??_sprintf+1
  2869  01BF  120A  118A  2578  120A  118A  	fcall	stringdir
  2870  01C4  00A5               	movwf	??_sprintf+2
  2871  01C5  0825               	movf	??_sprintf+2,w
  2872  01C6  022A               	subwf	sprintf@val+1,w
  2873  01C7  1D03               	skipz
  2874  01C8  29CB               	goto	u120_25
  2875  01C9  0824               	movf	??_sprintf+1,w
  2876  01CA  0229               	subwf	sprintf@val,w
  2877  01CB                     u120_25:
  2878  01CB  1803               	skipnc
  2879  01CC  29CE               	goto	u120_21
  2880  01CD  29CF               	goto	u120_20
  2881  01CE                     u120_21:
  2882  01CE  29D0               	goto	i1l1689
  2883  01CF                     u120_20:
  2884  01CF  29DA               	goto	i1l1693
  2885  01D0                     i1l1689:
  2886  01D0  3001               	movlw	1
  2887  01D1  00FF               	movwf	btemp+1
  2888  01D2  087F               	movf	btemp+1,w
  2889  01D3  07AC               	addwf	sprintf@c,f
  2890  01D4                     i1l1691:
  2891  01D4  3005               	movlw	5
  2892  01D5  062C               	xorwf	sprintf@c,w
  2893  01D6  1D03               	btfss	3,2
  2894  01D7  29D9               	goto	u121_21
  2895  01D8  29DA               	goto	u121_20
  2896  01D9                     u121_21:
  2897  01D9  29B4               	goto	i1l1685
  2898  01DA                     u121_20:
  2899  01DA                     i1l1693:
  2900                           
  2901                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2902  01DA  0827               	movf	sprintf@flag,w
  2903  01DB  3903               	andlw	3
  2904  01DC  1903               	btfsc	3,2
  2905  01DD  29DF               	goto	u122_21
  2906  01DE  29E0               	goto	u122_20
  2907  01DF                     u122_21:
  2908  01DF  29EB               	goto	i1l1699
  2909  01E0                     u122_20:
  2910  01E0                     i1l1695:
  2911                           
  2912                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2913  01E0  302D               	movlw	45
  2914  01E1  00FF               	movwf	btemp+1
  2915  01E2  082B               	movf	sprintf@sp,w
  2916  01E3  0084               	movwf	4
  2917  01E4  087F               	movf	btemp+1,w
  2918  01E5  1383               	bcf	3,7	;select IRP bank0
  2919  01E6  0080               	movwf	0
  2920  01E7                     i1l1697:
  2921  01E7  3001               	movlw	1
  2922  01E8  00FF               	movwf	btemp+1
  2923  01E9  087F               	movf	btemp+1,w
  2924  01EA  07AB               	addwf	sprintf@sp,f
  2925  01EB                     i1l1699:
  2926                           
  2927                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2928  01EB  082C               	movf	sprintf@c,w
  2929  01EC  00FF               	movwf	btemp+1
  2930  01ED  087F               	movf	btemp+1,w
  2931  01EE  00A8               	movwf	sprintf@prec
  2932                           
  2933                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2934  01EF  2A29               	goto	i1l1707
  2935  01F0                     i1l1701:
  2936                           
  2937                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2938  01F0  300A               	movlw	10
  2939  01F1  00F7               	movwf	___lwmod@divisor
  2940  01F2  3000               	movlw	0
  2941  01F3  00F8               	movwf	___lwmod@divisor+1
  2942  01F4  0828               	movf	sprintf@prec,w
  2943  01F5  00A3               	movwf	??_sprintf
  2944  01F6  0723               	addwf	??_sprintf,w
  2945  01F7  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2946  01F8  0084               	movwf	4
  2947  01F9  120A  118A  2578  120A  118A  	fcall	stringdir
  2948  01FE  00F0               	movwf	___lwdiv@divisor
  2949  01FF  120A  118A  2578  120A  118A  	fcall	stringdir
  2950  0204  00F1               	movwf	___lwdiv@divisor+1
  2951  0205  082A               	movf	sprintf@val+1,w
  2952  0206  00F3               	movwf	___lwdiv@dividend+1
  2953  0207  0829               	movf	sprintf@val,w
  2954  0208  00F2               	movwf	___lwdiv@dividend
  2955  0209  120A  118A  23EC  120A  118A  	fcall	___lwdiv
  2956  020E  0871               	movf	?___lwdiv+1,w
  2957  020F  00FA               	movwf	___lwmod@dividend+1
  2958  0210  0870               	movf	?___lwdiv,w
  2959  0211  00F9               	movwf	___lwmod@dividend
  2960  0212  120A  118A  2430  120A  118A  	fcall	___lwmod
  2961  0217  0877               	movf	?___lwmod,w
  2962  0218  3E30               	addlw	48
  2963  0219  00FF               	movwf	btemp+1
  2964  021A  087F               	movf	btemp+1,w
  2965  021B  1283               	bcf	3,5	;RP0=0, select bank0
  2966  021C  1303               	bcf	3,6	;RP1=0, select bank0
  2967  021D  00AC               	movwf	sprintf@c
  2968  021E                     i1l1703:
  2969                           
  2970                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2971  021E  082C               	movf	sprintf@c,w
  2972  021F  00FF               	movwf	btemp+1
  2973  0220  082B               	movf	sprintf@sp,w
  2974  0221  0084               	movwf	4
  2975  0222  087F               	movf	btemp+1,w
  2976  0223  1383               	bcf	3,7	;select IRP bank0
  2977  0224  0080               	movwf	0
  2978  0225                     i1l1705:
  2979  0225  3001               	movlw	1
  2980  0226  00FF               	movwf	btemp+1
  2981  0227  087F               	movf	btemp+1,w
  2982  0228  07AB               	addwf	sprintf@sp,f
  2983  0229                     i1l1707:
  2984                           
  2985                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2986  0229  30FF               	movlw	255
  2987  022A  00FF               	movwf	btemp+1
  2988  022B  087F               	movf	btemp+1,w
  2989  022C  07A8               	addwf	sprintf@prec,f
  2990  022D  0A28               	incf	sprintf@prec,w
  2991  022E  1D03               	btfss	3,2
  2992  022F  2A31               	goto	u123_21
  2993  0230  2A32               	goto	u123_20
  2994  0231                     u123_21:
  2995  0231  29F0               	goto	i1l1701
  2996  0232                     u123_20:
  2997  0232                     i1l1709:
  2998                           
  2999                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3000  0232  3001               	movlw	1
  3001  0233  07A0               	addwf	sprintf@f,f
  3002  0234  30FF               	movlw	-1
  3003  0235  0720               	addwf	sprintf@f,w
  3004  0236  0084               	movwf	4
  3005  0237  120A  118A  2578  120A  118A  	fcall	stringdir
  3006  023C  00FF               	movwf	btemp+1
  3007  023D  087F               	movf	btemp+1,w
  3008  023E  00AC               	movwf	sprintf@c
  3009  023F  082C               	movf	sprintf@c,w
  3010  0240  1D03               	btfss	3,2
  3011  0241  2A43               	goto	u124_21
  3012  0242  2A44               	goto	u124_20
  3013  0243                     u124_21:
  3014  0243  2969               	goto	i1l1657
  3015  0244                     u124_20:
  3016  0244                     i1l1711:
  3017                           
  3018                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3019  0244  082B               	movf	sprintf@sp,w
  3020  0245  0084               	movwf	4
  3021  0246  1383               	bcf	3,7	;select IRP bank0
  3022  0247  0180               	clrf	0
  3023  0248                     i1l357:
  3024  0248  0008               	return
  3025  0249                     __end_of_sprintf:
  3026                           
  3027                           	psect	text15
  3028  0430                     __ptext15:	
  3029 ;; *************** function ___lwmod *****************
  3030 ;; Defined at:
  3031 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;  divisor         2    7[COMMON] unsigned int 
  3034 ;;  dividend        2    9[COMMON] unsigned int 
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;  counter         1   11[COMMON] unsigned char 
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  2    7[COMMON] unsigned int 
  3039 ;; Registers used:
  3040 ;;		wreg, status,2, status,0, btemp+1
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3046 ;;      Params:         4       0       0       0       0
  3047 ;;      Locals:         1       0       0       0       0
  3048 ;;      Temps:          0       0       0       0       0
  3049 ;;      Totals:         5       0       0       0       0
  3050 ;;Total ram usage:        5 bytes
  3051 ;; Hardware stack levels used:    1
  3052 ;; This function calls:
  3053 ;;		Nothing
  3054 ;; This function is called by:
  3055 ;;		_sprintf
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           
  3060                           ;psect for function ___lwmod
  3061  0430                     ___lwmod:
  3062  0430                     i1l1537:	
  3063                           ;incstack = 0
  3064                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  3065                           
  3066  0430  0877               	movf	___lwmod@divisor,w
  3067  0431  0478               	iorwf	___lwmod@divisor+1,w
  3068  0432  1903               	btfsc	3,2
  3069  0433  2C35               	goto	u98_21
  3070  0434  2C36               	goto	u98_20
  3071  0435                     u98_21:
  3072  0435  2C65               	goto	i1l1555
  3073  0436                     u98_20:
  3074  0436                     i1l1539:
  3075  0436  01FB               	clrf	___lwmod@counter
  3076  0437  0AFB               	incf	___lwmod@counter,f
  3077  0438  2C44               	goto	i1l1545
  3078  0439                     i1l1541:
  3079  0439  3001               	movlw	1
  3080  043A                     u99_25:
  3081  043A  1003               	clrc
  3082  043B  0DF7               	rlf	___lwmod@divisor,f
  3083  043C  0DF8               	rlf	___lwmod@divisor+1,f
  3084  043D  3EFF               	addlw	-1
  3085  043E  1D03               	skipz
  3086  043F  2C3A               	goto	u99_25
  3087  0440                     i1l1543:
  3088  0440  3001               	movlw	1
  3089  0441  00FF               	movwf	btemp+1
  3090  0442  087F               	movf	btemp+1,w
  3091  0443  07FB               	addwf	___lwmod@counter,f
  3092  0444                     i1l1545:
  3093  0444  1FF8               	btfss	___lwmod@divisor+1,7
  3094  0445  2C47               	goto	u100_21
  3095  0446  2C48               	goto	u100_20
  3096  0447                     u100_21:
  3097  0447  2C39               	goto	i1l1541
  3098  0448                     u100_20:
  3099  0448                     i1l1547:
  3100  0448  0878               	movf	___lwmod@divisor+1,w
  3101  0449  027A               	subwf	___lwmod@dividend+1,w
  3102  044A  1D03               	skipz
  3103  044B  2C4E               	goto	u101_25
  3104  044C  0877               	movf	___lwmod@divisor,w
  3105  044D  0279               	subwf	___lwmod@dividend,w
  3106  044E                     u101_25:
  3107  044E  1C03               	skipc
  3108  044F  2C51               	goto	u101_21
  3109  0450  2C52               	goto	u101_20
  3110  0451                     u101_21:
  3111  0451  2C58               	goto	i1l1551
  3112  0452                     u101_20:
  3113  0452                     i1l1549:
  3114  0452  0877               	movf	___lwmod@divisor,w
  3115  0453  02F9               	subwf	___lwmod@dividend,f
  3116  0454  0878               	movf	___lwmod@divisor+1,w
  3117  0455  1C03               	skipc
  3118  0456  03FA               	decf	___lwmod@dividend+1,f
  3119  0457  02FA               	subwf	___lwmod@dividend+1,f
  3120  0458                     i1l1551:
  3121  0458  3001               	movlw	1
  3122  0459                     u102_25:
  3123  0459  1003               	clrc
  3124  045A  0CF8               	rrf	___lwmod@divisor+1,f
  3125  045B  0CF7               	rrf	___lwmod@divisor,f
  3126  045C  3EFF               	addlw	-1
  3127  045D  1D03               	skipz
  3128  045E  2C59               	goto	u102_25
  3129  045F                     i1l1553:
  3130  045F  3001               	movlw	1
  3131  0460  02FB               	subwf	___lwmod@counter,f
  3132  0461  1D03               	btfss	3,2
  3133  0462  2C64               	goto	u103_21
  3134  0463  2C65               	goto	u103_20
  3135  0464                     u103_21:
  3136  0464  2C48               	goto	i1l1547
  3137  0465                     u103_20:
  3138  0465                     i1l1555:
  3139  0465  087A               	movf	___lwmod@dividend+1,w
  3140  0466  00F8               	movwf	?___lwmod+1
  3141  0467  0879               	movf	___lwmod@dividend,w
  3142  0468  00F7               	movwf	?___lwmod
  3143  0469                     i1l643:
  3144  0469  0008               	return
  3145  046A                     __end_of___lwmod:
  3146                           
  3147                           	psect	text16
  3148  03EC                     __ptext16:	
  3149 ;; *************** function ___lwdiv *****************
  3150 ;; Defined at:
  3151 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;  divisor         2    0[COMMON] unsigned int 
  3154 ;;  dividend        2    2[COMMON] unsigned int 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  quotient        2    4[COMMON] unsigned int 
  3157 ;;  counter         1    6[COMMON] unsigned char 
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  2    0[COMMON] unsigned int 
  3160 ;; Registers used:
  3161 ;;		wreg, status,2, status,0, btemp+1
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3167 ;;      Params:         4       0       0       0       0
  3168 ;;      Locals:         3       0       0       0       0
  3169 ;;      Temps:          0       0       0       0       0
  3170 ;;      Totals:         7       0       0       0       0
  3171 ;;Total ram usage:        7 bytes
  3172 ;; Hardware stack levels used:    1
  3173 ;; This function calls:
  3174 ;;		Nothing
  3175 ;; This function is called by:
  3176 ;;		_sprintf
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           
  3181                           ;psect for function ___lwdiv
  3182  03EC                     ___lwdiv:
  3183  03EC                     i1l1511:	
  3184                           ;incstack = 0
  3185                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  3186                           
  3187  03EC  01F4               	clrf	___lwdiv@quotient
  3188  03ED  01F5               	clrf	___lwdiv@quotient+1
  3189  03EE                     i1l1513:
  3190  03EE  0870               	movf	___lwdiv@divisor,w
  3191  03EF  0471               	iorwf	___lwdiv@divisor+1,w
  3192  03F0  1903               	btfsc	3,2
  3193  03F1  2BF3               	goto	u91_21
  3194  03F2  2BF4               	goto	u91_20
  3195  03F3                     u91_21:
  3196  03F3  2C2B               	goto	i1l1533
  3197  03F4                     u91_20:
  3198  03F4                     i1l1515:
  3199  03F4  01F6               	clrf	___lwdiv@counter
  3200  03F5  0AF6               	incf	___lwdiv@counter,f
  3201  03F6  2C02               	goto	i1l1521
  3202  03F7                     i1l1517:
  3203  03F7  3001               	movlw	1
  3204  03F8                     u92_25:
  3205  03F8  1003               	clrc
  3206  03F9  0DF0               	rlf	___lwdiv@divisor,f
  3207  03FA  0DF1               	rlf	___lwdiv@divisor+1,f
  3208  03FB  3EFF               	addlw	-1
  3209  03FC  1D03               	skipz
  3210  03FD  2BF8               	goto	u92_25
  3211  03FE                     i1l1519:
  3212  03FE  3001               	movlw	1
  3213  03FF  00FF               	movwf	btemp+1
  3214  0400  087F               	movf	btemp+1,w
  3215  0401  07F6               	addwf	___lwdiv@counter,f
  3216  0402                     i1l1521:
  3217  0402  1FF1               	btfss	___lwdiv@divisor+1,7
  3218  0403  2C05               	goto	u93_21
  3219  0404  2C06               	goto	u93_20
  3220  0405                     u93_21:
  3221  0405  2BF7               	goto	i1l1517
  3222  0406                     u93_20:
  3223  0406                     i1l1523:
  3224  0406  3001               	movlw	1
  3225  0407                     u94_25:
  3226  0407  1003               	clrc
  3227  0408  0DF4               	rlf	___lwdiv@quotient,f
  3228  0409  0DF5               	rlf	___lwdiv@quotient+1,f
  3229  040A  3EFF               	addlw	-1
  3230  040B  1D03               	skipz
  3231  040C  2C07               	goto	u94_25
  3232  040D  0871               	movf	___lwdiv@divisor+1,w
  3233  040E  0273               	subwf	___lwdiv@dividend+1,w
  3234  040F  1D03               	skipz
  3235  0410  2C13               	goto	u95_25
  3236  0411  0870               	movf	___lwdiv@divisor,w
  3237  0412  0272               	subwf	___lwdiv@dividend,w
  3238  0413                     u95_25:
  3239  0413  1C03               	skipc
  3240  0414  2C16               	goto	u95_21
  3241  0415  2C17               	goto	u95_20
  3242  0416                     u95_21:
  3243  0416  2C1E               	goto	i1l1529
  3244  0417                     u95_20:
  3245  0417                     i1l1525:
  3246  0417  0870               	movf	___lwdiv@divisor,w
  3247  0418  02F2               	subwf	___lwdiv@dividend,f
  3248  0419  0871               	movf	___lwdiv@divisor+1,w
  3249  041A  1C03               	skipc
  3250  041B  03F3               	decf	___lwdiv@dividend+1,f
  3251  041C  02F3               	subwf	___lwdiv@dividend+1,f
  3252  041D                     i1l1527:
  3253  041D  1474               	bsf	___lwdiv@quotient,0
  3254  041E                     i1l1529:
  3255  041E  3001               	movlw	1
  3256  041F                     u96_25:
  3257  041F  1003               	clrc
  3258  0420  0CF1               	rrf	___lwdiv@divisor+1,f
  3259  0421  0CF0               	rrf	___lwdiv@divisor,f
  3260  0422  3EFF               	addlw	-1
  3261  0423  1D03               	skipz
  3262  0424  2C1F               	goto	u96_25
  3263  0425                     i1l1531:
  3264  0425  3001               	movlw	1
  3265  0426  02F6               	subwf	___lwdiv@counter,f
  3266  0427  1D03               	btfss	3,2
  3267  0428  2C2A               	goto	u97_21
  3268  0429  2C2B               	goto	u97_20
  3269  042A                     u97_21:
  3270  042A  2C06               	goto	i1l1523
  3271  042B                     u97_20:
  3272  042B                     i1l1533:
  3273  042B  0875               	movf	___lwdiv@quotient+1,w
  3274  042C  00F1               	movwf	?___lwdiv+1
  3275  042D  0874               	movf	___lwdiv@quotient,w
  3276  042E  00F0               	movwf	?___lwdiv
  3277  042F                     i1l633:
  3278  042F  0008               	return
  3279  0430                     __end_of___lwdiv:
  3280                           
  3281                           	psect	text17
  3282  052E                     __ptext17:	
  3283 ;; *************** function _recivedCMD *****************
  3284 ;; Defined at:
  3285 ;;		line 48 in file "usart.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;  cmd             1    wreg     PTR unsigned char 
  3288 ;;		 -> data(10), 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;  cmd             1    1[COMMON] PTR unsigned char 
  3291 ;;		 -> data(10), 
  3292 ;;  j               1    3[COMMON] unsigned char 
  3293 ;;  i               1    2[COMMON] unsigned char 
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  1    wreg      void 
  3296 ;; Registers used:
  3297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3303 ;;      Params:         0       0       0       0       0
  3304 ;;      Locals:         3       0       0       0       0
  3305 ;;      Temps:          1       0       0       0       0
  3306 ;;      Totals:         4       0       0       0       0
  3307 ;;Total ram usage:        4 bytes
  3308 ;; Hardware stack levels used:    1
  3309 ;; Hardware stack levels required when called:    1
  3310 ;; This function calls:
  3311 ;;		_get1
  3312 ;; This function is called by:
  3313 ;;		_myISR
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           
  3318                           ;psect for function _recivedCMD
  3319  052E                     _recivedCMD:
  3320                           
  3321                           ;incstack = 0
  3322                           ; Regs used in _recivedCMD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3323                           ;recivedCMD@cmd stored from wreg
  3324  052E  00F1               	movwf	recivedCMD@cmd
  3325  052F                     i1l1617:
  3326                           
  3327                           ;usart.c: 49:     unsigned char i = 0;
  3328  052F  01F2               	clrf	recivedCMD@i
  3329  0530                     i1l1619:
  3330                           
  3331                           ;usart.c: 52:         cmd[i] = get1();
  3332  0530  120A  118A  2637  120A  118A  	fcall	_get1
  3333  0535  00FF               	movwf	btemp+1
  3334  0536  0872               	movf	recivedCMD@i,w
  3335  0537  0771               	addwf	recivedCMD@cmd,w
  3336  0538  00F0               	movwf	??_recivedCMD
  3337  0539  0870               	movf	??_recivedCMD,w
  3338  053A  0084               	movwf	4
  3339  053B  087F               	movf	btemp+1,w
  3340  053C  1383               	bcf	3,7	;select IRP bank0
  3341  053D  0080               	movwf	0
  3342  053E                     i1l1621:
  3343                           
  3344                           ;usart.c: 53:         j = cmd[i];
  3345  053E  0872               	movf	recivedCMD@i,w
  3346  053F  0771               	addwf	recivedCMD@cmd,w
  3347  0540  00F0               	movwf	??_recivedCMD
  3348  0541  0870               	movf	??_recivedCMD,w
  3349  0542  0084               	movwf	4
  3350  0543  0800               	movf	0,w
  3351  0544  00FF               	movwf	btemp+1
  3352  0545  087F               	movf	btemp+1,w
  3353  0546  00F3               	movwf	recivedCMD@j
  3354  0547                     i1l1623:
  3355                           
  3356                           ;usart.c: 54:         i++;
  3357  0547  3001               	movlw	1
  3358  0548  00FF               	movwf	btemp+1
  3359  0549  087F               	movf	btemp+1,w
  3360  054A  07F2               	addwf	recivedCMD@i,f
  3361  054B                     i1l1625:
  3362                           
  3363                           ;usart.c: 55:         }
  3364  054B  300A               	movlw	10
  3365  054C  0673               	xorwf	recivedCMD@j,w
  3366  054D  1903               	btfsc	3,2
  3367  054E  2D50               	goto	u113_21
  3368  054F  2D51               	goto	u113_20
  3369  0550                     u113_21:
  3370  0550  2D57               	goto	i1l162
  3371  0551                     u113_20:
  3372  0551                     i1l1627:
  3373  0551  300D               	movlw	13
  3374  0552  0673               	xorwf	recivedCMD@j,w
  3375  0553  1D03               	btfss	3,2
  3376  0554  2D56               	goto	u114_21
  3377  0555  2D57               	goto	u114_20
  3378  0556                     u114_21:
  3379  0556  2D30               	goto	i1l1619
  3380  0557                     u114_20:
  3381  0557                     i1l162:
  3382  0557  0008               	return
  3383  0558                     __end_of_recivedCMD:
  3384                           
  3385                           	psect	text18
  3386  0637                     __ptext18:	
  3387 ;; *************** function _get1 *****************
  3388 ;; Defined at:
  3389 ;;		line 61 in file "usart.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;		None
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;		None
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      unsigned char 
  3396 ;; Registers used:
  3397 ;;		wreg
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3403 ;;      Params:         0       0       0       0       0
  3404 ;;      Locals:         0       0       0       0       0
  3405 ;;      Temps:          0       0       0       0       0
  3406 ;;      Totals:         0       0       0       0       0
  3407 ;;Total ram usage:        0 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; This function calls:
  3410 ;;		Nothing
  3411 ;; This function is called by:
  3412 ;;		_recivedCMD
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           
  3417                           ;psect for function _get1
  3418  0637                     _get1:
  3419  0637                     i1l1431:	
  3420                           ;incstack = 0
  3421                           ; Regs used in _get1: [wreg]
  3422                           
  3423  0637                     i1l165:	
  3424                           ;usart.c: 64:     }
  3425                           
  3426                           
  3427                           ;usart.c: 62:     while(!PIR1bits.RCIF){
  3428  0637  1283               	bcf	3,5	;RP0=0, select bank0
  3429  0638  1303               	bcf	3,6	;RP1=0, select bank0
  3430  0639  1E8C               	btfss	12,5	;volatile
  3431  063A  2E3C               	goto	u76_21
  3432  063B  2E3D               	goto	u76_20
  3433  063C                     u76_21:
  3434  063C  2E37               	goto	i1l165
  3435  063D                     u76_20:
  3436  063D                     i1l1433:
  3437                           
  3438                           ;usart.c: 65:     return RCREG;
  3439  063D  081A               	movf	26,w	;volatile
  3440  063E                     i1l168:
  3441  063E  0008               	return
  3442  063F                     __end_of_get1:
  3443                           
  3444                           	psect	text19
  3445  05C2                     __ptext19:	
  3446 ;; *************** function _i2c_write *****************
  3447 ;; Defined at:
  3448 ;;		line 52 in file "i2c.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;  dato            1    wreg     unsigned char 
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;  dato            1    0[COMMON] unsigned char 
  3453 ;; Return value:  Size  Location     Type
  3454 ;;                  1    wreg      unsigned char 
  3455 ;; Registers used:
  3456 ;;		wreg, status,2, status,0, pclath, cstack
  3457 ;; Tracked objects:
  3458 ;;		On entry : 0/0
  3459 ;;		On exit  : 0/0
  3460 ;;		Unchanged: 0/0
  3461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3462 ;;      Params:         0       0       0       0       0
  3463 ;;      Locals:         1       0       0       0       0
  3464 ;;      Temps:          0       0       0       0       0
  3465 ;;      Totals:         1       0       0       0       0
  3466 ;;Total ram usage:        1 bytes
  3467 ;; Hardware stack levels used:    1
  3468 ;; Hardware stack levels required when called:    1
  3469 ;; This function calls:
  3470 ;;		_i2c_idle
  3471 ;; This function is called by:
  3472 ;;		_myISR
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           
  3477                           ;psect for function _i2c_write
  3478  05C2                     _i2c_write:
  3479                           
  3480                           ;incstack = 0
  3481                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  3482                           ;i2c_write@dato stored from wreg
  3483  05C2  00F0               	movwf	i2c_write@dato
  3484  05C3                     i1l1581:
  3485                           
  3486                           ;i2c.c: 53:     i2c_idle();
  3487  05C3  120A  118A  2604  120A  118A  	fcall	_i2c_idle
  3488  05C8                     i1l1583:
  3489                           
  3490                           ;i2c.c: 54:     SSPBUF = dato;
  3491  05C8  0870               	movf	i2c_write@dato,w
  3492  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  3493  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  3494  05CB  0093               	movwf	19	;volatile
  3495  05CC                     i1l1585:	
  3496                           ;i2c.c: 55:     while(SSPSTAT & 0x05);
  3497                           
  3498  05CC  1683               	bsf	3,5	;RP0=1, select bank1
  3499  05CD  1303               	bcf	3,6	;RP1=0, select bank1
  3500  05CE  0814               	movf	20,w	;volatile
  3501  05CF  3905               	andlw	5
  3502  05D0  1D03               	btfss	3,2
  3503  05D1  2DD3               	goto	u110_21
  3504  05D2  2DD4               	goto	u110_20
  3505  05D3                     u110_21:
  3506  05D3  2DCC               	goto	i1l1585
  3507  05D4                     u110_20:
  3508  05D4                     i1l85:
  3509  05D4  0008               	return
  3510  05D5                     __end_of_i2c_write:
  3511                           
  3512                           	psect	text20
  3513  05F6                     __ptext20:	
  3514 ;; *************** function _i2c_stop *****************
  3515 ;; Defined at:
  3516 ;;		line 37 in file "i2c.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;		None
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;		None
  3521 ;; Return value:  Size  Location     Type
  3522 ;;                  1    wreg      void 
  3523 ;; Registers used:
  3524 ;;		None
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3530 ;;      Params:         0       0       0       0       0
  3531 ;;      Locals:         0       0       0       0       0
  3532 ;;      Temps:          0       0       0       0       0
  3533 ;;      Totals:         0       0       0       0       0
  3534 ;;Total ram usage:        0 bytes
  3535 ;; Hardware stack levels used:    1
  3536 ;; This function calls:
  3537 ;;		Nothing
  3538 ;; This function is called by:
  3539 ;;		_myISR
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           
  3544                           ;psect for function _i2c_stop
  3545  05F6                     _i2c_stop:
  3546  05F6                     i1l1571:	
  3547                           ;incstack = 0
  3548                           ; Regs used in _i2c_stop: []
  3549                           
  3550                           
  3551                           ;i2c.c: 38:     SSPCON2bits.PEN = 1;
  3552  05F6  1683               	bsf	3,5	;RP0=1, select bank1
  3553  05F7  1303               	bcf	3,6	;RP1=0, select bank1
  3554  05F8  1511               	bsf	17,2	;volatile
  3555  05F9                     i1l64:	
  3556                           ;i2c.c: 39:     while(SSPCON2bits.PEN);
  3557                           
  3558  05F9  1911               	btfsc	17,2	;volatile
  3559  05FA  2DFC               	goto	u106_21
  3560  05FB  2DFD               	goto	u106_20
  3561  05FC                     u106_21:
  3562  05FC  2DF9               	goto	i1l64
  3563  05FD                     u106_20:
  3564  05FD                     i1l67:
  3565  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  3566  05FE  1D8C               	btfss	12,3	;volatile
  3567  05FF  2E01               	goto	u107_21
  3568  0600  2E02               	goto	u107_20
  3569  0601                     u107_21:
  3570  0601  2DFD               	goto	i1l67
  3571  0602                     u107_20:
  3572  0602                     i1l69:
  3573                           
  3574                           ;i2c.c: 41:     SSPIF = 0;
  3575  0602  118C               	bcf	12,3	;volatile
  3576  0603                     i1l70:
  3577  0603  0008               	return
  3578  0604                     __end_of_i2c_stop:
  3579                           
  3580                           	psect	text21
  3581  05D5                     __ptext21:	
  3582 ;; *************** function _i2c_start *****************
  3583 ;; Defined at:
  3584 ;;		line 20 in file "i2c.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;		None
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      void 
  3591 ;; Registers used:
  3592 ;;		wreg, status,2, status,0, pclath, cstack
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3598 ;;      Params:         0       0       0       0       0
  3599 ;;      Locals:         0       0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0
  3601 ;;      Totals:         0       0       0       0       0
  3602 ;;Total ram usage:        0 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    1
  3605 ;; This function calls:
  3606 ;;		_i2c_idle
  3607 ;; This function is called by:
  3608 ;;		_myISR
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           
  3613                           ;psect for function _i2c_start
  3614  05D5                     _i2c_start:
  3615  05D5                     i1l1567:	
  3616                           ;incstack = 0
  3617                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  3618                           
  3619                           
  3620                           ;i2c.c: 22:     i2c_idle();
  3621  05D5  120A  118A  2604  120A  118A  	fcall	_i2c_idle
  3622  05DA                     i1l1569:
  3623                           
  3624                           ;i2c.c: 23:     SSPCON2bits.SEN = 1;
  3625  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  3626  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  3627  05DC  1411               	bsf	17,0	;volatile
  3628  05DD                     i1l46:	
  3629                           ;i2c.c: 24:     while(SSPCON2bits.SEN == 1);
  3630                           
  3631  05DD  1811               	btfsc	17,0	;volatile
  3632  05DE  2DE0               	goto	u104_21
  3633  05DF  2DE1               	goto	u104_20
  3634  05E0                     u104_21:
  3635  05E0  2DDD               	goto	i1l46
  3636  05E1                     u104_20:
  3637  05E1                     i1l49:
  3638  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  3639  05E2  1D8C               	btfss	12,3	;volatile
  3640  05E3  2DE5               	goto	u105_21
  3641  05E4  2DE6               	goto	u105_20
  3642  05E5                     u105_21:
  3643  05E5  2DE1               	goto	i1l49
  3644  05E6                     u105_20:
  3645  05E6                     i1l51:
  3646                           
  3647                           ;i2c.c: 26:     SSPIF = 0;
  3648  05E6  118C               	bcf	12,3	;volatile
  3649  05E7                     i1l52:
  3650  05E7  0008               	return
  3651  05E8                     __end_of_i2c_start:
  3652                           
  3653                           	psect	text22
  3654  0626                     __ptext22:	
  3655 ;; *************** function _i2c_sendACK *****************
  3656 ;; Defined at:
  3657 ;;		line 76 in file "i2c.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;		None
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;		None
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  1    wreg      void 
  3664 ;; Registers used:
  3665 ;;		None
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3671 ;;      Params:         0       0       0       0       0
  3672 ;;      Locals:         0       0       0       0       0
  3673 ;;      Temps:          0       0       0       0       0
  3674 ;;      Totals:         0       0       0       0       0
  3675 ;;Total ram usage:        0 bytes
  3676 ;; Hardware stack levels used:    1
  3677 ;; This function calls:
  3678 ;;		Nothing
  3679 ;; This function is called by:
  3680 ;;		_myISR
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           
  3685                           ;psect for function _i2c_sendACK
  3686  0626                     _i2c_sendACK:
  3687  0626                     i1l1587:	
  3688                           ;incstack = 0
  3689                           ; Regs used in _i2c_sendACK: []
  3690                           
  3691                           
  3692                           ;i2c.c: 77:     SSPCON2bits.ACKDT = 0;
  3693  0626  1683               	bsf	3,5	;RP0=1, select bank1
  3694  0627  1303               	bcf	3,6	;RP1=0, select bank1
  3695  0628  1291               	bcf	17,5	;volatile
  3696                           
  3697                           ;i2c.c: 78:     SSPCON2bits.ACKEN = 1;
  3698  0629  1611               	bsf	17,4	;volatile
  3699  062A                     i1l94:	
  3700                           ;i2c.c: 79:     while(SSPCON2bits.ACKEN == 1);
  3701                           
  3702  062A  1A11               	btfsc	17,4	;volatile
  3703  062B  2E2D               	goto	u111_21
  3704  062C  2E2E               	goto	u111_20
  3705  062D                     u111_21:
  3706  062D  2E2A               	goto	i1l94
  3707  062E                     u111_20:
  3708  062E                     i1l97:
  3709  062E  0008               	return
  3710  062F                     __end_of_i2c_sendACK:
  3711                           
  3712                           	psect	text23
  3713  05AE                     __ptext23:	
  3714 ;; *************** function _i2c_read *****************
  3715 ;; Defined at:
  3716 ;;		line 44 in file "i2c.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;		None
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;		None
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  1    wreg      unsigned char 
  3723 ;; Registers used:
  3724 ;;		wreg, status,2, status,0, pclath, cstack
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3730 ;;      Params:         0       0       0       0       0
  3731 ;;      Locals:         0       0       0       0       0
  3732 ;;      Temps:          0       0       0       0       0
  3733 ;;      Totals:         0       0       0       0       0
  3734 ;;Total ram usage:        0 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; Hardware stack levels required when called:    1
  3737 ;; This function calls:
  3738 ;;		_i2c_idle
  3739 ;; This function is called by:
  3740 ;;		_myISR
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           
  3745                           ;psect for function _i2c_read
  3746  05AE                     _i2c_read:
  3747  05AE                     i1l1573:	
  3748                           ;incstack = 0
  3749                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  3750                           
  3751                           
  3752                           ;i2c.c: 45:     i2c_idle();
  3753  05AE  120A  118A  2604  120A  118A  	fcall	_i2c_idle
  3754  05B3                     i1l1575:
  3755                           
  3756                           ;i2c.c: 46:     SSPCON2bits.RCEN = 1;
  3757  05B3  1683               	bsf	3,5	;RP0=1, select bank1
  3758  05B4  1303               	bcf	3,6	;RP1=0, select bank1
  3759  05B5  1591               	bsf	17,3	;volatile
  3760  05B6                     i1l73:	
  3761                           ;i2c.c: 47:     while(SSPCON2bits.RCEN == 1);
  3762                           
  3763  05B6  1991               	btfsc	17,3	;volatile
  3764  05B7  2DB9               	goto	u108_21
  3765  05B8  2DBA               	goto	u108_20
  3766  05B9                     u108_21:
  3767  05B9  2DB6               	goto	i1l73
  3768  05BA                     u108_20:
  3769  05BA                     i1l76:
  3770  05BA  1C14               	btfss	20,0	;volatile
  3771  05BB  2DBD               	goto	u109_21
  3772  05BC  2DBE               	goto	u109_20
  3773  05BD                     u109_21:
  3774  05BD  2DBA               	goto	i1l76
  3775  05BE                     u109_20:
  3776  05BE                     i1l1577:
  3777                           
  3778                           ;i2c.c: 49:     return SSPBUF;
  3779  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  3780  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  3781  05C0  0813               	movf	19,w	;volatile
  3782  05C1                     i1l79:
  3783  05C1  0008               	return
  3784  05C2                     __end_of_i2c_read:
  3785                           
  3786                           	psect	text24
  3787  0604                     __ptext24:	
  3788 ;; *************** function _i2c_idle *****************
  3789 ;; Defined at:
  3790 ;;		line 81 in file "i2c.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;		None
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;		None
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      void 
  3797 ;; Registers used:
  3798 ;;		wreg, status,2
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3804 ;;      Params:         0       0       0       0       0
  3805 ;;      Locals:         0       0       0       0       0
  3806 ;;      Temps:          0       0       0       0       0
  3807 ;;      Totals:         0       0       0       0       0
  3808 ;;Total ram usage:        0 bytes
  3809 ;; Hardware stack levels used:    1
  3810 ;; This function calls:
  3811 ;;		Nothing
  3812 ;; This function is called by:
  3813 ;;		_i2c_start
  3814 ;;		_i2c_read
  3815 ;;		_i2c_write
  3816 ;;		_i2c_restart
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           
  3821                           ;psect for function _i2c_idle
  3822  0604                     _i2c_idle:
  3823  0604                     i1l1423:	
  3824                           ;incstack = 0
  3825                           ; Regs used in _i2c_idle: [wreg+status,2]
  3826                           
  3827  0604                     i1l1425:	
  3828                           ;i2c.c: 82:     while((SSPCON2 & 0x1F)|| (SSPSTAT & 0x04));
  3829                           
  3830  0604  1683               	bsf	3,5	;RP0=1, select bank1
  3831  0605  1303               	bcf	3,6	;RP1=0, select bank1
  3832  0606  0811               	movf	17,w	;volatile
  3833  0607  391F               	andlw	31
  3834  0608  1D03               	btfss	3,2
  3835  0609  2E0B               	goto	u73_21
  3836  060A  2E0C               	goto	u73_20
  3837  060B                     u73_21:
  3838  060B  2E04               	goto	i1l1425
  3839  060C                     u73_20:
  3840  060C                     i1l1427:
  3841  060C  1914               	btfsc	20,2	;volatile
  3842  060D  2E0F               	goto	u74_21
  3843  060E  2E10               	goto	u74_20
  3844  060F                     u74_21:
  3845  060F  2E04               	goto	i1l1425
  3846  0610                     u74_20:
  3847  0610                     i1l103:
  3848  0610  0008               	return
  3849  0611                     __end_of_i2c_idle:
  3850  007E                     btemp	set	126	;btemp
  3851  007E                     wtemp0	set	126
  3852                           
  3853                           	psect	config
  3854                           
  3855                           ;Config register CONFIG1 @ 0x2007
  3856                           ;	Oscillator Selection bits
  3857                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  3858                           ;	Watchdog Timer Enable bit
  3859                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3860                           ;	Power-up Timer Enable bit
  3861                           ;	PWRTE = OFF, PWRT disabled
  3862                           ;	RE3/MCLR pin function select bit
  3863                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  3864                           ;	Code Protection bit
  3865                           ;	CP = OFF, Program memory code protection is disabled
  3866                           ;	Data Code Protection bit
  3867                           ;	CPD = OFF, Data memory code protection is disabled
  3868                           ;	Brown Out Reset Selection bits
  3869                           ;	BOREN = ON, BOR enabled
  3870                           ;	Internal External Switchover bit
  3871                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3872                           ;	Fail-Safe Clock Monitor Enabled bit
  3873                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3874                           ;	Low Voltage Programming Enable bit
  3875                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  3876                           ;	In-Circuit Debugger Mode bit
  3877                           ;	DEBUG = 0x1, unprogrammed default
  3878  2007                     	org	8199
  3879  2007  3FF2               	dw	16370
  3880                           
  3881                           ;Config register CONFIG2 @ 0x2008
  3882                           ;	Brown-out Reset Selection bit
  3883                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3884                           ;	Flash Program Memory Self Write Enable bits
  3885                           ;	WRT = OFF, Write protection off
  3886  2008                     	org	8200
  3887  2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    10
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     40      57
    BANK1            80      7       7
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), NULL(NULL[0]), 

    strchr@ptr	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 2
		 -> STR_2(CODE[2]), STR_1(CODE[2]), NULL(NULL[0]), 

    strcspn@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), NULL(NULL[0]), 

    strtok@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), NULL(NULL[0]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), NULL(NULL[0]), 

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_7(CODE[4]), STR_5(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    dir	PTR unsigned char [3] size(1) Largest target is 10
		 -> data(BANK0[10]), NULL(NULL[0]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), NULL(NULL[0]), 

    token@cmd	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    token@tok	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), NULL(NULL[0]), 

    recivedCMD@cmd	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    usart_TxStr@str	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myISR in COMMON

    _usart_TxStr->_usart_Tx
    _token->_strtok
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    _main->_usart_init
    _usart_init->___aldiv

Critical Paths under _myISR in BANK0

    _myISR->_sprintf

Critical Paths under _main in BANK1

    _main->_usart_init

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     960
                                              4 BANK1      3     3      0
                           _i2c_init
                    _usart_Interrupt
                         _usart_init
 ---------------------------------------------------------------------------------
 (1) _usart_init                                           8     4      4     960
                                             36 BANK0      4     0      4
                                              0 BANK1      4     4      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     805
                                             21 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _usart_Interrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _myISR                                                8     8      0    3640
                                             13 BANK0      8     8      0
                           _i2c_read
                        _i2c_sendACK
                          _i2c_start
                           _i2c_stop
                          _i2c_write
                         _recivedCMD
                            _sprintf
                             _strcmp
                              _token
                           _usart_Tx
                        _usart_TxStr
 ---------------------------------------------------------------------------------
 (4) _usart_TxStr                                          1     1      0     133
                                              1 COMMON     1     1      0
                           _usart_Tx
 ---------------------------------------------------------------------------------
 (5) _usart_Tx                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _token                                                4     4      0    1556
                                              0 BANK0      4     4      0
                             _strtok
 ---------------------------------------------------------------------------------
 (5) _strtok                                               2     1      1    1430
                                             10 COMMON     2     1      1
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (6) _strspn                                               7     5      2     506
                                              3 COMMON     7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (6) _strcspn                                              7     5      2     506
                                              3 COMMON     7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (8) _strchr                                               3     1      2     306
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (5) _strcmp                                               6     4      2     418
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             21    18      3    1320
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) _recivedCMD                                           4     4      0     169
                                              0 COMMON     4     4      0
                               _get1
 ---------------------------------------------------------------------------------
 (5) _get1                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_sendACK                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_read                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (5) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_init
   _usart_Interrupt
   _usart_init
     ___aldiv

 _myISR (ROOT)
   _i2c_read
     _i2c_idle
   _i2c_sendACK
   _i2c_start
     _i2c_idle
   _i2c_stop
   _i2c_write
     _i2c_idle
   _recivedCMD
     _get1
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _strcmp
   _token
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr
   _usart_Tx
   _usart_TxStr
     _usart_Tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     28      39       5       71.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      7       7       7        8.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4D      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Oct 27 00:19:29 2021

                       pc 0002               _SSPSTATbits 0094                        l43 05F5  
                      fsr 0004                       l137 0354                       l155 0625  
                     l426 025D                       l436 02E5                       _dir 0048  
                     _res 004B                       fsr0 0004                       indf 0000  
                    l1615 061D                      l1561 05EC                      l1563 05F0  
                    l1565 05F1                      l1559 05E8                      l1831 0261  
                    l1841 0283                      l1833 026C                      l1825 0249  
                    l1851 02AF                      l1843 028C                      l1835 0270  
                    l1827 024C                      l1861 02D2                      l1853 02BD  
                    l1845 0290                      l1837 0278                      l1829 0250  
                    l1863 02DD                      l1855 02BE                      l1847 0294  
                    l1839 0280                      l1871 0347                      l1857 02C7  
                    l1849 029D                      l1881 0352                      l1873 034A  
                    l1859 02CD                      l1883 0353                      l1875 034D  
                    l1867 02E6                      l1891 03BF                      l1877 034E  
                    l1869 02EA                      l1893 03C4                      l1885 03A1  
                    l1879 034F                      l1895 03C7                      l1887 03AD  
                    l1897 03D6                      l1889 03BA                      l1899 03D9  
                    STR_1 0595                      STR_2 0595                      STR_3 058F  
                    STR_4 058C                      STR_5 0588                      STR_6 0592  
                    STR_7 0588                      u1400 02CD                      u1320 0250  
                    u1401 02CC                      u1321 024F                      u1410 02D2  
                    u1330 0261                      u1411 02D1                      u1331 0260  
                    u1340 0280                      u1341 027F                      u1360 0294  
                    u1361 0293                      u1355 0285                      u1427 03CF  
                    u1380 02AF                      u1381 02AE                      u1437 03E1  
                    u1375 0296                      u1385 02AB                      u1395 02BF  
                    i1l51 05E6                      i1l52 05E7                      i1l46 05DD  
                    i1l70 0603                      i1l64 05F9                      i1l73 05B6  
                    i1l49 05E1                      i1l67 05FD               _usart_TxStr 0597  
                    i1l76 05BA                      i1l69 0602                      i1l85 05D4  
                    i1l94 062A                      i1l79 05C1                      i1l97 062E  
                    _get1 0637                      _data 004F                      _main 03A1  
                    btemp 007E                      start 0012             ??_i2c_sendACK 0070  
                   ?_get1 0070           __end_of___aldiv 02E6                     ?_main 0070  
         __end_of___lwdiv 0430                     i1l103 0610                     i1l140 0616  
                   i1l143 061C                     i1l152 05AD                     i1l162 0557  
                   i1l165 0637                     i1l174 04A1                     i1l239 0156  
                   i1l168 063E           __end_of___lwmod 046A                     i1l357 0248  
                   i1l633 042F                     i1l643 0469                     i1l817 052D  
                   i1l841 04FF                     i1l844 0559                     i1l828 03A0  
                   i1l846 0577                     i1l857 04D0                     _RCREG 001A  
                   _SPBRG 0099                     _PORTB 0006                     _PORTD 0008  
                   u70_20 04CC                     u70_21 04CB                     u71_20 04E7  
                   u71_21 04E6                     u72_20 04FB                     u80_20 0396  
                   u72_21 04FA                     u80_21 0395                     u73_20 060C  
                   u73_21 060B                     _TRISB 0086                     _TRISD 0088  
                   u74_20 0610                     _SSPIF 0063                     u74_21 060F  
                   u91_20 03F4                     u67_20 0565                     u75_20 061C  
                   u91_21 03F3                     u67_21 0564                     u75_21 061B  
                   u76_20 063D                     u68_20 0576                     u76_21 063C  
                   u68_21 0575                     u92_25 03F8                     u93_20 0406  
                   u69_20 04B8                     u77_20 035B                     u93_21 0405  
                   u69_21 04B7                     u77_21 035A                     u78_20 0364  
                   u78_21 0363                     u94_25 0407                     u95_20 0417  
                   u79_20 037C                     u95_21 0416                     u79_21 037B  
                   u95_25 0413                     u96_25 041F                     u97_20 042B  
                   u97_21 042A                     _TXREG 0019                     u98_20 0436  
                   u98_21 0435                     u99_25 043A           __end_of_dpowers 0588  
                   _myISR 0023                     _token 046A                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 0249  
         __end_of_strcspn 0500           __initialization 0015              __end_of_get1 063F  
            __end_of_main 03EC          __end_of_i2c_idle 0611          __end_of_i2c_init 05F6  
        __end_of_i2c_read 05C2          __end_of_i2c_stop 0604       __end_of_i2c_sendACK 062F  
                  ??_get1 0070                    ??_main 00A4                    ?_myISR 0070  
                  ?_token 0070                    u100_20 0448                    u100_21 0447  
                  u101_20 0452                    u101_21 0451                    u101_25 044E  
                  u110_20 05D4                    u110_21 05D3                    u102_25 0459  
                  u111_20 062E                    u103_20 0465                    u111_21 062D  
                  u103_21 0464                    i1l1401 04A6                    i1l1411 04D2  
                  i1l1403 04B0                    i1l1413 04D5                    i1l1405 04B8  
                  i1l1423 0604                    i1l1431 0637                    i1l1511 03EC  
                  i1l1415 04DF                    i1l1407 04CC                    u104_20 05E1  
                  u120_20 01CF                    u112_20 05AD                    i1l1425 0604  
                  u104_21 05E0                    i1l1433 063D                    i1l1521 0402  
                  i1l1513 03EE                    u120_21 01CE                    i1l1417 04E7  
                  i1l1441 035F                    u112_21 05AC                    i1l1427 060C  
                  i1l1531 0425                    i1l1523 0406                    i1l1515 03F4  
                  i1l1419 04FB                    i1l1451 037C                    i1l1443 0364  
                  i1l1611 05A1                    i1l1621 053E                    i1l1525 0417  
                  i1l1517 03F7                    i1l1533 042B                    i1l1541 0439  
                  i1l1701 01F0                    u120_25 01CB                    i1l1461 0399  
                  i1l1437 0356                    i1l1429 0612                    i1l1613 05A5  
                  i1l1623 0547                    i1l1527 041D                    i1l1519 03FE  
                  i1l1551 0458                    i1l1543 0440                    i1l1703 021E  
                  i1l1711 0244                    i1l1463 039E                    i1l1455 037F  
                  i1l1447 0366                    i1l1439 035B                    i1l1631 046F  
                  i1l1607 0598                    u105_20 05E6                    u113_20 0551  
                  u121_20 01DA                    u105_21 05E5                    u113_21 0550  
                  i1l1625 054B                    i1l1617 052F                    i1l1529 041E  
                  i1l1553 045F                    i1l1545 0444                    i1l1537 0430  
                  i1l1705 0225                    u121_21 01D9                    i1l1641 0501  
                  i1l1393 0567                    i1l1465 039F                    i1l1457 038E  
                  i1l1449 0374                    i1l1633 047F                    i1l1609 0599  
                  i1l1571 05F6                    i1l1627 0551                    i1l1619 0530  
                  i1l1547 0448                    i1l1539 0436                    i1l1555 0465  
                  i1l1707 0229                    i1l1651 0528                    i1l1643 0502  
                  i1l1395 0576                    i1l1387 0559                    i1l1459 0396  
                  i1l1635 0487                    i1l1731 0036                    i1l1723 0023  
                  i1l1573 05AE                    i1l1581 05C3                    i1l1549 0452  
                  i1l1661 0176                    i1l1709 0232                    i1l1645 0506  
                  i1l1389 0565                    i1l1637 0496                    i1l1629 046D  
                  i1l1741 007A                    i1l1733 0048                    i1l1725 0024  
                  i1l1575 05B3                    i1l1567 05D5                    i1l1583 05C8  
                  i1l1671 01A1                    i1l1663 017B                    i1l1655 0164  
                  i1l1647 050A                    i1l1399 04A3                    i1l1639 049C  
                  i1l1751 00AC                    i1l1743 007F                    i1l1735 005A  
                  i1l1727 002A                    u106_20 05FD                    u114_20 0557  
                  u122_20 01E0                    u130_20 00E1                    i1l1577 05BE  
                  i1l1569 05DA                    u106_21 05FC                    i1l1585 05CC  
                  u114_21 0556                    u122_21 01DF                    i1l1673 01A5  
                  i1l1921 018E                    i1l1657 0169                    i1l1649 0521  
                  i1l1761 00E1                    u130_21 00E0                    i1l1745 0089  
                  i1l1737 0065                    i1l1753 00B3                    i1l1729 0030  
                  i1l1587 0626                    i1l1691 01D4                    i1l1675 01A9  
                  i1l1667 017C                    i1l1659 016F                    i1l1771 0110  
                  i1l1763 00EC                    i1l1755 00BE                    i1l1747 008E  
                  i1l1739 0070                    i1l1693 01DA                    i1l1685 01B4  
                  i1l1677 01AD                    i1l1669 0199                    i1l1781 0146  
                  i1l1773 0115                    i1l1765 00F7                    i1l1757 00C9  
                  i1l1749 009E                    i1l1695 01E0                    i1l1679 01B2  
                  i1l1775 0126                    i1l1767 0101                    i1l1759 00CF  
                  u107_20 0602                    u123_20 0232                    u115_20 04A1  
                  u131_20 00EC                    u107_21 0601                    u123_21 0231  
                  i1l1697 01E7                    i1l1689 01D0                    u115_21 04A0  
                  i1l1777 0134                    i1l1769 0106                    u131_21 00EB  
                  i1l1785 0152                    i1l1699 01EB                    i1l1787 0155  
                  i1l1779 013B                    u108_20 05BA                    u124_20 0244  
                  u116_20 0521                    u108_21 05B9                    u124_21 0243  
                  u116_21 0520                    u109_20 05BE                    u117_20 0528  
                  u109_21 05BD                    u117_21 0527                    u118_20 016F  
                  u118_21 016E                    u119_20 01A9                    u127_20 0048  
                  u119_21 01A8                    u127_21 0047                    u128_20 005A  
                  u128_21 0059                    u129_20 0065                    u129_21 0064  
                  _SSPADD 0093                    _TRISC3 043B                    _TRISC4 043C  
                  _SSPCON 0014                    _SSPBUF 0013        __size_of_i2c_start 0013  
      __size_of_i2c_write 0013             recivedCMD@cmd 0071                 ??___aldiv 003D  
               ??___lwdiv 0074                 ??___lwmod 007B                    _strchr 0558  
                  _strcmp 0500                    _strtok 0355                    _strspn 04A2  
                  saved_w 007E                    token@i 0020                 ??_sprintf 0023  
        __end_of_usart_Tx 061D                 ??_strcspn 0075   __end_of__initialization 001F  
             _i2c_sendACK 0626            __pcstackCOMMON 0070            usart_TxStr@str 0071  
           __end_of_myISR 0161             __end_of_token 04A2         __end_of_i2c_start 05E8  
       __end_of_i2c_write 05D5               recivedCMD@i 0072               recivedCMD@j 0073  
__size_of_usart_Interrupt 0009                   ??_myISR 002D                   ??_token 007C  
            ?_usart_TxStr 0070                __pbssBANK0 0048              usart_Tx@send 0070  
               ?_i2c_idle 0070                 ?_i2c_init 0070                 ?_i2c_read 0070  
               ?_i2c_stop 0070                __pmaintext 03A1            usart_init@BAUD 0044  
              __pintentry 0004                   ?_strchr 0070                   ?_strcmp 0070  
                 ?_strtok 007A                   ?_strspn 0073                   _SSPCON2 0091  
                 _SSPSTAT 0094                __stringtab 0578                ??_i2c_idle 0070  
              ??_i2c_init 0035                ??_i2c_read 0070                ??_i2c_stop 0070  
                 ___aldiv 0249                   ___lwdiv 03EC                   ___lwmod 0430  
               ?_usart_Tx 0070                   __ptext1 02E6                   __ptext2 0249  
                 __ptext3 061D                   __ptext4 05E8                   __ptext5 0023  
                 __ptext6 0597                   __ptext7 0611                   __ptext8 046A  
                 __ptext9 0355           __size_of_strchr 0020           __size_of_strcmp 002E  
         __size_of_strtok 004C           __size_of_strspn 002F                   _lectura 004D  
                 _dpowers 057E          ___aldiv@dividend 0039                _recivedCMD 052E  
                 _sprintf 0161                   clrloop0 0630                   _strcspn 04D1  
    end_of_initialization 001F         ??_usart_Interrupt 0035                 _RCSTAbits 0018  
        ___aldiv@quotient 0040                   strcmp@r 0074                ??_usart_Tx 0070  
                 strspn@i 0077                 _PORTBbits 0006             i2c_write@dato 0070  
               _TRISBbits 0086                 _TRISCbits 0087      __size_of_usart_TxStr 0017  
               _TXSTAbits 0098                _usart_init 02E6              ?_i2c_sendACK 0070  
          __end_of_strchr 0578            __end_of_strcmp 052E            __end_of_strtok 03A1  
          __end_of_strspn 04D1       start_initialization 0015               ?_recivedCMD 0070  
               _i2c_start 05D5                 _i2c_write 05C2         __size_of_i2c_idle 000D  
       __size_of_i2c_init 000E         __size_of_i2c_read 0014         __size_of_i2c_stop 000E  
                ??_strchr 0072                  ??_strcmp 0072                  ??_strtok 007B  
                ??_strspn 0075               __pbssCOMMON 007C                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK1 00A0                ?_i2c_start 0070  
              ?_i2c_write 0070               sprintf@flag 0027               sprintf@prec 0028  
             ?_usart_init 0044          ___lwdiv@dividend 0072       __size_of_recivedCMD 002A  
                ?___aldiv 0035                  ?___lwdiv 0070                  ?___lwmod 0077  
               __pstrings 0578         __size_of_usart_Tx 000C           _usart_Interrupt 061D  
        ___lwdiv@quotient 0074            __size_of_myISR 013E                  ?_sprintf 0020  
                ?_strcspn 0073            __size_of_token 0038           ___aldiv@divisor 0035  
       interrupt_function 0004           ___aldiv@counter 003E                 clear_ram0 062F  
                _PIE1bits 008C                  _PIR1bits 000C      __size_of_i2c_sendACK 0009  
             __stringbase 057D       __size_of_usart_init 006F               ??_i2c_start 0070  
             ??_i2c_write 0070                  _i2c_idle 0604                  _i2c_init 05E8  
                _i2c_read 05AE                  _i2c_stop 05F6           _usart_init$1345 00A0  
        __size_of___aldiv 009D   __end_of_usart_Interrupt 0626          __size_of___lwdiv 0044  
        __size_of___lwmod 003A        __end_of__stringtab 057E                sprintf@val 0029  
            ??_recivedCMD 0070           ___lwdiv@divisor 0070           ___lwdiv@counter 0076  
                __ptext10 04A2                  __ptext11 04D1                  __ptext20 05F6  
                __ptext12 0558                  __ptext21 05D5                  __ptext13 0500  
                __ptext22 0626                  __ptext14 0161                  __ptext23 05AE  
                __ptext15 0430                  __ptext24 0604                  __ptext16 03EC  
                __ptext17 052E                  __ptext18 0637                  __ptext19 05C2  
           ??_usart_TxStr 0071          __size_of_sprintf 00E8          __size_of_strcspn 002F  
           __size_of_get1 0008             __size_of_main 004B        __end_of_recivedCMD 0558  
                _usart_Tx 0611                _INTCONbits 000B                  intlevel1 0000  
               sprintf@ap 0026                 sprintf@sp 002B                 strchr@chr 0070  
        ___lwmod@dividend 0079                 strchr@ptr 0072              ??_usart_init 0048  
               strcspn@s1 0079                 strcspn@s2 0073       __end_of_usart_TxStr 05AE  
               stringcode 0578                  token@cmd 0022                  token@tok 0023  
        ?_usart_Interrupt 0070                  sprintf@c 002C                  sprintf@f 0020  
                strcmp@s1 0075                  strcmp@s2 0070           ___lwmod@divisor 0077  
         ___lwmod@counter 007B                  strcspn@i 0077                  stringdir 0578  
                stringtab 0578              ___aldiv@sign 003F        __end_of_usart_init 0355  
                strtok@s1 007B                  strtok@s2 007A                  strspn@s1 0079  
                strspn@s2 0073                  strtok@sp 007C               _SSPCON2bits 0091  
              _SSPCONbits 0014  
