

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Sep 19 13:09:08 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368                           
   369                           	psect	strings
   370  0293                     __pstrings:
   371  0293                     stringtab:
   372  0293                     __stringtab:
   373  0293                     stringcode:	
   374                           ;	String table - string pointers are 1 byte each
   375                           
   376  0293                     stringdir:
   377  0293  3002               	movlw	high stringdir
   378  0294  008A               	movwf	10
   379  0295  0804               	movf	4,w
   380  0296  0A84               	incf	4,f
   381  0297  0782               	addwf	2,f
   382  0298                     __stringbase:
   383  0298  3400               	retlw	0
   384  0299                     __end_of__stringtab:
   385  0299                     _dpowers:
   386  0299  3401               	retlw	1
   387  029A  3400               	retlw	0
   388  029B  340A               	retlw	10
   389  029C  3400               	retlw	0
   390  029D  3464               	retlw	100
   391  029E  3400               	retlw	0
   392  029F  34E8               	retlw	232
   393  02A0  3403               	retlw	3
   394  02A1  3410               	retlw	16
   395  02A2  3427               	retlw	39
   396  02A3                     __end_of_dpowers:
   397  001E                     _ADRESH	set	30
   398  001F                     _ADCON0bits	set	31
   399  0006                     _PORTBbits	set	6
   400  0006                     _PORTB	set	6
   401  0008                     _PORTD	set	8
   402  0008                     _PORTDbits	set	8
   403  000C                     _PIR1bits	set	12
   404  000B                     _INTCONbits	set	11
   405  0014                     _SSPCONbits	set	20
   406  0013                     _SSPBUF	set	19
   407  0014                     _SSPCON	set	20
   408  0063                     _SSPIF	set	99
   409  009E                     _ADRESL	set	158
   410  009F                     _ADCON1bits	set	159
   411  0086                     _TRISB	set	134
   412  0088                     _TRISD	set	136
   413  0085                     _TRISA	set	133
   414  008C                     _PIE1bits	set	140
   415  0094                     _SSPSTATbits	set	148
   416  0091                     _SSPCON2bits	set	145
   417  0091                     _SSPCON2	set	145
   418  0094                     _SSPSTAT	set	148
   419  0093                     _SSPADD	set	147
   420  0087                     _TRISCbits	set	135
   421  04A0                     _BF	set	1184
   422  043C                     _TRISC4	set	1084
   423  043B                     _TRISC3	set	1083
   424  02A3                     STR_1:
   425  02A3  3425               	retlw	37	;'%'
   426  02A4  3464               	retlw	100	;'d'
   427  02A5  340A               	retlw	10
   428  02A6  3400               	retlw	0
   429                           
   430                           	psect	cinit
   431  0015                     start_initialization:	
   432                           ; #config settings
   433                           
   434  0015                     __initialization:
   435                           
   436                           ; Clear objects allocated to BANK0
   437  0015  1383               	bcf	3,7	;select IRP bank0
   438  0016  3020               	movlw	low __pbssBANK0
   439  0017  0084               	movwf	4
   440  0018  303D               	movlw	low (__pbssBANK0+29)
   441  0019  120A  118A  22B6  120A  118A  	fcall	clear_ram0
   442                           
   443                           ; Clear objects allocated to BANK1
   444  001E  30A0               	movlw	low __pbssBANK1
   445  001F  0084               	movwf	4
   446  0020  30D2               	movlw	low (__pbssBANK1+50)
   447  0021  120A  118A  22B6  120A  118A  	fcall	clear_ram0
   448  0026                     end_of_initialization:	
   449                           ;End of C runtime variable initialization code
   450                           
   451  0026                     __end_of__initialization:
   452  0026  0183               	clrf	3
   453  0027  120A  118A  29AF   	ljmp	_main	;jump to C main() function
   454                           
   455                           	psect	bssBANK0
   456  0020                     __pbssBANK0:
   457  0020                     _datos:
   458  0020                     	ds	6
   459  0026                     _result:
   460  0026                     	ds	6
   461  002C                     _adc:
   462  002C                     	ds	2
   463  002E                     _chState:
   464  002E                     	ds	1
   465  002F                     _outState1:
   466  002F                     	ds	1
   467  0030                     _outState:
   468  0030                     	ds	1
   469  0031                     _btnFlags:
   470  0031                     	ds	1
   471  0032                     _z:
   472  0032                     	ds	1
   473  0033                     _data:
   474  0033                     	ds	10
   475                           
   476                           	psect	bssBANK1
   477  00A0                     __pbssBANK1:
   478  00A0                     _buffer:
   479  00A0                     	ds	50
   480                           
   481                           	psect	clrtext
   482  02B6                     clear_ram0:	
   483                           ;	Called with FSR containing the base address, and
   484                           ;	W with the last address+1
   485                           
   486  02B6  0064               	clrwdt	;clear the watchdog before getting into this loop
   487  02B7                     clrloop0:
   488  02B7  0180               	clrf	0	;clear RAM location pointed to by FSR
   489  02B8  0A84               	incf	4,f	;increment pointer
   490  02B9  0604               	xorwf	4,w	;XOR with final address
   491  02BA  1903               	btfsc	3,2	;have we reached the end yet?
   492  02BB  3400               	retlw	0	;all done for this memory range, return
   493  02BC  0604               	xorwf	4,w	;XOR again to restore value
   494  02BD  2AB7               	goto	clrloop0	;do the next byte
   495                           
   496                           	psect	cstackCOMMON
   497  0070                     __pcstackCOMMON:
   498  0070                     ?_adc_init:
   499  0070                     ?_myISR:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_main:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?___lwdiv:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ___lwdiv@divisor:	
   509                           ; 2 bytes @ 0x0
   510                           
   511                           
   512                           ; 2 bytes @ 0x0
   513  0070                     	ds	2
   514  0072                     ___lwdiv@dividend:
   515                           
   516                           ; 2 bytes @ 0x2
   517  0072                     	ds	2
   518  0074                     ??___lwdiv:
   519                           
   520                           ; 1 bytes @ 0x4
   521  0074                     	ds	1
   522  0075                     ___lwdiv@quotient:
   523                           
   524                           ; 2 bytes @ 0x5
   525  0075                     	ds	2
   526  0077                     ___lwdiv@counter:
   527                           
   528                           ; 1 bytes @ 0x7
   529  0077                     	ds	1
   530  0078                     ?___lwmod:
   531  0078                     ___lwmod@divisor:	
   532                           ; 2 bytes @ 0x8
   533                           
   534                           
   535                           ; 2 bytes @ 0x8
   536  0078                     	ds	2
   537  007A                     ___lwmod@dividend:
   538                           
   539                           ; 2 bytes @ 0xA
   540  007A                     	ds	2
   541  007C                     ??___lwmod:
   542                           
   543                           ; 1 bytes @ 0xC
   544  007C                     	ds	1
   545  007D                     ___lwmod@counter:
   546                           
   547                           ; 1 bytes @ 0xD
   548  007D                     	ds	1
   549                           
   550                           	psect	cstackBANK0
   551  003D                     __pcstackBANK0:
   552  003D                     ?_sprintf:
   553  003D                     sprintf@f:	
   554                           ; 2 bytes @ 0x0
   555                           
   556                           
   557                           ; 1 bytes @ 0x0
   558  003D                     	ds	3
   559  0040                     ??_sprintf:
   560                           
   561                           ; 1 bytes @ 0x3
   562  0040                     	ds	3
   563  0043                     sprintf@ap:
   564                           
   565                           ; 1 bytes @ 0x6
   566  0043                     	ds	1
   567  0044                     sprintf@flag:
   568                           
   569                           ; 1 bytes @ 0x7
   570  0044                     	ds	1
   571  0045                     sprintf@prec:
   572                           
   573                           ; 1 bytes @ 0x8
   574  0045                     	ds	1
   575  0046                     sprintf@val:
   576                           
   577                           ; 2 bytes @ 0x9
   578  0046                     	ds	2
   579  0048                     sprintf@sp:
   580                           
   581                           ; 1 bytes @ 0xB
   582  0048                     	ds	1
   583  0049                     sprintf@c:
   584                           
   585                           ; 1 bytes @ 0xC
   586  0049                     	ds	1
   587  004A                     ??_myISR:
   588                           
   589                           ; 1 bytes @ 0xD
   590  004A                     	ds	6
   591  0050                     ??_adc_init:
   592  0050                     ?_i2c_Slave_Init:	
   593                           ; 1 bytes @ 0x13
   594                           
   595  0050                     i2c_Slave_Init@address:	
   596                           ; 1 bytes @ 0x13
   597                           
   598                           
   599                           ; 2 bytes @ 0x13
   600  0050                     	ds	2
   601  0052                     ??_i2c_Slave_Init:
   602  0052                     ??_main:	
   603                           ; 1 bytes @ 0x15
   604                           
   605                           
   606                           ; 1 bytes @ 0x15
   607  0052                     	ds	3
   608                           
   609                           	psect	maintext
   610  01AF                     __pmaintext:	
   611 ;;
   612 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   613 ;;
   614 ;; *************** function _main *****************
   615 ;; Defined at:
   616 ;;		line 77 in file "main.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, status,2, status,0, pclath, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : B00/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   630 ;;      Params:         0       0       0       0       0
   631 ;;      Locals:         0       0       0       0       0
   632 ;;      Temps:          0       3       0       0       0
   633 ;;      Totals:         0       3       0       0       0
   634 ;;Total ram usage:        3 bytes
   635 ;; Hardware stack levels required when called:    4
   636 ;; This function calls:
   637 ;;		_adc_init
   638 ;;		_i2c_Slave_Init
   639 ;; This function is called by:
   640 ;;		Startup code after reset
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           
   645                           ;psect for function _main
   646  01AF                     _main:
   647  01AF                     l1373:	
   648                           ;incstack = 0
   649                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   650                           
   651                           
   652                           ;main.c: 78:     TRISA =0x01;
   653  01AF  3001               	movlw	1
   654  01B0  1683               	bsf	3,5	;RP0=1, select bank1
   655  01B1  1303               	bcf	3,6	;RP1=0, select bank1
   656  01B2  0085               	movwf	5	;volatile
   657  01B3                     l1375:
   658                           
   659                           ;main.c: 79:     TRISD = 0x00;
   660  01B3  0188               	clrf	8	;volatile
   661  01B4                     l1377:
   662                           
   663                           ;main.c: 80:     PORTD = 0x00;
   664  01B4  1283               	bcf	3,5	;RP0=0, select bank0
   665  01B5  1303               	bcf	3,6	;RP1=0, select bank0
   666  01B6  0188               	clrf	8	;volatile
   667  01B7                     l1379:
   668                           
   669                           ;main.c: 81:     TRISB = 0x00;
   670  01B7  1683               	bsf	3,5	;RP0=1, select bank1
   671  01B8  1303               	bcf	3,6	;RP1=0, select bank1
   672  01B9  0186               	clrf	6	;volatile
   673  01BA                     l1381:
   674                           
   675                           ;main.c: 82:     PORTB = 0x00;
   676  01BA  1283               	bcf	3,5	;RP0=0, select bank0
   677  01BB  1303               	bcf	3,6	;RP1=0, select bank0
   678  01BC  0186               	clrf	6	;volatile
   679  01BD                     l1383:
   680                           
   681                           ;main.c: 83:     i2c_Slave_Init(0x30);
   682  01BD  3030               	movlw	48
   683  01BE  00D0               	movwf	i2c_Slave_Init@address
   684  01BF  3000               	movlw	0
   685  01C0  00D1               	movwf	i2c_Slave_Init@address+1
   686  01C1  120A  118A  2271  120A  118A  	fcall	_i2c_Slave_Init
   687  01C6                     l1385:
   688                           
   689                           ;main.c: 84:     adc_init();
   690  01C6  120A  118A  22A7  120A  118A  	fcall	_adc_init
   691  01CB                     l1387:
   692                           
   693                           ;main.c: 87:         PORTBbits.RB0 = 1;
   694  01CB  1283               	bcf	3,5	;RP0=0, select bank0
   695  01CC  1303               	bcf	3,6	;RP1=0, select bank0
   696  01CD  1406               	bsf	6,0	;volatile
   697                           
   698                           ;main.c: 88:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   699  01CE  301A               	movlw	26
   700  01CF  1283               	bcf	3,5	;RP0=0, select bank0
   701  01D0  1303               	bcf	3,6	;RP1=0, select bank0
   702  01D1  00D4               	movwf	??_main+2
   703  01D2  305E               	movlw	94
   704  01D3  00D3               	movwf	??_main+1
   705  01D4  306D               	movlw	109
   706  01D5  00D2               	movwf	??_main
   707  01D6                     u757:
   708  01D6  0BD2               	decfsz	??_main,f
   709  01D7  29D6               	goto	u757
   710  01D8  0BD3               	decfsz	??_main+1,f
   711  01D9  29D6               	goto	u757
   712  01DA  0BD4               	decfsz	??_main+2,f
   713  01DB  29D6               	goto	u757
   714  01DC  29DD               	nop2
   715  01DD                     l1389:
   716                           
   717                           ;main.c: 90:         PORTBbits.RB0 = 0;
   718  01DD  1283               	bcf	3,5	;RP0=0, select bank0
   719  01DE  1303               	bcf	3,6	;RP1=0, select bank0
   720  01DF  1006               	bcf	6,0	;volatile
   721                           
   722                           ;main.c: 91:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   723  01E0  301A               	movlw	26
   724  01E1  1283               	bcf	3,5	;RP0=0, select bank0
   725  01E2  1303               	bcf	3,6	;RP1=0, select bank0
   726  01E3  00D4               	movwf	??_main+2
   727  01E4  305E               	movlw	94
   728  01E5  00D3               	movwf	??_main+1
   729  01E6  306D               	movlw	109
   730  01E7  00D2               	movwf	??_main
   731  01E8                     u767:
   732  01E8  0BD2               	decfsz	??_main,f
   733  01E9  29E8               	goto	u767
   734  01EA  0BD3               	decfsz	??_main+1,f
   735  01EB  29E8               	goto	u767
   736  01EC  0BD4               	decfsz	??_main+2,f
   737  01ED  29E8               	goto	u767
   738  01EE  29EF               	nop2
   739  01EF  29CB               	goto	l1387
   740  01F0  120A  118A  2812   	ljmp	start
   741  01F3                     __end_of_main:
   742                           
   743                           	psect	text1
   744  0271                     __ptext1:	
   745 ;; *************** function _i2c_Slave_Init *****************
   746 ;; Defined at:
   747 ;;		line 87 in file "i2c.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;  address         2   19[BANK0 ] short 
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg, status,2, status,0
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   761 ;;      Params:         0       2       0       0       0
   762 ;;      Locals:         0       0       0       0       0
   763 ;;      Temps:          0       0       0       0       0
   764 ;;      Totals:         0       2       0       0       0
   765 ;;Total ram usage:        2 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; Hardware stack levels required when called:    3
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		_main
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           
   776                           ;psect for function _i2c_Slave_Init
   777  0271                     _i2c_Slave_Init:
   778  0271                     l1233:	
   779                           ;incstack = 0
   780                           ; Regs used in _i2c_Slave_Init: [wreg+status,2+status,0]
   781                           
   782                           
   783                           ;i2c.c: 87: void i2c_Slave_Init(short address);i2c.c: 88: {;i2c.c: 89:   SSPSTAT = 0x80;
   784  0271  3080               	movlw	128
   785  0272  1683               	bsf	3,5	;RP0=1, select bank1
   786  0273  1303               	bcf	3,6	;RP1=0, select bank1
   787  0274  0094               	movwf	20	;volatile
   788                           
   789                           ;i2c.c: 90:   SSPADD = address;
   790  0275  1283               	bcf	3,5	;RP0=0, select bank0
   791  0276  1303               	bcf	3,6	;RP1=0, select bank0
   792  0277  0850               	movf	i2c_Slave_Init@address,w
   793  0278  1683               	bsf	3,5	;RP0=1, select bank1
   794  0279  1303               	bcf	3,6	;RP1=0, select bank1
   795  027A  0093               	movwf	19	;volatile
   796                           
   797                           ;i2c.c: 91:   SSPCON2 = 0x01;
   798  027B  3001               	movlw	1
   799  027C  0091               	movwf	17	;volatile
   800  027D                     l1235:
   801                           
   802                           ;i2c.c: 92:   TRISC3 = 1;
   803  027D  1587               	bsf	7,3	;volatile
   804  027E                     l1237:
   805                           
   806                           ;i2c.c: 93:   TRISC4 = 1;
   807  027E  1607               	bsf	7,4	;volatile
   808  027F                     l1239:
   809                           
   810                           ;i2c.c: 94:   SSPCONbits.SSPM = 0x06;
   811  027F  1283               	bcf	3,5	;RP0=0, select bank0
   812  0280  1303               	bcf	3,6	;RP1=0, select bank0
   813  0281  0814               	movf	20,w	;volatile
   814  0282  39F0               	andlw	-16
   815  0283  3806               	iorlw	6
   816  0284  0094               	movwf	20	;volatile
   817  0285                     l1241:
   818                           
   819                           ;i2c.c: 95:   SSPCONbits.CKP = 1;
   820  0285  1614               	bsf	20,4	;volatile
   821  0286                     l1243:
   822                           
   823                           ;i2c.c: 96:   SSPCONbits.SSPEN = 1;
   824  0286  1694               	bsf	20,5	;volatile
   825  0287                     l1245:
   826                           
   827                           ;i2c.c: 97:   SSPCON2bits.SEN = 1;
   828  0287  1683               	bsf	3,5	;RP0=1, select bank1
   829  0288  1303               	bcf	3,6	;RP1=0, select bank1
   830  0289  1411               	bsf	17,0	;volatile
   831  028A                     l1247:
   832                           
   833                           ;i2c.c: 98:   INTCONbits.GIE = 1;
   834  028A  178B               	bsf	11,7	;volatile
   835  028B                     l1249:
   836                           
   837                           ;i2c.c: 99:   INTCONbits.PEIE = 1;
   838  028B  170B               	bsf	11,6	;volatile
   839  028C                     l1251:
   840                           
   841                           ;i2c.c: 100:   PIR1bits.SSPIF = 0;
   842  028C  1283               	bcf	3,5	;RP0=0, select bank0
   843  028D  1303               	bcf	3,6	;RP1=0, select bank0
   844  028E  118C               	bcf	12,3	;volatile
   845  028F                     l1253:
   846                           
   847                           ;i2c.c: 101:   PIE1bits.SSPIE = 1;
   848  028F  1683               	bsf	3,5	;RP0=1, select bank1
   849  0290  1303               	bcf	3,6	;RP1=0, select bank1
   850  0291  158C               	bsf	12,3	;volatile
   851  0292                     l100:
   852  0292  0008               	return
   853  0293                     __end_of_i2c_Slave_Init:
   854                           
   855                           	psect	text2
   856  02A7                     __ptext2:	
   857 ;; *************** function _adc_init *****************
   858 ;; Defined at:
   859 ;;		line 20 in file "adc.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, status,2, status,0
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   873 ;;      Params:         0       0       0       0       0
   874 ;;      Locals:         0       0       0       0       0
   875 ;;      Temps:          0       0       0       0       0
   876 ;;      Totals:         0       0       0       0       0
   877 ;;Total ram usage:        0 bytes
   878 ;; Hardware stack levels used:    1
   879 ;; Hardware stack levels required when called:    3
   880 ;; This function calls:
   881 ;;		Nothing
   882 ;; This function is called by:
   883 ;;		_main
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           
   888                           ;psect for function _adc_init
   889  02A7                     _adc_init:
   890  02A7                     l1317:	
   891                           ;incstack = 0
   892                           ; Regs used in _adc_init: [wreg+status,2+status,0]
   893                           
   894                           
   895                           ;adc.c: 21:     ADCON0bits.ADCS = 0x00;
   896  02A7  303F               	movlw	-193
   897  02A8  1283               	bcf	3,5	;RP0=0, select bank0
   898  02A9  1303               	bcf	3,6	;RP1=0, select bank0
   899  02AA  059F               	andwf	31,f	;volatile
   900  02AB                     l1319:
   901                           
   902                           ;adc.c: 22:     ADCON1bits.VCFG0 = 0;
   903  02AB  1683               	bsf	3,5	;RP0=1, select bank1
   904  02AC  1303               	bcf	3,6	;RP1=0, select bank1
   905  02AD  121F               	bcf	31,4	;volatile
   906  02AE                     l1321:
   907                           
   908                           ;adc.c: 23:     ADCON1bits.VCFG1 = 0;
   909  02AE  129F               	bcf	31,5	;volatile
   910  02AF                     l1323:
   911                           
   912                           ;adc.c: 24:     ADCON1bits.ADFM = 1;
   913  02AF  179F               	bsf	31,7	;volatile
   914                           
   915                           ;adc.c: 25:     ADCON0bits.CHS = 0;
   916  02B0  30C3               	movlw	-61
   917  02B1  1283               	bcf	3,5	;RP0=0, select bank0
   918  02B2  1303               	bcf	3,6	;RP1=0, select bank0
   919  02B3  059F               	andwf	31,f	;volatile
   920  02B4                     l1325:
   921                           
   922                           ;adc.c: 26:     ADCON0bits.ADON = 1;
   923  02B4  141F               	bsf	31,0	;volatile
   924  02B5                     l213:
   925  02B5  0008               	return
   926  02B6                     __end_of_adc_init:
   927                           
   928                           	psect	text3
   929  0112                     __ptext3:	
   930 ;; *************** function _myISR *****************
   931 ;; Defined at:
   932 ;;		line 13 in file "main.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   946 ;;      Params:         0       0       0       0       0
   947 ;;      Locals:         0       0       0       0       0
   948 ;;      Temps:          0       6       0       0       0
   949 ;;      Totals:         0       6       0       0       0
   950 ;;Total ram usage:        6 bytes
   951 ;; Hardware stack levels used:    1
   952 ;; Hardware stack levels required when called:    2
   953 ;; This function calls:
   954 ;;		_sprintf
   955 ;; This function is called by:
   956 ;;		Interrupt level 1
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           
   961                           ;psect for function _myISR
   962  0112                     _myISR:
   963  0112                     i1l1327:
   964                           
   965                           ;main.c: 14:     INTCONbits.GIE = 0;
   966  0112  138B               	bcf	11,7	;volatile
   967                           
   968                           ;main.c: 15:     if(SSPIF == 1){
   969  0113  1D8C               	btfss	12,3	;volatile
   970  0114  2916               	goto	u65_21
   971  0115  2917               	goto	u65_20
   972  0116                     u65_21:
   973  0116  29A0               	goto	i1l1365
   974  0117                     u65_20:
   975  0117                     i1l1329:
   976                           
   977                           ;main.c: 16:     SSPCONbits.CKP = 0;
   978  0117  1214               	bcf	20,4	;volatile
   979                           
   980                           ;main.c: 17:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
   981  0118  1B14               	btfsc	20,6	;volatile
   982  0119  291B               	goto	u66_21
   983  011A  291C               	goto	u66_20
   984  011B                     u66_21:
   985  011B  2920               	goto	i1l1333
   986  011C                     u66_20:
   987  011C                     i1l1331:
   988  011C  1F94               	btfss	20,7	;volatile
   989  011D  291F               	goto	u67_21
   990  011E  2920               	goto	u67_20
   991  011F                     u67_21:
   992  011F  2927               	goto	i1l1341
   993  0120                     u67_20:
   994  0120                     i1l1333:
   995                           
   996                           ;main.c: 18:           z = SSPBUF;
   997  0120  0813               	movf	19,w	;volatile
   998  0121  00CA               	movwf	??_myISR
   999  0122  084A               	movf	??_myISR,w
  1000  0123  00B2               	movwf	_z
  1001  0124                     i1l1335:
  1002                           
  1003                           ;main.c: 19:           SSPCONbits.SSPOV = 0;
  1004  0124  1314               	bcf	20,6	;volatile
  1005  0125                     i1l1337:
  1006                           
  1007                           ;main.c: 20:           SSPCONbits.WCOL = 0;
  1008  0125  1394               	bcf	20,7	;volatile
  1009  0126                     i1l1339:
  1010                           
  1011                           ;main.c: 21:           SSPCONbits.CKP = 1;
  1012  0126  1614               	bsf	20,4	;volatile
  1013  0127                     i1l1341:
  1014                           
  1015                           ;main.c: 25:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW){
  1016  0127  1683               	bsf	3,5	;RP0=1, select bank1
  1017  0128  1303               	bcf	3,6	;RP1=0, select bank1
  1018  0129  1A94               	btfsc	20,5	;volatile
  1019  012A  292C               	goto	u68_21
  1020  012B  292D               	goto	u68_20
  1021  012C                     u68_21:
  1022  012C  2968               	goto	i1l151
  1023  012D                     u68_20:
  1024  012D                     i1l1343:
  1025  012D  1914               	btfsc	20,2	;volatile
  1026  012E  2930               	goto	u69_21
  1027  012F  2931               	goto	u69_20
  1028  0130                     u69_21:
  1029  0130  2968               	goto	i1l151
  1030  0131                     u69_20:
  1031  0131                     i1l1345:
  1032                           
  1033                           ;main.c: 26:           z = SSPBUF;
  1034  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1035  0132  1303               	bcf	3,6	;RP1=0, select bank0
  1036  0133  0813               	movf	19,w	;volatile
  1037  0134  00CA               	movwf	??_myISR
  1038  0135  084A               	movf	??_myISR,w
  1039  0136  00B2               	movwf	_z
  1040  0137                     i1l152:	
  1041                           ;main.c: 27:           while(!BF);
  1042                           
  1043  0137  1683               	bsf	3,5	;RP0=1, select bank1
  1044  0138  1303               	bcf	3,6	;RP1=0, select bank1
  1045  0139  1C14               	btfss	20,0	;volatile
  1046  013A  293C               	goto	u70_21
  1047  013B  293D               	goto	u70_20
  1048  013C                     u70_21:
  1049  013C  2937               	goto	i1l152
  1050  013D                     u70_20:
  1051  013D  294E               	goto	i1l1349
  1052  013E                     i1l158:	
  1053                           ;main.c: 33:               case 'b':
  1054                           
  1055                           
  1056                           ;main.c: 34:                   PORTDbits.RD0 = 0;
  1057  013E  1008               	bcf	8,0	;volatile
  1058                           
  1059                           ;main.c: 35:                   PORTDbits.RD1 = 0;
  1060  013F  1088               	bcf	8,1	;volatile
  1061                           
  1062                           ;main.c: 36:                   PORTDbits.RD2 = 1;
  1063  0140  1508               	bsf	8,2	;volatile
  1064                           
  1065                           ;main.c: 37:                   break;
  1066  0141  2966               	goto	i1l157
  1067  0142                     i1l159:	
  1068                           ;main.c: 38:               case 'g':
  1069                           
  1070                           
  1071                           ;main.c: 39:                   PORTDbits.RD0 = 0;
  1072  0142  1008               	bcf	8,0	;volatile
  1073                           
  1074                           ;main.c: 40:                   PORTDbits.RD1 = 1;
  1075  0143  1488               	bsf	8,1	;volatile
  1076                           
  1077                           ;main.c: 41:                   PORTDbits.RD2 = 0;
  1078  0144  1108               	bcf	8,2	;volatile
  1079                           
  1080                           ;main.c: 42:                   break;
  1081  0145  2966               	goto	i1l157
  1082  0146                     i1l160:	
  1083                           ;main.c: 43:               case 'r':
  1084                           
  1085                           
  1086                           ;main.c: 44:                   PORTDbits.RD0 = 1;
  1087  0146  1408               	bsf	8,0	;volatile
  1088                           
  1089                           ;main.c: 45:                   PORTDbits.RD1 = 0;
  1090  0147  1088               	bcf	8,1	;volatile
  1091                           
  1092                           ;main.c: 46:                   PORTDbits.RD2 = 0;
  1093  0148  1108               	bcf	8,2	;volatile
  1094                           
  1095                           ;main.c: 47:                   break;
  1096  0149  2966               	goto	i1l157
  1097  014A                     i1l161:	
  1098                           ;main.c: 48:               default:
  1099                           
  1100                           
  1101                           ;main.c: 49:                   PORTDbits.RD0 = 0;
  1102  014A  1008               	bcf	8,0	;volatile
  1103                           
  1104                           ;main.c: 50:                   PORTDbits.RD1 = 0;
  1105  014B  1088               	bcf	8,1	;volatile
  1106                           
  1107                           ;main.c: 51:                   PORTDbits.RD2 = 0;
  1108  014C  1108               	bcf	8,2	;volatile
  1109                           
  1110                           ;main.c: 52:                   break;
  1111  014D  2966               	goto	i1l157
  1112  014E                     i1l1349:
  1113  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1114  014F  1303               	bcf	3,6	;RP1=0, select bank0
  1115  0150  0813               	movf	19,w	;volatile
  1116  0151  00CA               	movwf	??_myISR
  1117  0152  01CB               	clrf	??_myISR+1
  1118                           
  1119                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1120                           ; Switch size 1, requested type "simple"
  1121                           ; Number of cases is 1, Range of values is 0 to 0
  1122                           ; switch strategies available:
  1123                           ; Name         Instructions Cycles
  1124                           ; simple_byte            4     3 (average)
  1125                           ; direct_byte           11     8 (fixed)
  1126                           ; jumptable            260     6 (fixed)
  1127                           ;	Chosen strategy is simple_byte
  1128  0153  084B               	movf	??_myISR+1,w
  1129  0154  3A00               	xorlw	0	; case 0
  1130  0155  1903               	skipnz
  1131  0156  2958               	goto	i1l1431
  1132  0157  294A               	goto	i1l161
  1133  0158                     i1l1431:
  1134                           
  1135                           ; Switch size 1, requested type "simple"
  1136                           ; Number of cases is 4, Range of values is 61 to 114
  1137                           ; switch strategies available:
  1138                           ; Name         Instructions Cycles
  1139                           ; simple_byte           13     7 (average)
  1140                           ; direct_byte          173    11 (fixed)
  1141                           ; jumptable            263     9 (fixed)
  1142                           ;	Chosen strategy is simple_byte
  1143  0158  084A               	movf	??_myISR,w
  1144  0159  3A3D               	xorlw	61	; case 61
  1145  015A  1903               	skipnz
  1146  015B  2966               	goto	i1l157
  1147  015C  3A5F               	xorlw	95	; case 98
  1148  015D  1903               	skipnz
  1149  015E  293E               	goto	i1l158
  1150  015F  3A05               	xorlw	5	; case 103
  1151  0160  1903               	skipnz
  1152  0161  2942               	goto	i1l159
  1153  0162  3A15               	xorlw	21	; case 114
  1154  0163  1903               	skipnz
  1155  0164  2946               	goto	i1l160
  1156  0165  294A               	goto	i1l161
  1157  0166                     i1l157:
  1158                           
  1159                           ;main.c: 54:           SSPCONbits.CKP = 1;
  1160  0166  1614               	bsf	20,4	;volatile
  1161                           
  1162                           ;main.c: 55:         }
  1163  0167  29A0               	goto	i1l1365
  1164  0168                     i1l151:	
  1165                           ;main.c: 56:         else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1166                           
  1167  0168  1A94               	btfsc	20,5	;volatile
  1168  0169  296B               	goto	u71_21
  1169  016A  296C               	goto	u71_20
  1170  016B                     u71_21:
  1171  016B  29A0               	goto	i1l1365
  1172  016C                     u71_20:
  1173  016C                     i1l1351:
  1174  016C  1D14               	btfss	20,2	;volatile
  1175  016D  296F               	goto	u72_21
  1176  016E  2970               	goto	u72_20
  1177  016F                     u72_21:
  1178  016F  29A0               	goto	i1l1365
  1179  0170                     u72_20:
  1180  0170                     i1l1353:
  1181                           
  1182                           ;main.c: 58:           adc = 355;
  1183  0170  3063               	movlw	99
  1184  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1185  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1186  0173  00AC               	movwf	_adc
  1187  0174  3001               	movlw	1
  1188  0175  00AD               	movwf	_adc+1
  1189  0176                     i1l1355:
  1190                           
  1191                           ;main.c: 60:           BF = 0;
  1192  0176  1683               	bsf	3,5	;RP0=1, select bank1
  1193  0177  1303               	bcf	3,6	;RP1=0, select bank1
  1194  0178  1014               	bcf	20,0	;volatile
  1195                           
  1196                           ;main.c: 61:           SSPBUF = (adc & 0xFF);
  1197  0179  1283               	bcf	3,5	;RP0=0, select bank0
  1198  017A  1303               	bcf	3,6	;RP1=0, select bank0
  1199  017B  082C               	movf	_adc,w
  1200  017C  0093               	movwf	19	;volatile
  1201  017D                     i1l1357:
  1202                           
  1203                           ;main.c: 62:           SSPCONbits.CKP = 1;
  1204  017D  1614               	bsf	20,4	;volatile
  1205  017E                     i1l164:	
  1206                           ;main.c: 63:           while(SSPSTATbits.BF);
  1207                           
  1208  017E  1683               	bsf	3,5	;RP0=1, select bank1
  1209  017F  1303               	bcf	3,6	;RP1=0, select bank1
  1210  0180  1814               	btfsc	20,0	;volatile
  1211  0181  2983               	goto	u73_21
  1212  0182  2984               	goto	u73_20
  1213  0183                     u73_21:
  1214  0183  297E               	goto	i1l164
  1215  0184                     u73_20:
  1216  0184                     i1l166:
  1217                           
  1218                           ;main.c: 64:           BF = 0;
  1219  0184  1014               	bcf	20,0	;volatile
  1220  0185                     i1l1359:
  1221                           
  1222                           ;main.c: 65:           SSPBUF = (adc >> 8) & 0xFF;
  1223  0185  1283               	bcf	3,5	;RP0=0, select bank0
  1224  0186  1303               	bcf	3,6	;RP1=0, select bank0
  1225  0187  082D               	movf	_adc+1,w
  1226  0188  0093               	movwf	19	;volatile
  1227  0189                     i1l1361:
  1228                           
  1229                           ;main.c: 66:           SSPCONbits.CKP = 1;
  1230  0189  1614               	bsf	20,4	;volatile
  1231  018A                     i1l167:	
  1232                           ;main.c: 67:           while(SSPSTATbits.BF);
  1233                           
  1234  018A  1683               	bsf	3,5	;RP0=1, select bank1
  1235  018B  1303               	bcf	3,6	;RP1=0, select bank1
  1236  018C  1814               	btfsc	20,0	;volatile
  1237  018D  298F               	goto	u74_21
  1238  018E  2990               	goto	u74_20
  1239  018F                     u74_21:
  1240  018F  298A               	goto	i1l167
  1241  0190                     u74_20:
  1242  0190                     i1l1363:
  1243                           
  1244                           ;main.c: 69:           sprintf(data,"%d\n",adc);
  1245  0190  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1246  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1247  0192  1303               	bcf	3,6	;RP1=0, select bank0
  1248  0193  00CA               	movwf	??_myISR
  1249  0194  084A               	movf	??_myISR,w
  1250  0195  00BD               	movwf	sprintf@f
  1251  0196  082D               	movf	_adc+1,w
  1252  0197  00BF               	movwf	?_sprintf+2
  1253  0198  082C               	movf	_adc,w
  1254  0199  00BE               	movwf	?_sprintf+1
  1255  019A  3033               	movlw	(low (_data| 0))& (0+255)
  1256  019B  120A  118A  202A  120A  118A  	fcall	_sprintf
  1257  01A0                     i1l1365:
  1258                           
  1259                           ;main.c: 73:     PIR1bits.SSPIF = 0;
  1260  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1261  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1262  01A2  118C               	bcf	12,3	;volatile
  1263  01A3                     i1l1367:
  1264                           
  1265                           ;main.c: 74:     INTCONbits.GIE = 1;
  1266  01A3  178B               	bsf	11,7	;volatile
  1267  01A4                     i1l170:
  1268  01A4  084F               	movf	??_myISR+5,w
  1269  01A5  00FF               	movwf	btemp+1
  1270  01A6  084E               	movf	??_myISR+4,w
  1271  01A7  008A               	movwf	10
  1272  01A8  084D               	movf	??_myISR+3,w
  1273  01A9  0084               	movwf	4
  1274  01AA  0E4C               	swapf	??_myISR+2,w
  1275  01AB  0083               	movwf	3
  1276  01AC  0EFE               	swapf	btemp,f
  1277  01AD  0E7E               	swapf	btemp,w
  1278  01AE  0009               	retfie
  1279  01AF                     __end_of_myISR:
  1280                           
  1281                           	psect	intentry
  1282  0004                     __pintentry:	
  1283                           ;incstack = 0
  1284                           ; Regs used in _myISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1285                           
  1286  0004                     interrupt_function:
  1287  007E                     saved_w	set	btemp
  1288  0004  00FE               	movwf	btemp
  1289  0005  0E03               	swapf	3,w
  1290  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1291  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1292  0008  00CC               	movwf	??_myISR+2
  1293  0009  0804               	movf	4,w
  1294  000A  00CD               	movwf	??_myISR+3
  1295  000B  080A               	movf	10,w
  1296  000C  00CE               	movwf	??_myISR+4
  1297  000D  087F               	movf	btemp+1,w
  1298  000E  00CF               	movwf	??_myISR+5
  1299  000F  120A  118A  2912   	ljmp	_myISR
  1300                           
  1301                           	psect	text4
  1302  002A                     __ptext4:	
  1303 ;; *************** function _sprintf *****************
  1304 ;; Defined at:
  1305 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  sp              1    wreg     PTR unsigned char 
  1308 ;;		 -> data(10), 
  1309 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1310 ;;		 -> STR_1(4), 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1313 ;;		 -> data(10), 
  1314 ;;  tmpval          4    0        struct .
  1315 ;;  val             2    9[BANK0 ] unsigned int 
  1316 ;;  cp              2    0        PTR const unsigned char 
  1317 ;;  len             2    0        unsigned int 
  1318 ;;  c               1   12[BANK0 ] unsigned char 
  1319 ;;  prec            1    8[BANK0 ] char 
  1320 ;;  flag            1    7[BANK0 ] unsigned char 
  1321 ;;  ap              1    6[BANK0 ] PTR void [1]
  1322 ;;		 -> ?_sprintf(2), 
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  2    0[BANK0 ] int 
  1325 ;; Registers used:
  1326 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1332 ;;      Params:         0       3       0       0       0
  1333 ;;      Locals:         0       7       0       0       0
  1334 ;;      Temps:          0       3       0       0       0
  1335 ;;      Totals:         0      13       0       0       0
  1336 ;;Total ram usage:       13 bytes
  1337 ;; Hardware stack levels used:    1
  1338 ;; Hardware stack levels required when called:    1
  1339 ;; This function calls:
  1340 ;;		___lwdiv
  1341 ;;		___lwmod
  1342 ;; This function is called by:
  1343 ;;		_myISR
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347                           
  1348                           ;psect for function _sprintf
  1349  002A                     _sprintf:
  1350                           
  1351                           ;incstack = 0
  1352                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1353                           ;sprintf@sp stored from wreg
  1354  002A  1283               	bcf	3,5	;RP0=0, select bank0
  1355  002B  1303               	bcf	3,6	;RP1=0, select bank0
  1356  002C  00C8               	movwf	sprintf@sp
  1357  002D                     i1l1255:
  1358                           
  1359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1360  002D  303E               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1361  002E  00C0               	movwf	??_sprintf
  1362  002F  0840               	movf	??_sprintf,w
  1363  0030  00C3               	movwf	sprintf@ap
  1364                           
  1365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1366  0031  28FB               	goto	i1l1307
  1367  0032                     i1l1257:
  1368                           
  1369                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1370  0032  3025               	movlw	37
  1371  0033  0649               	xorwf	sprintf@c,w
  1372  0034  1903               	btfsc	3,2
  1373  0035  2837               	goto	u58_21
  1374  0036  2838               	goto	u58_20
  1375  0037                     u58_21:
  1376  0037  2844               	goto	i1l1263
  1377  0038                     u58_20:
  1378  0038                     i1l1259:
  1379                           
  1380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1381  0038  0849               	movf	sprintf@c,w
  1382  0039  00C0               	movwf	??_sprintf
  1383  003A  0848               	movf	sprintf@sp,w
  1384  003B  0084               	movwf	4
  1385  003C  0840               	movf	??_sprintf,w
  1386  003D  1383               	bcf	3,7	;select IRP bank0
  1387  003E  0080               	movwf	0
  1388  003F                     i1l1261:
  1389  003F  3001               	movlw	1
  1390  0040  00C0               	movwf	??_sprintf
  1391  0041  0840               	movf	??_sprintf,w
  1392  0042  07C8               	addwf	sprintf@sp,f
  1393                           
  1394                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1395  0043  28FB               	goto	i1l1307
  1396  0044                     i1l1263:
  1397                           
  1398                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1399  0044  01C4               	clrf	sprintf@flag
  1400  0045                     i1l1267:	
  1401                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1402                           
  1403  0045  3001               	movlw	1
  1404  0046  07BD               	addwf	sprintf@f,f
  1405  0047  30FF               	movlw	-1
  1406  0048  073D               	addwf	sprintf@f,w
  1407  0049  0084               	movwf	4
  1408  004A  120A  118A  2293  120A  118A  	fcall	stringdir
  1409  004F  00C9               	movwf	sprintf@c
  1410  0050  00C0               	movwf	??_sprintf
  1411  0051  01C1               	clrf	??_sprintf+1
  1412                           
  1413                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1414                           ; Switch size 1, requested type "simple"
  1415                           ; Number of cases is 1, Range of values is 0 to 0
  1416                           ; switch strategies available:
  1417                           ; Name         Instructions Cycles
  1418                           ; simple_byte            4     3 (average)
  1419                           ; direct_byte           11     8 (fixed)
  1420                           ; jumptable            260     6 (fixed)
  1421                           ;	Chosen strategy is simple_byte
  1422  0052  0841               	movf	??_sprintf+1,w
  1423  0053  3A00               	xorlw	0	; case 0
  1424  0054  1903               	skipnz
  1425  0055  2857               	goto	i1l1433
  1426  0056  28FB               	goto	i1l1307
  1427  0057                     i1l1433:
  1428                           
  1429                           ; Switch size 1, requested type "simple"
  1430                           ; Number of cases is 3, Range of values is 0 to 105
  1431                           ; switch strategies available:
  1432                           ; Name         Instructions Cycles
  1433                           ; simple_byte           10     6 (average)
  1434                           ; jumptable            260     6 (fixed)
  1435                           ;	Chosen strategy is simple_byte
  1436  0057  0840               	movf	??_sprintf,w
  1437  0058  3A00               	xorlw	0	; case 0
  1438  0059  1903               	skipnz
  1439  005A  290D               	goto	i1l1309
  1440  005B  3A64               	xorlw	100	; case 100
  1441  005C  1903               	skipnz
  1442  005D  2862               	goto	i1l1269
  1443  005E  3A0D               	xorlw	13	; case 105
  1444  005F  1903               	skipnz
  1445  0060  2862               	goto	i1l1269
  1446  0061  28FB               	goto	i1l1307
  1447  0062                     i1l1269:
  1448                           
  1449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1450  0062  0843               	movf	sprintf@ap,w
  1451  0063  0084               	movwf	4
  1452  0064  1383               	bcf	3,7	;select IRP bank0
  1453  0065  0800               	movf	0,w
  1454  0066  00C6               	movwf	sprintf@val
  1455  0067  0A84               	incf	4,f
  1456  0068  0800               	movf	0,w
  1457  0069  00C7               	movwf	sprintf@val+1
  1458  006A                     i1l1271:
  1459  006A  3002               	movlw	2
  1460  006B  00C0               	movwf	??_sprintf
  1461  006C  0840               	movf	??_sprintf,w
  1462  006D  07C3               	addwf	sprintf@ap,f
  1463  006E                     i1l1273:
  1464                           
  1465                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1466  006E  1FC7               	btfss	sprintf@val+1,7
  1467  006F  2871               	goto	u59_21
  1468  0070  2872               	goto	u59_20
  1469  0071                     u59_21:
  1470  0071  287B               	goto	i1l1279
  1471  0072                     u59_20:
  1472  0072                     i1l1275:
  1473                           
  1474                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1475  0072  3003               	movlw	3
  1476  0073  00C0               	movwf	??_sprintf
  1477  0074  0840               	movf	??_sprintf,w
  1478  0075  04C4               	iorwf	sprintf@flag,f
  1479  0076                     i1l1277:
  1480                           
  1481                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1482  0076  09C6               	comf	sprintf@val,f
  1483  0077  09C7               	comf	sprintf@val+1,f
  1484  0078  0AC6               	incf	sprintf@val,f
  1485  0079  1903               	skipnz
  1486  007A  0AC7               	incf	sprintf@val+1,f
  1487  007B                     i1l1279:
  1488                           
  1489                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1490  007B  01C9               	clrf	sprintf@c
  1491  007C  0AC9               	incf	sprintf@c,f
  1492  007D                     i1l1285:
  1493                           
  1494                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1495  007D  0849               	movf	sprintf@c,w
  1496  007E  00C0               	movwf	??_sprintf
  1497  007F  0740               	addwf	??_sprintf,w
  1498  0080  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1499  0081  0084               	movwf	4
  1500  0082  120A  118A  2293  120A  118A  	fcall	stringdir
  1501  0087  00C1               	movwf	??_sprintf+1
  1502  0088  120A  118A  2293  120A  118A  	fcall	stringdir
  1503  008D  00C2               	movwf	??_sprintf+2
  1504  008E  0842               	movf	??_sprintf+2,w
  1505  008F  0247               	subwf	sprintf@val+1,w
  1506  0090  1D03               	skipz
  1507  0091  2894               	goto	u60_25
  1508  0092  0841               	movf	??_sprintf+1,w
  1509  0093  0246               	subwf	sprintf@val,w
  1510  0094                     u60_25:
  1511  0094  1803               	skipnc
  1512  0095  2897               	goto	u60_21
  1513  0096  2898               	goto	u60_20
  1514  0097                     u60_21:
  1515  0097  2899               	goto	i1l1289
  1516  0098                     u60_20:
  1517  0098  28A3               	goto	i1l1291
  1518  0099                     i1l1289:
  1519  0099  3001               	movlw	1
  1520  009A  00C0               	movwf	??_sprintf
  1521  009B  0840               	movf	??_sprintf,w
  1522  009C  07C9               	addwf	sprintf@c,f
  1523  009D  3005               	movlw	5
  1524  009E  0649               	xorwf	sprintf@c,w
  1525  009F  1D03               	btfss	3,2
  1526  00A0  28A2               	goto	u61_21
  1527  00A1  28A3               	goto	u61_20
  1528  00A2                     u61_21:
  1529  00A2  287D               	goto	i1l1285
  1530  00A3                     u61_20:
  1531  00A3                     i1l1291:
  1532                           
  1533                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1534  00A3  0844               	movf	sprintf@flag,w
  1535  00A4  3903               	andlw	3
  1536  00A5  1903               	btfsc	3,2
  1537  00A6  28A8               	goto	u62_21
  1538  00A7  28A9               	goto	u62_20
  1539  00A8                     u62_21:
  1540  00A8  28B4               	goto	i1l1297
  1541  00A9                     u62_20:
  1542  00A9                     i1l1293:
  1543                           
  1544                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1545  00A9  302D               	movlw	45
  1546  00AA  00C0               	movwf	??_sprintf
  1547  00AB  0848               	movf	sprintf@sp,w
  1548  00AC  0084               	movwf	4
  1549  00AD  0840               	movf	??_sprintf,w
  1550  00AE  1383               	bcf	3,7	;select IRP bank0
  1551  00AF  0080               	movwf	0
  1552  00B0                     i1l1295:
  1553  00B0  3001               	movlw	1
  1554  00B1  00C0               	movwf	??_sprintf
  1555  00B2  0840               	movf	??_sprintf,w
  1556  00B3  07C8               	addwf	sprintf@sp,f
  1557  00B4                     i1l1297:
  1558                           
  1559                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1560  00B4  0849               	movf	sprintf@c,w
  1561  00B5  00C0               	movwf	??_sprintf
  1562  00B6  0840               	movf	??_sprintf,w
  1563  00B7  00C5               	movwf	sprintf@prec
  1564                           
  1565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1566  00B8  28F2               	goto	i1l1305
  1567  00B9                     i1l1299:
  1568                           
  1569                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1570  00B9  300A               	movlw	10
  1571  00BA  00F8               	movwf	___lwmod@divisor
  1572  00BB  3000               	movlw	0
  1573  00BC  00F9               	movwf	___lwmod@divisor+1
  1574  00BD  0845               	movf	sprintf@prec,w
  1575  00BE  00C0               	movwf	??_sprintf
  1576  00BF  0740               	addwf	??_sprintf,w
  1577  00C0  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1578  00C1  0084               	movwf	4
  1579  00C2  120A  118A  2293  120A  118A  	fcall	stringdir
  1580  00C7  00F0               	movwf	___lwdiv@divisor
  1581  00C8  120A  118A  2293  120A  118A  	fcall	stringdir
  1582  00CD  00F1               	movwf	___lwdiv@divisor+1
  1583  00CE  0847               	movf	sprintf@val+1,w
  1584  00CF  00F3               	movwf	___lwdiv@dividend+1
  1585  00D0  0846               	movf	sprintf@val,w
  1586  00D1  00F2               	movwf	___lwdiv@dividend
  1587  00D2  120A  118A  21F3  120A  118A  	fcall	___lwdiv
  1588  00D7  0871               	movf	?___lwdiv+1,w
  1589  00D8  00FB               	movwf	___lwmod@dividend+1
  1590  00D9  0870               	movf	?___lwdiv,w
  1591  00DA  00FA               	movwf	___lwmod@dividend
  1592  00DB  120A  118A  2237  120A  118A  	fcall	___lwmod
  1593  00E0  0878               	movf	?___lwmod,w
  1594  00E1  3E30               	addlw	48
  1595  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1596  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1597  00E4  00C1               	movwf	??_sprintf+1
  1598  00E5  0841               	movf	??_sprintf+1,w
  1599  00E6  00C9               	movwf	sprintf@c
  1600  00E7                     i1l1301:
  1601                           
  1602                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1603  00E7  0849               	movf	sprintf@c,w
  1604  00E8  00C0               	movwf	??_sprintf
  1605  00E9  0848               	movf	sprintf@sp,w
  1606  00EA  0084               	movwf	4
  1607  00EB  0840               	movf	??_sprintf,w
  1608  00EC  1383               	bcf	3,7	;select IRP bank0
  1609  00ED  0080               	movwf	0
  1610  00EE                     i1l1303:
  1611  00EE  3001               	movlw	1
  1612  00EF  00C0               	movwf	??_sprintf
  1613  00F0  0840               	movf	??_sprintf,w
  1614  00F1  07C8               	addwf	sprintf@sp,f
  1615  00F2                     i1l1305:
  1616                           
  1617                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1618  00F2  30FF               	movlw	255
  1619  00F3  00C0               	movwf	??_sprintf
  1620  00F4  0840               	movf	??_sprintf,w
  1621  00F5  07C5               	addwf	sprintf@prec,f
  1622  00F6  0A45               	incf	sprintf@prec,w
  1623  00F7  1D03               	btfss	3,2
  1624  00F8  28FA               	goto	u63_21
  1625  00F9  28FB               	goto	u63_20
  1626  00FA                     u63_21:
  1627  00FA  28B9               	goto	i1l1299
  1628  00FB                     u63_20:
  1629  00FB                     i1l1307:
  1630                           
  1631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1632  00FB  3001               	movlw	1
  1633  00FC  07BD               	addwf	sprintf@f,f
  1634  00FD  30FF               	movlw	-1
  1635  00FE  073D               	addwf	sprintf@f,w
  1636  00FF  0084               	movwf	4
  1637  0100  120A  118A  2293  120A  118A  	fcall	stringdir
  1638  0105  00C0               	movwf	??_sprintf
  1639  0106  0840               	movf	??_sprintf,w
  1640  0107  00C9               	movwf	sprintf@c
  1641  0108  0849               	movf	sprintf@c,w
  1642  0109  1D03               	btfss	3,2
  1643  010A  290C               	goto	u64_21
  1644  010B  290D               	goto	u64_20
  1645  010C                     u64_21:
  1646  010C  2832               	goto	i1l1257
  1647  010D                     u64_20:
  1648  010D                     i1l1309:
  1649                           
  1650                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1651  010D  0848               	movf	sprintf@sp,w
  1652  010E  0084               	movwf	4
  1653  010F  1383               	bcf	3,7	;select IRP bank0
  1654  0110  0180               	clrf	0
  1655  0111                     i1l343:
  1656  0111  0008               	return
  1657  0112                     __end_of_sprintf:
  1658                           
  1659                           	psect	text5
  1660  0237                     __ptext5:	
  1661 ;; *************** function ___lwmod *****************
  1662 ;; Defined at:
  1663 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  divisor         2    8[COMMON] unsigned int 
  1666 ;;  dividend        2   10[COMMON] unsigned int 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  counter         1   13[COMMON] unsigned char 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  2    8[COMMON] unsigned int 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2, status,0
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1678 ;;      Params:         4       0       0       0       0
  1679 ;;      Locals:         1       0       0       0       0
  1680 ;;      Temps:          1       0       0       0       0
  1681 ;;      Totals:         6       0       0       0       0
  1682 ;;Total ram usage:        6 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; This function calls:
  1685 ;;		Nothing
  1686 ;; This function is called by:
  1687 ;;		_sprintf
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           
  1692                           ;psect for function ___lwmod
  1693  0237                     ___lwmod:
  1694  0237                     i1l1211:	
  1695                           ;incstack = 0
  1696                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1697                           
  1698  0237  0878               	movf	___lwmod@divisor,w
  1699  0238  0479               	iorwf	___lwmod@divisor+1,w
  1700  0239  1903               	btfsc	3,2
  1701  023A  2A3C               	goto	u52_21
  1702  023B  2A3D               	goto	u52_20
  1703  023C                     u52_21:
  1704  023C  2A6C               	goto	i1l1229
  1705  023D                     u52_20:
  1706  023D                     i1l1213:
  1707  023D  01FD               	clrf	___lwmod@counter
  1708  023E  0AFD               	incf	___lwmod@counter,f
  1709  023F  2A4B               	goto	i1l1219
  1710  0240                     i1l1215:
  1711  0240  3001               	movlw	1
  1712  0241                     u53_25:
  1713  0241  1003               	clrc
  1714  0242  0DF8               	rlf	___lwmod@divisor,f
  1715  0243  0DF9               	rlf	___lwmod@divisor+1,f
  1716  0244  3EFF               	addlw	-1
  1717  0245  1D03               	skipz
  1718  0246  2A41               	goto	u53_25
  1719  0247                     i1l1217:
  1720  0247  3001               	movlw	1
  1721  0248  00FC               	movwf	??___lwmod
  1722  0249  087C               	movf	??___lwmod,w
  1723  024A  07FD               	addwf	___lwmod@counter,f
  1724  024B                     i1l1219:
  1725  024B  1FF9               	btfss	___lwmod@divisor+1,7
  1726  024C  2A4E               	goto	u54_21
  1727  024D  2A4F               	goto	u54_20
  1728  024E                     u54_21:
  1729  024E  2A40               	goto	i1l1215
  1730  024F                     u54_20:
  1731  024F                     i1l1221:
  1732  024F  0879               	movf	___lwmod@divisor+1,w
  1733  0250  027B               	subwf	___lwmod@dividend+1,w
  1734  0251  1D03               	skipz
  1735  0252  2A55               	goto	u55_25
  1736  0253  0878               	movf	___lwmod@divisor,w
  1737  0254  027A               	subwf	___lwmod@dividend,w
  1738  0255                     u55_25:
  1739  0255  1C03               	skipc
  1740  0256  2A58               	goto	u55_21
  1741  0257  2A59               	goto	u55_20
  1742  0258                     u55_21:
  1743  0258  2A5F               	goto	i1l1225
  1744  0259                     u55_20:
  1745  0259                     i1l1223:
  1746  0259  0878               	movf	___lwmod@divisor,w
  1747  025A  02FA               	subwf	___lwmod@dividend,f
  1748  025B  0879               	movf	___lwmod@divisor+1,w
  1749  025C  1C03               	skipc
  1750  025D  03FB               	decf	___lwmod@dividend+1,f
  1751  025E  02FB               	subwf	___lwmod@dividend+1,f
  1752  025F                     i1l1225:
  1753  025F  3001               	movlw	1
  1754  0260                     u56_25:
  1755  0260  1003               	clrc
  1756  0261  0CF9               	rrf	___lwmod@divisor+1,f
  1757  0262  0CF8               	rrf	___lwmod@divisor,f
  1758  0263  3EFF               	addlw	-1
  1759  0264  1D03               	skipz
  1760  0265  2A60               	goto	u56_25
  1761  0266                     i1l1227:
  1762  0266  3001               	movlw	1
  1763  0267  02FD               	subwf	___lwmod@counter,f
  1764  0268  1D03               	btfss	3,2
  1765  0269  2A6B               	goto	u57_21
  1766  026A  2A6C               	goto	u57_20
  1767  026B                     u57_21:
  1768  026B  2A4F               	goto	i1l1221
  1769  026C                     u57_20:
  1770  026C                     i1l1229:
  1771  026C  087B               	movf	___lwmod@dividend+1,w
  1772  026D  00F9               	movwf	?___lwmod+1
  1773  026E  087A               	movf	___lwmod@dividend,w
  1774  026F  00F8               	movwf	?___lwmod
  1775  0270                     i1l629:
  1776  0270  0008               	return
  1777  0271                     __end_of___lwmod:
  1778                           
  1779                           	psect	text6
  1780  01F3                     __ptext6:	
  1781 ;; *************** function ___lwdiv *****************
  1782 ;; Defined at:
  1783 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;  divisor         2    0[COMMON] unsigned int 
  1786 ;;  dividend        2    2[COMMON] unsigned int 
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;  quotient        2    5[COMMON] unsigned int 
  1789 ;;  counter         1    7[COMMON] unsigned char 
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  2    0[COMMON] unsigned int 
  1792 ;; Registers used:
  1793 ;;		wreg, status,2, status,0
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1799 ;;      Params:         4       0       0       0       0
  1800 ;;      Locals:         3       0       0       0       0
  1801 ;;      Temps:          1       0       0       0       0
  1802 ;;      Totals:         8       0       0       0       0
  1803 ;;Total ram usage:        8 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_sprintf
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           
  1813                           ;psect for function ___lwdiv
  1814  01F3                     ___lwdiv:
  1815  01F3                     i1l1185:	
  1816                           ;incstack = 0
  1817                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1818                           
  1819  01F3  01F5               	clrf	___lwdiv@quotient
  1820  01F4  01F6               	clrf	___lwdiv@quotient+1
  1821  01F5                     i1l1187:
  1822  01F5  0870               	movf	___lwdiv@divisor,w
  1823  01F6  0471               	iorwf	___lwdiv@divisor+1,w
  1824  01F7  1903               	btfsc	3,2
  1825  01F8  29FA               	goto	u45_21
  1826  01F9  29FB               	goto	u45_20
  1827  01FA                     u45_21:
  1828  01FA  2A32               	goto	i1l1207
  1829  01FB                     u45_20:
  1830  01FB                     i1l1189:
  1831  01FB  01F7               	clrf	___lwdiv@counter
  1832  01FC  0AF7               	incf	___lwdiv@counter,f
  1833  01FD  2A09               	goto	i1l1195
  1834  01FE                     i1l1191:
  1835  01FE  3001               	movlw	1
  1836  01FF                     u46_25:
  1837  01FF  1003               	clrc
  1838  0200  0DF0               	rlf	___lwdiv@divisor,f
  1839  0201  0DF1               	rlf	___lwdiv@divisor+1,f
  1840  0202  3EFF               	addlw	-1
  1841  0203  1D03               	skipz
  1842  0204  29FF               	goto	u46_25
  1843  0205                     i1l1193:
  1844  0205  3001               	movlw	1
  1845  0206  00F4               	movwf	??___lwdiv
  1846  0207  0874               	movf	??___lwdiv,w
  1847  0208  07F7               	addwf	___lwdiv@counter,f
  1848  0209                     i1l1195:
  1849  0209  1FF1               	btfss	___lwdiv@divisor+1,7
  1850  020A  2A0C               	goto	u47_21
  1851  020B  2A0D               	goto	u47_20
  1852  020C                     u47_21:
  1853  020C  29FE               	goto	i1l1191
  1854  020D                     u47_20:
  1855  020D                     i1l1197:
  1856  020D  3001               	movlw	1
  1857  020E                     u48_25:
  1858  020E  1003               	clrc
  1859  020F  0DF5               	rlf	___lwdiv@quotient,f
  1860  0210  0DF6               	rlf	___lwdiv@quotient+1,f
  1861  0211  3EFF               	addlw	-1
  1862  0212  1D03               	skipz
  1863  0213  2A0E               	goto	u48_25
  1864  0214  0871               	movf	___lwdiv@divisor+1,w
  1865  0215  0273               	subwf	___lwdiv@dividend+1,w
  1866  0216  1D03               	skipz
  1867  0217  2A1A               	goto	u49_25
  1868  0218  0870               	movf	___lwdiv@divisor,w
  1869  0219  0272               	subwf	___lwdiv@dividend,w
  1870  021A                     u49_25:
  1871  021A  1C03               	skipc
  1872  021B  2A1D               	goto	u49_21
  1873  021C  2A1E               	goto	u49_20
  1874  021D                     u49_21:
  1875  021D  2A25               	goto	i1l1203
  1876  021E                     u49_20:
  1877  021E                     i1l1199:
  1878  021E  0870               	movf	___lwdiv@divisor,w
  1879  021F  02F2               	subwf	___lwdiv@dividend,f
  1880  0220  0871               	movf	___lwdiv@divisor+1,w
  1881  0221  1C03               	skipc
  1882  0222  03F3               	decf	___lwdiv@dividend+1,f
  1883  0223  02F3               	subwf	___lwdiv@dividend+1,f
  1884  0224                     i1l1201:
  1885  0224  1475               	bsf	___lwdiv@quotient,0
  1886  0225                     i1l1203:
  1887  0225  3001               	movlw	1
  1888  0226                     u50_25:
  1889  0226  1003               	clrc
  1890  0227  0CF1               	rrf	___lwdiv@divisor+1,f
  1891  0228  0CF0               	rrf	___lwdiv@divisor,f
  1892  0229  3EFF               	addlw	-1
  1893  022A  1D03               	skipz
  1894  022B  2A26               	goto	u50_25
  1895  022C                     i1l1205:
  1896  022C  3001               	movlw	1
  1897  022D  02F7               	subwf	___lwdiv@counter,f
  1898  022E  1D03               	btfss	3,2
  1899  022F  2A31               	goto	u51_21
  1900  0230  2A32               	goto	u51_20
  1901  0231                     u51_21:
  1902  0231  2A0D               	goto	i1l1197
  1903  0232                     u51_20:
  1904  0232                     i1l1207:
  1905  0232  0876               	movf	___lwdiv@quotient+1,w
  1906  0233  00F1               	movwf	?___lwdiv+1
  1907  0234  0875               	movf	___lwdiv@quotient,w
  1908  0235  00F0               	movwf	?___lwdiv
  1909  0236                     i1l619:
  1910  0236  0008               	return
  1911  0237                     __end_of___lwdiv:
  1912  007E                     btemp	set	126	;btemp
  1913  007E                     wtemp0	set	126
  1914                           
  1915                           	psect	config
  1916                           
  1917                           ;Config register CONFIG1 @ 0x2007
  1918                           ;	Oscillator Selection bits
  1919                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1920                           ;	Watchdog Timer Enable bit
  1921                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1922                           ;	Power-up Timer Enable bit
  1923                           ;	PWRTE = OFF, PWRT disabled
  1924                           ;	RE3/MCLR pin function select bit
  1925                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1926                           ;	Code Protection bit
  1927                           ;	CP = OFF, Program memory code protection is disabled
  1928                           ;	Data Code Protection bit
  1929                           ;	CPD = OFF, Data memory code protection is disabled
  1930                           ;	Brown Out Reset Selection bits
  1931                           ;	BOREN = ON, BOR enabled
  1932                           ;	Internal External Switchover bit
  1933                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1934                           ;	Fail-Safe Clock Monitor Enabled bit
  1935                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1936                           ;	Low Voltage Programming Enable bit
  1937                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1938                           ;	In-Circuit Debugger Mode bit
  1939                           ;	DEBUG = 0x1, unprogrammed default
  1940  2007                     	org	8199
  1941  2007  3FF2               	dw	16370
  1942                           
  1943                           ;Config register CONFIG2 @ 0x2008
  1944                           ;	Brown-out Reset Selection bit
  1945                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1946                           ;	Flash Program Memory Self Write Enable bits
  1947                           ;	WRT = OFF, Write protection off
  1948  2008                     	org	8200
  1949  2008  3FFF               	dw	16383

Data Sizes:
    Strings     4
    Constant    10
    Data        0
    BSS         79
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     24      53
    BANK1            80      0      50
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myISR in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    _main->_i2c_Slave_Init

Critical Paths under _myISR in BANK0

    _myISR->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      98
                                             21 BANK0      3     3      0
                           _adc_init
                     _i2c_Slave_Init
 ---------------------------------------------------------------------------------
 (1) _i2c_Slave_Init                                       2     0      2      98
                                             19 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myISR                                                6     6      0    1211
                                             13 BANK0      6     6      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init
   _i2c_Slave_Init

 _myISR (ROOT)
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      75       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      35       5       66.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      32       7       62.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      75      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Sep 19 13:09:08 2021

                      _z 0032                        pc 0002              _SSPSTATbits 0094  
                     _BF 04A0          ?_i2c_Slave_Init 0050                       fsr 0004  
  i2c_Slave_Init@address 0050                      l100 0292                      l213 02B5  
                    u757 01D6                      u767 01E8                      _adc 002C  
                    fsr0 0004                      indf 0000                     l1321 02AE  
                   l1241 0285                     l1233 0271                     l1323 02AF  
                   l1251 028C                     l1243 0286                     l1235 027D  
                   l1325 02B4                     l1317 02A7                     l1253 028F  
                   l1245 0287                     l1237 027E                     l1319 02AB  
                   l1247 028A                     l1239 027F                     l1249 028B  
                   l1381 01BA                     l1373 01AF                     l1383 01BD  
                   l1375 01B3                     l1385 01C6                     l1377 01B4  
                   l1387 01CB                     l1379 01B7                     l1389 01DD  
                   STR_1 02A3                     _data 0033                     _main 01AF  
                   btemp 007E                     start 0012                    ?_main 0070  
        __end_of___lwdiv 0237                    i1l151 0168                    i1l160 0146  
                  i1l152 0137                    i1l161 014A                    i1l170 01A4  
                  i1l164 017E                    i1l157 0166                    i1l166 0184  
                  i1l158 013E                    i1l343 0111                    i1l167 018A  
                  i1l159 0142          __end_of___lwmod 0271                    i1l619 0236  
                  i1l629 0270                    u50_25 0226                    u51_20 0232  
                  u51_21 0231                    _PORTB 0006                    _PORTD 0008  
                  u52_20 023D                    u60_20 0098                    u52_21 023C  
                  u60_21 0097                    u60_25 0094                    u45_20 01FB  
                  u61_20 00A3                    u45_21 01FA                    u61_21 00A2  
                  u53_25 0241                    u54_20 024F                    u62_20 00A9  
                  u70_20 013D                    u54_21 024E                    u62_21 00A8  
                  u70_21 013C                    u46_25 01FF                    u47_20 020D  
                  u55_20 0259                    u63_20 00FB                    u71_20 016C  
                  u47_21 020C                    u55_21 0258                    u63_21 00FA  
                  u71_21 016B                    u55_25 0255                    u64_20 010D  
                  u72_20 0170                    u64_21 010C                    u72_21 016F  
                  u48_25 020E                    u56_25 0260                    u49_20 021E  
                  u57_20 026C                    u73_20 0184                    u65_20 0117  
                  u49_21 021D                    u57_21 026B                    u73_21 0183  
                  u65_21 0116                    _TRISA 0085                    _TRISB 0086  
                  u49_25 021A                    _TRISD 0088                    u58_20 0038  
                  u74_20 0190                    u66_20 011C                    _SSPIF 0063  
                  u58_21 0037                    u74_21 018F                    u66_21 011B  
                  u59_20 0072                    u67_20 0120                    u59_21 0071  
                  u67_21 011F                    u68_20 012D                    u68_21 012C  
                  u69_20 0131                    u69_21 0130                    _datos 0020  
        __end_of_dpowers 02A3                    _myISR 0112                    pclath 000A  
                  status 0003                    wtemp0 007E          __end_of_sprintf 0112  
        __initialization 0015             __end_of_main 01F3                   ??_main 0052  
                 ?_myISR 0070                   _ADRESH 001E                   _ADRESL 009E  
       __end_of_adc_init 02B6                   i1l1201 0224                   i1l1203 0225  
                 i1l1211 0237                   i1l1205 022C                   i1l1221 024F  
                 i1l1213 023D                   i1l1301 00E7                   i1l1207 0232  
                 i1l1223 0259                   i1l1215 0240                   i1l1303 00EE  
                 i1l1225 025F                   i1l1217 0247                   i1l1305 00F2  
                 i1l1227 0266                   i1l1219 024B                   i1l1307 00FB  
                 i1l1331 011C                   i1l1229 026C                   i1l1309 010D  
                 i1l1261 003F                   i1l1341 0127                   i1l1333 0120  
                 i1l1191 01FE                   i1l1271 006A                   i1l1263 0044  
                 i1l1255 002D                   i1l1351 016C                   i1l1431 0158  
                 i1l1343 012D                   i1l1335 0124                   i1l1327 0112  
                 i1l1193 0205                   i1l1185 01F3                   i1l1273 006E  
                 i1l1433 0057                   i1l1257 0032                   i1l1361 0189  
                 i1l1353 0170                   i1l1345 0131                   i1l1337 0125  
                 i1l1329 0117                   i1l1195 0209                   i1l1187 01F5  
                 i1l1291 00A3                   i1l1275 0072                   i1l1267 0045  
                 i1l1259 0038                   i1l1363 0190                   i1l1355 0176  
                 i1l1339 0126                   i1l1197 020D                   i1l1189 01FB  
                 i1l1293 00A9                   i1l1285 007D                   i1l1277 0076  
                 i1l1269 0062                   i1l1357 017D                   i1l1349 014E  
                 i1l1365 01A0                   i1l1199 021E                   i1l1295 00B0  
                 i1l1279 007B                   i1l1367 01A3                   i1l1359 0185  
                 i1l1297 00B4                   i1l1289 0099                   i1l1299 00B9  
                 _SSPADD 0093                   _TRISC3 043B                   _TRISC4 043C  
                 _SSPCON 0014                   _SSPBUF 0013                ??___lwdiv 0074  
              ??___lwmod 007C                   _buffer 00A0                   _result 0026  
                 saved_w 007E                ??_sprintf 0040  __end_of__initialization 0026  
       ??_i2c_Slave_Init 0052           __pcstackCOMMON 0070            __end_of_myISR 01AF  
                ??_myISR 004A               __pbssBANK0 0020               __pbssBANK1 00A0  
             __pmaintext 01AF               __pintentry 0004                ?_adc_init 0070  
                _SSPCON2 0091                  _SSPSTAT 0094               __stringtab 0293  
                ___lwdiv 01F3                  ___lwmod 0237                  _chState 002E  
             ??_adc_init 0050                  __ptext1 0271                  __ptext2 02A7  
                __ptext3 0112                  __ptext4 002A                  __ptext5 0237  
                __ptext6 01F3                  _dpowers 0299                  _sprintf 002A  
                clrloop0 02B7     end_of_initialization 0026                _PORTBbits 0006  
              _PORTDbits 0008                _TRISCbits 0087      start_initialization 0015  
      __size_of_adc_init 000F                ___latbits 0002            __pcstackBANK0 003D  
            sprintf@flag 0044              sprintf@prec 0045         ___lwdiv@dividend 0072  
               ?___lwdiv 0070                 ?___lwmod 0078                __pstrings 0293  
__size_of_i2c_Slave_Init 0022         ___lwdiv@quotient 0075           __size_of_myISR 009D  
               ?_sprintf 003D        interrupt_function 0004                clear_ram0 02B6  
               _PIE1bits 008C                 _PIR1bits 000C                _outState1 002F  
             _ADCON0bits 001F              __stringbase 0298               _ADCON1bits 009F  
       __size_of___lwdiv 0044         __size_of___lwmod 003A       __end_of__stringtab 0299  
               _adc_init 02A7               sprintf@val 0046          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0077                 _btnFlags 0031         __size_of_sprintf 00E8  
          __size_of_main 0044                 _outState 0030           _i2c_Slave_Init 0271  
             _INTCONbits 000B                 intlevel1 0000                sprintf@ap 0043  
              sprintf@sp 0048         ___lwmod@dividend 007A                stringcode 0293  
 __end_of_i2c_Slave_Init 0293                 sprintf@c 0049                 sprintf@f 003D  
        ___lwmod@divisor 0078          ___lwmod@counter 007D                 stringdir 0293  
               stringtab 0293              _SSPCON2bits 0091               _SSPCONbits 0014  
