

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Sep 20 16:26:47 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  000D                     	;# 
   305  000E                     	;# 
   306  000E                     	;# 
   307  000F                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0014                     	;# 
   313  0015                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001D                     	;# 
   324  001E                     	;# 
   325  001F                     	;# 
   326  0081                     	;# 
   327  0085                     	;# 
   328  0086                     	;# 
   329  0087                     	;# 
   330  0088                     	;# 
   331  0089                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  008F                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  0105                     	;# 
   355  0107                     	;# 
   356  0108                     	;# 
   357  0109                     	;# 
   358  010C                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  0185                     	;# 
   364  0187                     	;# 
   365  0188                     	;# 
   366  0189                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  0000                     	;# 
   370  0001                     	;# 
   371  0002                     	;# 
   372  0003                     	;# 
   373  0004                     	;# 
   374  0005                     	;# 
   375  0006                     	;# 
   376  0007                     	;# 
   377  0008                     	;# 
   378  0009                     	;# 
   379  000A                     	;# 
   380  000B                     	;# 
   381  000C                     	;# 
   382  000D                     	;# 
   383  000E                     	;# 
   384  000E                     	;# 
   385  000F                     	;# 
   386  0010                     	;# 
   387  0011                     	;# 
   388  0012                     	;# 
   389  0013                     	;# 
   390  0014                     	;# 
   391  0015                     	;# 
   392  0015                     	;# 
   393  0016                     	;# 
   394  0017                     	;# 
   395  0018                     	;# 
   396  0019                     	;# 
   397  001A                     	;# 
   398  001B                     	;# 
   399  001B                     	;# 
   400  001C                     	;# 
   401  001D                     	;# 
   402  001E                     	;# 
   403  001F                     	;# 
   404  0081                     	;# 
   405  0085                     	;# 
   406  0086                     	;# 
   407  0087                     	;# 
   408  0088                     	;# 
   409  0089                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  008E                     	;# 
   413  008F                     	;# 
   414  0090                     	;# 
   415  0091                     	;# 
   416  0092                     	;# 
   417  0093                     	;# 
   418  0093                     	;# 
   419  0093                     	;# 
   420  0094                     	;# 
   421  0095                     	;# 
   422  0096                     	;# 
   423  0097                     	;# 
   424  0098                     	;# 
   425  0099                     	;# 
   426  009A                     	;# 
   427  009B                     	;# 
   428  009C                     	;# 
   429  009D                     	;# 
   430  009E                     	;# 
   431  009F                     	;# 
   432  0105                     	;# 
   433  0107                     	;# 
   434  0108                     	;# 
   435  0109                     	;# 
   436  010C                     	;# 
   437  010C                     	;# 
   438  010D                     	;# 
   439  010E                     	;# 
   440  010F                     	;# 
   441  0185                     	;# 
   442  0187                     	;# 
   443  0188                     	;# 
   444  0189                     	;# 
   445  018C                     	;# 
   446  018D                     	;# 
   447  001A                     _RCREG	set	26
   448  0019                     _TXREG	set	25
   449  0018                     _RCSTAbits	set	24
   450  001E                     _ADRESH	set	30
   451  001F                     _ADCON0bits	set	31
   452  0006                     _PORTBbits	set	6
   453  0006                     _PORTB	set	6
   454  0008                     _PORTD	set	8
   455  0008                     _PORTDbits	set	8
   456  000C                     _PIR1bits	set	12
   457  000B                     _INTCONbits	set	11
   458  0014                     _SSPCONbits	set	20
   459  0013                     _SSPBUF	set	19
   460  0014                     _SSPCON	set	20
   461  0063                     _SSPIF	set	99
   462  0098                     _TXSTAbits	set	152
   463  0099                     _SPBRG	set	153
   464  0086                     _TRISBbits	set	134
   465  009E                     _ADRESL	set	158
   466  009F                     _ADCON1bits	set	159
   467  0086                     _TRISB	set	134
   468  0088                     _TRISD	set	136
   469  0085                     _TRISA	set	133
   470  008C                     _PIE1bits	set	140
   471  0094                     _SSPSTATbits	set	148
   472  0091                     _SSPCON2bits	set	145
   473  0091                     _SSPCON2	set	145
   474  0094                     _SSPSTAT	set	148
   475  0093                     _SSPADD	set	147
   476  0087                     _TRISCbits	set	135
   477  04A0                     _BF	set	1184
   478  043C                     _TRISC4	set	1084
   479  043B                     _TRISC3	set	1083
   480                           
   481                           	psect	strings
   482  022F                     __pstrings:
   483  022F                     stringtab:
   484  022F                     __stringtab:
   485  022F                     stringcode:	
   486                           ;	String table - string pointers are 1 byte each
   487                           
   488  022F                     stringdir:
   489  022F  3002               	movlw	high stringdir
   490  0230  008A               	movwf	10
   491  0231  0804               	movf	4,w
   492  0232  0A84               	incf	4,f
   493  0233  0782               	addwf	2,f
   494  0234                     __stringbase:
   495  0234  3400               	retlw	0
   496  0235                     __end_of__stringtab:
   497  0235                     STR_1:
   498  0235  3461               	retlw	97	;'a'
   499  0236  3464               	retlw	100	;'d'
   500  0237  3463               	retlw	99	;'c'
   501  0238  343A               	retlw	58	;':'
   502  0239  3420               	retlw	32	;' '
   503  023A  3425               	retlw	37	;'%'
   504  023B  3464               	retlw	100	;'d'
   505  023C  340A               	retlw	10
   506  023D  3400               	retlw	0
   507  023E                     STR_2:
   508  023E  342C               	retlw	44	;','
   509  023F  3400               	retlw	0
   510  023E                     
   511                           	psect	cinit
   512  0011                     start_initialization:	
   513                           ; #config settings
   514                           
   515  0011                     __initialization:
   516                           
   517                           ; Clear objects allocated to COMMON
   518  0011  01F9               	clrf	__pbssCOMMON& (0+127)
   519  0012  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   520  0013  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   521  0014  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   522  0015  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   523                           
   524                           ; Clear objects allocated to BANK0
   525  0016  1383               	bcf	3,7	;select IRP bank0
   526  0017  3020               	movlw	low __pbssBANK0
   527  0018  0084               	movwf	4
   528  0019  303C               	movlw	low (__pbssBANK0+28)
   529  001A  120A  118A  224F  120A  118A  	fcall	clear_ram0
   530                           
   531                           ; Clear objects allocated to BANK1
   532  001F  30A0               	movlw	low __pbssBANK1
   533  0020  0084               	movwf	4
   534  0021  30D2               	movlw	low (__pbssBANK1+50)
   535  0022  120A  118A  224F  120A  118A  	fcall	clear_ram0
   536  0027                     end_of_initialization:	
   537                           ;End of C runtime variable initialization code
   538                           
   539  0027                     __end_of__initialization:
   540  0027  0183               	clrf	3
   541  0028  120A  118A  2959   	ljmp	_main	;jump to C main() function
   542                           
   543                           	psect	bssCOMMON
   544  0079                     __pbssCOMMON:
   545  0079                     _chState:
   546  0079                     	ds	1
   547  007A                     _outState1:
   548  007A                     	ds	1
   549  007B                     _outState:
   550  007B                     	ds	1
   551  007C                     _btnFlags:
   552  007C                     	ds	1
   553  007D                     _z:
   554  007D                     	ds	1
   555                           
   556                           	psect	bssBANK0
   557  0020                     __pbssBANK0:
   558  0020                     _data:
   559  0020                     	ds	10
   560  002A                     _datos:
   561  002A                     	ds	6
   562  0030                     _result:
   563  0030                     	ds	6
   564  0036                     _dir:
   565  0036                     	ds	3
   566  0039                     _adc:
   567  0039                     	ds	2
   568  003B                     strtok@sp:
   569  003B                     	ds	1
   570                           
   571                           	psect	bssBANK1
   572  00A0                     __pbssBANK1:
   573  00A0                     _buffer:
   574  00A0                     	ds	50
   575                           
   576                           	psect	clrtext
   577  024F                     clear_ram0:	
   578                           ;	Called with FSR containing the base address, and
   579                           ;	W with the last address+1
   580                           
   581  024F  0064               	clrwdt	;clear the watchdog before getting into this loop
   582  0250                     clrloop0:
   583  0250  0180               	clrf	0	;clear RAM location pointed to by FSR
   584  0251  0A84               	incf	4,f	;increment pointer
   585  0252  0604               	xorwf	4,w	;XOR with final address
   586  0253  1903               	btfsc	3,2	;have we reached the end yet?
   587  0254  3400               	retlw	0	;all done for this memory range, return
   588  0255  0604               	xorwf	4,w	;XOR again to restore value
   589  0256  2A50               	goto	clrloop0	;do the next byte
   590                           
   591                           	psect	cstackCOMMON
   592  0070                     __pcstackCOMMON:
   593  0070                     ?_adc_init:
   594  0070                     ?_myISR:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_main:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_adc_start:	
   601                           ; 1 bytes @ 0x0
   602                           
   603                           
   604                           ; 2 bytes @ 0x0
   605  0070                     	ds	2
   606  0072                     ??_adc_start:
   607  0072                     adc_start@lectura:	
   608                           ; 1 bytes @ 0x2
   609                           
   610                           
   611                           ; 2 bytes @ 0x2
   612  0072                     	ds	2
   613  0074                     ??_myISR:
   614                           
   615                           ; 1 bytes @ 0x4
   616  0074                     	ds	5
   617                           
   618                           	psect	cstackBANK0
   619  003C                     __pcstackBANK0:
   620  003C                     ??_adc_init:
   621  003C                     ?_i2c_Slave_Init:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  003C                     ?___aldiv:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  003C                     i2c_Slave_Init@address:	
   628                           ; 4 bytes @ 0x0
   629                           
   630  003C                     ___aldiv@divisor:	
   631                           ; 2 bytes @ 0x0
   632                           
   633                           
   634                           ; 4 bytes @ 0x0
   635  003C                     	ds	2
   636  003E                     ??_i2c_Slave_Init:
   637                           
   638                           ; 1 bytes @ 0x2
   639  003E                     	ds	2
   640  0040                     ___aldiv@dividend:
   641                           
   642                           ; 4 bytes @ 0x4
   643  0040                     	ds	4
   644  0044                     ??___aldiv:
   645                           
   646                           ; 1 bytes @ 0x8
   647  0044                     	ds	1
   648  0045                     ___aldiv@counter:
   649                           
   650                           ; 1 bytes @ 0x9
   651  0045                     	ds	1
   652  0046                     ___aldiv@sign:
   653                           
   654                           ; 1 bytes @ 0xA
   655  0046                     	ds	1
   656  0047                     ___aldiv@quotient:
   657                           
   658                           ; 4 bytes @ 0xB
   659  0047                     	ds	4
   660  004B                     ?_usart_init:
   661  004B                     usart_init@BAUD:	
   662                           ; 1 bytes @ 0xF
   663                           
   664                           
   665                           ; 4 bytes @ 0xF
   666  004B                     	ds	4
   667  004F                     ??_usart_init:
   668  004F                     _usart_init$1521:	
   669                           ; 1 bytes @ 0x13
   670                           
   671                           
   672                           ; 4 bytes @ 0x13
   673  004F                     	ds	4
   674  0053                     ??_main:
   675                           
   676                           ; 1 bytes @ 0x17
   677  0053                     	ds	3
   678                           
   679                           	psect	maintext
   680  0159                     __pmaintext:	
   681 ;;
   682 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   683 ;;
   684 ;; *************** function _main *****************
   685 ;; Defined at:
   686 ;;		line 72 in file "main.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg, status,2, status,0, pclath, cstack
   695 ;; Tracked objects:
   696 ;;		On entry : B00/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   700 ;;      Params:         0       0       0       0       0
   701 ;;      Locals:         0       0       0       0       0
   702 ;;      Temps:          0       3       0       0       0
   703 ;;      Totals:         0       3       0       0       0
   704 ;;Total ram usage:        3 bytes
   705 ;; Hardware stack levels required when called: 4
   706 ;; This function calls:
   707 ;;		_adc_init
   708 ;;		_i2c_Slave_Init
   709 ;;		_usart_init
   710 ;; This function is called by:
   711 ;;		Startup code after reset
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           
   716                           ;psect for function _main
   717  0159                     _main:
   718  0159                     l1417:	
   719                           ;incstack = 0
   720                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   721                           
   722                           
   723                           ;main.c: 73:     TRISA =0x01;
   724  0159  3001               	movlw	1
   725  015A  1683               	bsf	3,5	;RP0=1, select bank1
   726  015B  1303               	bcf	3,6	;RP1=0, select bank1
   727  015C  0085               	movwf	5	;volatile
   728  015D                     l1419:
   729                           
   730                           ;main.c: 74:     TRISD = 0x00;
   731  015D  0188               	clrf	8	;volatile
   732  015E                     l1421:
   733                           
   734                           ;main.c: 75:     PORTD = 0x00;
   735  015E  1283               	bcf	3,5	;RP0=0, select bank0
   736  015F  1303               	bcf	3,6	;RP1=0, select bank0
   737  0160  0188               	clrf	8	;volatile
   738  0161                     l1423:
   739                           
   740                           ;main.c: 76:     TRISB = 0x00;
   741  0161  1683               	bsf	3,5	;RP0=1, select bank1
   742  0162  1303               	bcf	3,6	;RP1=0, select bank1
   743  0163  0186               	clrf	6	;volatile
   744  0164                     l1425:
   745                           
   746                           ;main.c: 77:     PORTB = 0x00;
   747  0164  1283               	bcf	3,5	;RP0=0, select bank0
   748  0165  1303               	bcf	3,6	;RP1=0, select bank0
   749  0166  0186               	clrf	6	;volatile
   750  0167                     l1427:
   751                           
   752                           ;main.c: 78:     i2c_Slave_Init(0x30);
   753  0167  3030               	movlw	48
   754  0168  00BC               	movwf	i2c_Slave_Init@address
   755  0169  3000               	movlw	0
   756  016A  00BD               	movwf	i2c_Slave_Init@address+1
   757  016B  120A  118A  21FB  120A  118A  	fcall	_i2c_Slave_Init
   758  0170                     l1429:
   759                           
   760                           ;main.c: 79:     adc_init();
   761  0170  120A  118A  2240  120A  118A  	fcall	_adc_init
   762  0175                     l1431:
   763                           
   764                           ;main.c: 80:     usart_init(9600);
   765  0175  3000               	movlw	0
   766  0176  1283               	bcf	3,5	;RP0=0, select bank0
   767  0177  1303               	bcf	3,6	;RP1=0, select bank0
   768  0178  00CE               	movwf	usart_init@BAUD+3
   769  0179  3000               	movlw	0
   770  017A  00CD               	movwf	usart_init@BAUD+2
   771  017B  3025               	movlw	37
   772  017C  00CC               	movwf	usart_init@BAUD+1
   773  017D  3080               	movlw	128
   774  017E  00CB               	movwf	usart_init@BAUD
   775  017F  120A  118A  21AC  120A  118A  	fcall	_usart_init
   776  0184                     l1433:
   777                           
   778                           ;main.c: 83:         PORTBbits.RB0 = 1;
   779  0184  1283               	bcf	3,5	;RP0=0, select bank0
   780  0185  1303               	bcf	3,6	;RP1=0, select bank0
   781  0186  1406               	bsf	6,0	;volatile
   782  0187                     l1435:
   783                           
   784                           ;main.c: 84:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   785  0187  301A               	movlw	26
   786  0188  1283               	bcf	3,5	;RP0=0, select bank0
   787  0189  1303               	bcf	3,6	;RP1=0, select bank0
   788  018A  00D5               	movwf	??_main+2
   789  018B  305E               	movlw	94
   790  018C  00D4               	movwf	??_main+1
   791  018D  306D               	movlw	109
   792  018E  00D3               	movwf	??_main
   793  018F                     u867:
   794  018F  0BD3               	decfsz	??_main,f
   795  0190  298F               	goto	u867
   796  0191  0BD4               	decfsz	??_main+1,f
   797  0192  298F               	goto	u867
   798  0193  0BD5               	decfsz	??_main+2,f
   799  0194  298F               	goto	u867
   800  0195  2996               	nop2
   801  0196                     l1437:
   802                           
   803                           ;main.c: 86:         PORTBbits.RB0 = 0;
   804  0196  1283               	bcf	3,5	;RP0=0, select bank0
   805  0197  1303               	bcf	3,6	;RP1=0, select bank0
   806  0198  1006               	bcf	6,0	;volatile
   807  0199                     l1439:
   808                           
   809                           ;main.c: 87:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   810  0199  301A               	movlw	26
   811  019A  1283               	bcf	3,5	;RP0=0, select bank0
   812  019B  1303               	bcf	3,6	;RP1=0, select bank0
   813  019C  00D5               	movwf	??_main+2
   814  019D  305E               	movlw	94
   815  019E  00D4               	movwf	??_main+1
   816  019F  306D               	movlw	109
   817  01A0  00D3               	movwf	??_main
   818  01A1                     u877:
   819  01A1  0BD3               	decfsz	??_main,f
   820  01A2  29A1               	goto	u877
   821  01A3  0BD4               	decfsz	??_main+1,f
   822  01A4  29A1               	goto	u877
   823  01A5  0BD5               	decfsz	??_main+2,f
   824  01A6  29A1               	goto	u877
   825  01A7  29A8               	nop2
   826  01A8  2984               	goto	l1433
   827  01A9  120A  118A  280E   	ljmp	start
   828  01AC                     __end_of_main:
   829                           
   830                           	psect	text1
   831  01AC                     __ptext1:	
   832 ;; *************** function _usart_init *****************
   833 ;; Defined at:
   834 ;;		line 4 in file "usart.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  BAUD            4   15[BANK0 ] long 
   837 ;; Auto vars:     Size  Location     Type
   838 ;;		None
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      void 
   841 ;; Registers used:
   842 ;;		wreg, status,2, status,0, pclath, cstack
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   848 ;;      Params:         0       4       0       0       0
   849 ;;      Locals:         0       4       0       0       0
   850 ;;      Temps:          0       0       0       0       0
   851 ;;      Totals:         0       8       0       0       0
   852 ;;Total ram usage:        8 bytes
   853 ;; Hardware stack levels used: 1
   854 ;; Hardware stack levels required when called: 3
   855 ;; This function calls:
   856 ;;		___aldiv
   857 ;; This function is called by:
   858 ;;		_main
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           
   863                           ;psect for function _usart_init
   864  01AC                     _usart_init:
   865  01AC                     l1325:	
   866                           ;incstack = 0
   867                           ; Regs used in _usart_init: [wreg+status,2+status,0+pclath+cstack]
   868                           
   869                           
   870                           ;usart.c: 6:     TRISBbits.TRISB1 = 1;
   871  01AC  1683               	bsf	3,5	;RP0=1, select bank1
   872  01AD  1303               	bcf	3,6	;RP1=0, select bank1
   873  01AE  1486               	bsf	6,1	;volatile
   874                           
   875                           ;usart.c: 7:     TRISBbits.TRISB2 = 0;
   876  01AF  1106               	bcf	6,2	;volatile
   877  01B0                     l1327:
   878                           
   879                           ;usart.c: 8:     SPBRG = (unsigned char)(((20000000/BAUD)/64) - 1);
   880  01B0  1283               	bcf	3,5	;RP0=0, select bank0
   881  01B1  1303               	bcf	3,6	;RP1=0, select bank0
   882  01B2  084E               	movf	usart_init@BAUD+3,w
   883  01B3  00BF               	movwf	___aldiv@divisor+3
   884  01B4  084D               	movf	usart_init@BAUD+2,w
   885  01B5  00BE               	movwf	___aldiv@divisor+2
   886  01B6  084C               	movf	usart_init@BAUD+1,w
   887  01B7  00BD               	movwf	___aldiv@divisor+1
   888  01B8  084B               	movf	usart_init@BAUD,w
   889  01B9  00BC               	movwf	___aldiv@divisor
   890  01BA  3001               	movlw	1
   891  01BB  00C3               	movwf	___aldiv@dividend+3
   892  01BC  3031               	movlw	49
   893  01BD  00C2               	movwf	___aldiv@dividend+2
   894  01BE  302D               	movlw	45
   895  01BF  00C1               	movwf	___aldiv@dividend+1
   896  01C0  3000               	movlw	0
   897  01C1  00C0               	movwf	___aldiv@dividend
   898  01C2  120A  118A  202B  120A  118A  	fcall	___aldiv
   899  01C7  1283               	bcf	3,5	;RP0=0, select bank0
   900  01C8  1303               	bcf	3,6	;RP1=0, select bank0
   901  01C9  083F               	movf	?___aldiv+3,w
   902  01CA  00D2               	movwf	_usart_init$1521+3
   903  01CB  083E               	movf	?___aldiv+2,w
   904  01CC  00D1               	movwf	_usart_init$1521+2
   905  01CD  083D               	movf	?___aldiv+1,w
   906  01CE  00D0               	movwf	_usart_init$1521+1
   907  01CF  083C               	movf	?___aldiv,w
   908  01D0  00CF               	movwf	_usart_init$1521
   909                           
   910                           ;usart.c: 8:     SPBRG = (unsigned char)(((20000000/BAUD)/64) - 1);
   911  01D1  3000               	movlw	0
   912  01D2  00BF               	movwf	___aldiv@divisor+3
   913  01D3  3000               	movlw	0
   914  01D4  00BE               	movwf	___aldiv@divisor+2
   915  01D5  3000               	movlw	0
   916  01D6  00BD               	movwf	___aldiv@divisor+1
   917  01D7  3040               	movlw	64
   918  01D8  00BC               	movwf	___aldiv@divisor
   919  01D9  0852               	movf	_usart_init$1521+3,w
   920  01DA  00C3               	movwf	___aldiv@dividend+3
   921  01DB  0851               	movf	_usart_init$1521+2,w
   922  01DC  00C2               	movwf	___aldiv@dividend+2
   923  01DD  0850               	movf	_usart_init$1521+1,w
   924  01DE  00C1               	movwf	___aldiv@dividend+1
   925  01DF  084F               	movf	_usart_init$1521,w
   926  01E0  00C0               	movwf	___aldiv@dividend
   927  01E1  120A  118A  202B  120A  118A  	fcall	___aldiv
   928  01E6  1283               	bcf	3,5	;RP0=0, select bank0
   929  01E7  1303               	bcf	3,6	;RP1=0, select bank0
   930  01E8  083C               	movf	?___aldiv,w
   931  01E9  3EFF               	addlw	255
   932  01EA  1683               	bsf	3,5	;RP0=1, select bank1
   933  01EB  1303               	bcf	3,6	;RP1=0, select bank1
   934  01EC  0099               	movwf	25	;volatile
   935  01ED                     l1329:
   936                           
   937                           ;usart.c: 13:     RCSTAbits.SPEN = 1;
   938  01ED  1283               	bcf	3,5	;RP0=0, select bank0
   939  01EE  1303               	bcf	3,6	;RP1=0, select bank0
   940  01EF  1798               	bsf	24,7	;volatile
   941  01F0                     l1331:
   942                           
   943                           ;usart.c: 14:     TXSTAbits.SYNC = 0;
   944  01F0  1683               	bsf	3,5	;RP0=1, select bank1
   945  01F1  1303               	bcf	3,6	;RP1=0, select bank1
   946  01F2  1218               	bcf	24,4	;volatile
   947  01F3                     l1333:
   948                           
   949                           ;usart.c: 15:     TXSTAbits.TX9 = 0;
   950  01F3  1318               	bcf	24,6	;volatile
   951  01F4                     l1335:
   952                           
   953                           ;usart.c: 16:     TXSTAbits.TXEN = 1;
   954  01F4  1698               	bsf	24,5	;volatile
   955  01F5                     l1337:
   956                           
   957                           ;usart.c: 17:     RCSTAbits.RX9 = 0;
   958  01F5  1283               	bcf	3,5	;RP0=0, select bank0
   959  01F6  1303               	bcf	3,6	;RP1=0, select bank0
   960  01F7  1318               	bcf	24,6	;volatile
   961  01F8                     l1339:
   962                           
   963                           ;usart.c: 18:     RCSTAbits.CREN = 1;
   964  01F8  1618               	bsf	24,4	;volatile
   965  01F9                     l1341:
   966                           
   967                           ;usart.c: 19:     RCSTAbits.SPEN = 1;
   968  01F9  1798               	bsf	24,7	;volatile
   969  01FA                     l267:
   970  01FA  0008               	return
   971  01FB                     __end_of_usart_init:
   972                           
   973                           	psect	text2
   974  002B                     __ptext2:	
   975 ;; *************** function ___aldiv *****************
   976 ;; Defined at:
   977 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;  divisor         4    0[BANK0 ] long 
   980 ;;  dividend        4    4[BANK0 ] long 
   981 ;; Auto vars:     Size  Location     Type
   982 ;;  quotient        4   11[BANK0 ] long 
   983 ;;  sign            1   10[BANK0 ] unsigned char 
   984 ;;  counter         1    9[BANK0 ] unsigned char 
   985 ;; Return value:  Size  Location     Type
   986 ;;                  4    0[BANK0 ] long 
   987 ;; Registers used:
   988 ;;		wreg, status,2, status,0
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   994 ;;      Params:         0       8       0       0       0
   995 ;;      Locals:         0       6       0       0       0
   996 ;;      Temps:          0       1       0       0       0
   997 ;;      Totals:         0      15       0       0       0
   998 ;;Total ram usage:       15 bytes
   999 ;; Hardware stack levels used: 1
  1000 ;; Hardware stack levels required when called: 2
  1001 ;; This function calls:
  1002 ;;		Nothing
  1003 ;; This function is called by:
  1004 ;;		_usart_init
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           
  1009                           ;psect for function ___aldiv
  1010  002B                     ___aldiv:
  1011  002B                     l1245:	
  1012                           ;incstack = 0
  1013                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1014                           
  1015  002B  1283               	bcf	3,5	;RP0=0, select bank0
  1016  002C  1303               	bcf	3,6	;RP1=0, select bank0
  1017  002D  01C6               	clrf	___aldiv@sign
  1018  002E                     l1247:
  1019  002E  1FBF               	btfss	___aldiv@divisor+3,7
  1020  002F  2831               	goto	u411
  1021  0030  2832               	goto	u410
  1022  0031                     u411:
  1023  0031  283F               	goto	l455
  1024  0032                     u410:
  1025  0032                     l1249:
  1026  0032  09BC               	comf	___aldiv@divisor,f
  1027  0033  09BD               	comf	___aldiv@divisor+1,f
  1028  0034  09BE               	comf	___aldiv@divisor+2,f
  1029  0035  09BF               	comf	___aldiv@divisor+3,f
  1030  0036  0ABC               	incf	___aldiv@divisor,f
  1031  0037  1903               	skipnz
  1032  0038  0ABD               	incf	___aldiv@divisor+1,f
  1033  0039  1903               	skipnz
  1034  003A  0ABE               	incf	___aldiv@divisor+2,f
  1035  003B  1903               	skipnz
  1036  003C  0ABF               	incf	___aldiv@divisor+3,f
  1037  003D  01C6               	clrf	___aldiv@sign
  1038  003E  0AC6               	incf	___aldiv@sign,f
  1039  003F                     l455:
  1040  003F  1FC3               	btfss	___aldiv@dividend+3,7
  1041  0040  2842               	goto	u421
  1042  0041  2843               	goto	u420
  1043  0042                     u421:
  1044  0042  2852               	goto	l1255
  1045  0043                     u420:
  1046  0043                     l1251:
  1047  0043  09C0               	comf	___aldiv@dividend,f
  1048  0044  09C1               	comf	___aldiv@dividend+1,f
  1049  0045  09C2               	comf	___aldiv@dividend+2,f
  1050  0046  09C3               	comf	___aldiv@dividend+3,f
  1051  0047  0AC0               	incf	___aldiv@dividend,f
  1052  0048  1903               	skipnz
  1053  0049  0AC1               	incf	___aldiv@dividend+1,f
  1054  004A  1903               	skipnz
  1055  004B  0AC2               	incf	___aldiv@dividend+2,f
  1056  004C  1903               	skipnz
  1057  004D  0AC3               	incf	___aldiv@dividend+3,f
  1058  004E                     l1253:
  1059  004E  3001               	movlw	1
  1060  004F  00C4               	movwf	??___aldiv
  1061  0050  0844               	movf	??___aldiv,w
  1062  0051  06C6               	xorwf	___aldiv@sign,f
  1063  0052                     l1255:
  1064  0052  3000               	movlw	0
  1065  0053  00CA               	movwf	___aldiv@quotient+3
  1066  0054  3000               	movlw	0
  1067  0055  00C9               	movwf	___aldiv@quotient+2
  1068  0056  3000               	movlw	0
  1069  0057  00C8               	movwf	___aldiv@quotient+1
  1070  0058  3000               	movlw	0
  1071  0059  00C7               	movwf	___aldiv@quotient
  1072  005A                     l1257:
  1073  005A  083F               	movf	___aldiv@divisor+3,w
  1074  005B  043E               	iorwf	___aldiv@divisor+2,w
  1075  005C  043D               	iorwf	___aldiv@divisor+1,w
  1076  005D  043C               	iorwf	___aldiv@divisor,w
  1077  005E  1903               	skipnz
  1078  005F  2861               	goto	u431
  1079  0060  2862               	goto	u430
  1080  0061                     u431:
  1081  0061  28AF               	goto	l1277
  1082  0062                     u430:
  1083  0062                     l1259:
  1084  0062  01C5               	clrf	___aldiv@counter
  1085  0063  0AC5               	incf	___aldiv@counter,f
  1086  0064  2872               	goto	l1263
  1087  0065                     l1261:
  1088  0065  3001               	movlw	1
  1089  0066  00C4               	movwf	??___aldiv
  1090  0067                     u445:
  1091  0067  1003               	clrc
  1092  0068  0DBC               	rlf	___aldiv@divisor,f
  1093  0069  0DBD               	rlf	___aldiv@divisor+1,f
  1094  006A  0DBE               	rlf	___aldiv@divisor+2,f
  1095  006B  0DBF               	rlf	___aldiv@divisor+3,f
  1096  006C  0BC4               	decfsz	??___aldiv,f
  1097  006D  2867               	goto	u445
  1098  006E  3001               	movlw	1
  1099  006F  00C4               	movwf	??___aldiv
  1100  0070  0844               	movf	??___aldiv,w
  1101  0071  07C5               	addwf	___aldiv@counter,f
  1102  0072                     l1263:
  1103  0072  1FBF               	btfss	___aldiv@divisor+3,7
  1104  0073  2875               	goto	u451
  1105  0074  2876               	goto	u450
  1106  0075                     u451:
  1107  0075  2865               	goto	l1261
  1108  0076                     u450:
  1109  0076                     l1265:
  1110  0076  3001               	movlw	1
  1111  0077  00C4               	movwf	??___aldiv
  1112  0078                     u465:
  1113  0078  1003               	clrc
  1114  0079  0DC7               	rlf	___aldiv@quotient,f
  1115  007A  0DC8               	rlf	___aldiv@quotient+1,f
  1116  007B  0DC9               	rlf	___aldiv@quotient+2,f
  1117  007C  0DCA               	rlf	___aldiv@quotient+3,f
  1118  007D  0BC4               	decfsz	??___aldiv,f
  1119  007E  2878               	goto	u465
  1120  007F                     l1267:
  1121  007F  083F               	movf	___aldiv@divisor+3,w
  1122  0080  0243               	subwf	___aldiv@dividend+3,w
  1123  0081  1D03               	skipz
  1124  0082  288D               	goto	u475
  1125  0083  083E               	movf	___aldiv@divisor+2,w
  1126  0084  0242               	subwf	___aldiv@dividend+2,w
  1127  0085  1D03               	skipz
  1128  0086  288D               	goto	u475
  1129  0087  083D               	movf	___aldiv@divisor+1,w
  1130  0088  0241               	subwf	___aldiv@dividend+1,w
  1131  0089  1D03               	skipz
  1132  008A  288D               	goto	u475
  1133  008B  083C               	movf	___aldiv@divisor,w
  1134  008C  0240               	subwf	___aldiv@dividend,w
  1135  008D                     u475:
  1136  008D  1C03               	skipc
  1137  008E  2890               	goto	u471
  1138  008F  2891               	goto	u470
  1139  0090                     u471:
  1140  0090  28A0               	goto	l1273
  1141  0091                     u470:
  1142  0091                     l1269:
  1143  0091  083C               	movf	___aldiv@divisor,w
  1144  0092  02C0               	subwf	___aldiv@dividend,f
  1145  0093  083D               	movf	___aldiv@divisor+1,w
  1146  0094  1C03               	skipc
  1147  0095  0F3D               	incfsz	___aldiv@divisor+1,w
  1148  0096  02C1               	subwf	___aldiv@dividend+1,f
  1149  0097  083E               	movf	___aldiv@divisor+2,w
  1150  0098  1C03               	skipc
  1151  0099  0F3E               	incfsz	___aldiv@divisor+2,w
  1152  009A  02C2               	subwf	___aldiv@dividend+2,f
  1153  009B  083F               	movf	___aldiv@divisor+3,w
  1154  009C  1C03               	skipc
  1155  009D  0F3F               	incfsz	___aldiv@divisor+3,w
  1156  009E  02C3               	subwf	___aldiv@dividend+3,f
  1157  009F                     l1271:
  1158  009F  1447               	bsf	___aldiv@quotient,0
  1159  00A0                     l1273:
  1160  00A0  3001               	movlw	1
  1161  00A1                     u485:
  1162  00A1  1003               	clrc
  1163  00A2  0CBF               	rrf	___aldiv@divisor+3,f
  1164  00A3  0CBE               	rrf	___aldiv@divisor+2,f
  1165  00A4  0CBD               	rrf	___aldiv@divisor+1,f
  1166  00A5  0CBC               	rrf	___aldiv@divisor,f
  1167  00A6  3EFF               	addlw	-1
  1168  00A7  1D03               	skipz
  1169  00A8  28A1               	goto	u485
  1170  00A9                     l1275:
  1171  00A9  3001               	movlw	1
  1172  00AA  02C5               	subwf	___aldiv@counter,f
  1173  00AB  1D03               	btfss	3,2
  1174  00AC  28AE               	goto	u491
  1175  00AD  28AF               	goto	u490
  1176  00AE                     u491:
  1177  00AE  2876               	goto	l1265
  1178  00AF                     u490:
  1179  00AF                     l1277:
  1180  00AF  0846               	movf	___aldiv@sign,w
  1181  00B0  1903               	btfsc	3,2
  1182  00B1  28B3               	goto	u501
  1183  00B2  28B4               	goto	u500
  1184  00B3                     u501:
  1185  00B3  28BF               	goto	l1281
  1186  00B4                     u500:
  1187  00B4                     l1279:
  1188  00B4  09C7               	comf	___aldiv@quotient,f
  1189  00B5  09C8               	comf	___aldiv@quotient+1,f
  1190  00B6  09C9               	comf	___aldiv@quotient+2,f
  1191  00B7  09CA               	comf	___aldiv@quotient+3,f
  1192  00B8  0AC7               	incf	___aldiv@quotient,f
  1193  00B9  1903               	skipnz
  1194  00BA  0AC8               	incf	___aldiv@quotient+1,f
  1195  00BB  1903               	skipnz
  1196  00BC  0AC9               	incf	___aldiv@quotient+2,f
  1197  00BD  1903               	skipnz
  1198  00BE  0ACA               	incf	___aldiv@quotient+3,f
  1199  00BF                     l1281:
  1200  00BF  084A               	movf	___aldiv@quotient+3,w
  1201  00C0  00BF               	movwf	?___aldiv+3
  1202  00C1  0849               	movf	___aldiv@quotient+2,w
  1203  00C2  00BE               	movwf	?___aldiv+2
  1204  00C3  0848               	movf	___aldiv@quotient+1,w
  1205  00C4  00BD               	movwf	?___aldiv+1
  1206  00C5  0847               	movf	___aldiv@quotient,w
  1207  00C6  00BC               	movwf	?___aldiv
  1208  00C7                     l465:
  1209  00C7  0008               	return
  1210  00C8                     __end_of___aldiv:
  1211                           
  1212                           	psect	text3
  1213  01FB                     __ptext3:	
  1214 ;; *************** function _i2c_Slave_Init *****************
  1215 ;; Defined at:
  1216 ;;		line 87 in file "i2c.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  address         2    0[BANK0 ] short 
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2, status,0
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1230 ;;      Params:         0       2       0       0       0
  1231 ;;      Locals:         0       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0
  1233 ;;      Totals:         0       2       0       0       0
  1234 ;;Total ram usage:        2 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; Hardware stack levels required when called: 2
  1237 ;; This function calls:
  1238 ;;		Nothing
  1239 ;; This function is called by:
  1240 ;;		_main
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           
  1245                           ;psect for function _i2c_Slave_Init
  1246  01FB                     _i2c_Slave_Init:
  1247  01FB                     l1285:	
  1248                           ;incstack = 0
  1249                           ; Regs used in _i2c_Slave_Init: [wreg+status,2+status,0]
  1250                           
  1251                           
  1252                           ;i2c.c: 87: void i2c_Slave_Init(short address);i2c.c: 88: {;i2c.c: 89:   SSPSTAT = 0x80;
  1253  01FB  3080               	movlw	128
  1254  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  1255  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  1256  01FE  0094               	movwf	20	;volatile
  1257                           
  1258                           ;i2c.c: 90:   SSPADD = address;
  1259  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1260  0200  1303               	bcf	3,6	;RP1=0, select bank0
  1261  0201  083C               	movf	i2c_Slave_Init@address,w
  1262  0202  1683               	bsf	3,5	;RP0=1, select bank1
  1263  0203  1303               	bcf	3,6	;RP1=0, select bank1
  1264  0204  0093               	movwf	19	;volatile
  1265                           
  1266                           ;i2c.c: 91:   SSPCON2 = 0x01;
  1267  0205  3001               	movlw	1
  1268  0206  0091               	movwf	17	;volatile
  1269  0207                     l1287:
  1270                           
  1271                           ;i2c.c: 92:   TRISC3 = 1;
  1272  0207  1587               	bsf	7,3	;volatile
  1273  0208                     l1289:
  1274                           
  1275                           ;i2c.c: 93:   TRISC4 = 1;
  1276  0208  1607               	bsf	7,4	;volatile
  1277  0209                     l1291:
  1278                           
  1279                           ;i2c.c: 94:   SSPCONbits.SSPM = 0x06;
  1280  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1281  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1282  020B  0814               	movf	20,w	;volatile
  1283  020C  39F0               	andlw	-16
  1284  020D  3806               	iorlw	6
  1285  020E  0094               	movwf	20	;volatile
  1286  020F                     l1293:
  1287                           
  1288                           ;i2c.c: 95:   SSPCONbits.CKP = 1;
  1289  020F  1614               	bsf	20,4	;volatile
  1290  0210                     l1295:
  1291                           
  1292                           ;i2c.c: 96:   SSPCONbits.SSPEN = 1;
  1293  0210  1694               	bsf	20,5	;volatile
  1294  0211                     l1297:
  1295                           
  1296                           ;i2c.c: 97:   SSPCON2bits.SEN = 1;
  1297  0211  1683               	bsf	3,5	;RP0=1, select bank1
  1298  0212  1303               	bcf	3,6	;RP1=0, select bank1
  1299  0213  1411               	bsf	17,0	;volatile
  1300  0214                     l1299:
  1301                           
  1302                           ;i2c.c: 98:   INTCONbits.GIE = 1;
  1303  0214  178B               	bsf	11,7	;volatile
  1304  0215                     l1301:
  1305                           
  1306                           ;i2c.c: 99:   INTCONbits.PEIE = 1;
  1307  0215  170B               	bsf	11,6	;volatile
  1308  0216                     l1303:
  1309                           
  1310                           ;i2c.c: 100:   PIR1bits.SSPIF = 0;
  1311  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1312  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1313  0218  118C               	bcf	12,3	;volatile
  1314  0219                     l1305:
  1315                           
  1316                           ;i2c.c: 101:   PIE1bits.SSPIE = 1;
  1317  0219  1683               	bsf	3,5	;RP0=1, select bank1
  1318  021A  1303               	bcf	3,6	;RP1=0, select bank1
  1319  021B  158C               	bsf	12,3	;volatile
  1320  021C                     l102:
  1321  021C  0008               	return
  1322  021D                     __end_of_i2c_Slave_Init:
  1323                           
  1324                           	psect	text4
  1325  0240                     __ptext4:	
  1326 ;; *************** function _adc_init *****************
  1327 ;; Defined at:
  1328 ;;		line 21 in file "adc.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;		None
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;		None
  1333 ;; Return value:  Size  Location     Type
  1334 ;;                  1    wreg      void 
  1335 ;; Registers used:
  1336 ;;		wreg, status,2, status,0
  1337 ;; Tracked objects:
  1338 ;;		On entry : 0/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1342 ;;      Params:         0       0       0       0       0
  1343 ;;      Locals:         0       0       0       0       0
  1344 ;;      Temps:          0       0       0       0       0
  1345 ;;      Totals:         0       0       0       0       0
  1346 ;;Total ram usage:        0 bytes
  1347 ;; Hardware stack levels used: 1
  1348 ;; Hardware stack levels required when called: 2
  1349 ;; This function calls:
  1350 ;;		Nothing
  1351 ;; This function is called by:
  1352 ;;		_main
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           
  1357                           ;psect for function _adc_init
  1358  0240                     _adc_init:
  1359  0240                     l1315:	
  1360                           ;incstack = 0
  1361                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  1362                           
  1363                           
  1364                           ;adc.c: 22:     ADCON0bits.ADCS = 0x00;
  1365  0240  303F               	movlw	-193
  1366  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1367  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1368  0243  059F               	andwf	31,f	;volatile
  1369  0244                     l1317:
  1370                           
  1371                           ;adc.c: 23:     ADCON1bits.VCFG0 = 0;
  1372  0244  1683               	bsf	3,5	;RP0=1, select bank1
  1373  0245  1303               	bcf	3,6	;RP1=0, select bank1
  1374  0246  121F               	bcf	31,4	;volatile
  1375  0247                     l1319:
  1376                           
  1377                           ;adc.c: 24:     ADCON1bits.VCFG1 = 0;
  1378  0247  129F               	bcf	31,5	;volatile
  1379  0248                     l1321:
  1380                           
  1381                           ;adc.c: 25:     ADCON1bits.ADFM = 1;
  1382  0248  179F               	bsf	31,7	;volatile
  1383                           
  1384                           ;adc.c: 26:     ADCON0bits.CHS = 0;
  1385  0249  30C3               	movlw	-61
  1386  024A  1283               	bcf	3,5	;RP0=0, select bank0
  1387  024B  1303               	bcf	3,6	;RP1=0, select bank0
  1388  024C  059F               	andwf	31,f	;volatile
  1389  024D                     l1323:
  1390                           
  1391                           ;adc.c: 27:     ADCON0bits.ADON = 1;
  1392  024D  141F               	bsf	31,0	;volatile
  1393  024E                     l221:
  1394  024E  0008               	return
  1395  024F                     __end_of_adc_init:
  1396                           
  1397                           	psect	text5
  1398  00C8                     __ptext5:	
  1399 ;; *************** function _myISR *****************
  1400 ;; Defined at:
  1401 ;;		line 13 in file "main.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;		None
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;		None
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  1    wreg      void 
  1408 ;; Registers used:
  1409 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1415 ;;      Params:         0       0       0       0       0
  1416 ;;      Locals:         0       0       0       0       0
  1417 ;;      Temps:          5       0       0       0       0
  1418 ;;      Totals:         5       0       0       0       0
  1419 ;;Total ram usage:        5 bytes
  1420 ;; Hardware stack levels used: 1
  1421 ;; Hardware stack levels required when called: 1
  1422 ;; This function calls:
  1423 ;;		_adc_start
  1424 ;; This function is called by:
  1425 ;;		Interrupt level 1
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           
  1430                           ;psect for function _myISR
  1431  00C8                     _myISR:
  1432  00C8                     i1l1375:
  1433                           
  1434                           ;main.c: 14:     INTCONbits.GIE = 0;
  1435  00C8  138B               	bcf	11,7	;volatile
  1436                           
  1437                           ;main.c: 15:     if(SSPIF == 1){
  1438  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1439  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1440  00CB  1D8C               	btfss	12,3	;volatile
  1441  00CC  28CE               	goto	u55_21
  1442  00CD  28CF               	goto	u55_20
  1443  00CE                     u55_21:
  1444  00CE  294D               	goto	i1l153
  1445  00CF                     u55_20:
  1446  00CF                     i1l1377:
  1447                           
  1448                           ;main.c: 16:     SSPCONbits.CKP = 0;
  1449  00CF  1214               	bcf	20,4	;volatile
  1450                           
  1451                           ;main.c: 17:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  1452  00D0  1B14               	btfsc	20,6	;volatile
  1453  00D1  28D3               	goto	u56_21
  1454  00D2  28D4               	goto	u56_20
  1455  00D3                     u56_21:
  1456  00D3  28D8               	goto	i1l1381
  1457  00D4                     u56_20:
  1458  00D4                     i1l1379:
  1459  00D4  1F94               	btfss	20,7	;volatile
  1460  00D5  28D7               	goto	u57_21
  1461  00D6  28D8               	goto	u57_20
  1462  00D7                     u57_21:
  1463  00D7  28DF               	goto	i1l1389
  1464  00D8                     u57_20:
  1465  00D8                     i1l1381:
  1466                           
  1467                           ;main.c: 18:           z = SSPBUF;
  1468  00D8  0813               	movf	19,w	;volatile
  1469  00D9  00F4               	movwf	??_myISR
  1470  00DA  0874               	movf	??_myISR,w
  1471  00DB  00FD               	movwf	_z
  1472  00DC                     i1l1383:
  1473                           
  1474                           ;main.c: 19:           SSPCONbits.SSPOV = 0;
  1475  00DC  1314               	bcf	20,6	;volatile
  1476  00DD                     i1l1385:
  1477                           
  1478                           ;main.c: 20:           SSPCONbits.WCOL = 0;
  1479  00DD  1394               	bcf	20,7	;volatile
  1480  00DE                     i1l1387:
  1481                           
  1482                           ;main.c: 21:           SSPCONbits.CKP = 1;
  1483  00DE  1614               	bsf	20,4	;volatile
  1484  00DF                     i1l1389:
  1485                           
  1486                           ;main.c: 25:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW){
  1487  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  1488  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  1489  00E1  1A94               	btfsc	20,5	;volatile
  1490  00E2  28E4               	goto	u58_21
  1491  00E3  28E5               	goto	u58_20
  1492  00E4                     u58_21:
  1493  00E4  2920               	goto	i1l157
  1494  00E5                     u58_20:
  1495  00E5                     i1l1391:
  1496  00E5  1914               	btfsc	20,2	;volatile
  1497  00E6  28E8               	goto	u59_21
  1498  00E7  28E9               	goto	u59_20
  1499  00E8                     u59_21:
  1500  00E8  2920               	goto	i1l157
  1501  00E9                     u59_20:
  1502  00E9                     i1l1393:
  1503                           
  1504                           ;main.c: 26:           z = SSPBUF;
  1505  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  1506  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  1507  00EB  0813               	movf	19,w	;volatile
  1508  00EC  00F4               	movwf	??_myISR
  1509  00ED  0874               	movf	??_myISR,w
  1510  00EE  00FD               	movwf	_z
  1511  00EF                     i1l158:	
  1512                           ;main.c: 27:           while(!BF);
  1513                           
  1514  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  1515  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  1516  00F1  1C14               	btfss	20,0	;volatile
  1517  00F2  28F4               	goto	u60_21
  1518  00F3  28F5               	goto	u60_20
  1519  00F4                     u60_21:
  1520  00F4  28EF               	goto	i1l158
  1521  00F5                     u60_20:
  1522  00F5  2906               	goto	i1l1397
  1523  00F6                     i1l164:	
  1524                           ;main.c: 33:               case 'b':
  1525                           
  1526                           
  1527                           ;main.c: 34:                   PORTDbits.RD0 = 0;
  1528  00F6  1008               	bcf	8,0	;volatile
  1529                           
  1530                           ;main.c: 35:                   PORTDbits.RD1 = 0;
  1531  00F7  1088               	bcf	8,1	;volatile
  1532                           
  1533                           ;main.c: 36:                   PORTDbits.RD2 = 1;
  1534  00F8  1508               	bsf	8,2	;volatile
  1535                           
  1536                           ;main.c: 37:                   break;
  1537  00F9  291E               	goto	i1l163
  1538  00FA                     i1l165:	
  1539                           ;main.c: 38:               case 'g':
  1540                           
  1541                           
  1542                           ;main.c: 39:                   PORTDbits.RD0 = 0;
  1543  00FA  1008               	bcf	8,0	;volatile
  1544                           
  1545                           ;main.c: 40:                   PORTDbits.RD1 = 1;
  1546  00FB  1488               	bsf	8,1	;volatile
  1547                           
  1548                           ;main.c: 41:                   PORTDbits.RD2 = 0;
  1549  00FC  1108               	bcf	8,2	;volatile
  1550                           
  1551                           ;main.c: 42:                   break;
  1552  00FD  291E               	goto	i1l163
  1553  00FE                     i1l166:	
  1554                           ;main.c: 43:               case 'r':
  1555                           
  1556                           
  1557                           ;main.c: 44:                   PORTDbits.RD0 = 1;
  1558  00FE  1408               	bsf	8,0	;volatile
  1559                           
  1560                           ;main.c: 45:                   PORTDbits.RD1 = 0;
  1561  00FF  1088               	bcf	8,1	;volatile
  1562                           
  1563                           ;main.c: 46:                   PORTDbits.RD2 = 0;
  1564  0100  1108               	bcf	8,2	;volatile
  1565                           
  1566                           ;main.c: 47:                   break;
  1567  0101  291E               	goto	i1l163
  1568  0102                     i1l167:	
  1569                           ;main.c: 48:               default:
  1570                           
  1571                           
  1572                           ;main.c: 49:                   PORTDbits.RD0 = 0;
  1573  0102  1008               	bcf	8,0	;volatile
  1574                           
  1575                           ;main.c: 50:                   PORTDbits.RD1 = 0;
  1576  0103  1088               	bcf	8,1	;volatile
  1577                           
  1578                           ;main.c: 51:                   PORTDbits.RD2 = 0;
  1579  0104  1108               	bcf	8,2	;volatile
  1580                           
  1581                           ;main.c: 52:                   break;
  1582  0105  291E               	goto	i1l163
  1583  0106                     i1l1397:
  1584  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1585  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1586  0108  0813               	movf	19,w	;volatile
  1587  0109  00F4               	movwf	??_myISR
  1588  010A  01F5               	clrf	??_myISR+1
  1589                           
  1590                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1591                           ; Switch size 1, requested type "simple"
  1592                           ; Number of cases is 1, Range of values is 0 to 0
  1593                           ; switch strategies available:
  1594                           ; Name         Instructions Cycles
  1595                           ; simple_byte            4     3 (average)
  1596                           ; direct_byte           11     8 (fixed)
  1597                           ; jumptable            260     6 (fixed)
  1598                           ;	Chosen strategy is simple_byte
  1599  010B  0875               	movf	??_myISR+1,w
  1600  010C  3A00               	xorlw	0	; case 0
  1601  010D  1903               	skipnz
  1602  010E  2910               	goto	i1l1661
  1603  010F  2902               	goto	i1l167
  1604  0110                     i1l1661:
  1605                           
  1606                           ; Switch size 1, requested type "simple"
  1607                           ; Number of cases is 4, Range of values is 61 to 114
  1608                           ; switch strategies available:
  1609                           ; Name         Instructions Cycles
  1610                           ; simple_byte           13     7 (average)
  1611                           ; direct_byte          173    11 (fixed)
  1612                           ; jumptable            263     9 (fixed)
  1613                           ;	Chosen strategy is simple_byte
  1614  0110  0874               	movf	??_myISR,w
  1615  0111  3A3D               	xorlw	61	; case 61
  1616  0112  1903               	skipnz
  1617  0113  291E               	goto	i1l163
  1618  0114  3A5F               	xorlw	95	; case 98
  1619  0115  1903               	skipnz
  1620  0116  28F6               	goto	i1l164
  1621  0117  3A05               	xorlw	5	; case 103
  1622  0118  1903               	skipnz
  1623  0119  28FA               	goto	i1l165
  1624  011A  3A15               	xorlw	21	; case 114
  1625  011B  1903               	skipnz
  1626  011C  28FE               	goto	i1l166
  1627  011D  2902               	goto	i1l167
  1628  011E                     i1l163:
  1629                           
  1630                           ;main.c: 54:           SSPCONbits.CKP = 1;
  1631  011E  1614               	bsf	20,4	;volatile
  1632                           
  1633                           ;main.c: 55:         }
  1634  011F  294D               	goto	i1l153
  1635  0120                     i1l157:	
  1636                           ;main.c: 56:         else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1637                           
  1638  0120  1A94               	btfsc	20,5	;volatile
  1639  0121  2923               	goto	u61_21
  1640  0122  2924               	goto	u61_20
  1641  0123                     u61_21:
  1642  0123  294D               	goto	i1l153
  1643  0124                     u61_20:
  1644  0124                     i1l1399:
  1645  0124  1D14               	btfss	20,2	;volatile
  1646  0125  2927               	goto	u62_21
  1647  0126  2928               	goto	u62_20
  1648  0127                     u62_21:
  1649  0127  294D               	goto	i1l153
  1650  0128                     u62_20:
  1651  0128                     i1l1401:
  1652                           
  1653                           ;main.c: 57:             adc = adc_start();
  1654  0128  120A  118A  221D  120A  118A  	fcall	_adc_start
  1655  012D  0871               	movf	?_adc_start+1,w
  1656  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1657  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1658  0130  00BA               	movwf	_adc+1
  1659  0131  0870               	movf	?_adc_start,w
  1660  0132  00B9               	movwf	_adc
  1661  0133                     i1l1403:
  1662                           
  1663                           ;main.c: 58:             BF = 0;
  1664  0133  1683               	bsf	3,5	;RP0=1, select bank1
  1665  0134  1303               	bcf	3,6	;RP1=0, select bank1
  1666  0135  1014               	bcf	20,0	;volatile
  1667  0136                     i1l1405:
  1668                           
  1669                           ;main.c: 59:             SSPBUF = (adc & 0xFF);
  1670  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1671  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1672  0138  0839               	movf	_adc,w
  1673  0139  0093               	movwf	19	;volatile
  1674  013A                     i1l1407:
  1675                           
  1676                           ;main.c: 60:             SSPCONbits.CKP = 1;
  1677  013A  1614               	bsf	20,4	;volatile
  1678  013B                     i1l170:	
  1679                           ;main.c: 61:             while(SSPSTATbits.BF);
  1680                           
  1681  013B  1683               	bsf	3,5	;RP0=1, select bank1
  1682  013C  1303               	bcf	3,6	;RP1=0, select bank1
  1683  013D  1814               	btfsc	20,0	;volatile
  1684  013E  2940               	goto	u63_21
  1685  013F  2941               	goto	u63_20
  1686  0140                     u63_21:
  1687  0140  293B               	goto	i1l170
  1688  0141                     u63_20:
  1689  0141                     i1l172:
  1690                           
  1691                           ;main.c: 62:             BF = 0;
  1692  0141  1014               	bcf	20,0	;volatile
  1693  0142                     i1l1409:
  1694                           
  1695                           ;main.c: 63:             SSPBUF = (adc >> 8) & 0xFF;
  1696  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1697  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1698  0144  083A               	movf	_adc+1,w
  1699  0145  0093               	movwf	19	;volatile
  1700  0146                     i1l1411:
  1701                           
  1702                           ;main.c: 64:             SSPCONbits.CKP = 1;
  1703  0146  1614               	bsf	20,4	;volatile
  1704  0147                     i1l173:	
  1705                           ;main.c: 65:             while(SSPSTATbits.BF);
  1706                           
  1707  0147  1683               	bsf	3,5	;RP0=1, select bank1
  1708  0148  1303               	bcf	3,6	;RP1=0, select bank1
  1709  0149  1814               	btfsc	20,0	;volatile
  1710  014A  294C               	goto	u64_21
  1711  014B  294D               	goto	u64_20
  1712  014C                     u64_21:
  1713  014C  2947               	goto	i1l173
  1714  014D                     u64_20:
  1715  014D                     i1l153:	
  1716                           ;main.c: 67:       }
  1717                           
  1718                           
  1719                           ;main.c: 68:     PIR1bits.SSPIF = 0;
  1720  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1721  014E  118C               	bcf	12,3	;volatile
  1722                           
  1723                           ;main.c: 69:     INTCONbits.GIE = 1;
  1724  014F  178B               	bsf	11,7	;volatile
  1725  0150                     i1l176:
  1726  0150  0878               	movf	??_myISR+4,w
  1727  0151  008A               	movwf	10
  1728  0152  0877               	movf	??_myISR+3,w
  1729  0153  0084               	movwf	4
  1730  0154  0E76               	swapf	??_myISR+2,w
  1731  0155  0083               	movwf	3
  1732  0156  0EFE               	swapf	btemp,f
  1733  0157  0E7E               	swapf	btemp,w
  1734  0158  0009               	retfie
  1735  0159                     __end_of_myISR:
  1736                           
  1737                           	psect	intentry
  1738  0004                     __pintentry:	
  1739                           ;incstack = 0
  1740                           ; Regs used in _myISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1741                           
  1742  0004                     interrupt_function:
  1743  007E                     saved_w	set	btemp
  1744  0004  00FE               	movwf	btemp
  1745  0005  0E03               	swapf	3,w
  1746  0006  00F6               	movwf	??_myISR+2
  1747  0007  0804               	movf	4,w
  1748  0008  00F7               	movwf	??_myISR+3
  1749  0009  080A               	movf	10,w
  1750  000A  00F8               	movwf	??_myISR+4
  1751  000B  120A  118A  28C8   	ljmp	_myISR
  1752                           
  1753                           	psect	text6
  1754  021D                     __ptext6:	
  1755 ;; *************** function _adc_start *****************
  1756 ;; Defined at:
  1757 ;;		line 45 in file "adc.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;		None
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;  lectura         2    2[COMMON] int 
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  2    0[COMMON] int 
  1764 ;; Registers used:
  1765 ;;		wreg, status,2
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1771 ;;      Params:         2       0       0       0       0
  1772 ;;      Locals:         2       0       0       0       0
  1773 ;;      Temps:          0       0       0       0       0
  1774 ;;      Totals:         4       0       0       0       0
  1775 ;;Total ram usage:        4 bytes
  1776 ;; Hardware stack levels used: 1
  1777 ;; This function calls:
  1778 ;;		Nothing
  1779 ;; This function is called by:
  1780 ;;		_myISR
  1781 ;;		_adc0_read
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           
  1786                           ;psect for function _adc_start
  1787  021D                     _adc_start:
  1788  021D                     i1l1307:	
  1789                           ;incstack = 0
  1790                           ; Regs used in _adc_start: [wreg+status,2]
  1791                           
  1792  021D                     i1l1309:
  1793                           
  1794                           ;adc.c: 47:     ADCON0bits.GO_nDONE = 1;
  1795  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1796  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1797  021F  149F               	bsf	31,1	;volatile
  1798  0220                     i1l232:	
  1799                           ;adc.c: 48:     while(ADCON0bits.GO_DONE == 1);
  1800                           
  1801  0220  189F               	btfsc	31,1	;volatile
  1802  0221  2A23               	goto	u51_21
  1803  0222  2A24               	goto	u51_20
  1804  0223                     u51_21:
  1805  0223  2A20               	goto	i1l232
  1806  0224                     u51_20:
  1807  0224                     i1l1311:
  1808                           
  1809                           ;adc.c: 49:     lectura = (ADRESH << 8)+ ADRESL;
  1810  0224  081E               	movf	30,w	;volatile
  1811  0225  00F3               	movwf	adc_start@lectura+1
  1812  0226  1683               	bsf	3,5	;RP0=1, select bank1
  1813  0227  1303               	bcf	3,6	;RP1=0, select bank1
  1814  0228  081E               	movf	30,w	;volatile
  1815  0229  00F2               	movwf	adc_start@lectura
  1816                           
  1817                           ;adc.c: 50:     return lectura;
  1818  022A  0873               	movf	adc_start@lectura+1,w
  1819  022B  00F1               	movwf	?_adc_start+1
  1820  022C  0872               	movf	adc_start@lectura,w
  1821  022D  00F0               	movwf	?_adc_start
  1822  022E                     i1l235:
  1823  022E  0008               	return
  1824  022F                     __end_of_adc_start:
  1825  007E                     btemp	set	126	;btemp
  1826  007E                     wtemp0	set	126
  1827                           
  1828                           	psect	config
  1829                           
  1830                           ;Config register CONFIG1 @ 0x2007
  1831                           ;	Oscillator Selection bits
  1832                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1833                           ;	Watchdog Timer Enable bit
  1834                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1835                           ;	Power-up Timer Enable bit
  1836                           ;	PWRTE = OFF, PWRT disabled
  1837                           ;	RE3/MCLR pin function select bit
  1838                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1839                           ;	Code Protection bit
  1840                           ;	CP = OFF, Program memory code protection is disabled
  1841                           ;	Data Code Protection bit
  1842                           ;	CPD = OFF, Data memory code protection is disabled
  1843                           ;	Brown Out Reset Selection bits
  1844                           ;	BOREN = ON, BOR enabled
  1845                           ;	Internal External Switchover bit
  1846                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1847                           ;	Fail-Safe Clock Monitor Enabled bit
  1848                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1849                           ;	Low Voltage Programming Enable bit
  1850                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1851                           ;	In-Circuit Debugger Mode bit
  1852                           ;	DEBUG = 0x1, unprogrammed default
  1853  2007                     	org	8199
  1854  2007  3FF2               	dw	16370
  1855                           
  1856                           ;Config register CONFIG2 @ 0x2008
  1857                           ;	Brown-out Reset Selection bit
  1858                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1859                           ;	Flash Program Memory Self Write Enable bits
  1860                           ;	WRT = OFF, Write protection off
  1861  2008                     	org	8200
  1862  2008  3FFF               	dw	16383

Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         83
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     26      54
    BANK1            80      0      50
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    _doprnt$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMMON[1]), 

    _doprnt$1	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 

    _doprnt$0	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(COMMON[2]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 2
		 -> STR_3(CODE[2]), STR_2(CODE[2]), NULL(NULL[0]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1249__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    S1249__prbuf$ptr	PTR unsigned char  size(1) Largest target is 50
		 -> buffer(BANK1[50]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 50
		 -> buffer(BANK1[50]), 

    dir	PTR unsigned char [3] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myISR in COMMON

    _myISR->_adc_start

Critical Paths under _main in BANK0

    _main->_usart_init
    _usart_init->___aldiv

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     823
                                             23 BANK0      3     3      0
                           _adc_init
                     _i2c_Slave_Init
                         _usart_init
 ---------------------------------------------------------------------------------
 (1) _usart_init                                           8     4      4     725
                                             15 BANK0      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _i2c_Slave_Init                                       2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _myISR                                                5     5      0      24
                                              4 COMMON     5     5      0
                          _adc_start
 ---------------------------------------------------------------------------------
 (4) _adc_start                                            4     2      2      24
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init
   _i2c_Slave_Init
   _usart_init
     ___aldiv

 _myISR (ROOT)
   _adc_start

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      76       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      36       5       67.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      32       7       62.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      76      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Sep 20 16:26:47 2021

                      _z 007D                        pc 0002              _SSPSTATbits 0094  
                     _BF 04A0          ?_i2c_Slave_Init 003C                       fsr 0004  
  i2c_Slave_Init@address 003C                      l102 021C                      l221 024E  
                    l267 01FA                      l455 003F                      l465 00C7  
                    u410 0032                      u411 0031                      u500 00B4  
                    u420 0043                      u501 00B3                      u421 0042  
                    u430 0062                      u431 0061                      u450 0076  
                    u451 0075                      u445 0067                      u470 0091  
                    u471 0090                      u465 0078                      u490 00AF  
                    u491 00AE                      u475 008D                      u485 00A1  
                    u867 018F                      u877 01A1                      _adc 0039  
                    _dir 0036                      fsr0 0004                      indf 0000  
                   l1301 0215                     l1303 0216                     l1321 0248  
                   l1305 0219                     l1323 024D                     l1315 0240  
                   l1251 0043                     l1331 01F0                     l1317 0244  
                   l1261 0065                     l1253 004E                     l1245 002B  
                   l1341 01F9                     l1333 01F3                     l1325 01AC  
                   l1421 015E                     l1319 0247                     l1271 009F  
                   l1263 0072                     l1255 0052                     l1247 002E  
                   l1335 01F4                     l1327 01B0                     l1431 0175  
                   l1423 0161                     l1281 00BF                     l1273 00A0  
                   l1265 0076                     l1257 005A                     l1249 0032  
                   l1337 01F5                     l1329 01ED                     l1433 0184  
                   l1425 0164                     l1417 0159                     l1291 0209  
                   l1275 00A9                     l1267 007F                     l1259 0062  
                   l1339 01F8                     l1435 0187                     l1427 0167  
                   l1419 015D                     l1293 020F                     l1285 01FB  
                   l1269 0091                     l1277 00AF                     l1437 0196  
                   l1429 0170                     l1295 0210                     l1287 0207  
                   l1279 00B4                     l1439 0199                     l1297 0211  
                   l1289 0208                     l1299 0214                     STR_1 0235  
                   STR_2 023E                     _data 0020                     _main 0159  
                   btemp 007E                     start 000E          __end_of___aldiv 00C8  
                  ?_main 0070                    i1l232 0220                    i1l153 014D  
                  i1l170 013B                    i1l235 022E                    i1l163 011E  
                  i1l172 0141                    i1l164 00F6                    i1l173 0147  
                  i1l165 00FA                    i1l157 0120                    i1l166 00FE  
                  i1l158 00EF                    i1l167 0102                    i1l176 0150  
                  _RCREG 001A                    _SPBRG 0099                    u51_20 0224  
                  u51_21 0223                    _PORTB 0006                    _PORTD 0008  
                  u60_20 00F5                    u60_21 00F4                    u61_20 0124  
                  u61_21 0123                    u62_20 0128                    u62_21 0127  
                  u63_20 0141                    u55_20 00CF                    u63_21 0140  
                  u55_21 00CE                    u64_20 014D                    u56_20 00D4  
                  u64_21 014C                    u56_21 00D3                    u57_20 00D8  
                  u57_21 00D7                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    u58_20 00E5                    _SSPIF 0063  
                  u58_21 00E4                    u59_20 00E9                    u59_21 00E8  
                  _TXREG 0019         adc_start@lectura 0072                    _datos 002A  
                  _myISR 00C8                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 01AC  
                 ??_main 0053                   ?_myISR 0070                   _ADRESH 001E  
                 _ADRESL 009E         __end_of_adc_init 024F                   i1l1311 0224  
                 i1l1401 0128                   i1l1307 021D                   i1l1411 0146  
                 i1l1403 0133                   i1l1309 021D                   i1l1405 0136  
                 i1l1407 013A                   i1l1409 0142                   i1l1381 00D8  
                 i1l1391 00E5                   i1l1383 00DC                   i1l1375 00C8  
                 i1l1393 00E9                   i1l1385 00DD                   i1l1377 00CF  
                 i1l1387 00DE                   i1l1379 00D4                   i1l1661 0110  
                 i1l1397 0106                   i1l1389 00DF                   i1l1399 0124  
                 _SSPADD 0093                   _TRISC3 043B                   _TRISC4 043C  
                 _SSPCON 0014                   _SSPBUF 0013                ??___aldiv 0044  
                 _buffer 00A0                   _result 0030                   saved_w 007E  
__end_of__initialization 0027       __size_of_adc_start 0012         ??_i2c_Slave_Init 003E  
         __pcstackCOMMON 0070            __end_of_myISR 0159                  ??_myISR 0074  
             __pbssBANK0 0020               __pbssBANK1 00A0               __pmaintext 0159  
         usart_init@BAUD 004B               __pintentry 0004                ?_adc_init 0070  
      __end_of_adc_start 022F                  _SSPCON2 0091                  _SSPSTAT 0094  
             __stringtab 022F                  ___aldiv 002B                  _chState 0079  
             ??_adc_init 003C                  __ptext1 01AC                  __ptext2 002B  
                __ptext3 01FB                  __ptext4 0240                  __ptext5 00C8  
                __ptext6 021D         ___aldiv@dividend 0040                  clrloop0 0250  
   end_of_initialization 0027                _RCSTAbits 0018         ___aldiv@quotient 0047  
              _PORTBbits 0006                _PORTDbits 0008                _TRISBbits 0086  
              _TRISCbits 0087                _TXSTAbits 0098               _usart_init 01AC  
    start_initialization 0011        __size_of_adc_init 000F              __pbssCOMMON 0079  
              ___latbits 0002            __pcstackBANK0 003C                _adc_start 021D  
            ?_usart_init 004B                 ?___aldiv 003C                __pstrings 022F  
__size_of_i2c_Slave_Init 0022           __size_of_myISR 0091               ?_adc_start 0070  
        ___aldiv@divisor 003C        interrupt_function 0004          ___aldiv@counter 0045  
              clear_ram0 024F                 _PIE1bits 008C                 _PIR1bits 000C  
              _outState1 007A               _ADCON0bits 001F              __stringbase 0234  
             _ADCON1bits 009F      __size_of_usart_init 004F          _usart_init$1521 004F  
       __size_of___aldiv 009D       __end_of__stringtab 0235                 _adc_init 0240  
               _btnFlags 007C              ??_adc_start 0072            __size_of_main 0053  
               _outState 007B           _i2c_Slave_Init 01FB               _INTCONbits 000B  
               intlevel1 0000             ??_usart_init 004F                stringcode 022F  
 __end_of_i2c_Slave_Init 021D                 stringdir 022F                 stringtab 022F  
           ___aldiv@sign 0046       __end_of_usart_init 01FB                 strtok@sp 003B  
            _SSPCON2bits 0091               _SSPCONbits 0014  
