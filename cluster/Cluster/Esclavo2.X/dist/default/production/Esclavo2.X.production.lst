

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Oct 27 00:25:46 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F887 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0097                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  0105                     	;# 
   138  0107                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  0185                     	;# 
   147  0187                     	;# 
   148  0188                     	;# 
   149  0189                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  000E                     	;# 
   168  000F                     	;# 
   169  0010                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0086                     	;# 
   190  0087                     	;# 
   191  0088                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  008F                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  0105                     	;# 
   216  0107                     	;# 
   217  0108                     	;# 
   218  0109                     	;# 
   219  010C                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0185                     	;# 
   225  0187                     	;# 
   226  0188                     	;# 
   227  0189                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  000E                     	;# 
   246  000F                     	;# 
   247  0010                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  001D                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  0081                     	;# 
   266  0085                     	;# 
   267  0086                     	;# 
   268  0087                     	;# 
   269  0088                     	;# 
   270  0089                     	;# 
   271  008C                     	;# 
   272  008D                     	;# 
   273  008E                     	;# 
   274  008F                     	;# 
   275  0090                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0095                     	;# 
   283  0096                     	;# 
   284  0097                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009A                     	;# 
   288  009B                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  0105                     	;# 
   294  0107                     	;# 
   295  0108                     	;# 
   296  0109                     	;# 
   297  010C                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  010E                     	;# 
   301  010F                     	;# 
   302  0185                     	;# 
   303  0187                     	;# 
   304  0188                     	;# 
   305  0189                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308  0000                     	;# 
   309  0001                     	;# 
   310  0002                     	;# 
   311  0003                     	;# 
   312  0004                     	;# 
   313  0005                     	;# 
   314  0006                     	;# 
   315  0007                     	;# 
   316  0008                     	;# 
   317  0009                     	;# 
   318  000A                     	;# 
   319  000B                     	;# 
   320  000C                     	;# 
   321  000D                     	;# 
   322  000E                     	;# 
   323  000E                     	;# 
   324  000F                     	;# 
   325  0010                     	;# 
   326  0011                     	;# 
   327  0012                     	;# 
   328  0013                     	;# 
   329  0014                     	;# 
   330  0015                     	;# 
   331  0015                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001B                     	;# 
   338  001B                     	;# 
   339  001C                     	;# 
   340  001D                     	;# 
   341  001E                     	;# 
   342  001F                     	;# 
   343  0081                     	;# 
   344  0085                     	;# 
   345  0086                     	;# 
   346  0087                     	;# 
   347  0088                     	;# 
   348  0089                     	;# 
   349  008C                     	;# 
   350  008D                     	;# 
   351  008E                     	;# 
   352  008F                     	;# 
   353  0090                     	;# 
   354  0091                     	;# 
   355  0092                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0094                     	;# 
   360  0095                     	;# 
   361  0096                     	;# 
   362  0097                     	;# 
   363  0098                     	;# 
   364  0099                     	;# 
   365  009A                     	;# 
   366  009B                     	;# 
   367  009C                     	;# 
   368  009D                     	;# 
   369  009E                     	;# 
   370  009F                     	;# 
   371  0105                     	;# 
   372  0107                     	;# 
   373  0108                     	;# 
   374  0109                     	;# 
   375  010C                     	;# 
   376  010C                     	;# 
   377  010D                     	;# 
   378  010E                     	;# 
   379  010F                     	;# 
   380  0185                     	;# 
   381  0187                     	;# 
   382  0188                     	;# 
   383  0189                     	;# 
   384  018C                     	;# 
   385  018D                     	;# 
   386                           
   387                           	psect	strings
   388  057D                     __pstrings:
   389  057D                     stringtab:
   390  057D                     __stringtab:
   391  057D                     stringcode:	
   392                           ;	String table - string pointers are 1 byte each
   393                           
   394  057D                     stringdir:
   395  057D  3005               	movlw	high stringdir
   396  057E  008A               	movwf	10
   397  057F  0804               	movf	4,w
   398  0580  0A84               	incf	4,f
   399  0581  0782               	addwf	2,f
   400  0582                     __stringbase:
   401  0582  3400               	retlw	0
   402  0583                     __end_of__stringtab:
   403  0583                     _dpowers:
   404  0583  3401               	retlw	1
   405  0584  3400               	retlw	0
   406  0585  340A               	retlw	10
   407  0586  3400               	retlw	0
   408  0587  3464               	retlw	100
   409  0588  3400               	retlw	0
   410  0589  34E8               	retlw	232
   411  058A  3403               	retlw	3
   412  058B  3410               	retlw	16
   413  058C  3427               	retlw	39
   414  058D                     __end_of_dpowers:
   415  001A                     _RCREG	set	26
   416  0019                     _TXREG	set	25
   417  0018                     _RCSTAbits	set	24
   418  0006                     _PORTBbits	set	6
   419  0006                     _PORTB	set	6
   420  0008                     _PORTD	set	8
   421  000C                     _PIR1bits	set	12
   422  000B                     _INTCONbits	set	11
   423  0014                     _SSPCONbits	set	20
   424  0013                     _SSPBUF	set	19
   425  0014                     _SSPCON	set	20
   426  0063                     _SSPIF	set	99
   427  0098                     _TXSTAbits	set	152
   428  0099                     _SPBRG	set	153
   429  0086                     _TRISB	set	134
   430  0088                     _TRISD	set	136
   431  008C                     _PIE1bits	set	140
   432  0086                     _TRISBbits	set	134
   433  0094                     _SSPSTATbits	set	148
   434  0091                     _SSPCON2bits	set	145
   435  0091                     _SSPCON2	set	145
   436  0094                     _SSPSTAT	set	148
   437  0093                     _SSPADD	set	147
   438  0087                     _TRISCbits	set	135
   439  043C                     _TRISC4	set	1084
   440  043B                     _TRISC3	set	1083
   441  058D                     STR_3:
   442  058D  3425               	retlw	37	;'%'
   443  058E  3464               	retlw	100	;'d'
   444  058F  340A               	retlw	10
   445  0590  3400               	retlw	0
   446  0591                     STR_2:
   447  0591  3450               	retlw	80	;'P'
   448  0592  3431               	retlw	49	;'1'
   449  0593  3400               	retlw	0
   450  0594                     STR_4:
   451  0594  3450               	retlw	80	;'P'
   452  0595  3432               	retlw	50	;'2'
   453  0596  3400               	retlw	0
   454  0597                     STR_1:
   455  0597  344D               	retlw	77	;'M'
   456  0598  3433               	retlw	51	;'3'
   457  0599  3400               	retlw	0
   458  059A                     STR_6:
   459  059A  342C               	retlw	44	;','
   460  059B  3400               	retlw	0
   461  058D                     
   462                           	psect	cinit
   463  0015                     start_initialization:	
   464                           ; #config settings
   465                           
   466  0015                     __initialization:
   467                           
   468                           ; Clear objects allocated to BANK0
   469  0015  1383               	bcf	3,7	;select IRP bank0
   470  0016  3048               	movlw	low __pbssBANK0
   471  0017  0084               	movwf	4
   472  0018  305A               	movlw	low (__pbssBANK0+18)
   473  0019  120A  118A  2634  120A  118A  	fcall	clear_ram0
   474  001E                     end_of_initialization:	
   475                           ;End of C runtime variable initialization code
   476                           
   477  001E                     __end_of__initialization:
   478  001E  0183               	clrf	3
   479  001F  120A  118A  2BA6   	ljmp	_main	;jump to C main() function
   480                           
   481                           	psect	bssBANK0
   482  0048                     __pbssBANK0:
   483  0048                     _dir:
   484  0048                     	ds	3
   485  004B                     _res:
   486  004B                     	ds	2
   487  004D                     _lectura:
   488  004D                     	ds	2
   489  004F                     strtok@sp:
   490  004F                     	ds	1
   491  0050                     _data:
   492  0050                     	ds	10
   493                           
   494                           	psect	clrtext
   495  0634                     clear_ram0:	
   496                           ;	Called with FSR containing the base address, and
   497                           ;	W with the last address+1
   498                           
   499  0634  0064               	clrwdt	;clear the watchdog before getting into this loop
   500  0635                     clrloop0:
   501  0635  0180               	clrf	0	;clear RAM location pointed to by FSR
   502  0636  0A84               	incf	4,f	;increment pointer
   503  0637  0604               	xorwf	4,w	;XOR with final address
   504  0638  1903               	btfsc	3,2	;have we reached the end yet?
   505  0639  3400               	retlw	0	;all done for this memory range, return
   506  063A  0604               	xorwf	4,w	;XOR again to restore value
   507  063B  2E35               	goto	clrloop0	;do the next byte
   508                           
   509                           	psect	cstackBANK1
   510  00A0                     __pcstackBANK1:
   511  00A0                     _usart_init$1350:
   512                           
   513                           ; 4 bytes @ 0x0
   514  00A0                     	ds	4
   515  00A4                     ??_main:
   516                           
   517                           ; 1 bytes @ 0x4
   518  00A4                     	ds	3
   519                           
   520                           	psect	cstackCOMMON
   521  0070                     __pcstackCOMMON:
   522  0070                     ?_i2c_idle:
   523  0070                     ??_i2c_idle:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ?_usart_Tx:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ??_usart_Tx:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ?_recivedCMD:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ??_recivedCMD:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ?_token:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?_usart_TxStr:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_usart_Interrupt:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_get1:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ??_get1:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_strchr:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_i2c_init:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_i2c_start:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ??_i2c_start:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_i2c_stop:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ??_i2c_stop:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_i2c_read:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ??_i2c_read:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_i2c_write:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ??_i2c_write:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_i2c_sendACK:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ??_i2c_sendACK:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_myISR:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_main:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_strcmp:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?___lwdiv:	
   599                           ; 2 bytes @ 0x0
   600                           
   601  0070                     i2c_write@dato:	
   602                           ; 2 bytes @ 0x0
   603                           
   604  0070                     usart_Tx@send:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     strcmp@s2:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ___lwdiv@divisor:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     strchr@chr:	
   614                           ; 2 bytes @ 0x0
   615                           
   616                           
   617                           ; 2 bytes @ 0x0
   618  0070                     	ds	1
   619  0071                     ??_usart_TxStr:
   620                           
   621                           ; 1 bytes @ 0x1
   622  0071                     	ds	1
   623  0072                     ??_strcmp:
   624  0072                     ??_strchr:	
   625                           ; 1 bytes @ 0x2
   626                           
   627  0072                     usart_TxStr@str:	
   628                           ; 1 bytes @ 0x2
   629                           
   630  0072                     recivedCMD@cmd:	
   631                           ; 1 bytes @ 0x2
   632                           
   633  0072                     strchr@ptr:	
   634                           ; 1 bytes @ 0x2
   635                           
   636  0072                     ___lwdiv@dividend:	
   637                           ; 1 bytes @ 0x2
   638                           
   639                           
   640                           ; 2 bytes @ 0x2
   641  0072                     	ds	1
   642  0073                     ?_strspn:
   643  0073                     ?_strcspn:	
   644                           ; 2 bytes @ 0x3
   645                           
   646  0073                     recivedCMD@i:	
   647                           ; 2 bytes @ 0x3
   648                           
   649  0073                     strcspn@s2:	
   650                           ; 1 bytes @ 0x3
   651                           
   652  0073                     strspn@s2:	
   653                           ; 1 bytes @ 0x3
   654                           
   655                           
   656                           ; 1 bytes @ 0x3
   657  0073                     	ds	1
   658  0074                     ??___lwdiv:
   659  0074                     recivedCMD@j:	
   660                           ; 1 bytes @ 0x4
   661                           
   662                           
   663                           ; 1 bytes @ 0x4
   664  0074                     	ds	1
   665  0075                     ??_strspn:
   666  0075                     ??_strcspn:	
   667                           ; 1 bytes @ 0x5
   668                           
   669  0075                     strcmp@r:	
   670                           ; 1 bytes @ 0x5
   671                           
   672  0075                     ___lwdiv@quotient:	
   673                           ; 1 bytes @ 0x5
   674                           
   675                           
   676                           ; 2 bytes @ 0x5
   677  0075                     	ds	1
   678  0076                     strcmp@s1:
   679                           
   680                           ; 1 bytes @ 0x6
   681  0076                     	ds	1
   682  0077                     ___lwdiv@counter:
   683  0077                     strcspn@i:	
   684                           ; 1 bytes @ 0x7
   685                           
   686  0077                     strspn@i:	
   687                           ; 2 bytes @ 0x7
   688                           
   689                           
   690                           ; 2 bytes @ 0x7
   691  0077                     	ds	1
   692  0078                     ?___lwmod:
   693  0078                     ___lwmod@divisor:	
   694                           ; 2 bytes @ 0x8
   695                           
   696                           
   697                           ; 2 bytes @ 0x8
   698  0078                     	ds	1
   699  0079                     strcspn@s1:
   700  0079                     strspn@s1:	
   701                           ; 1 bytes @ 0x9
   702                           
   703                           
   704                           ; 1 bytes @ 0x9
   705  0079                     	ds	1
   706  007A                     ?_strtok:
   707  007A                     strtok@s2:	
   708                           ; 1 bytes @ 0xA
   709                           
   710  007A                     ___lwmod@dividend:	
   711                           ; 1 bytes @ 0xA
   712                           
   713                           
   714                           ; 2 bytes @ 0xA
   715  007A                     	ds	1
   716  007B                     ??_strtok:
   717                           
   718                           ; 1 bytes @ 0xB
   719  007B                     	ds	1
   720  007C                     ??___lwmod:
   721                           
   722                           ; 1 bytes @ 0xC
   723  007C                     	ds	1
   724  007D                     ___lwmod@counter:
   725  007D                     strtok@s1:	
   726                           ; 1 bytes @ 0xD
   727                           
   728                           
   729                           ; 1 bytes @ 0xD
   730  007D                     	ds	1
   731                           
   732                           	psect	cstackBANK0
   733  0020                     __pcstackBANK0:
   734  0020                     ??_token:
   735  0020                     ?_sprintf:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0020                     sprintf@f:	
   739                           ; 2 bytes @ 0x0
   740                           
   741                           
   742                           ; 1 bytes @ 0x0
   743  0020                     	ds	2
   744  0022                     token@i:
   745                           
   746                           ; 2 bytes @ 0x2
   747  0022                     	ds	1
   748  0023                     ??_sprintf:
   749                           
   750                           ; 1 bytes @ 0x3
   751  0023                     	ds	1
   752  0024                     token@cmd:
   753                           
   754                           ; 1 bytes @ 0x4
   755  0024                     	ds	1
   756  0025                     token@tok:
   757                           
   758                           ; 1 bytes @ 0x5
   759  0025                     	ds	1
   760  0026                     sprintf@ap:
   761                           
   762                           ; 1 bytes @ 0x6
   763  0026                     	ds	1
   764  0027                     sprintf@flag:
   765                           
   766                           ; 1 bytes @ 0x7
   767  0027                     	ds	1
   768  0028                     sprintf@prec:
   769                           
   770                           ; 1 bytes @ 0x8
   771  0028                     	ds	1
   772  0029                     sprintf@val:
   773                           
   774                           ; 2 bytes @ 0x9
   775  0029                     	ds	2
   776  002B                     sprintf@sp:
   777                           
   778                           ; 1 bytes @ 0xB
   779  002B                     	ds	1
   780  002C                     sprintf@c:
   781                           
   782                           ; 1 bytes @ 0xC
   783  002C                     	ds	1
   784  002D                     ??_myISR:
   785                           
   786                           ; 1 bytes @ 0xD
   787  002D                     	ds	8
   788  0035                     ??_usart_Interrupt:
   789  0035                     ??_i2c_init:	
   790                           ; 1 bytes @ 0x15
   791                           
   792  0035                     ?___aldiv:	
   793                           ; 1 bytes @ 0x15
   794                           
   795  0035                     ___aldiv@divisor:	
   796                           ; 4 bytes @ 0x15
   797                           
   798                           
   799                           ; 4 bytes @ 0x15
   800  0035                     	ds	4
   801  0039                     ___aldiv@dividend:
   802                           
   803                           ; 4 bytes @ 0x19
   804  0039                     	ds	4
   805  003D                     ??___aldiv:
   806                           
   807                           ; 1 bytes @ 0x1D
   808  003D                     	ds	1
   809  003E                     ___aldiv@counter:
   810                           
   811                           ; 1 bytes @ 0x1E
   812  003E                     	ds	1
   813  003F                     ___aldiv@sign:
   814                           
   815                           ; 1 bytes @ 0x1F
   816  003F                     	ds	1
   817  0040                     ___aldiv@quotient:
   818                           
   819                           ; 4 bytes @ 0x20
   820  0040                     	ds	4
   821  0044                     ?_usart_init:
   822  0044                     usart_init@BAUD:	
   823                           ; 1 bytes @ 0x24
   824                           
   825                           
   826                           ; 4 bytes @ 0x24
   827  0044                     	ds	4
   828  0048                     ??_usart_init:
   829                           
   830                           	psect	maintext
   831  03A6                     __pmaintext:	
   832                           ; 1 bytes @ 0x28
   833 ;;
   834 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   835 ;;
   836 ;; *************** function _main *****************
   837 ;; Defined at:
   838 ;;		line 63 in file "main.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;		None
   841 ;; Auto vars:     Size  Location     Type
   842 ;;		None
   843 ;; Return value:  Size  Location     Type
   844 ;;                  1    wreg      void 
   845 ;; Registers used:
   846 ;;		wreg, status,2, status,0, pclath, cstack
   847 ;; Tracked objects:
   848 ;;		On entry : B00/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   852 ;;      Params:         0       0       0       0       0
   853 ;;      Locals:         0       0       0       0       0
   854 ;;      Temps:          0       0       3       0       0
   855 ;;      Totals:         0       0       3       0       0
   856 ;;Total ram usage:        3 bytes
   857 ;; Hardware stack levels required when called:    8
   858 ;; This function calls:
   859 ;;		_i2c_init
   860 ;;		_usart_Interrupt
   861 ;;		_usart_init
   862 ;; This function is called by:
   863 ;;		Startup code after reset
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           
   868                           ;psect for function _main
   869  03A6                     _main:
   870  03A6                     l1859:	
   871                           ;incstack = 0
   872                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   873                           
   874                           
   875                           ;main.c: 64:     TRISD = 0x00;
   876  03A6  1683               	bsf	3,5	;RP0=1, select bank1
   877  03A7  1303               	bcf	3,6	;RP1=0, select bank1
   878  03A8  0188               	clrf	8	;volatile
   879                           
   880                           ;main.c: 65:     PORTD = 0x00;
   881  03A9  1283               	bcf	3,5	;RP0=0, select bank0
   882  03AA  1303               	bcf	3,6	;RP1=0, select bank0
   883  03AB  0188               	clrf	8	;volatile
   884                           
   885                           ;main.c: 66:     TRISB = 0x00;
   886  03AC  1683               	bsf	3,5	;RP0=1, select bank1
   887  03AD  1303               	bcf	3,6	;RP1=0, select bank1
   888  03AE  0186               	clrf	6	;volatile
   889                           
   890                           ;main.c: 67:     PORTB = 0x00;
   891  03AF  1283               	bcf	3,5	;RP0=0, select bank0
   892  03B0  1303               	bcf	3,6	;RP1=0, select bank0
   893  03B1  0186               	clrf	6	;volatile
   894  03B2                     l1861:
   895                           
   896                           ;main.c: 68:     usart_init(9600);
   897  03B2  3000               	movlw	0
   898  03B3  00C7               	movwf	usart_init@BAUD+3
   899  03B4  3000               	movlw	0
   900  03B5  00C6               	movwf	usart_init@BAUD+2
   901  03B6  3025               	movlw	37
   902  03B7  00C5               	movwf	usart_init@BAUD+1
   903  03B8  3080               	movlw	128
   904  03B9  00C4               	movwf	usart_init@BAUD
   905  03BA  120A  118A  22E5  120A  118A  	fcall	_usart_init
   906  03BF                     l1863:
   907                           
   908                           ;main.c: 69:     usart_Interrupt();
   909  03BF  120A  118A  2622  120A  118A  	fcall	_usart_Interrupt
   910  03C4                     l1865:
   911                           
   912                           ;main.c: 70:     i2c_init();
   913  03C4  120A  118A  25ED  120A  118A  	fcall	_i2c_init
   914  03C9                     l1867:
   915                           
   916                           ;main.c: 73:         PORTBbits.RB0 = 1;
   917  03C9  1283               	bcf	3,5	;RP0=0, select bank0
   918  03CA  1303               	bcf	3,6	;RP1=0, select bank0
   919  03CB  1406               	bsf	6,0	;volatile
   920  03CC                     l1869:
   921                           
   922                           ;main.c: 74:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   923  03CC  301A               	movlw	26
   924  03CD  1683               	bsf	3,5	;RP0=1, select bank1
   925  03CE  1303               	bcf	3,6	;RP1=0, select bank1
   926  03CF  00A6               	movwf	(??_main^(0+128)+2)
   927  03D0  305E               	movlw	94
   928  03D1  00A5               	movwf	(??_main^(0+128)+1)
   929  03D2  306D               	movlw	109
   930  03D3  00A4               	movwf	??_main^(0+128)
   931  03D4                     u1427:
   932  03D4  0BA4               	decfsz	??_main^(0+128),f
   933  03D5  2BD4               	goto	u1427
   934  03D6  0BA5               	decfsz	(??_main^(0+128)+1),f
   935  03D7  2BD4               	goto	u1427
   936  03D8  0BA6               	decfsz	(??_main^(0+128)+2),f
   937  03D9  2BD4               	goto	u1427
   938  03DA  2BDB               	nop2
   939  03DB                     l1871:
   940                           
   941                           ;main.c: 76:         PORTBbits.RB0 = 0;
   942  03DB  1283               	bcf	3,5	;RP0=0, select bank0
   943  03DC  1303               	bcf	3,6	;RP1=0, select bank0
   944  03DD  1006               	bcf	6,0	;volatile
   945  03DE                     l1873:
   946                           
   947                           ;main.c: 77:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   948  03DE  301A               	movlw	26
   949  03DF  1683               	bsf	3,5	;RP0=1, select bank1
   950  03E0  1303               	bcf	3,6	;RP1=0, select bank1
   951  03E1  00A6               	movwf	(??_main^(0+128)+2)
   952  03E2  305E               	movlw	94
   953  03E3  00A5               	movwf	(??_main^(0+128)+1)
   954  03E4  306D               	movlw	109
   955  03E5  00A4               	movwf	??_main^(0+128)
   956  03E6                     u1437:
   957  03E6  0BA4               	decfsz	??_main^(0+128),f
   958  03E7  2BE6               	goto	u1437
   959  03E8  0BA5               	decfsz	(??_main^(0+128)+1),f
   960  03E9  2BE6               	goto	u1437
   961  03EA  0BA6               	decfsz	(??_main^(0+128)+2),f
   962  03EB  2BE6               	goto	u1437
   963  03EC  2BED               	nop2
   964  03ED  2BC9               	goto	l1867
   965  03EE  120A  118A  2812   	ljmp	start
   966  03F1                     __end_of_main:
   967                           
   968                           	psect	text1
   969  02E5                     __ptext1:	
   970 ;; *************** function _usart_init *****************
   971 ;; Defined at:
   972 ;;		line 4 in file "usart.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;  BAUD            4   36[BANK0 ] long 
   975 ;; Auto vars:     Size  Location     Type
   976 ;;		None
   977 ;; Return value:  Size  Location     Type
   978 ;;                  1    wreg      void 
   979 ;; Registers used:
   980 ;;		wreg, status,2, status,0, pclath, cstack
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   986 ;;      Params:         0       4       0       0       0
   987 ;;      Locals:         0       0       4       0       0
   988 ;;      Temps:          0       0       0       0       0
   989 ;;      Totals:         0       4       4       0       0
   990 ;;Total ram usage:        8 bytes
   991 ;; Hardware stack levels used:    1
   992 ;; Hardware stack levels required when called:    7
   993 ;; This function calls:
   994 ;;		___aldiv
   995 ;; This function is called by:
   996 ;;		_main
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000                           
  1001                           ;psect for function _usart_init
  1002  02E5                     _usart_init:
  1003  02E5                     l1841:	
  1004                           ;incstack = 0
  1005                           ; Regs used in _usart_init: [wreg+status,2+status,0+pclath+cstack]
  1006                           
  1007                           
  1008                           ;usart.c: 6:     TRISBbits.TRISB1 = 1;
  1009  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  1010  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  1011  02E7  1486               	bsf	6,1	;volatile
  1012                           
  1013                           ;usart.c: 7:     TRISBbits.TRISB2 = 0;
  1014  02E8  1106               	bcf	6,2	;volatile
  1015  02E9                     l1843:
  1016                           
  1017                           ;usart.c: 8:     SPBRG = (unsigned char)(((20000000/BAUD)/64) - 1);
  1018  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  1019  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  1020  02EB  0847               	movf	usart_init@BAUD+3,w
  1021  02EC  00B8               	movwf	___aldiv@divisor+3
  1022  02ED  0846               	movf	usart_init@BAUD+2,w
  1023  02EE  00B7               	movwf	___aldiv@divisor+2
  1024  02EF  0845               	movf	usart_init@BAUD+1,w
  1025  02F0  00B6               	movwf	___aldiv@divisor+1
  1026  02F1  0844               	movf	usart_init@BAUD,w
  1027  02F2  00B5               	movwf	___aldiv@divisor
  1028  02F3  3001               	movlw	1
  1029  02F4  00BC               	movwf	___aldiv@dividend+3
  1030  02F5  3031               	movlw	49
  1031  02F6  00BB               	movwf	___aldiv@dividend+2
  1032  02F7  302D               	movlw	45
  1033  02F8  00BA               	movwf	___aldiv@dividend+1
  1034  02F9  3000               	movlw	0
  1035  02FA  00B9               	movwf	___aldiv@dividend
  1036  02FB  120A  118A  2248  120A  118A  	fcall	___aldiv
  1037  0300  1283               	bcf	3,5	;RP0=0, select bank0
  1038  0301  1303               	bcf	3,6	;RP1=0, select bank0
  1039  0302  0838               	movf	?___aldiv+3,w
  1040  0303  1683               	bsf	3,5	;RP0=1, select bank1
  1041  0304  1303               	bcf	3,6	;RP1=0, select bank1
  1042  0305  00A3               	movwf	(_usart_init$1350+3)^(0+128)
  1043  0306  1283               	bcf	3,5	;RP0=0, select bank0
  1044  0307  1303               	bcf	3,6	;RP1=0, select bank0
  1045  0308  0837               	movf	?___aldiv+2,w
  1046  0309  1683               	bsf	3,5	;RP0=1, select bank1
  1047  030A  1303               	bcf	3,6	;RP1=0, select bank1
  1048  030B  00A2               	movwf	(_usart_init$1350+2)^(0+128)
  1049  030C  1283               	bcf	3,5	;RP0=0, select bank0
  1050  030D  1303               	bcf	3,6	;RP1=0, select bank0
  1051  030E  0836               	movf	?___aldiv+1,w
  1052  030F  1683               	bsf	3,5	;RP0=1, select bank1
  1053  0310  1303               	bcf	3,6	;RP1=0, select bank1
  1054  0311  00A1               	movwf	(_usart_init$1350+1)^(0+128)
  1055  0312  1283               	bcf	3,5	;RP0=0, select bank0
  1056  0313  1303               	bcf	3,6	;RP1=0, select bank0
  1057  0314  0835               	movf	?___aldiv,w
  1058  0315  1683               	bsf	3,5	;RP0=1, select bank1
  1059  0316  1303               	bcf	3,6	;RP1=0, select bank1
  1060  0317  00A0               	movwf	_usart_init$1350^(0+128)
  1061                           
  1062                           ;usart.c: 8:     SPBRG = (unsigned char)(((20000000/BAUD)/64) - 1);
  1063  0318  3000               	movlw	0
  1064  0319  1283               	bcf	3,5	;RP0=0, select bank0
  1065  031A  1303               	bcf	3,6	;RP1=0, select bank0
  1066  031B  00B8               	movwf	___aldiv@divisor+3
  1067  031C  3000               	movlw	0
  1068  031D  00B7               	movwf	___aldiv@divisor+2
  1069  031E  3000               	movlw	0
  1070  031F  00B6               	movwf	___aldiv@divisor+1
  1071  0320  3040               	movlw	64
  1072  0321  00B5               	movwf	___aldiv@divisor
  1073  0322  1683               	bsf	3,5	;RP0=1, select bank1
  1074  0323  1303               	bcf	3,6	;RP1=0, select bank1
  1075  0324  0823               	movf	(_usart_init$1350+3)^(0+128),w
  1076  0325  1283               	bcf	3,5	;RP0=0, select bank0
  1077  0326  1303               	bcf	3,6	;RP1=0, select bank0
  1078  0327  00BC               	movwf	___aldiv@dividend+3
  1079  0328  1683               	bsf	3,5	;RP0=1, select bank1
  1080  0329  1303               	bcf	3,6	;RP1=0, select bank1
  1081  032A  0822               	movf	(_usart_init$1350+2)^(0+128),w
  1082  032B  1283               	bcf	3,5	;RP0=0, select bank0
  1083  032C  1303               	bcf	3,6	;RP1=0, select bank0
  1084  032D  00BB               	movwf	___aldiv@dividend+2
  1085  032E  1683               	bsf	3,5	;RP0=1, select bank1
  1086  032F  1303               	bcf	3,6	;RP1=0, select bank1
  1087  0330  0821               	movf	(_usart_init$1350+1)^(0+128),w
  1088  0331  1283               	bcf	3,5	;RP0=0, select bank0
  1089  0332  1303               	bcf	3,6	;RP1=0, select bank0
  1090  0333  00BA               	movwf	___aldiv@dividend+1
  1091  0334  1683               	bsf	3,5	;RP0=1, select bank1
  1092  0335  1303               	bcf	3,6	;RP1=0, select bank1
  1093  0336  0820               	movf	_usart_init$1350^(0+128),w
  1094  0337  1283               	bcf	3,5	;RP0=0, select bank0
  1095  0338  1303               	bcf	3,6	;RP1=0, select bank0
  1096  0339  00B9               	movwf	___aldiv@dividend
  1097  033A  120A  118A  2248  120A  118A  	fcall	___aldiv
  1098  033F  1283               	bcf	3,5	;RP0=0, select bank0
  1099  0340  1303               	bcf	3,6	;RP1=0, select bank0
  1100  0341  0835               	movf	?___aldiv,w
  1101  0342  3EFF               	addlw	255
  1102  0343  1683               	bsf	3,5	;RP0=1, select bank1
  1103  0344  1303               	bcf	3,6	;RP1=0, select bank1
  1104  0345  0099               	movwf	25	;volatile
  1105  0346                     l1845:
  1106                           
  1107                           ;usart.c: 13:     RCSTAbits.SPEN = 1;
  1108  0346  1283               	bcf	3,5	;RP0=0, select bank0
  1109  0347  1303               	bcf	3,6	;RP1=0, select bank0
  1110  0348  1798               	bsf	24,7	;volatile
  1111  0349                     l1847:
  1112                           
  1113                           ;usart.c: 14:     TXSTAbits.SYNC = 0;
  1114  0349  1683               	bsf	3,5	;RP0=1, select bank1
  1115  034A  1303               	bcf	3,6	;RP1=0, select bank1
  1116  034B  1218               	bcf	24,4	;volatile
  1117  034C                     l1849:
  1118                           
  1119                           ;usart.c: 15:     TXSTAbits.TX9 = 0;
  1120  034C  1318               	bcf	24,6	;volatile
  1121  034D                     l1851:
  1122                           
  1123                           ;usart.c: 16:     TXSTAbits.TXEN = 1;
  1124  034D  1698               	bsf	24,5	;volatile
  1125  034E                     l1853:
  1126                           
  1127                           ;usart.c: 17:     RCSTAbits.RX9 = 0;
  1128  034E  1283               	bcf	3,5	;RP0=0, select bank0
  1129  034F  1303               	bcf	3,6	;RP1=0, select bank0
  1130  0350  1318               	bcf	24,6	;volatile
  1131  0351                     l1855:
  1132                           
  1133                           ;usart.c: 18:     RCSTAbits.CREN = 1;
  1134  0351  1618               	bsf	24,4	;volatile
  1135  0352                     l1857:
  1136                           
  1137                           ;usart.c: 19:     RCSTAbits.SPEN = 1;
  1138  0352  1798               	bsf	24,7	;volatile
  1139  0353                     l210:
  1140  0353  0008               	return
  1141  0354                     __end_of_usart_init:
  1142                           
  1143                           	psect	text2
  1144  0248                     __ptext2:	
  1145 ;; *************** function ___aldiv *****************
  1146 ;; Defined at:
  1147 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;  divisor         4   21[BANK0 ] long 
  1150 ;;  dividend        4   25[BANK0 ] long 
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;  quotient        4   32[BANK0 ] long 
  1153 ;;  sign            1   31[BANK0 ] unsigned char 
  1154 ;;  counter         1   30[BANK0 ] unsigned char 
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  4   21[BANK0 ] long 
  1157 ;; Registers used:
  1158 ;;		wreg, status,2, status,0
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1164 ;;      Params:         0       8       0       0       0
  1165 ;;      Locals:         0       6       0       0       0
  1166 ;;      Temps:          0       1       0       0       0
  1167 ;;      Totals:         0      15       0       0       0
  1168 ;;Total ram usage:       15 bytes
  1169 ;; Hardware stack levels used:    1
  1170 ;; Hardware stack levels required when called:    6
  1171 ;; This function calls:
  1172 ;;		Nothing
  1173 ;; This function is called by:
  1174 ;;		_usart_init
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178                           
  1179                           ;psect for function ___aldiv
  1180  0248                     ___aldiv:
  1181  0248                     l1801:	
  1182                           ;incstack = 0
  1183                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1184                           
  1185  0248  1283               	bcf	3,5	;RP0=0, select bank0
  1186  0249  1303               	bcf	3,6	;RP1=0, select bank0
  1187  024A  01BF               	clrf	___aldiv@sign
  1188  024B                     l1803:
  1189  024B  1FB8               	btfss	___aldiv@divisor+3,7
  1190  024C  2A4E               	goto	u1321
  1191  024D  2A4F               	goto	u1320
  1192  024E                     u1321:
  1193  024E  2A5C               	goto	l426
  1194  024F                     u1320:
  1195  024F                     l1805:
  1196  024F  09B5               	comf	___aldiv@divisor,f
  1197  0250  09B6               	comf	___aldiv@divisor+1,f
  1198  0251  09B7               	comf	___aldiv@divisor+2,f
  1199  0252  09B8               	comf	___aldiv@divisor+3,f
  1200  0253  0AB5               	incf	___aldiv@divisor,f
  1201  0254  1903               	skipnz
  1202  0255  0AB6               	incf	___aldiv@divisor+1,f
  1203  0256  1903               	skipnz
  1204  0257  0AB7               	incf	___aldiv@divisor+2,f
  1205  0258  1903               	skipnz
  1206  0259  0AB8               	incf	___aldiv@divisor+3,f
  1207  025A  01BF               	clrf	___aldiv@sign
  1208  025B  0ABF               	incf	___aldiv@sign,f
  1209  025C                     l426:
  1210  025C  1FBC               	btfss	___aldiv@dividend+3,7
  1211  025D  2A5F               	goto	u1331
  1212  025E  2A60               	goto	u1330
  1213  025F                     u1331:
  1214  025F  2A6F               	goto	l1811
  1215  0260                     u1330:
  1216  0260                     l1807:
  1217  0260  09B9               	comf	___aldiv@dividend,f
  1218  0261  09BA               	comf	___aldiv@dividend+1,f
  1219  0262  09BB               	comf	___aldiv@dividend+2,f
  1220  0263  09BC               	comf	___aldiv@dividend+3,f
  1221  0264  0AB9               	incf	___aldiv@dividend,f
  1222  0265  1903               	skipnz
  1223  0266  0ABA               	incf	___aldiv@dividend+1,f
  1224  0267  1903               	skipnz
  1225  0268  0ABB               	incf	___aldiv@dividend+2,f
  1226  0269  1903               	skipnz
  1227  026A  0ABC               	incf	___aldiv@dividend+3,f
  1228  026B                     l1809:
  1229  026B  3001               	movlw	1
  1230  026C  00BD               	movwf	??___aldiv
  1231  026D  083D               	movf	??___aldiv,w
  1232  026E  06BF               	xorwf	___aldiv@sign,f
  1233  026F                     l1811:
  1234  026F  3000               	movlw	0
  1235  0270  00C3               	movwf	___aldiv@quotient+3
  1236  0271  3000               	movlw	0
  1237  0272  00C2               	movwf	___aldiv@quotient+2
  1238  0273  3000               	movlw	0
  1239  0274  00C1               	movwf	___aldiv@quotient+1
  1240  0275  3000               	movlw	0
  1241  0276  00C0               	movwf	___aldiv@quotient
  1242  0277                     l1813:
  1243  0277  0838               	movf	___aldiv@divisor+3,w
  1244  0278  0437               	iorwf	___aldiv@divisor+2,w
  1245  0279  0436               	iorwf	___aldiv@divisor+1,w
  1246  027A  0435               	iorwf	___aldiv@divisor,w
  1247  027B  1903               	skipnz
  1248  027C  2A7E               	goto	u1341
  1249  027D  2A7F               	goto	u1340
  1250  027E                     u1341:
  1251  027E  2ACC               	goto	l1833
  1252  027F                     u1340:
  1253  027F                     l1815:
  1254  027F  01BE               	clrf	___aldiv@counter
  1255  0280  0ABE               	incf	___aldiv@counter,f
  1256  0281  2A8F               	goto	l1819
  1257  0282                     l1817:
  1258  0282  3001               	movlw	1
  1259  0283  00BD               	movwf	??___aldiv
  1260  0284                     u1355:
  1261  0284  1003               	clrc
  1262  0285  0DB5               	rlf	___aldiv@divisor,f
  1263  0286  0DB6               	rlf	___aldiv@divisor+1,f
  1264  0287  0DB7               	rlf	___aldiv@divisor+2,f
  1265  0288  0DB8               	rlf	___aldiv@divisor+3,f
  1266  0289  0BBD               	decfsz	??___aldiv,f
  1267  028A  2A84               	goto	u1355
  1268  028B  3001               	movlw	1
  1269  028C  00BD               	movwf	??___aldiv
  1270  028D  083D               	movf	??___aldiv,w
  1271  028E  07BE               	addwf	___aldiv@counter,f
  1272  028F                     l1819:
  1273  028F  1FB8               	btfss	___aldiv@divisor+3,7
  1274  0290  2A92               	goto	u1361
  1275  0291  2A93               	goto	u1360
  1276  0292                     u1361:
  1277  0292  2A82               	goto	l1817
  1278  0293                     u1360:
  1279  0293                     l1821:
  1280  0293  3001               	movlw	1
  1281  0294  00BD               	movwf	??___aldiv
  1282  0295                     u1375:
  1283  0295  1003               	clrc
  1284  0296  0DC0               	rlf	___aldiv@quotient,f
  1285  0297  0DC1               	rlf	___aldiv@quotient+1,f
  1286  0298  0DC2               	rlf	___aldiv@quotient+2,f
  1287  0299  0DC3               	rlf	___aldiv@quotient+3,f
  1288  029A  0BBD               	decfsz	??___aldiv,f
  1289  029B  2A95               	goto	u1375
  1290  029C                     l1823:
  1291  029C  0838               	movf	___aldiv@divisor+3,w
  1292  029D  023C               	subwf	___aldiv@dividend+3,w
  1293  029E  1D03               	skipz
  1294  029F  2AAA               	goto	u1385
  1295  02A0  0837               	movf	___aldiv@divisor+2,w
  1296  02A1  023B               	subwf	___aldiv@dividend+2,w
  1297  02A2  1D03               	skipz
  1298  02A3  2AAA               	goto	u1385
  1299  02A4  0836               	movf	___aldiv@divisor+1,w
  1300  02A5  023A               	subwf	___aldiv@dividend+1,w
  1301  02A6  1D03               	skipz
  1302  02A7  2AAA               	goto	u1385
  1303  02A8  0835               	movf	___aldiv@divisor,w
  1304  02A9  0239               	subwf	___aldiv@dividend,w
  1305  02AA                     u1385:
  1306  02AA  1C03               	skipc
  1307  02AB  2AAD               	goto	u1381
  1308  02AC  2AAE               	goto	u1380
  1309  02AD                     u1381:
  1310  02AD  2ABD               	goto	l1829
  1311  02AE                     u1380:
  1312  02AE                     l1825:
  1313  02AE  0835               	movf	___aldiv@divisor,w
  1314  02AF  02B9               	subwf	___aldiv@dividend,f
  1315  02B0  0836               	movf	___aldiv@divisor+1,w
  1316  02B1  1C03               	skipc
  1317  02B2  0F36               	incfsz	___aldiv@divisor+1,w
  1318  02B3  02BA               	subwf	___aldiv@dividend+1,f
  1319  02B4  0837               	movf	___aldiv@divisor+2,w
  1320  02B5  1C03               	skipc
  1321  02B6  0F37               	incfsz	___aldiv@divisor+2,w
  1322  02B7  02BB               	subwf	___aldiv@dividend+2,f
  1323  02B8  0838               	movf	___aldiv@divisor+3,w
  1324  02B9  1C03               	skipc
  1325  02BA  0F38               	incfsz	___aldiv@divisor+3,w
  1326  02BB  02BC               	subwf	___aldiv@dividend+3,f
  1327  02BC                     l1827:
  1328  02BC  1440               	bsf	___aldiv@quotient,0
  1329  02BD                     l1829:
  1330  02BD  3001               	movlw	1
  1331  02BE                     u1395:
  1332  02BE  1003               	clrc
  1333  02BF  0CB8               	rrf	___aldiv@divisor+3,f
  1334  02C0  0CB7               	rrf	___aldiv@divisor+2,f
  1335  02C1  0CB6               	rrf	___aldiv@divisor+1,f
  1336  02C2  0CB5               	rrf	___aldiv@divisor,f
  1337  02C3  3EFF               	addlw	-1
  1338  02C4  1D03               	skipz
  1339  02C5  2ABE               	goto	u1395
  1340  02C6                     l1831:
  1341  02C6  3001               	movlw	1
  1342  02C7  02BE               	subwf	___aldiv@counter,f
  1343  02C8  1D03               	btfss	3,2
  1344  02C9  2ACB               	goto	u1401
  1345  02CA  2ACC               	goto	u1400
  1346  02CB                     u1401:
  1347  02CB  2A93               	goto	l1821
  1348  02CC                     u1400:
  1349  02CC                     l1833:
  1350  02CC  083F               	movf	___aldiv@sign,w
  1351  02CD  1903               	btfsc	3,2
  1352  02CE  2AD0               	goto	u1411
  1353  02CF  2AD1               	goto	u1410
  1354  02D0                     u1411:
  1355  02D0  2ADC               	goto	l1837
  1356  02D1                     u1410:
  1357  02D1                     l1835:
  1358  02D1  09C0               	comf	___aldiv@quotient,f
  1359  02D2  09C1               	comf	___aldiv@quotient+1,f
  1360  02D3  09C2               	comf	___aldiv@quotient+2,f
  1361  02D4  09C3               	comf	___aldiv@quotient+3,f
  1362  02D5  0AC0               	incf	___aldiv@quotient,f
  1363  02D6  1903               	skipnz
  1364  02D7  0AC1               	incf	___aldiv@quotient+1,f
  1365  02D8  1903               	skipnz
  1366  02D9  0AC2               	incf	___aldiv@quotient+2,f
  1367  02DA  1903               	skipnz
  1368  02DB  0AC3               	incf	___aldiv@quotient+3,f
  1369  02DC                     l1837:
  1370  02DC  0843               	movf	___aldiv@quotient+3,w
  1371  02DD  00B8               	movwf	?___aldiv+3
  1372  02DE  0842               	movf	___aldiv@quotient+2,w
  1373  02DF  00B7               	movwf	?___aldiv+2
  1374  02E0  0841               	movf	___aldiv@quotient+1,w
  1375  02E1  00B6               	movwf	?___aldiv+1
  1376  02E2  0840               	movf	___aldiv@quotient,w
  1377  02E3  00B5               	movwf	?___aldiv
  1378  02E4                     l436:
  1379  02E4  0008               	return
  1380  02E5                     __end_of___aldiv:
  1381                           
  1382                           	psect	text3
  1383  0622                     __ptext3:	
  1384 ;; *************** function _usart_Interrupt *****************
  1385 ;; Defined at:
  1386 ;;		line 41 in file "usart.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;		None
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;		None
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		None
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1400 ;;      Params:         0       0       0       0       0
  1401 ;;      Locals:         0       0       0       0       0
  1402 ;;      Temps:          0       0       0       0       0
  1403 ;;      Totals:         0       0       0       0       0
  1404 ;;Total ram usage:        0 bytes
  1405 ;; Hardware stack levels used:    1
  1406 ;; Hardware stack levels required when called:    6
  1407 ;; This function calls:
  1408 ;;		Nothing
  1409 ;; This function is called by:
  1410 ;;		_main
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           
  1415                           ;psect for function _usart_Interrupt
  1416  0622                     _usart_Interrupt:
  1417  0622                     l1701:	
  1418                           ;incstack = 0
  1419                           ; Regs used in _usart_Interrupt: []
  1420                           
  1421                           
  1422                           ;usart.c: 42:     PIR1bits.RCIF = 0;
  1423  0622  1283               	bcf	3,5	;RP0=0, select bank0
  1424  0623  1303               	bcf	3,6	;RP1=0, select bank0
  1425  0624  128C               	bcf	12,5	;volatile
  1426                           
  1427                           ;usart.c: 43:     PIE1bits.RCIE = 1;
  1428  0625  1683               	bsf	3,5	;RP0=1, select bank1
  1429  0626  1303               	bcf	3,6	;RP1=0, select bank1
  1430  0627  168C               	bsf	12,5	;volatile
  1431                           
  1432                           ;usart.c: 44:     INTCONbits.PEIE = 1;
  1433  0628  170B               	bsf	11,6	;volatile
  1434                           
  1435                           ;usart.c: 45:     INTCONbits.GIE = 1;
  1436  0629  178B               	bsf	11,7	;volatile
  1437  062A                     l228:
  1438  062A  0008               	return
  1439  062B                     __end_of_usart_Interrupt:
  1440                           
  1441                           	psect	text4
  1442  05ED                     __ptext4:	
  1443 ;; *************** function _i2c_init *****************
  1444 ;; Defined at:
  1445 ;;		line 10 in file "i2c.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;		None
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;		None
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		wreg, status,2
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1459 ;;      Params:         0       0       0       0       0
  1460 ;;      Locals:         0       0       0       0       0
  1461 ;;      Temps:          0       0       0       0       0
  1462 ;;      Totals:         0       0       0       0       0
  1463 ;;Total ram usage:        0 bytes
  1464 ;; Hardware stack levels used:    1
  1465 ;; Hardware stack levels required when called:    6
  1466 ;; This function calls:
  1467 ;;		Nothing
  1468 ;; This function is called by:
  1469 ;;		_main
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           
  1474                           ;psect for function _i2c_init
  1475  05ED                     _i2c_init:
  1476  05ED                     l1545:	
  1477                           ;incstack = 0
  1478                           ; Regs used in _i2c_init: [wreg+status,2]
  1479                           
  1480                           
  1481                           ;i2c.c: 12:     TRISCbits.TRISC3 = 1;
  1482  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  1483  05EE  1303               	bcf	3,6	;RP1=0, select bank1
  1484  05EF  1587               	bsf	7,3	;volatile
  1485                           
  1486                           ;i2c.c: 13:     TRISCbits.TRISC4 = 1;
  1487  05F0  1607               	bsf	7,4	;volatile
  1488  05F1                     l1547:
  1489                           
  1490                           ;i2c.c: 14:     SSPADD = 0x09;
  1491  05F1  3009               	movlw	9
  1492  05F2  0093               	movwf	19	;volatile
  1493                           
  1494                           ;i2c.c: 15:     SSPSTAT = 0x80;
  1495  05F3  3080               	movlw	128
  1496  05F4  0094               	movwf	20	;volatile
  1497  05F5                     l1549:
  1498                           
  1499                           ;i2c.c: 16:     SSPCON2 = 0x00;
  1500  05F5  0191               	clrf	17	;volatile
  1501  05F6                     l1551:
  1502                           
  1503                           ;i2c.c: 17:     SSPCON = 0x28;
  1504  05F6  3028               	movlw	40
  1505  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1506  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1507  05F9  0094               	movwf	20	;volatile
  1508  05FA                     l43:
  1509  05FA  0008               	return
  1510  05FB                     __end_of_i2c_init:
  1511                           
  1512                           	psect	text5
  1513  0022                     __ptext5:	
  1514 ;; *************** function _myISR *****************
  1515 ;; Defined at:
  1516 ;;		line 14 in file "main.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;		None
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;		None
  1521 ;; Return value:  Size  Location     Type
  1522 ;;                  1    wreg      void 
  1523 ;; Registers used:
  1524 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1530 ;;      Params:         0       0       0       0       0
  1531 ;;      Locals:         0       0       0       0       0
  1532 ;;      Temps:          0       8       0       0       0
  1533 ;;      Totals:         0       8       0       0       0
  1534 ;;Total ram usage:        8 bytes
  1535 ;; Hardware stack levels used:    1
  1536 ;; Hardware stack levels required when called:    5
  1537 ;; This function calls:
  1538 ;;		_i2c_read
  1539 ;;		_i2c_sendACK
  1540 ;;		_i2c_start
  1541 ;;		_i2c_stop
  1542 ;;		_i2c_write
  1543 ;;		_recivedCMD
  1544 ;;		_sprintf
  1545 ;;		_strcmp
  1546 ;;		_token
  1547 ;;		_usart_Tx
  1548 ;;		_usart_TxStr
  1549 ;; This function is called by:
  1550 ;;		Interrupt level 1
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554                           
  1555                           ;psect for function _myISR
  1556  0022                     _myISR:
  1557  0022                     i1l1707:
  1558                           
  1559                           ;main.c: 15:     INTCONbits.GIE = 0;
  1560  0022  138B               	bcf	11,7	;volatile
  1561  0023                     i1l1709:
  1562                           
  1563                           ;main.c: 16:     usart_Tx(' ');
  1564  0023  3020               	movlw	32
  1565  0024  120A  118A  2616  120A  118A  	fcall	_usart_Tx
  1566  0029                     i1l1711:
  1567                           
  1568                           ;main.c: 17:     recivedCMD(data);
  1569  0029  3050               	movlw	(low (_data| 0))& (0+255)
  1570  002A  120A  118A  2533  120A  118A  	fcall	_recivedCMD
  1571  002F                     i1l1713:
  1572                           
  1573                           ;main.c: 18:     token(data);
  1574  002F  3050               	movlw	(low (_data| 0))& (0+255)
  1575  0030  120A  118A  246F  120A  118A  	fcall	_token
  1576  0035                     i1l1715:
  1577                           
  1578                           ;main.c: 19:     if(strcmp(dir[0],"M3") == 0){
  1579  0035  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1580  0036  1283               	bcf	3,5	;RP0=0, select bank0
  1581  0037  1303               	bcf	3,6	;RP1=0, select bank0
  1582  0038  00AD               	movwf	??_myISR
  1583  0039  082D               	movf	??_myISR,w
  1584  003A  00F0               	movwf	strcmp@s2
  1585  003B  0848               	movf	_dir,w
  1586  003C  120A  118A  2505  120A  118A  	fcall	_strcmp
  1587  0041  0870               	movf	?_strcmp,w
  1588  0042  0471               	iorwf	?_strcmp+1,w
  1589  0043  1D03               	btfss	3,2
  1590  0044  2846               	goto	u127_21
  1591  0045  2847               	goto	u127_20
  1592  0046                     u127_21:
  1593  0046  2951               	goto	i1l1761
  1594  0047                     u127_20:
  1595  0047                     i1l1717:
  1596                           
  1597                           ;main.c: 20:         if(strcmp(dir[1],"P1") == 0){
  1598  0047  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1599  0048  1283               	bcf	3,5	;RP0=0, select bank0
  1600  0049  1303               	bcf	3,6	;RP1=0, select bank0
  1601  004A  00AD               	movwf	??_myISR
  1602  004B  082D               	movf	??_myISR,w
  1603  004C  00F0               	movwf	strcmp@s2
  1604  004D  0849               	movf	low ((_dir| 0+1)),w
  1605  004E  120A  118A  2505  120A  118A  	fcall	_strcmp
  1606  0053  0870               	movf	?_strcmp,w
  1607  0054  0471               	iorwf	?_strcmp+1,w
  1608  0055  1D03               	btfss	3,2
  1609  0056  2858               	goto	u128_21
  1610  0057  2859               	goto	u128_20
  1611  0058                     u128_21:
  1612  0058  28CE               	goto	i1l1739
  1613  0059                     u128_20:
  1614  0059                     i1l1719:
  1615                           
  1616                           ;main.c: 21:             if(*dir[2] == 'a'){
  1617  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1618  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1619  005B  084A               	movf	low ((_dir| 0+2)),w
  1620  005C  0084               	movwf	4
  1621  005D  3061               	movlw	97
  1622  005E  1383               	bcf	3,7	;select IRP bank0
  1623  005F  0600               	xorwf	0,w
  1624  0060  1D03               	btfss	3,2
  1625  0061  2863               	goto	u129_21
  1626  0062  2864               	goto	u129_20
  1627  0063                     u129_21:
  1628  0063  28B2               	goto	i1l1733
  1629  0064                     u129_20:
  1630  0064                     i1l1721:
  1631                           
  1632                           ;main.c: 22:                 i2c_start();
  1633  0064  120A  118A  25DA  120A  118A  	fcall	_i2c_start
  1634                           
  1635                           ;main.c: 23:                 i2c_write(0x31);
  1636  0069  3031               	movlw	49
  1637  006A  120A  118A  25C7  120A  118A  	fcall	_i2c_write
  1638                           
  1639                           ;main.c: 24:                 lectura[0] = i2c_read();
  1640  006F  120A  118A  25B3  120A  118A  	fcall	_i2c_read
  1641  0074  1283               	bcf	3,5	;RP0=0, select bank0
  1642  0075  1303               	bcf	3,6	;RP1=0, select bank0
  1643  0076  00AD               	movwf	??_myISR
  1644  0077  082D               	movf	??_myISR,w
  1645  0078  00CD               	movwf	_lectura
  1646  0079                     i1l1723:
  1647                           
  1648                           ;main.c: 25:                 i2c_sendACK();
  1649  0079  120A  118A  262B  120A  118A  	fcall	_i2c_sendACK
  1650  007E                     i1l1725:
  1651                           
  1652                           ;main.c: 26:                 lectura[1] = i2c_read();
  1653  007E  120A  118A  25B3  120A  118A  	fcall	_i2c_read
  1654  0083  1283               	bcf	3,5	;RP0=0, select bank0
  1655  0084  1303               	bcf	3,6	;RP1=0, select bank0
  1656  0085  00AD               	movwf	??_myISR
  1657  0086  082D               	movf	??_myISR,w
  1658  0087  00CE               	movwf	_lectura+1
  1659                           
  1660                           ;main.c: 27:                 i2c_stop();
  1661  0088  120A  118A  25FB  120A  118A  	fcall	_i2c_stop
  1662  008D                     i1l1727:
  1663                           
  1664                           ;main.c: 28:                 res = (int)((lectura[1] << 8) + (lectura[0]));
  1665  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1666  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1667  008F  084E               	movf	_lectura+1,w
  1668  0090  00AD               	movwf	??_myISR
  1669  0091  01AE               	clrf	??_myISR+1
  1670  0092  082D               	movf	??_myISR,w
  1671  0093  00AE               	movwf	??_myISR+1
  1672  0094  01AD               	clrf	??_myISR
  1673  0095  084D               	movf	_lectura,w
  1674  0096  072D               	addwf	??_myISR,w
  1675  0097  00CB               	movwf	_res
  1676  0098  3000               	movlw	0
  1677  0099  1803               	skipnc
  1678  009A  3001               	movlw	1
  1679  009B  072E               	addwf	??_myISR+1,w
  1680  009C  00CC               	movwf	_res+1
  1681  009D                     i1l1729:
  1682                           
  1683                           ;main.c: 29:                 sprintf(data,"%d\n", res);
  1684  009D  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1685  009E  00AD               	movwf	??_myISR
  1686  009F  082D               	movf	??_myISR,w
  1687  00A0  00A0               	movwf	sprintf@f
  1688  00A1  084C               	movf	_res+1,w
  1689  00A2  00A2               	movwf	?_sprintf+2
  1690  00A3  084B               	movf	_res,w
  1691  00A4  00A1               	movwf	?_sprintf+1
  1692  00A5  3050               	movlw	(low (_data| 0))& (0+255)
  1693  00A6  120A  118A  2160  120A  118A  	fcall	_sprintf
  1694  00AB                     i1l1731:
  1695                           
  1696                           ;main.c: 30:                 usart_TxStr(data);
  1697  00AB  3050               	movlw	(low (_data| 0))& (0+255)
  1698  00AC  120A  118A  259C  120A  118A  	fcall	_usart_TxStr
  1699                           
  1700                           ;main.c: 31:             }
  1701  00B1  2951               	goto	i1l1761
  1702  00B2                     i1l1733:
  1703                           
  1704                           ;main.c: 33:                 i2c_start();
  1705  00B2  120A  118A  25DA  120A  118A  	fcall	_i2c_start
  1706                           
  1707                           ;main.c: 34:                 i2c_write(0x30);
  1708  00B7  3030               	movlw	48
  1709  00B8  120A  118A  25C7  120A  118A  	fcall	_i2c_write
  1710  00BD                     i1l1735:
  1711                           
  1712                           ;main.c: 35:                 i2c_write(*dir[2]);
  1713  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1714  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1715  00BF  084A               	movf	low ((_dir| 0+2)),w
  1716  00C0  0084               	movwf	4
  1717  00C1  1383               	bcf	3,7	;select IRP bank0
  1718  00C2  0800               	movf	0,w
  1719  00C3  120A  118A  25C7  120A  118A  	fcall	_i2c_write
  1720  00C8                     i1l1737:
  1721                           
  1722                           ;main.c: 36:                 i2c_stop();
  1723  00C8  120A  118A  25FB  120A  118A  	fcall	_i2c_stop
  1724  00CD  2951               	goto	i1l1761
  1725  00CE                     i1l1739:
  1726  00CE  3012               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1727  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1728  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1729  00D1  00AD               	movwf	??_myISR
  1730  00D2  082D               	movf	??_myISR,w
  1731  00D3  00F0               	movwf	strcmp@s2
  1732  00D4  0849               	movf	low ((_dir| 0+1)),w
  1733  00D5  120A  118A  2505  120A  118A  	fcall	_strcmp
  1734  00DA  0870               	movf	?_strcmp,w
  1735  00DB  0471               	iorwf	?_strcmp+1,w
  1736  00DC  1D03               	btfss	3,2
  1737  00DD  28DF               	goto	u130_21
  1738  00DE  28E0               	goto	u130_20
  1739  00DF                     u130_21:
  1740  00DF  2951               	goto	i1l1761
  1741  00E0                     u130_20:
  1742  00E0                     i1l1741:
  1743                           
  1744                           ;main.c: 40:         if(*dir[2] == 'a'){
  1745  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1746  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1747  00E2  084A               	movf	low ((_dir| 0+2)),w
  1748  00E3  0084               	movwf	4
  1749  00E4  3061               	movlw	97
  1750  00E5  1383               	bcf	3,7	;select IRP bank0
  1751  00E6  0600               	xorwf	0,w
  1752  00E7  1D03               	btfss	3,2
  1753  00E8  28EA               	goto	u131_21
  1754  00E9  28EB               	goto	u131_20
  1755  00EA                     u131_21:
  1756  00EA  293A               	goto	i1l1755
  1757  00EB                     u131_20:
  1758  00EB                     i1l1743:
  1759                           
  1760                           ;main.c: 41:                 i2c_start();
  1761  00EB  120A  118A  25DA  120A  118A  	fcall	_i2c_start
  1762                           
  1763                           ;main.c: 42:                 i2c_write(0x33);
  1764  00F0  3033               	movlw	51
  1765  00F1  120A  118A  25C7  120A  118A  	fcall	_i2c_write
  1766                           
  1767                           ;main.c: 43:                 lectura[0] = i2c_read();
  1768  00F6  120A  118A  25B3  120A  118A  	fcall	_i2c_read
  1769  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1770  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1771  00FD  00AD               	movwf	??_myISR
  1772  00FE  082D               	movf	??_myISR,w
  1773  00FF  00CD               	movwf	_lectura
  1774  0100                     i1l1745:
  1775                           
  1776                           ;main.c: 44:                 i2c_sendACK();
  1777  0100  120A  118A  262B  120A  118A  	fcall	_i2c_sendACK
  1778  0105                     i1l1747:
  1779                           
  1780                           ;main.c: 45:                 lectura[1] = i2c_read();
  1781  0105  120A  118A  25B3  120A  118A  	fcall	_i2c_read
  1782  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1783  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1784  010C  00AD               	movwf	??_myISR
  1785  010D  082D               	movf	??_myISR,w
  1786  010E  00CE               	movwf	_lectura+1
  1787                           
  1788                           ;main.c: 46:                 i2c_stop();
  1789  010F  120A  118A  25FB  120A  118A  	fcall	_i2c_stop
  1790  0114                     i1l1749:
  1791                           
  1792                           ;main.c: 47:                 res = (int)(lectura[1] << 8)|(lectura[0]);
  1793  0114  1283               	bcf	3,5	;RP0=0, select bank0
  1794  0115  1303               	bcf	3,6	;RP1=0, select bank0
  1795  0116  084D               	movf	_lectura,w
  1796  0117  00AD               	movwf	??_myISR
  1797  0118  01AE               	clrf	??_myISR+1
  1798  0119  084E               	movf	_lectura+1,w
  1799  011A  00AF               	movwf	??_myISR+2
  1800  011B  01B0               	clrf	??_myISR+3
  1801  011C  082F               	movf	??_myISR+2,w
  1802  011D  00B0               	movwf	??_myISR+3
  1803  011E  01AF               	clrf	??_myISR+2
  1804  011F  082D               	movf	??_myISR,w
  1805  0120  042F               	iorwf	??_myISR+2,w
  1806  0121  00CB               	movwf	_res
  1807  0122  082E               	movf	??_myISR+1,w
  1808  0123  0430               	iorwf	??_myISR+3,w
  1809  0124  00CC               	movwf	_res+1
  1810  0125                     i1l1751:
  1811                           
  1812                           ;main.c: 48:                 sprintf(data,"%d\n", res);
  1813  0125  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1814  0126  00AD               	movwf	??_myISR
  1815  0127  082D               	movf	??_myISR,w
  1816  0128  00A0               	movwf	sprintf@f
  1817  0129  084C               	movf	_res+1,w
  1818  012A  00A2               	movwf	?_sprintf+2
  1819  012B  084B               	movf	_res,w
  1820  012C  00A1               	movwf	?_sprintf+1
  1821  012D  3050               	movlw	(low (_data| 0))& (0+255)
  1822  012E  120A  118A  2160  120A  118A  	fcall	_sprintf
  1823  0133                     i1l1753:
  1824                           
  1825                           ;main.c: 49:                 usart_TxStr(data);
  1826  0133  3050               	movlw	(low (_data| 0))& (0+255)
  1827  0134  120A  118A  259C  120A  118A  	fcall	_usart_TxStr
  1828                           
  1829                           ;main.c: 50:             }
  1830  0139  2951               	goto	i1l1761
  1831  013A                     i1l1755:
  1832                           
  1833                           ;main.c: 52:                 i2c_start();
  1834  013A  120A  118A  25DA  120A  118A  	fcall	_i2c_start
  1835                           
  1836                           ;main.c: 53:                 i2c_write(0x32);
  1837  013F  3032               	movlw	50
  1838  0140  120A  118A  25C7  120A  118A  	fcall	_i2c_write
  1839  0145                     i1l1757:
  1840                           
  1841                           ;main.c: 54:                 i2c_write(*dir[2]);
  1842  0145  1283               	bcf	3,5	;RP0=0, select bank0
  1843  0146  1303               	bcf	3,6	;RP1=0, select bank0
  1844  0147  084A               	movf	low ((_dir| 0+2)),w
  1845  0148  0084               	movwf	4
  1846  0149  1383               	bcf	3,7	;select IRP bank0
  1847  014A  0800               	movf	0,w
  1848  014B  120A  118A  25C7  120A  118A  	fcall	_i2c_write
  1849  0150  28C8               	goto	i1l1737
  1850  0151                     i1l1761:
  1851                           
  1852                           ;main.c: 59:     PIR1bits.RCIF = 0;
  1853  0151  1283               	bcf	3,5	;RP0=0, select bank0
  1854  0152  1303               	bcf	3,6	;RP1=0, select bank0
  1855  0153  128C               	bcf	12,5	;volatile
  1856  0154                     i1l1763:
  1857                           
  1858                           ;main.c: 60:     INTCONbits.GIE = 1;
  1859  0154  178B               	bsf	11,7	;volatile
  1860  0155                     i1l171:
  1861  0155  0834               	movf	??_myISR+7,w
  1862  0156  00FF               	movwf	btemp+1
  1863  0157  0833               	movf	??_myISR+6,w
  1864  0158  008A               	movwf	10
  1865  0159  0832               	movf	??_myISR+5,w
  1866  015A  0084               	movwf	4
  1867  015B  0E31               	swapf	??_myISR+4,w
  1868  015C  0083               	movwf	3
  1869  015D  0EFE               	swapf	btemp,f
  1870  015E  0E7E               	swapf	btemp,w
  1871  015F  0009               	retfie
  1872  0160                     __end_of_myISR:
  1873                           
  1874                           	psect	intentry
  1875  0004                     __pintentry:	
  1876                           ;incstack = 0
  1877                           ; Regs used in _myISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1878                           
  1879  0004                     interrupt_function:
  1880  007E                     saved_w	set	btemp
  1881  0004  00FE               	movwf	btemp
  1882  0005  0E03               	swapf	3,w
  1883  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1884  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1885  0008  00B1               	movwf	??_myISR+4
  1886  0009  0804               	movf	4,w
  1887  000A  00B2               	movwf	??_myISR+5
  1888  000B  080A               	movf	10,w
  1889  000C  00B3               	movwf	??_myISR+6
  1890  000D  087F               	movf	btemp+1,w
  1891  000E  00B4               	movwf	??_myISR+7
  1892  000F  120A  118A  2822   	ljmp	_myISR
  1893                           
  1894                           	psect	text6
  1895  059C                     __ptext6:	
  1896 ;; *************** function _usart_TxStr *****************
  1897 ;; Defined at:
  1898 ;;		line 33 in file "usart.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;  str             1    wreg     PTR unsigned char 
  1901 ;;		 -> data(10), 
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;  str             1    2[COMMON] PTR unsigned char 
  1904 ;;		 -> data(10), 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1914 ;;      Params:         0       0       0       0       0
  1915 ;;      Locals:         1       0       0       0       0
  1916 ;;      Temps:          1       0       0       0       0
  1917 ;;      Totals:         2       0       0       0       0
  1918 ;;Total ram usage:        2 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    1
  1921 ;; This function calls:
  1922 ;;		_usart_Tx
  1923 ;; This function is called by:
  1924 ;;		_myISR
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           
  1929                           ;psect for function _usart_TxStr
  1930  059C                     _usart_TxStr:
  1931                           
  1932                           ;incstack = 0
  1933                           ; Regs used in _usart_TxStr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1934                           ;usart_TxStr@str stored from wreg
  1935  059C  00F2               	movwf	usart_TxStr@str
  1936  059D                     i1l1675:
  1937                           
  1938                           ;usart.c: 34:     while(*str != '\0'){
  1939  059D  2DAA               	goto	i1l1681
  1940  059E                     i1l1677:
  1941                           
  1942                           ;usart.c: 35:         usart_Tx(*str);
  1943  059E  0872               	movf	usart_TxStr@str,w
  1944  059F  0084               	movwf	4
  1945  05A0  0800               	movf	0,w
  1946  05A1  120A  118A  2616  120A  118A  	fcall	_usart_Tx
  1947  05A6                     i1l1679:
  1948                           
  1949                           ;usart.c: 36:         str++;
  1950  05A6  3001               	movlw	1
  1951  05A7  00F1               	movwf	??_usart_TxStr
  1952  05A8  0871               	movf	??_usart_TxStr,w
  1953  05A9  07F2               	addwf	usart_TxStr@str,f
  1954  05AA                     i1l1681:
  1955                           
  1956                           ;usart.c: 34:     while(*str != '\0'){
  1957  05AA  0872               	movf	usart_TxStr@str,w
  1958  05AB  0084               	movwf	4
  1959  05AC  1383               	bcf	3,7	;select IRP bank0
  1960  05AD  0800               	movf	0,w
  1961  05AE  1D03               	btfss	3,2
  1962  05AF  2DB1               	goto	u124_21
  1963  05B0  2DB2               	goto	u124_20
  1964  05B1                     u124_21:
  1965  05B1  2D9E               	goto	i1l1677
  1966  05B2                     u124_20:
  1967  05B2                     i1l225:
  1968  05B2  0008               	return
  1969  05B3                     __end_of_usart_TxStr:
  1970                           
  1971                           	psect	text7
  1972  0616                     __ptext7:	
  1973 ;; *************** function _usart_Tx *****************
  1974 ;; Defined at:
  1975 ;;		line 24 in file "usart.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;  send            1    wreg     unsigned char 
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;  send            1    0[COMMON] unsigned char 
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		wreg
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1989 ;;      Params:         0       0       0       0       0
  1990 ;;      Locals:         1       0       0       0       0
  1991 ;;      Temps:          0       0       0       0       0
  1992 ;;      Totals:         1       0       0       0       0
  1993 ;;Total ram usage:        1 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; This function calls:
  1996 ;;		Nothing
  1997 ;; This function is called by:
  1998 ;;		_myISR
  1999 ;;		_usart_TxStr
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           
  2004                           ;psect for function _usart_Tx
  2005  0616                     _usart_Tx:
  2006                           
  2007                           ;incstack = 0
  2008                           ; Regs used in _usart_Tx: [wreg]
  2009                           ;usart_Tx@send stored from wreg
  2010  0616  00F0               	movwf	usart_Tx@send
  2011  0617                     i1l1417:
  2012                           
  2013                           ;usart.c: 25:     TXREG = send;
  2014  0617  0870               	movf	usart_Tx@send,w
  2015  0618  1283               	bcf	3,5	;RP0=0, select bank0
  2016  0619  1303               	bcf	3,6	;RP1=0, select bank0
  2017  061A  0099               	movwf	25	;volatile
  2018  061B                     i1l213:	
  2019                           ;usart.c: 26:     while (!TXSTAbits.TRMT);
  2020                           
  2021  061B  1683               	bsf	3,5	;RP0=1, select bank1
  2022  061C  1303               	bcf	3,6	;RP1=0, select bank1
  2023  061D  1C98               	btfss	24,1	;volatile
  2024  061E  2E20               	goto	u75_21
  2025  061F  2E21               	goto	u75_20
  2026  0620                     u75_21:
  2027  0620  2E1B               	goto	i1l213
  2028  0621                     u75_20:
  2029  0621                     i1l216:
  2030  0621  0008               	return
  2031  0622                     __end_of_usart_Tx:
  2032                           
  2033                           	psect	text8
  2034  046F                     __ptext8:	
  2035 ;; *************** function _token *****************
  2036 ;; Defined at:
  2037 ;;		line 68 in file "usart.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  cmd             1    wreg     PTR unsigned char 
  2040 ;;		 -> data(10), 
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  cmd             1    4[BANK0 ] PTR unsigned char 
  2043 ;;		 -> data(10), 
  2044 ;;  i               2    2[BANK0 ] int 
  2045 ;;  tok             1    5[BANK0 ] PTR unsigned char 
  2046 ;;		 -> NULL(0), data(10), 
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      void 
  2049 ;; Registers used:
  2050 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2056 ;;      Params:         0       0       0       0       0
  2057 ;;      Locals:         0       4       0       0       0
  2058 ;;      Temps:          0       2       0       0       0
  2059 ;;      Totals:         0       6       0       0       0
  2060 ;;Total ram usage:        6 bytes
  2061 ;; Hardware stack levels used:    1
  2062 ;; Hardware stack levels required when called:    4
  2063 ;; This function calls:
  2064 ;;		_strtok
  2065 ;; This function is called by:
  2066 ;;		_myISR
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           
  2071                           ;psect for function _token
  2072  046F                     _token:
  2073                           
  2074                           ;incstack = 0
  2075                           ; Regs used in _token: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2076                           ;token@cmd stored from wreg
  2077  046F  1283               	bcf	3,5	;RP0=0, select bank0
  2078  0470  1303               	bcf	3,6	;RP1=0, select bank0
  2079  0471  00A4               	movwf	token@cmd
  2080  0472                     i1l1587:
  2081                           
  2082                           ;usart.c: 70:     int i = 0;
  2083  0472  01A2               	clrf	token@i
  2084  0473  01A3               	clrf	token@i+1
  2085  0474                     i1l1589:
  2086                           
  2087                           ;usart.c: 71:     tok = strtok(cmd, ",");
  2088  0474  3018               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2089  0475  00A0               	movwf	??_token
  2090  0476  0820               	movf	??_token,w
  2091  0477  00FA               	movwf	strtok@s2
  2092  0478  0824               	movf	token@cmd,w
  2093  0479  120A  118A  2354  120A  118A  	fcall	_strtok
  2094  047E  1283               	bcf	3,5	;RP0=0, select bank0
  2095  047F  1303               	bcf	3,6	;RP1=0, select bank0
  2096  0480  00A1               	movwf	??_token+1
  2097  0481  0821               	movf	??_token+1,w
  2098  0482  00A5               	movwf	token@tok
  2099                           
  2100                           ;usart.c: 72:     while( tok != (0) ) {
  2101  0483  2CA1               	goto	i1l1597
  2102  0484                     i1l1591:
  2103                           
  2104                           ;usart.c: 73:         dir[i] = tok;
  2105  0484  0825               	movf	token@tok,w
  2106  0485  00A0               	movwf	??_token
  2107  0486  0822               	movf	token@i,w
  2108  0487  3E48               	addlw	(low (_dir| 0))& (0+255)
  2109  0488  0084               	movwf	4
  2110  0489  0820               	movf	??_token,w
  2111  048A  1383               	bcf	3,7	;select IRP bank0
  2112  048B  0080               	movwf	0
  2113  048C                     i1l1593:
  2114                           
  2115                           ;usart.c: 74:         tok = strtok((0), ",");
  2116  048C  3018               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2117  048D  00A0               	movwf	??_token
  2118  048E  0820               	movf	??_token,w
  2119  048F  00FA               	movwf	strtok@s2
  2120  0490  3000               	movlw	0
  2121  0491  120A  118A  2354  120A  118A  	fcall	_strtok
  2122  0496  1283               	bcf	3,5	;RP0=0, select bank0
  2123  0497  1303               	bcf	3,6	;RP1=0, select bank0
  2124  0498  00A1               	movwf	??_token+1
  2125  0499  0821               	movf	??_token+1,w
  2126  049A  00A5               	movwf	token@tok
  2127  049B                     i1l1595:
  2128                           
  2129                           ;usart.c: 75:         i++;
  2130  049B  3001               	movlw	1
  2131  049C  07A2               	addwf	token@i,f
  2132  049D  1803               	skipnc
  2133  049E  0AA3               	incf	token@i+1,f
  2134  049F  3000               	movlw	0
  2135  04A0  07A3               	addwf	token@i+1,f
  2136  04A1                     i1l1597:
  2137                           
  2138                           ;usart.c: 72:     while( tok != (0) ) {
  2139  04A1  0825               	movf	token@tok,w
  2140  04A2  1D03               	btfss	3,2
  2141  04A3  2CA5               	goto	u114_21
  2142  04A4  2CA6               	goto	u114_20
  2143  04A5                     u114_21:
  2144  04A5  2C84               	goto	i1l1591
  2145  04A6                     u114_20:
  2146  04A6                     i1l247:
  2147  04A6  0008               	return
  2148  04A7                     __end_of_token:
  2149                           
  2150                           	psect	text9
  2151  0354                     __ptext9:	
  2152 ;; *************** function _strtok *****************
  2153 ;; Defined at:
  2154 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strtok.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;  s1              1    wreg     PTR unsigned char 
  2157 ;;		 -> NULL(0), data(10), 
  2158 ;;  s2              1   10[COMMON] PTR const unsigned char 
  2159 ;;		 -> STR_7(2), STR_6(2), 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  s1              1   13[COMMON] PTR unsigned char 
  2162 ;;		 -> NULL(0), data(10), 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      PTR unsigned char 
  2165 ;; Registers used:
  2166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2172 ;;      Params:         1       0       0       0       0
  2173 ;;      Locals:         1       0       0       0       0
  2174 ;;      Temps:          2       0       0       0       0
  2175 ;;      Totals:         4       0       0       0       0
  2176 ;;Total ram usage:        4 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; Hardware stack levels required when called:    3
  2179 ;; This function calls:
  2180 ;;		_strcspn
  2181 ;;		_strspn
  2182 ;; This function is called by:
  2183 ;;		_token
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           
  2188                           ;psect for function _strtok
  2189  0354                     _strtok:
  2190                           
  2191                           ;incstack = 0
  2192                           ; Regs used in _strtok: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2193                           ;strtok@s1 stored from wreg
  2194  0354  00FD               	movwf	strtok@s1
  2195  0355                     i1l1425:
  2196  0355  087D               	movf	strtok@s1,w
  2197  0356  1D03               	btfss	3,2
  2198  0357  2B59               	goto	u77_21
  2199  0358  2B5A               	goto	u77_20
  2200  0359                     u77_21:
  2201  0359  2B60               	goto	i1l1429
  2202  035A                     u77_20:
  2203  035A                     i1l1427:
  2204  035A  1283               	bcf	3,5	;RP0=0, select bank0
  2205  035B  1303               	bcf	3,6	;RP1=0, select bank0
  2206  035C  084F               	movf	strtok@sp,w
  2207  035D  00FB               	movwf	??_strtok
  2208  035E  087B               	movf	??_strtok,w
  2209  035F  00FD               	movwf	strtok@s1
  2210  0360                     i1l1429:
  2211  0360  087D               	movf	strtok@s1,w
  2212  0361  1D03               	btfss	3,2
  2213  0362  2B64               	goto	u78_21
  2214  0363  2B65               	goto	u78_20
  2215  0364                     u78_21:
  2216  0364  2B67               	goto	i1l1435
  2217  0365                     u78_20:
  2218  0365                     i1l1431:
  2219  0365  3000               	movlw	0
  2220  0366  2BA5               	goto	i1l828
  2221  0367                     i1l1435:
  2222  0367  087A               	movf	strtok@s2,w
  2223  0368  00FB               	movwf	??_strtok
  2224  0369  087B               	movf	??_strtok,w
  2225  036A  00F3               	movwf	strspn@s2
  2226  036B  087D               	movf	strtok@s1,w
  2227  036C  120A  118A  24A7  120A  118A  	fcall	_strspn
  2228  0371  0873               	movf	?_strspn,w
  2229  0372  00FC               	movwf	??_strtok+1
  2230  0373  087C               	movf	??_strtok+1,w
  2231  0374  07FD               	addwf	strtok@s1,f
  2232  0375                     i1l1437:
  2233  0375  087D               	movf	strtok@s1,w
  2234  0376  0084               	movwf	4
  2235  0377  1383               	bcf	3,7	;select IRP bank0
  2236  0378  0800               	movf	0,w
  2237  0379  1D03               	btfss	3,2
  2238  037A  2B7C               	goto	u79_21
  2239  037B  2B7D               	goto	u79_20
  2240  037C                     u79_21:
  2241  037C  2B82               	goto	i1l1443
  2242  037D                     u79_20:
  2243  037D                     i1l1439:
  2244  037D  1283               	bcf	3,5	;RP0=0, select bank0
  2245  037E  1303               	bcf	3,6	;RP1=0, select bank0
  2246  037F  01CF               	clrf	strtok@sp
  2247  0380  3000               	movlw	0
  2248  0381  2BA5               	goto	i1l828
  2249  0382                     i1l1443:
  2250  0382  087A               	movf	strtok@s2,w
  2251  0383  00FB               	movwf	??_strtok
  2252  0384  087B               	movf	??_strtok,w
  2253  0385  00F3               	movwf	strcspn@s2
  2254  0386  087D               	movf	strtok@s1,w
  2255  0387  120A  118A  24D6  120A  118A  	fcall	_strcspn
  2256  038C  0873               	movf	?_strcspn,w
  2257  038D  077D               	addwf	strtok@s1,w
  2258  038E  00FC               	movwf	??_strtok+1
  2259  038F  087C               	movf	??_strtok+1,w
  2260  0390  1283               	bcf	3,5	;RP0=0, select bank0
  2261  0391  1303               	bcf	3,6	;RP1=0, select bank0
  2262  0392  00CF               	movwf	strtok@sp
  2263  0393                     i1l1445:
  2264  0393  084F               	movf	strtok@sp,w
  2265  0394  0084               	movwf	4
  2266  0395  1383               	bcf	3,7	;select IRP bank0
  2267  0396  0800               	movf	0,w
  2268  0397  1903               	btfsc	3,2
  2269  0398  2B9A               	goto	u80_21
  2270  0399  2B9B               	goto	u80_20
  2271  039A                     u80_21:
  2272  039A  2BA3               	goto	i1l1451
  2273  039B                     u80_20:
  2274  039B                     i1l1447:
  2275  039B  084F               	movf	strtok@sp,w
  2276  039C  0084               	movwf	4
  2277  039D  0180               	clrf	0
  2278  039E                     i1l1449:
  2279  039E  3001               	movlw	1
  2280  039F  00FB               	movwf	??_strtok
  2281  03A0  087B               	movf	??_strtok,w
  2282  03A1  07CF               	addwf	strtok@sp,f
  2283  03A2  2BA4               	goto	i1l1453
  2284  03A3                     i1l1451:
  2285  03A3  01CF               	clrf	strtok@sp
  2286  03A4                     i1l1453:
  2287  03A4  087D               	movf	strtok@s1,w
  2288  03A5                     i1l828:
  2289  03A5  0008               	return
  2290  03A6                     __end_of_strtok:
  2291                           
  2292                           	psect	text10
  2293  04A7                     __ptext10:	
  2294 ;; *************** function _strspn *****************
  2295 ;; Defined at:
  2296 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strspn.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  s1              1    wreg     PTR const unsigned char 
  2299 ;;		 -> NULL(0), data(10), 
  2300 ;;  s2              1    3[COMMON] PTR const unsigned char 
  2301 ;;		 -> STR_7(2), STR_6(2), 
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;  s1              1    9[COMMON] PTR const unsigned char 
  2304 ;;		 -> NULL(0), data(10), 
  2305 ;;  i               2    7[COMMON] unsigned int 
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  2    3[COMMON] unsigned int 
  2308 ;; Registers used:
  2309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2315 ;;      Params:         2       0       0       0       0
  2316 ;;      Locals:         3       0       0       0       0
  2317 ;;      Temps:          2       0       0       0       0
  2318 ;;      Totals:         7       0       0       0       0
  2319 ;;Total ram usage:        7 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    2
  2322 ;; This function calls:
  2323 ;;		_strchr
  2324 ;; This function is called by:
  2325 ;;		_strtok
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           
  2330                           ;psect for function _strspn
  2331  04A7                     _strspn:
  2332                           
  2333                           ;incstack = 0
  2334                           ; Regs used in _strspn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2335                           ;strspn@s1 stored from wreg
  2336  04A7  00F9               	movwf	strspn@s1
  2337  04A8                     i1l1387:
  2338  04A8  01F7               	clrf	strspn@i
  2339  04A9  01F8               	clrf	strspn@i+1
  2340  04AA  2CB5               	goto	i1l1391
  2341  04AB                     i1l1389:
  2342  04AB  3001               	movlw	1
  2343  04AC  00F5               	movwf	??_strspn
  2344  04AD  0875               	movf	??_strspn,w
  2345  04AE  07F9               	addwf	strspn@s1,f
  2346  04AF  3001               	movlw	1
  2347  04B0  07F7               	addwf	strspn@i,f
  2348  04B1  1803               	skipnc
  2349  04B2  0AF8               	incf	strspn@i+1,f
  2350  04B3  3000               	movlw	0
  2351  04B4  07F8               	addwf	strspn@i+1,f
  2352  04B5                     i1l1391:
  2353  04B5  0879               	movf	strspn@s1,w
  2354  04B6  0084               	movwf	4
  2355  04B7  1383               	bcf	3,7	;select IRP bank0
  2356  04B8  0800               	movf	0,w
  2357  04B9  1903               	btfsc	3,2
  2358  04BA  2CBC               	goto	u69_21
  2359  04BB  2CBD               	goto	u69_20
  2360  04BC                     u69_21:
  2361  04BC  2CD1               	goto	i1l1395
  2362  04BD                     u69_20:
  2363  04BD                     i1l1393:
  2364  04BD  0879               	movf	strspn@s1,w
  2365  04BE  0084               	movwf	4
  2366  04BF  0800               	movf	0,w
  2367  04C0  00F5               	movwf	??_strspn
  2368  04C1  01F6               	clrf	??_strspn+1
  2369  04C2  0875               	movf	??_strspn,w
  2370  04C3  00F0               	movwf	strchr@chr
  2371  04C4  0876               	movf	??_strspn+1,w
  2372  04C5  00F1               	movwf	strchr@chr+1
  2373  04C6  0873               	movf	strspn@s2,w
  2374  04C7  120A  118A  255D  120A  118A  	fcall	_strchr
  2375  04CC  3A00               	xorlw	0
  2376  04CD  1D03               	skipz
  2377  04CE  2CD0               	goto	u70_21
  2378  04CF  2CD1               	goto	u70_20
  2379  04D0                     u70_21:
  2380  04D0  2CAB               	goto	i1l1389
  2381  04D1                     u70_20:
  2382  04D1                     i1l1395:
  2383  04D1  0878               	movf	strspn@i+1,w
  2384  04D2  00F4               	movwf	?_strspn+1
  2385  04D3  0877               	movf	strspn@i,w
  2386  04D4  00F3               	movwf	?_strspn
  2387  04D5                     i1l857:
  2388  04D5  0008               	return
  2389  04D6                     __end_of_strspn:
  2390                           
  2391                           	psect	text11
  2392  04D6                     __ptext11:	
  2393 ;; *************** function _strcspn *****************
  2394 ;; Defined at:
  2395 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcspn.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;  s1              1    wreg     PTR const unsigned char 
  2398 ;;		 -> NULL(0), data(10), 
  2399 ;;  s2              1    3[COMMON] PTR const unsigned char 
  2400 ;;		 -> STR_7(2), STR_6(2), 
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  s1              1    9[COMMON] PTR const unsigned char 
  2403 ;;		 -> NULL(0), data(10), 
  2404 ;;  i               2    7[COMMON] unsigned int 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  2    3[COMMON] unsigned int 
  2407 ;; Registers used:
  2408 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2414 ;;      Params:         2       0       0       0       0
  2415 ;;      Locals:         3       0       0       0       0
  2416 ;;      Temps:          2       0       0       0       0
  2417 ;;      Totals:         7       0       0       0       0
  2418 ;;Total ram usage:        7 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; Hardware stack levels required when called:    2
  2421 ;; This function calls:
  2422 ;;		_strchr
  2423 ;; This function is called by:
  2424 ;;		_strtok
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           
  2429                           ;psect for function _strcspn
  2430  04D6                     _strcspn:
  2431                           
  2432                           ;incstack = 0
  2433                           ; Regs used in _strcspn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2434                           ;strcspn@s1 stored from wreg
  2435  04D6  00F9               	movwf	strcspn@s1
  2436  04D7                     i1l1399:
  2437  04D7  01F7               	clrf	strcspn@i
  2438  04D8  01F8               	clrf	strcspn@i+1
  2439  04D9  2CE4               	goto	i1l1403
  2440  04DA                     i1l1401:
  2441  04DA  3001               	movlw	1
  2442  04DB  00F5               	movwf	??_strcspn
  2443  04DC  0875               	movf	??_strcspn,w
  2444  04DD  07F9               	addwf	strcspn@s1,f
  2445  04DE  3001               	movlw	1
  2446  04DF  07F7               	addwf	strcspn@i,f
  2447  04E0  1803               	skipnc
  2448  04E1  0AF8               	incf	strcspn@i+1,f
  2449  04E2  3000               	movlw	0
  2450  04E3  07F8               	addwf	strcspn@i+1,f
  2451  04E4                     i1l1403:
  2452  04E4  0879               	movf	strcspn@s1,w
  2453  04E5  0084               	movwf	4
  2454  04E6  1383               	bcf	3,7	;select IRP bank0
  2455  04E7  0800               	movf	0,w
  2456  04E8  1903               	btfsc	3,2
  2457  04E9  2CEB               	goto	u71_21
  2458  04EA  2CEC               	goto	u71_20
  2459  04EB                     u71_21:
  2460  04EB  2D00               	goto	i1l1407
  2461  04EC                     u71_20:
  2462  04EC                     i1l1405:
  2463  04EC  0879               	movf	strcspn@s1,w
  2464  04ED  0084               	movwf	4
  2465  04EE  0800               	movf	0,w
  2466  04EF  00F5               	movwf	??_strcspn
  2467  04F0  01F6               	clrf	??_strcspn+1
  2468  04F1  0875               	movf	??_strcspn,w
  2469  04F2  00F0               	movwf	strchr@chr
  2470  04F3  0876               	movf	??_strcspn+1,w
  2471  04F4  00F1               	movwf	strchr@chr+1
  2472  04F5  0873               	movf	strcspn@s2,w
  2473  04F6  120A  118A  255D  120A  118A  	fcall	_strchr
  2474  04FB  3A00               	xorlw	0
  2475  04FC  1903               	skipnz
  2476  04FD  2CFF               	goto	u72_21
  2477  04FE  2D00               	goto	u72_20
  2478  04FF                     u72_21:
  2479  04FF  2CDA               	goto	i1l1401
  2480  0500                     u72_20:
  2481  0500                     i1l1407:
  2482  0500  0878               	movf	strcspn@i+1,w
  2483  0501  00F4               	movwf	?_strcspn+1
  2484  0502  0877               	movf	strcspn@i,w
  2485  0503  00F3               	movwf	?_strcspn
  2486  0504                     i1l841:
  2487  0504  0008               	return
  2488  0505                     __end_of_strcspn:
  2489                           
  2490                           	psect	text12
  2491  055D                     __ptext12:	
  2492 ;; *************** function _strchr *****************
  2493 ;; Defined at:
  2494 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strchr.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;  ptr             1    wreg     PTR const unsigned char 
  2497 ;;		 -> STR_7(2), STR_6(2), 
  2498 ;;  chr             2    0[COMMON] int 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  ptr             1    2[COMMON] PTR const unsigned char 
  2501 ;;		 -> STR_7(2), STR_6(2), 
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      PTR unsigned char 
  2504 ;; Registers used:
  2505 ;;		wreg, fsr0l, fsr0h, pclath
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2511 ;;      Params:         2       0       0       0       0
  2512 ;;      Locals:         1       0       0       0       0
  2513 ;;      Temps:          0       0       0       0       0
  2514 ;;      Totals:         3       0       0       0       0
  2515 ;;Total ram usage:        3 bytes
  2516 ;; Hardware stack levels used:    2
  2517 ;; This function calls:
  2518 ;;		Nothing
  2519 ;; This function is called by:
  2520 ;;		_strcspn
  2521 ;;		_strspn
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           
  2526                           ;psect for function _strchr
  2527  055D                     _strchr:
  2528                           
  2529                           ;incstack = 0
  2530 ;; using string table level
  2531                           ; Regs used in _strchr: [wreg-fsr0h+pclath]
  2532                           ;strchr@ptr stored from wreg
  2533  055D  00F2               	movwf	strchr@ptr
  2534  055E                     i1l844:
  2535  055E                     i1l1375:
  2536  055E  0872               	movf	strchr@ptr,w
  2537  055F  0084               	movwf	4
  2538  0560  120A  118A  257D  120A  118A  	fcall	stringdir
  2539  0565  0670               	xorwf	strchr@chr,w
  2540  0566  1D03               	skipz
  2541  0567  2D69               	goto	u67_21
  2542  0568  2D6A               	goto	u67_20
  2543  0569                     u67_21:
  2544  0569  2D6C               	goto	i1l1381
  2545  056A                     u67_20:
  2546  056A                     i1l1377:
  2547  056A  0872               	movf	strchr@ptr,w
  2548  056B  2D7C               	goto	i1l846
  2549  056C                     i1l1381:
  2550  056C  3001               	movlw	1
  2551  056D  07F2               	addwf	strchr@ptr,f
  2552  056E  30FF               	movlw	-1
  2553  056F  0772               	addwf	strchr@ptr,w
  2554  0570  0084               	movwf	4
  2555  0571  120A  118A  257D  120A  118A  	fcall	stringdir
  2556  0576  3A00               	xorlw	0
  2557  0577  1D03               	skipz
  2558  0578  2D7A               	goto	u68_21
  2559  0579  2D7B               	goto	u68_20
  2560  057A                     u68_21:
  2561  057A  2D5E               	goto	i1l844
  2562  057B                     u68_20:
  2563  057B                     i1l1383:
  2564  057B  3000               	movlw	0
  2565  057C                     i1l846:
  2566  057C  0008               	return
  2567  057D                     __end_of_strchr:
  2568                           
  2569                           	psect	text13
  2570  0505                     __ptext13:	
  2571 ;; *************** function _strcmp *****************
  2572 ;; Defined at:
  2573 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcmp.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;  s1              1    wreg     PTR const unsigned char 
  2576 ;;		 -> NULL(0), data(10), 
  2577 ;;  s2              1    0[COMMON] PTR const unsigned char 
  2578 ;;		 -> STR_4(3), STR_2(3), STR_1(3), 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  s1              1    6[COMMON] PTR const unsigned char 
  2581 ;;		 -> NULL(0), data(10), 
  2582 ;;  r               1    5[COMMON] char 
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  2    0[COMMON] int 
  2585 ;; Registers used:
  2586 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2592 ;;      Params:         2       0       0       0       0
  2593 ;;      Locals:         2       0       0       0       0
  2594 ;;      Temps:          3       0       0       0       0
  2595 ;;      Totals:         7       0       0       0       0
  2596 ;;Total ram usage:        7 bytes
  2597 ;; Hardware stack levels used:    2
  2598 ;; This function calls:
  2599 ;;		Nothing
  2600 ;; This function is called by:
  2601 ;;		_myISR
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           
  2606                           ;psect for function _strcmp
  2607  0505                     _strcmp:
  2608                           
  2609                           ;incstack = 0
  2610                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+pclath]
  2611                           ;strcmp@s1 stored from wreg
  2612  0505  00F6               	movwf	strcmp@s1
  2613  0506                     i1l1599:
  2614  0506  2D0F               	goto	i1l1605
  2615  0507                     i1l1601:
  2616  0507  3001               	movlw	1
  2617  0508  00F2               	movwf	??_strcmp
  2618  0509  0872               	movf	??_strcmp,w
  2619  050A  07F6               	addwf	strcmp@s1,f
  2620  050B                     i1l1603:
  2621  050B  3001               	movlw	1
  2622  050C  00F2               	movwf	??_strcmp
  2623  050D  0872               	movf	??_strcmp,w
  2624  050E  07F0               	addwf	strcmp@s2,f
  2625  050F                     i1l1605:
  2626  050F  0870               	movf	strcmp@s2,w
  2627  0510  0084               	movwf	4
  2628  0511  120A  118A  257D  120A  118A  	fcall	stringdir
  2629  0516  00F2               	movwf	??_strcmp
  2630  0517  0876               	movf	strcmp@s1,w
  2631  0518  0084               	movwf	4
  2632  0519  1383               	bcf	3,7	;select IRP bank0
  2633  051A  0800               	movf	0,w
  2634  051B  00F3               	movwf	??_strcmp+1
  2635  051C  0872               	movf	??_strcmp,w
  2636  051D  0273               	subwf	??_strcmp+1,w
  2637  051E  00F4               	movwf	??_strcmp+2
  2638  051F  0874               	movf	??_strcmp+2,w
  2639  0520  00F5               	movwf	strcmp@r
  2640  0521  0875               	movf	strcmp@r,w
  2641  0522  1D03               	btfss	3,2
  2642  0523  2D25               	goto	u115_21
  2643  0524  2D26               	goto	u115_20
  2644  0525                     u115_21:
  2645  0525  2D2D               	goto	i1l1609
  2646  0526                     u115_20:
  2647  0526                     i1l1607:
  2648  0526  0876               	movf	strcmp@s1,w
  2649  0527  0084               	movwf	4
  2650  0528  0800               	movf	0,w
  2651  0529  1D03               	btfss	3,2
  2652  052A  2D2C               	goto	u116_21
  2653  052B  2D2D               	goto	u116_20
  2654  052C                     u116_21:
  2655  052C  2D07               	goto	i1l1601
  2656  052D                     u116_20:
  2657  052D                     i1l1609:
  2658  052D  0875               	movf	strcmp@r,w
  2659  052E  00F0               	movwf	?_strcmp
  2660  052F  01F1               	clrf	?_strcmp+1
  2661  0530  1BF0               	btfsc	?_strcmp,7
  2662  0531  03F1               	decf	?_strcmp+1,f
  2663  0532                     i1l817:
  2664  0532  0008               	return
  2665  0533                     __end_of_strcmp:
  2666                           
  2667                           	psect	text14
  2668  0160                     __ptext14:	
  2669 ;; *************** function _sprintf *****************
  2670 ;; Defined at:
  2671 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  sp              1    wreg     PTR unsigned char 
  2674 ;;		 -> data(10), 
  2675 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2676 ;;		 -> STR_5(4), STR_3(4), 
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  2679 ;;		 -> data(10), 
  2680 ;;  tmpval          4    0        struct .
  2681 ;;  val             2    9[BANK0 ] unsigned int 
  2682 ;;  cp              2    0        PTR const unsigned char 
  2683 ;;  len             2    0        unsigned int 
  2684 ;;  c               1   12[BANK0 ] unsigned char 
  2685 ;;  prec            1    8[BANK0 ] char 
  2686 ;;  flag            1    7[BANK0 ] unsigned char 
  2687 ;;  ap              1    6[BANK0 ] PTR void [1]
  2688 ;;		 -> ?_sprintf(2), 
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  2    0[BANK0 ] int 
  2691 ;; Registers used:
  2692 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2698 ;;      Params:         0       3       0       0       0
  2699 ;;      Locals:         0       7       0       0       0
  2700 ;;      Temps:          0       3       0       0       0
  2701 ;;      Totals:         0      13       0       0       0
  2702 ;;Total ram usage:       13 bytes
  2703 ;; Hardware stack levels used:    1
  2704 ;; Hardware stack levels required when called:    1
  2705 ;; This function calls:
  2706 ;;		___lwdiv
  2707 ;;		___lwmod
  2708 ;; This function is called by:
  2709 ;;		_myISR
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           
  2714                           ;psect for function _sprintf
  2715  0160                     _sprintf:
  2716                           
  2717                           ;incstack = 0
  2718                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2719                           ;sprintf@sp stored from wreg
  2720  0160  1283               	bcf	3,5	;RP0=0, select bank0
  2721  0161  1303               	bcf	3,6	;RP1=0, select bank0
  2722  0162  00AB               	movwf	sprintf@sp
  2723  0163                     i1l1613:
  2724                           
  2725                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2726  0163  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2727  0164  00A3               	movwf	??_sprintf
  2728  0165  0823               	movf	??_sprintf,w
  2729  0166  00A6               	movwf	sprintf@ap
  2730                           
  2731                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2732  0167  2A31               	goto	i1l1665
  2733  0168                     i1l1615:
  2734                           
  2735                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2736  0168  3025               	movlw	37
  2737  0169  062C               	xorwf	sprintf@c,w
  2738  016A  1903               	btfsc	3,2
  2739  016B  296D               	goto	u117_21
  2740  016C  296E               	goto	u117_20
  2741  016D                     u117_21:
  2742  016D  297A               	goto	i1l1621
  2743  016E                     u117_20:
  2744  016E                     i1l1617:
  2745                           
  2746                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2747  016E  082C               	movf	sprintf@c,w
  2748  016F  00A3               	movwf	??_sprintf
  2749  0170  082B               	movf	sprintf@sp,w
  2750  0171  0084               	movwf	4
  2751  0172  0823               	movf	??_sprintf,w
  2752  0173  1383               	bcf	3,7	;select IRP bank0
  2753  0174  0080               	movwf	0
  2754  0175                     i1l1619:
  2755  0175  3001               	movlw	1
  2756  0176  00A3               	movwf	??_sprintf
  2757  0177  0823               	movf	??_sprintf,w
  2758  0178  07AB               	addwf	sprintf@sp,f
  2759                           
  2760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2761  0179  2A31               	goto	i1l1665
  2762  017A                     i1l1621:
  2763                           
  2764                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2765  017A  01A7               	clrf	sprintf@flag
  2766  017B                     i1l1625:	
  2767                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2768                           
  2769  017B  3001               	movlw	1
  2770  017C  07A0               	addwf	sprintf@f,f
  2771  017D  30FF               	movlw	-1
  2772  017E  0720               	addwf	sprintf@f,w
  2773  017F  0084               	movwf	4
  2774  0180  120A  118A  257D  120A  118A  	fcall	stringdir
  2775  0185  00AC               	movwf	sprintf@c
  2776  0186  00A3               	movwf	??_sprintf
  2777  0187  01A4               	clrf	??_sprintf+1
  2778                           
  2779                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2780                           ; Switch size 1, requested type "simple"
  2781                           ; Number of cases is 1, Range of values is 0 to 0
  2782                           ; switch strategies available:
  2783                           ; Name         Instructions Cycles
  2784                           ; simple_byte            4     3 (average)
  2785                           ; direct_byte           11     8 (fixed)
  2786                           ; jumptable            260     6 (fixed)
  2787                           ;	Chosen strategy is simple_byte
  2788  0188  0824               	movf	??_sprintf+1,w
  2789  0189  3A00               	xorlw	0	; case 0
  2790  018A  1903               	skipnz
  2791  018B  298D               	goto	i1l1895
  2792  018C  2A31               	goto	i1l1665
  2793  018D                     i1l1895:
  2794                           
  2795                           ; Switch size 1, requested type "simple"
  2796                           ; Number of cases is 3, Range of values is 0 to 105
  2797                           ; switch strategies available:
  2798                           ; Name         Instructions Cycles
  2799                           ; simple_byte           10     6 (average)
  2800                           ; jumptable            260     6 (fixed)
  2801                           ;	Chosen strategy is simple_byte
  2802  018D  0823               	movf	??_sprintf,w
  2803  018E  3A00               	xorlw	0	; case 0
  2804  018F  1903               	skipnz
  2805  0190  2A43               	goto	i1l1667
  2806  0191  3A64               	xorlw	100	; case 100
  2807  0192  1903               	skipnz
  2808  0193  2998               	goto	i1l1627
  2809  0194  3A0D               	xorlw	13	; case 105
  2810  0195  1903               	skipnz
  2811  0196  2998               	goto	i1l1627
  2812  0197  2A31               	goto	i1l1665
  2813  0198                     i1l1627:
  2814                           
  2815                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2816  0198  0826               	movf	sprintf@ap,w
  2817  0199  0084               	movwf	4
  2818  019A  1383               	bcf	3,7	;select IRP bank0
  2819  019B  0800               	movf	0,w
  2820  019C  00A9               	movwf	sprintf@val
  2821  019D  0A84               	incf	4,f
  2822  019E  0800               	movf	0,w
  2823  019F  00AA               	movwf	sprintf@val+1
  2824  01A0                     i1l1629:
  2825  01A0  3002               	movlw	2
  2826  01A1  00A3               	movwf	??_sprintf
  2827  01A2  0823               	movf	??_sprintf,w
  2828  01A3  07A6               	addwf	sprintf@ap,f
  2829  01A4                     i1l1631:
  2830                           
  2831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2832  01A4  1FAA               	btfss	sprintf@val+1,7
  2833  01A5  29A7               	goto	u118_21
  2834  01A6  29A8               	goto	u118_20
  2835  01A7                     u118_21:
  2836  01A7  29B1               	goto	i1l1637
  2837  01A8                     u118_20:
  2838  01A8                     i1l1633:
  2839                           
  2840                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2841  01A8  3003               	movlw	3
  2842  01A9  00A3               	movwf	??_sprintf
  2843  01AA  0823               	movf	??_sprintf,w
  2844  01AB  04A7               	iorwf	sprintf@flag,f
  2845  01AC                     i1l1635:
  2846                           
  2847                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2848  01AC  09A9               	comf	sprintf@val,f
  2849  01AD  09AA               	comf	sprintf@val+1,f
  2850  01AE  0AA9               	incf	sprintf@val,f
  2851  01AF  1903               	skipnz
  2852  01B0  0AAA               	incf	sprintf@val+1,f
  2853  01B1                     i1l1637:
  2854                           
  2855                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2856  01B1  01AC               	clrf	sprintf@c
  2857  01B2  0AAC               	incf	sprintf@c,f
  2858  01B3                     i1l1643:
  2859                           
  2860                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2861  01B3  082C               	movf	sprintf@c,w
  2862  01B4  00A3               	movwf	??_sprintf
  2863  01B5  0723               	addwf	??_sprintf,w
  2864  01B6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2865  01B7  0084               	movwf	4
  2866  01B8  120A  118A  257D  120A  118A  	fcall	stringdir
  2867  01BD  00A4               	movwf	??_sprintf+1
  2868  01BE  120A  118A  257D  120A  118A  	fcall	stringdir
  2869  01C3  00A5               	movwf	??_sprintf+2
  2870  01C4  0825               	movf	??_sprintf+2,w
  2871  01C5  022A               	subwf	sprintf@val+1,w
  2872  01C6  1D03               	skipz
  2873  01C7  29CA               	goto	u119_25
  2874  01C8  0824               	movf	??_sprintf+1,w
  2875  01C9  0229               	subwf	sprintf@val,w
  2876  01CA                     u119_25:
  2877  01CA  1803               	skipnc
  2878  01CB  29CD               	goto	u119_21
  2879  01CC  29CE               	goto	u119_20
  2880  01CD                     u119_21:
  2881  01CD  29CF               	goto	i1l1647
  2882  01CE                     u119_20:
  2883  01CE  29D9               	goto	i1l1649
  2884  01CF                     i1l1647:
  2885  01CF  3001               	movlw	1
  2886  01D0  00A3               	movwf	??_sprintf
  2887  01D1  0823               	movf	??_sprintf,w
  2888  01D2  07AC               	addwf	sprintf@c,f
  2889  01D3  3005               	movlw	5
  2890  01D4  062C               	xorwf	sprintf@c,w
  2891  01D5  1D03               	btfss	3,2
  2892  01D6  29D8               	goto	u120_21
  2893  01D7  29D9               	goto	u120_20
  2894  01D8                     u120_21:
  2895  01D8  29B3               	goto	i1l1643
  2896  01D9                     u120_20:
  2897  01D9                     i1l1649:
  2898                           
  2899                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2900  01D9  0827               	movf	sprintf@flag,w
  2901  01DA  3903               	andlw	3
  2902  01DB  1903               	btfsc	3,2
  2903  01DC  29DE               	goto	u121_21
  2904  01DD  29DF               	goto	u121_20
  2905  01DE                     u121_21:
  2906  01DE  29EA               	goto	i1l1655
  2907  01DF                     u121_20:
  2908  01DF                     i1l1651:
  2909                           
  2910                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2911  01DF  302D               	movlw	45
  2912  01E0  00A3               	movwf	??_sprintf
  2913  01E1  082B               	movf	sprintf@sp,w
  2914  01E2  0084               	movwf	4
  2915  01E3  0823               	movf	??_sprintf,w
  2916  01E4  1383               	bcf	3,7	;select IRP bank0
  2917  01E5  0080               	movwf	0
  2918  01E6                     i1l1653:
  2919  01E6  3001               	movlw	1
  2920  01E7  00A3               	movwf	??_sprintf
  2921  01E8  0823               	movf	??_sprintf,w
  2922  01E9  07AB               	addwf	sprintf@sp,f
  2923  01EA                     i1l1655:
  2924                           
  2925                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2926  01EA  082C               	movf	sprintf@c,w
  2927  01EB  00A3               	movwf	??_sprintf
  2928  01EC  0823               	movf	??_sprintf,w
  2929  01ED  00A8               	movwf	sprintf@prec
  2930                           
  2931                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2932  01EE  2A28               	goto	i1l1663
  2933  01EF                     i1l1657:
  2934                           
  2935                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2936  01EF  300A               	movlw	10
  2937  01F0  00F8               	movwf	___lwmod@divisor
  2938  01F1  3000               	movlw	0
  2939  01F2  00F9               	movwf	___lwmod@divisor+1
  2940  01F3  0828               	movf	sprintf@prec,w
  2941  01F4  00A3               	movwf	??_sprintf
  2942  01F5  0723               	addwf	??_sprintf,w
  2943  01F6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2944  01F7  0084               	movwf	4
  2945  01F8  120A  118A  257D  120A  118A  	fcall	stringdir
  2946  01FD  00F0               	movwf	___lwdiv@divisor
  2947  01FE  120A  118A  257D  120A  118A  	fcall	stringdir
  2948  0203  00F1               	movwf	___lwdiv@divisor+1
  2949  0204  082A               	movf	sprintf@val+1,w
  2950  0205  00F3               	movwf	___lwdiv@dividend+1
  2951  0206  0829               	movf	sprintf@val,w
  2952  0207  00F2               	movwf	___lwdiv@dividend
  2953  0208  120A  118A  23F1  120A  118A  	fcall	___lwdiv
  2954  020D  0871               	movf	?___lwdiv+1,w
  2955  020E  00FB               	movwf	___lwmod@dividend+1
  2956  020F  0870               	movf	?___lwdiv,w
  2957  0210  00FA               	movwf	___lwmod@dividend
  2958  0211  120A  118A  2435  120A  118A  	fcall	___lwmod
  2959  0216  0878               	movf	?___lwmod,w
  2960  0217  3E30               	addlw	48
  2961  0218  1283               	bcf	3,5	;RP0=0, select bank0
  2962  0219  1303               	bcf	3,6	;RP1=0, select bank0
  2963  021A  00A4               	movwf	??_sprintf+1
  2964  021B  0824               	movf	??_sprintf+1,w
  2965  021C  00AC               	movwf	sprintf@c
  2966  021D                     i1l1659:
  2967                           
  2968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2969  021D  082C               	movf	sprintf@c,w
  2970  021E  00A3               	movwf	??_sprintf
  2971  021F  082B               	movf	sprintf@sp,w
  2972  0220  0084               	movwf	4
  2973  0221  0823               	movf	??_sprintf,w
  2974  0222  1383               	bcf	3,7	;select IRP bank0
  2975  0223  0080               	movwf	0
  2976  0224                     i1l1661:
  2977  0224  3001               	movlw	1
  2978  0225  00A3               	movwf	??_sprintf
  2979  0226  0823               	movf	??_sprintf,w
  2980  0227  07AB               	addwf	sprintf@sp,f
  2981  0228                     i1l1663:
  2982                           
  2983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2984  0228  30FF               	movlw	255
  2985  0229  00A3               	movwf	??_sprintf
  2986  022A  0823               	movf	??_sprintf,w
  2987  022B  07A8               	addwf	sprintf@prec,f
  2988  022C  0A28               	incf	sprintf@prec,w
  2989  022D  1D03               	btfss	3,2
  2990  022E  2A30               	goto	u122_21
  2991  022F  2A31               	goto	u122_20
  2992  0230                     u122_21:
  2993  0230  29EF               	goto	i1l1657
  2994  0231                     u122_20:
  2995  0231                     i1l1665:
  2996                           
  2997                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2998  0231  3001               	movlw	1
  2999  0232  07A0               	addwf	sprintf@f,f
  3000  0233  30FF               	movlw	-1
  3001  0234  0720               	addwf	sprintf@f,w
  3002  0235  0084               	movwf	4
  3003  0236  120A  118A  257D  120A  118A  	fcall	stringdir
  3004  023B  00A3               	movwf	??_sprintf
  3005  023C  0823               	movf	??_sprintf,w
  3006  023D  00AC               	movwf	sprintf@c
  3007  023E  082C               	movf	sprintf@c,w
  3008  023F  1D03               	btfss	3,2
  3009  0240  2A42               	goto	u123_21
  3010  0241  2A43               	goto	u123_20
  3011  0242                     u123_21:
  3012  0242  2968               	goto	i1l1615
  3013  0243                     u123_20:
  3014  0243                     i1l1667:
  3015                           
  3016                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3017  0243  082B               	movf	sprintf@sp,w
  3018  0244  0084               	movwf	4
  3019  0245  1383               	bcf	3,7	;select IRP bank0
  3020  0246  0180               	clrf	0
  3021  0247                     i1l357:
  3022  0247  0008               	return
  3023  0248                     __end_of_sprintf:
  3024                           
  3025                           	psect	text15
  3026  0435                     __ptext15:	
  3027 ;; *************** function ___lwmod *****************
  3028 ;; Defined at:
  3029 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;  divisor         2    8[COMMON] unsigned int 
  3032 ;;  dividend        2   10[COMMON] unsigned int 
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;  counter         1   13[COMMON] unsigned char 
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  2    8[COMMON] unsigned int 
  3037 ;; Registers used:
  3038 ;;		wreg, status,2, status,0
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3044 ;;      Params:         4       0       0       0       0
  3045 ;;      Locals:         1       0       0       0       0
  3046 ;;      Temps:          1       0       0       0       0
  3047 ;;      Totals:         6       0       0       0       0
  3048 ;;Total ram usage:        6 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_sprintf
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           
  3058                           ;psect for function ___lwmod
  3059  0435                     ___lwmod:
  3060  0435                     i1l1523:	
  3061                           ;incstack = 0
  3062                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3063                           
  3064  0435  0878               	movf	___lwmod@divisor,w
  3065  0436  0479               	iorwf	___lwmod@divisor+1,w
  3066  0437  1903               	btfsc	3,2
  3067  0438  2C3A               	goto	u98_21
  3068  0439  2C3B               	goto	u98_20
  3069  043A                     u98_21:
  3070  043A  2C6A               	goto	i1l1541
  3071  043B                     u98_20:
  3072  043B                     i1l1525:
  3073  043B  01FD               	clrf	___lwmod@counter
  3074  043C  0AFD               	incf	___lwmod@counter,f
  3075  043D  2C49               	goto	i1l1531
  3076  043E                     i1l1527:
  3077  043E  3001               	movlw	1
  3078  043F                     u99_25:
  3079  043F  1003               	clrc
  3080  0440  0DF8               	rlf	___lwmod@divisor,f
  3081  0441  0DF9               	rlf	___lwmod@divisor+1,f
  3082  0442  3EFF               	addlw	-1
  3083  0443  1D03               	skipz
  3084  0444  2C3F               	goto	u99_25
  3085  0445                     i1l1529:
  3086  0445  3001               	movlw	1
  3087  0446  00FC               	movwf	??___lwmod
  3088  0447  087C               	movf	??___lwmod,w
  3089  0448  07FD               	addwf	___lwmod@counter,f
  3090  0449                     i1l1531:
  3091  0449  1FF9               	btfss	___lwmod@divisor+1,7
  3092  044A  2C4C               	goto	u100_21
  3093  044B  2C4D               	goto	u100_20
  3094  044C                     u100_21:
  3095  044C  2C3E               	goto	i1l1527
  3096  044D                     u100_20:
  3097  044D                     i1l1533:
  3098  044D  0879               	movf	___lwmod@divisor+1,w
  3099  044E  027B               	subwf	___lwmod@dividend+1,w
  3100  044F  1D03               	skipz
  3101  0450  2C53               	goto	u101_25
  3102  0451  0878               	movf	___lwmod@divisor,w
  3103  0452  027A               	subwf	___lwmod@dividend,w
  3104  0453                     u101_25:
  3105  0453  1C03               	skipc
  3106  0454  2C56               	goto	u101_21
  3107  0455  2C57               	goto	u101_20
  3108  0456                     u101_21:
  3109  0456  2C5D               	goto	i1l1537
  3110  0457                     u101_20:
  3111  0457                     i1l1535:
  3112  0457  0878               	movf	___lwmod@divisor,w
  3113  0458  02FA               	subwf	___lwmod@dividend,f
  3114  0459  0879               	movf	___lwmod@divisor+1,w
  3115  045A  1C03               	skipc
  3116  045B  03FB               	decf	___lwmod@dividend+1,f
  3117  045C  02FB               	subwf	___lwmod@dividend+1,f
  3118  045D                     i1l1537:
  3119  045D  3001               	movlw	1
  3120  045E                     u102_25:
  3121  045E  1003               	clrc
  3122  045F  0CF9               	rrf	___lwmod@divisor+1,f
  3123  0460  0CF8               	rrf	___lwmod@divisor,f
  3124  0461  3EFF               	addlw	-1
  3125  0462  1D03               	skipz
  3126  0463  2C5E               	goto	u102_25
  3127  0464                     i1l1539:
  3128  0464  3001               	movlw	1
  3129  0465  02FD               	subwf	___lwmod@counter,f
  3130  0466  1D03               	btfss	3,2
  3131  0467  2C69               	goto	u103_21
  3132  0468  2C6A               	goto	u103_20
  3133  0469                     u103_21:
  3134  0469  2C4D               	goto	i1l1533
  3135  046A                     u103_20:
  3136  046A                     i1l1541:
  3137  046A  087B               	movf	___lwmod@dividend+1,w
  3138  046B  00F9               	movwf	?___lwmod+1
  3139  046C  087A               	movf	___lwmod@dividend,w
  3140  046D  00F8               	movwf	?___lwmod
  3141  046E                     i1l643:
  3142  046E  0008               	return
  3143  046F                     __end_of___lwmod:
  3144                           
  3145                           	psect	text16
  3146  03F1                     __ptext16:	
  3147 ;; *************** function ___lwdiv *****************
  3148 ;; Defined at:
  3149 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  divisor         2    0[COMMON] unsigned int 
  3152 ;;  dividend        2    2[COMMON] unsigned int 
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;  quotient        2    5[COMMON] unsigned int 
  3155 ;;  counter         1    7[COMMON] unsigned char 
  3156 ;; Return value:  Size  Location     Type
  3157 ;;                  2    0[COMMON] unsigned int 
  3158 ;; Registers used:
  3159 ;;		wreg, status,2, status,0
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3165 ;;      Params:         4       0       0       0       0
  3166 ;;      Locals:         3       0       0       0       0
  3167 ;;      Temps:          1       0       0       0       0
  3168 ;;      Totals:         8       0       0       0       0
  3169 ;;Total ram usage:        8 bytes
  3170 ;; Hardware stack levels used:    1
  3171 ;; This function calls:
  3172 ;;		Nothing
  3173 ;; This function is called by:
  3174 ;;		_sprintf
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           
  3179                           ;psect for function ___lwdiv
  3180  03F1                     ___lwdiv:
  3181  03F1                     i1l1497:	
  3182                           ;incstack = 0
  3183                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3184                           
  3185  03F1  01F5               	clrf	___lwdiv@quotient
  3186  03F2  01F6               	clrf	___lwdiv@quotient+1
  3187  03F3                     i1l1499:
  3188  03F3  0870               	movf	___lwdiv@divisor,w
  3189  03F4  0471               	iorwf	___lwdiv@divisor+1,w
  3190  03F5  1903               	btfsc	3,2
  3191  03F6  2BF8               	goto	u91_21
  3192  03F7  2BF9               	goto	u91_20
  3193  03F8                     u91_21:
  3194  03F8  2C30               	goto	i1l1519
  3195  03F9                     u91_20:
  3196  03F9                     i1l1501:
  3197  03F9  01F7               	clrf	___lwdiv@counter
  3198  03FA  0AF7               	incf	___lwdiv@counter,f
  3199  03FB  2C07               	goto	i1l1507
  3200  03FC                     i1l1503:
  3201  03FC  3001               	movlw	1
  3202  03FD                     u92_25:
  3203  03FD  1003               	clrc
  3204  03FE  0DF0               	rlf	___lwdiv@divisor,f
  3205  03FF  0DF1               	rlf	___lwdiv@divisor+1,f
  3206  0400  3EFF               	addlw	-1
  3207  0401  1D03               	skipz
  3208  0402  2BFD               	goto	u92_25
  3209  0403                     i1l1505:
  3210  0403  3001               	movlw	1
  3211  0404  00F4               	movwf	??___lwdiv
  3212  0405  0874               	movf	??___lwdiv,w
  3213  0406  07F7               	addwf	___lwdiv@counter,f
  3214  0407                     i1l1507:
  3215  0407  1FF1               	btfss	___lwdiv@divisor+1,7
  3216  0408  2C0A               	goto	u93_21
  3217  0409  2C0B               	goto	u93_20
  3218  040A                     u93_21:
  3219  040A  2BFC               	goto	i1l1503
  3220  040B                     u93_20:
  3221  040B                     i1l1509:
  3222  040B  3001               	movlw	1
  3223  040C                     u94_25:
  3224  040C  1003               	clrc
  3225  040D  0DF5               	rlf	___lwdiv@quotient,f
  3226  040E  0DF6               	rlf	___lwdiv@quotient+1,f
  3227  040F  3EFF               	addlw	-1
  3228  0410  1D03               	skipz
  3229  0411  2C0C               	goto	u94_25
  3230  0412  0871               	movf	___lwdiv@divisor+1,w
  3231  0413  0273               	subwf	___lwdiv@dividend+1,w
  3232  0414  1D03               	skipz
  3233  0415  2C18               	goto	u95_25
  3234  0416  0870               	movf	___lwdiv@divisor,w
  3235  0417  0272               	subwf	___lwdiv@dividend,w
  3236  0418                     u95_25:
  3237  0418  1C03               	skipc
  3238  0419  2C1B               	goto	u95_21
  3239  041A  2C1C               	goto	u95_20
  3240  041B                     u95_21:
  3241  041B  2C23               	goto	i1l1515
  3242  041C                     u95_20:
  3243  041C                     i1l1511:
  3244  041C  0870               	movf	___lwdiv@divisor,w
  3245  041D  02F2               	subwf	___lwdiv@dividend,f
  3246  041E  0871               	movf	___lwdiv@divisor+1,w
  3247  041F  1C03               	skipc
  3248  0420  03F3               	decf	___lwdiv@dividend+1,f
  3249  0421  02F3               	subwf	___lwdiv@dividend+1,f
  3250  0422                     i1l1513:
  3251  0422  1475               	bsf	___lwdiv@quotient,0
  3252  0423                     i1l1515:
  3253  0423  3001               	movlw	1
  3254  0424                     u96_25:
  3255  0424  1003               	clrc
  3256  0425  0CF1               	rrf	___lwdiv@divisor+1,f
  3257  0426  0CF0               	rrf	___lwdiv@divisor,f
  3258  0427  3EFF               	addlw	-1
  3259  0428  1D03               	skipz
  3260  0429  2C24               	goto	u96_25
  3261  042A                     i1l1517:
  3262  042A  3001               	movlw	1
  3263  042B  02F7               	subwf	___lwdiv@counter,f
  3264  042C  1D03               	btfss	3,2
  3265  042D  2C2F               	goto	u97_21
  3266  042E  2C30               	goto	u97_20
  3267  042F                     u97_21:
  3268  042F  2C0B               	goto	i1l1509
  3269  0430                     u97_20:
  3270  0430                     i1l1519:
  3271  0430  0876               	movf	___lwdiv@quotient+1,w
  3272  0431  00F1               	movwf	?___lwdiv+1
  3273  0432  0875               	movf	___lwdiv@quotient,w
  3274  0433  00F0               	movwf	?___lwdiv
  3275  0434                     i1l633:
  3276  0434  0008               	return
  3277  0435                     __end_of___lwdiv:
  3278                           
  3279                           	psect	text17
  3280  0533                     __ptext17:	
  3281 ;; *************** function _recivedCMD *****************
  3282 ;; Defined at:
  3283 ;;		line 48 in file "usart.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;  cmd             1    wreg     PTR unsigned char 
  3286 ;;		 -> data(10), 
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;  cmd             1    2[COMMON] PTR unsigned char 
  3289 ;;		 -> data(10), 
  3290 ;;  j               1    4[COMMON] unsigned char 
  3291 ;;  i               1    3[COMMON] unsigned char 
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3301 ;;      Params:         0       0       0       0       0
  3302 ;;      Locals:         3       0       0       0       0
  3303 ;;      Temps:          2       0       0       0       0
  3304 ;;      Totals:         5       0       0       0       0
  3305 ;;Total ram usage:        5 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:    1
  3308 ;; This function calls:
  3309 ;;		_get1
  3310 ;; This function is called by:
  3311 ;;		_myISR
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           
  3316                           ;psect for function _recivedCMD
  3317  0533                     _recivedCMD:
  3318                           
  3319                           ;incstack = 0
  3320                           ; Regs used in _recivedCMD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3321                           ;recivedCMD@cmd stored from wreg
  3322  0533  00F2               	movwf	recivedCMD@cmd
  3323  0534                     i1l1575:
  3324                           
  3325                           ;usart.c: 49:     unsigned char i = 0;
  3326  0534  01F3               	clrf	recivedCMD@i
  3327  0535                     i1l1577:
  3328                           
  3329                           ;usart.c: 52:         cmd[i] = get1();
  3330  0535  120A  118A  263C  120A  118A  	fcall	_get1
  3331  053A  00F0               	movwf	??_recivedCMD
  3332  053B  0873               	movf	recivedCMD@i,w
  3333  053C  0772               	addwf	recivedCMD@cmd,w
  3334  053D  00F1               	movwf	??_recivedCMD+1
  3335  053E  0871               	movf	??_recivedCMD+1,w
  3336  053F  0084               	movwf	4
  3337  0540  0870               	movf	??_recivedCMD,w
  3338  0541  1383               	bcf	3,7	;select IRP bank0
  3339  0542  0080               	movwf	0
  3340  0543                     i1l1579:
  3341                           
  3342                           ;usart.c: 53:         j = cmd[i];
  3343  0543  0873               	movf	recivedCMD@i,w
  3344  0544  0772               	addwf	recivedCMD@cmd,w
  3345  0545  00F0               	movwf	??_recivedCMD
  3346  0546  0870               	movf	??_recivedCMD,w
  3347  0547  0084               	movwf	4
  3348  0548  0800               	movf	0,w
  3349  0549  00F1               	movwf	??_recivedCMD+1
  3350  054A  0871               	movf	??_recivedCMD+1,w
  3351  054B  00F4               	movwf	recivedCMD@j
  3352  054C                     i1l1581:
  3353                           
  3354                           ;usart.c: 54:         i++;
  3355  054C  3001               	movlw	1
  3356  054D  00F0               	movwf	??_recivedCMD
  3357  054E  0870               	movf	??_recivedCMD,w
  3358  054F  07F3               	addwf	recivedCMD@i,f
  3359  0550                     i1l1583:
  3360                           
  3361                           ;usart.c: 55:         }
  3362  0550  300A               	movlw	10
  3363  0551  0674               	xorwf	recivedCMD@j,w
  3364  0552  1903               	btfsc	3,2
  3365  0553  2D55               	goto	u112_21
  3366  0554  2D56               	goto	u112_20
  3367  0555                     u112_21:
  3368  0555  2D5C               	goto	i1l235
  3369  0556                     u112_20:
  3370  0556                     i1l1585:
  3371  0556  300D               	movlw	13
  3372  0557  0674               	xorwf	recivedCMD@j,w
  3373  0558  1D03               	btfss	3,2
  3374  0559  2D5B               	goto	u113_21
  3375  055A  2D5C               	goto	u113_20
  3376  055B                     u113_21:
  3377  055B  2D35               	goto	i1l1577
  3378  055C                     u113_20:
  3379  055C                     i1l235:
  3380  055C  0008               	return
  3381  055D                     __end_of_recivedCMD:
  3382                           
  3383                           	psect	text18
  3384  063C                     __ptext18:	
  3385 ;; *************** function _get1 *****************
  3386 ;; Defined at:
  3387 ;;		line 61 in file "usart.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;		None
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;		None
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      unsigned char 
  3394 ;; Registers used:
  3395 ;;		wreg
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3401 ;;      Params:         0       0       0       0       0
  3402 ;;      Locals:         0       0       0       0       0
  3403 ;;      Temps:          0       0       0       0       0
  3404 ;;      Totals:         0       0       0       0       0
  3405 ;;Total ram usage:        0 bytes
  3406 ;; Hardware stack levels used:    1
  3407 ;; This function calls:
  3408 ;;		Nothing
  3409 ;; This function is called by:
  3410 ;;		_recivedCMD
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414                           
  3415                           ;psect for function _get1
  3416  063C                     _get1:
  3417  063C                     i1l1419:	
  3418                           ;incstack = 0
  3419                           ; Regs used in _get1: [wreg]
  3420                           
  3421  063C                     i1l238:	
  3422                           ;usart.c: 64:     }
  3423                           
  3424                           
  3425                           ;usart.c: 62:     while(!PIR1bits.RCIF){
  3426  063C  1283               	bcf	3,5	;RP0=0, select bank0
  3427  063D  1303               	bcf	3,6	;RP1=0, select bank0
  3428  063E  1E8C               	btfss	12,5	;volatile
  3429  063F  2E41               	goto	u76_21
  3430  0640  2E42               	goto	u76_20
  3431  0641                     u76_21:
  3432  0641  2E3C               	goto	i1l238
  3433  0642                     u76_20:
  3434  0642                     i1l1421:
  3435                           
  3436                           ;usart.c: 65:     return RCREG;
  3437  0642  081A               	movf	26,w	;volatile
  3438  0643                     i1l241:
  3439  0643  0008               	return
  3440  0644                     __end_of_get1:
  3441                           
  3442                           	psect	text19
  3443  05C7                     __ptext19:	
  3444 ;; *************** function _i2c_write *****************
  3445 ;; Defined at:
  3446 ;;		line 52 in file "i2c.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;  dato            1    wreg     unsigned char 
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;  dato            1    0[COMMON] unsigned char 
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  1    wreg      unsigned char 
  3453 ;; Registers used:
  3454 ;;		wreg, status,2, status,0, pclath, cstack
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3460 ;;      Params:         0       0       0       0       0
  3461 ;;      Locals:         1       0       0       0       0
  3462 ;;      Temps:          0       0       0       0       0
  3463 ;;      Totals:         1       0       0       0       0
  3464 ;;Total ram usage:        1 bytes
  3465 ;; Hardware stack levels used:    1
  3466 ;; Hardware stack levels required when called:    1
  3467 ;; This function calls:
  3468 ;;		_i2c_idle
  3469 ;; This function is called by:
  3470 ;;		_myISR
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           
  3475                           ;psect for function _i2c_write
  3476  05C7                     _i2c_write:
  3477                           
  3478                           ;incstack = 0
  3479                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  3480                           ;i2c_write@dato stored from wreg
  3481  05C7  00F0               	movwf	i2c_write@dato
  3482  05C8                     i1l1567:
  3483                           
  3484                           ;i2c.c: 53:     i2c_idle();
  3485  05C8  120A  118A  2609  120A  118A  	fcall	_i2c_idle
  3486  05CD                     i1l1569:
  3487                           
  3488                           ;i2c.c: 54:     SSPBUF = dato;
  3489  05CD  0870               	movf	i2c_write@dato,w
  3490  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  3491  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  3492  05D0  0093               	movwf	19	;volatile
  3493  05D1                     i1l1571:	
  3494                           ;i2c.c: 55:     while(SSPSTAT & 0x05);
  3495                           
  3496  05D1  1683               	bsf	3,5	;RP0=1, select bank1
  3497  05D2  1303               	bcf	3,6	;RP1=0, select bank1
  3498  05D3  0814               	movf	20,w	;volatile
  3499  05D4  3905               	andlw	5
  3500  05D5  1D03               	btfss	3,2
  3501  05D6  2DD8               	goto	u110_21
  3502  05D7  2DD9               	goto	u110_20
  3503  05D8                     u110_21:
  3504  05D8  2DD1               	goto	i1l1571
  3505  05D9                     u110_20:
  3506  05D9                     i1l85:
  3507  05D9  0008               	return
  3508  05DA                     __end_of_i2c_write:
  3509                           
  3510                           	psect	text20
  3511  05FB                     __ptext20:	
  3512 ;; *************** function _i2c_stop *****************
  3513 ;; Defined at:
  3514 ;;		line 37 in file "i2c.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;		None
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;		None
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      void 
  3521 ;; Registers used:
  3522 ;;		None
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3528 ;;      Params:         0       0       0       0       0
  3529 ;;      Locals:         0       0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0
  3531 ;;      Totals:         0       0       0       0       0
  3532 ;;Total ram usage:        0 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; This function calls:
  3535 ;;		Nothing
  3536 ;; This function is called by:
  3537 ;;		_myISR
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           
  3542                           ;psect for function _i2c_stop
  3543  05FB                     _i2c_stop:
  3544  05FB                     i1l1557:	
  3545                           ;incstack = 0
  3546                           ; Regs used in _i2c_stop: []
  3547                           
  3548                           
  3549                           ;i2c.c: 38:     SSPCON2bits.PEN = 1;
  3550  05FB  1683               	bsf	3,5	;RP0=1, select bank1
  3551  05FC  1303               	bcf	3,6	;RP1=0, select bank1
  3552  05FD  1511               	bsf	17,2	;volatile
  3553  05FE                     i1l64:	
  3554                           ;i2c.c: 39:     while(SSPCON2bits.PEN);
  3555                           
  3556  05FE  1911               	btfsc	17,2	;volatile
  3557  05FF  2E01               	goto	u106_21
  3558  0600  2E02               	goto	u106_20
  3559  0601                     u106_21:
  3560  0601  2DFE               	goto	i1l64
  3561  0602                     u106_20:
  3562  0602                     i1l67:
  3563  0602  1283               	bcf	3,5	;RP0=0, select bank0
  3564  0603  1D8C               	btfss	12,3	;volatile
  3565  0604  2E06               	goto	u107_21
  3566  0605  2E07               	goto	u107_20
  3567  0606                     u107_21:
  3568  0606  2E02               	goto	i1l67
  3569  0607                     u107_20:
  3570  0607                     i1l69:
  3571                           
  3572                           ;i2c.c: 41:     SSPIF = 0;
  3573  0607  118C               	bcf	12,3	;volatile
  3574  0608                     i1l70:
  3575  0608  0008               	return
  3576  0609                     __end_of_i2c_stop:
  3577                           
  3578                           	psect	text21
  3579  05DA                     __ptext21:	
  3580 ;; *************** function _i2c_start *****************
  3581 ;; Defined at:
  3582 ;;		line 20 in file "i2c.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;		None
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;		None
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  1    wreg      void 
  3589 ;; Registers used:
  3590 ;;		wreg, status,2, status,0, pclath, cstack
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3596 ;;      Params:         0       0       0       0       0
  3597 ;;      Locals:         0       0       0       0       0
  3598 ;;      Temps:          0       0       0       0       0
  3599 ;;      Totals:         0       0       0       0       0
  3600 ;;Total ram usage:        0 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; Hardware stack levels required when called:    1
  3603 ;; This function calls:
  3604 ;;		_i2c_idle
  3605 ;; This function is called by:
  3606 ;;		_myISR
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           
  3611                           ;psect for function _i2c_start
  3612  05DA                     _i2c_start:
  3613  05DA                     i1l1553:	
  3614                           ;incstack = 0
  3615                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  3616                           
  3617                           
  3618                           ;i2c.c: 22:     i2c_idle();
  3619  05DA  120A  118A  2609  120A  118A  	fcall	_i2c_idle
  3620  05DF                     i1l1555:
  3621                           
  3622                           ;i2c.c: 23:     SSPCON2bits.SEN = 1;
  3623  05DF  1683               	bsf	3,5	;RP0=1, select bank1
  3624  05E0  1303               	bcf	3,6	;RP1=0, select bank1
  3625  05E1  1411               	bsf	17,0	;volatile
  3626  05E2                     i1l46:	
  3627                           ;i2c.c: 24:     while(SSPCON2bits.SEN == 1);
  3628                           
  3629  05E2  1811               	btfsc	17,0	;volatile
  3630  05E3  2DE5               	goto	u104_21
  3631  05E4  2DE6               	goto	u104_20
  3632  05E5                     u104_21:
  3633  05E5  2DE2               	goto	i1l46
  3634  05E6                     u104_20:
  3635  05E6                     i1l49:
  3636  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  3637  05E7  1D8C               	btfss	12,3	;volatile
  3638  05E8  2DEA               	goto	u105_21
  3639  05E9  2DEB               	goto	u105_20
  3640  05EA                     u105_21:
  3641  05EA  2DE6               	goto	i1l49
  3642  05EB                     u105_20:
  3643  05EB                     i1l51:
  3644                           
  3645                           ;i2c.c: 26:     SSPIF = 0;
  3646  05EB  118C               	bcf	12,3	;volatile
  3647  05EC                     i1l52:
  3648  05EC  0008               	return
  3649  05ED                     __end_of_i2c_start:
  3650                           
  3651                           	psect	text22
  3652  062B                     __ptext22:	
  3653 ;; *************** function _i2c_sendACK *****************
  3654 ;; Defined at:
  3655 ;;		line 76 in file "i2c.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;		None
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;		None
  3660 ;; Return value:  Size  Location     Type
  3661 ;;                  1    wreg      void 
  3662 ;; Registers used:
  3663 ;;		None
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3669 ;;      Params:         0       0       0       0       0
  3670 ;;      Locals:         0       0       0       0       0
  3671 ;;      Temps:          0       0       0       0       0
  3672 ;;      Totals:         0       0       0       0       0
  3673 ;;Total ram usage:        0 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; This function calls:
  3676 ;;		Nothing
  3677 ;; This function is called by:
  3678 ;;		_myISR
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           
  3683                           ;psect for function _i2c_sendACK
  3684  062B                     _i2c_sendACK:
  3685  062B                     i1l1573:	
  3686                           ;incstack = 0
  3687                           ; Regs used in _i2c_sendACK: []
  3688                           
  3689                           
  3690                           ;i2c.c: 77:     SSPCON2bits.ACKDT = 0;
  3691  062B  1683               	bsf	3,5	;RP0=1, select bank1
  3692  062C  1303               	bcf	3,6	;RP1=0, select bank1
  3693  062D  1291               	bcf	17,5	;volatile
  3694                           
  3695                           ;i2c.c: 78:     SSPCON2bits.ACKEN = 1;
  3696  062E  1611               	bsf	17,4	;volatile
  3697  062F                     i1l94:	
  3698                           ;i2c.c: 79:     while(SSPCON2bits.ACKEN == 1);
  3699                           
  3700  062F  1A11               	btfsc	17,4	;volatile
  3701  0630  2E32               	goto	u111_21
  3702  0631  2E33               	goto	u111_20
  3703  0632                     u111_21:
  3704  0632  2E2F               	goto	i1l94
  3705  0633                     u111_20:
  3706  0633                     i1l97:
  3707  0633  0008               	return
  3708  0634                     __end_of_i2c_sendACK:
  3709                           
  3710                           	psect	text23
  3711  05B3                     __ptext23:	
  3712 ;; *************** function _i2c_read *****************
  3713 ;; Defined at:
  3714 ;;		line 44 in file "i2c.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;		None
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;		None
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      unsigned char 
  3721 ;; Registers used:
  3722 ;;		wreg, status,2, status,0, pclath, cstack
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3728 ;;      Params:         0       0       0       0       0
  3729 ;;      Locals:         0       0       0       0       0
  3730 ;;      Temps:          0       0       0       0       0
  3731 ;;      Totals:         0       0       0       0       0
  3732 ;;Total ram usage:        0 bytes
  3733 ;; Hardware stack levels used:    1
  3734 ;; Hardware stack levels required when called:    1
  3735 ;; This function calls:
  3736 ;;		_i2c_idle
  3737 ;; This function is called by:
  3738 ;;		_myISR
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           
  3743                           ;psect for function _i2c_read
  3744  05B3                     _i2c_read:
  3745  05B3                     i1l1559:	
  3746                           ;incstack = 0
  3747                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  3748                           
  3749                           
  3750                           ;i2c.c: 45:     i2c_idle();
  3751  05B3  120A  118A  2609  120A  118A  	fcall	_i2c_idle
  3752  05B8                     i1l1561:
  3753                           
  3754                           ;i2c.c: 46:     SSPCON2bits.RCEN = 1;
  3755  05B8  1683               	bsf	3,5	;RP0=1, select bank1
  3756  05B9  1303               	bcf	3,6	;RP1=0, select bank1
  3757  05BA  1591               	bsf	17,3	;volatile
  3758  05BB                     i1l73:	
  3759                           ;i2c.c: 47:     while(SSPCON2bits.RCEN == 1);
  3760                           
  3761  05BB  1991               	btfsc	17,3	;volatile
  3762  05BC  2DBE               	goto	u108_21
  3763  05BD  2DBF               	goto	u108_20
  3764  05BE                     u108_21:
  3765  05BE  2DBB               	goto	i1l73
  3766  05BF                     u108_20:
  3767  05BF                     i1l76:
  3768  05BF  1C14               	btfss	20,0	;volatile
  3769  05C0  2DC2               	goto	u109_21
  3770  05C1  2DC3               	goto	u109_20
  3771  05C2                     u109_21:
  3772  05C2  2DBF               	goto	i1l76
  3773  05C3                     u109_20:
  3774  05C3                     i1l1563:
  3775                           
  3776                           ;i2c.c: 49:     return SSPBUF;
  3777  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  3778  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  3779  05C5  0813               	movf	19,w	;volatile
  3780  05C6                     i1l79:
  3781  05C6  0008               	return
  3782  05C7                     __end_of_i2c_read:
  3783                           
  3784                           	psect	text24
  3785  0609                     __ptext24:	
  3786 ;; *************** function _i2c_idle *****************
  3787 ;; Defined at:
  3788 ;;		line 81 in file "i2c.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;		None
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;		None
  3793 ;; Return value:  Size  Location     Type
  3794 ;;                  1    wreg      void 
  3795 ;; Registers used:
  3796 ;;		wreg, status,2
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 0/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3802 ;;      Params:         0       0       0       0       0
  3803 ;;      Locals:         0       0       0       0       0
  3804 ;;      Temps:          0       0       0       0       0
  3805 ;;      Totals:         0       0       0       0       0
  3806 ;;Total ram usage:        0 bytes
  3807 ;; Hardware stack levels used:    1
  3808 ;; This function calls:
  3809 ;;		Nothing
  3810 ;; This function is called by:
  3811 ;;		_i2c_start
  3812 ;;		_i2c_read
  3813 ;;		_i2c_write
  3814 ;;		_i2c_restart
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           
  3819                           ;psect for function _i2c_idle
  3820  0609                     _i2c_idle:
  3821  0609                     i1l1411:	
  3822                           ;incstack = 0
  3823                           ; Regs used in _i2c_idle: [wreg+status,2]
  3824                           
  3825  0609                     i1l1413:	
  3826                           ;i2c.c: 82:     while((SSPCON2 & 0x1F)|| (SSPSTAT & 0x04));
  3827                           
  3828  0609  1683               	bsf	3,5	;RP0=1, select bank1
  3829  060A  1303               	bcf	3,6	;RP1=0, select bank1
  3830  060B  0811               	movf	17,w	;volatile
  3831  060C  391F               	andlw	31
  3832  060D  1D03               	btfss	3,2
  3833  060E  2E10               	goto	u73_21
  3834  060F  2E11               	goto	u73_20
  3835  0610                     u73_21:
  3836  0610  2E09               	goto	i1l1413
  3837  0611                     u73_20:
  3838  0611                     i1l1415:
  3839  0611  1914               	btfsc	20,2	;volatile
  3840  0612  2E14               	goto	u74_21
  3841  0613  2E15               	goto	u74_20
  3842  0614                     u74_21:
  3843  0614  2E09               	goto	i1l1413
  3844  0615                     u74_20:
  3845  0615                     i1l103:
  3846  0615  0008               	return
  3847  0616                     __end_of_i2c_idle:
  3848  007E                     btemp	set	126	;btemp
  3849  007E                     wtemp0	set	126
  3850                           
  3851                           	psect	config
  3852                           
  3853                           ;Config register CONFIG1 @ 0x2007
  3854                           ;	Oscillator Selection bits
  3855                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  3856                           ;	Watchdog Timer Enable bit
  3857                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3858                           ;	Power-up Timer Enable bit
  3859                           ;	PWRTE = OFF, PWRT disabled
  3860                           ;	RE3/MCLR pin function select bit
  3861                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  3862                           ;	Code Protection bit
  3863                           ;	CP = OFF, Program memory code protection is disabled
  3864                           ;	Data Code Protection bit
  3865                           ;	CPD = OFF, Data memory code protection is disabled
  3866                           ;	Brown Out Reset Selection bits
  3867                           ;	BOREN = ON, BOR enabled
  3868                           ;	Internal External Switchover bit
  3869                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3870                           ;	Fail-Safe Clock Monitor Enabled bit
  3871                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3872                           ;	Low Voltage Programming Enable bit
  3873                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  3874                           ;	In-Circuit Debugger Mode bit
  3875                           ;	DEBUG = 0x1, unprogrammed default
  3876  2007                     	org	8199
  3877  2007  3FF2               	dw	16370
  3878                           
  3879                           ;Config register CONFIG2 @ 0x2008
  3880                           ;	Brown-out Reset Selection bit
  3881                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3882                           ;	Flash Program Memory Self Write Enable bits
  3883                           ;	WRT = OFF, Write protection off
  3884  2008                     	org	8200
  3885  2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    10
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     40      58
    BANK1            80      7       7
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_7(CODE[2]), STR_6(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), data(BANK0[10]), 

    strchr@ptr	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_7(CODE[2]), STR_6(CODE[2]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 2
		 -> STR_7(CODE[2]), STR_6(CODE[2]), NULL(NULL[0]), 

    strcspn@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_7(CODE[2]), STR_6(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), data(BANK0[10]), 

    strtok@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_7(CODE[2]), STR_6(CODE[2]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), data(BANK0[10]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), data(BANK0[10]), 

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_4(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), data(BANK0[10]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_5(CODE[4]), STR_3(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), data(BANK0[10]), 

    token@cmd	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    token@tok	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), data(BANK0[10]), 

    recivedCMD@cmd	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    usart_TxStr@str	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    dir	PTR unsigned char [3] size(1) Largest target is 10
		 -> NULL(NULL[0]), data(BANK0[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myISR in COMMON

    _usart_TxStr->_usart_Tx
    _token->_strtok
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    _main->_usart_init
    _usart_init->___aldiv

Critical Paths under _myISR in BANK0

    _myISR->_sprintf

Critical Paths under _main in BANK1

    _main->_usart_init

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     960
                                              4 BANK1      3     3      0
                           _i2c_init
                    _usart_Interrupt
                         _usart_init
 ---------------------------------------------------------------------------------
 (1) _usart_init                                           8     4      4     960
                                             36 BANK0      4     0      4
                                              0 BANK1      4     4      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     805
                                             21 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _usart_Interrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _myISR                                                8     8      0    3640
                                             13 BANK0      8     8      0
                           _i2c_read
                        _i2c_sendACK
                          _i2c_start
                           _i2c_stop
                          _i2c_write
                         _recivedCMD
                            _sprintf
                             _strcmp
                              _token
                           _usart_Tx
                        _usart_TxStr
 ---------------------------------------------------------------------------------
 (4) _usart_TxStr                                          2     2      0     133
                                              1 COMMON     2     2      0
                           _usart_Tx
 ---------------------------------------------------------------------------------
 (5) _usart_Tx                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _token                                                6     6      0    1556
                                              0 BANK0      6     6      0
                             _strtok
 ---------------------------------------------------------------------------------
 (5) _strtok                                               4     3      1    1430
                                             10 COMMON     4     3      1
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (6) _strspn                                               7     5      2     506
                                              3 COMMON     7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (6) _strcspn                                              7     5      2     506
                                              3 COMMON     7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (8) _strchr                                               3     1      2     306
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (5) _strcmp                                               7     5      2     418
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             21    18      3    1320
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) _recivedCMD                                           5     5      0     169
                                              0 COMMON     5     5      0
                               _get1
 ---------------------------------------------------------------------------------
 (5) _get1                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_sendACK                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_read                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (5) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_init
   _usart_Interrupt
   _usart_init
     ___aldiv

 _myISR (ROOT)
   _i2c_read
     _i2c_idle
   _i2c_sendACK
   _i2c_start
     _i2c_idle
   _i2c_stop
   _i2c_write
     _i2c_idle
   _recivedCMD
     _get1
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _strcmp
   _token
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr
   _usart_Tx
   _usart_TxStr
     _usart_Tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     28      3A       5       72.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      7       7       7        8.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Oct 27 00:25:46 2021

                       pc 0002               _SSPSTATbits 0094                        l43 05FA  
                      fsr 0004                       l210 0353                       l228 062A  
                     l426 025C                       l436 02E4                       _dir 0048  
                     _res 004B                       fsr0 0004                       indf 0000  
                    l1701 0622                      l1551 05F6                      l1545 05ED  
                    l1801 0248                      l1547 05F1                      l1811 026F  
                    l1803 024B                      l1549 05F5                      l1821 0293  
                    l1813 0277                      l1805 024F                      l1831 02C6  
                    l1823 029C                      l1815 027F                      l1807 0260  
                    l1825 02AE                      l1817 0282                      l1833 02CC  
                    l1809 026B                      l1841 02E5                      l1835 02D1  
                    l1827 02BC                      l1819 028F                      l1851 034D  
                    l1843 02E9                      l1837 02DC                      l1829 02BD  
                    l1853 034E                      l1845 0346                      l1861 03B2  
                    l1855 0351                      l1847 0349                      l1871 03DB  
                    l1863 03BF                      l1857 0352                      l1849 034C  
                    l1873 03DE                      l1865 03C4                      l1867 03C9  
                    l1859 03A6                      l1869 03CC                      STR_1 0597  
                    STR_2 0591                      STR_3 058D                      STR_4 0594  
                    STR_5 058D                      STR_6 059A                      STR_7 059A  
                    u1400 02CC                      u1320 024F                      u1401 02CB  
                    u1321 024E                      u1410 02D1                      u1330 0260  
                    u1411 02D0                      u1331 025F                      u1340 027F  
                    u1341 027E                      u1360 0293                      u1361 0292  
                    u1355 0284                      u1427 03D4                      u1380 02AE  
                    u1381 02AD                      u1437 03E6                      u1375 0295  
                    u1385 02AA                      u1395 02BE                      i1l51 05EB  
                    i1l52 05EC                      i1l46 05E2                      i1l70 0608  
                    i1l64 05FE                      i1l73 05BB                      i1l49 05E6  
                    i1l67 0602               _usart_TxStr 059C                      i1l76 05BF  
                    i1l69 0607                      i1l85 05D9                      i1l94 062F  
                    i1l79 05C6                      i1l97 0633                      _get1 063C  
                    _data 0050                      _main 03A6                      btemp 007E  
                    start 0012             ??_i2c_sendACK 0070                     ?_get1 0070  
         __end_of___aldiv 02E5                     ?_main 0070           __end_of___lwdiv 0435  
                   i1l103 0615                     i1l213 061B                     i1l216 0621  
                   i1l241 0643                     i1l225 05B2                     i1l235 055C  
                   i1l171 0155                     i1l238 063C                     i1l247 04A6  
         __end_of___lwmod 046F                     i1l357 0247                     i1l633 0434  
                   i1l643 046E                     i1l817 0532                     i1l841 0504  
                   i1l844 055E                     i1l828 03A5                     i1l846 057C  
                   i1l857 04D5                     _RCREG 001A                     _SPBRG 0099  
                   _PORTB 0006                     _PORTD 0008                     u70_20 04D1  
                   u70_21 04D0                     u71_20 04EC                     u71_21 04EB  
                   u72_20 0500                     u80_20 039B                     u72_21 04FF  
                   u80_21 039A                     u73_20 0611                     u73_21 0610  
                   _TRISB 0086                     _TRISD 0088                     u74_20 0615  
                   _SSPIF 0063                     u74_21 0614                     u91_20 03F9  
                   u67_20 056A                     u75_20 0621                     u91_21 03F8  
                   u67_21 0569                     u75_21 0620                     u76_20 0642  
                   u68_20 057B                     u76_21 0641                     u68_21 057A  
                   u92_25 03FD                     u93_20 040B                     u69_20 04BD  
                   u77_20 035A                     u93_21 040A                     u69_21 04BC  
                   u77_21 0359                     u78_20 0365                     u78_21 0364  
                   u94_25 040C                     u95_20 041C                     u79_20 037D  
                   u95_21 041B                     u79_21 037C                     u95_25 0418  
                   u96_25 0424                     u97_20 0430                     u97_21 042F  
                   _TXREG 0019                     u98_20 043B                     u98_21 043A  
                   u99_25 043F           __end_of_dpowers 058D                     _myISR 0022  
                   _token 046F                     pclath 000A                     status 0003  
                   wtemp0 007E           __end_of_sprintf 0248           __end_of_strcspn 0505  
         __initialization 0015              __end_of_get1 0644              __end_of_main 03F1  
        __end_of_i2c_idle 0616          __end_of_i2c_init 05FB          __end_of_i2c_read 05C7  
        __end_of_i2c_stop 0609       __end_of_i2c_sendACK 0634                    ??_get1 0070  
                  ??_main 00A4                    ?_myISR 0070                    ?_token 0070  
                  u100_20 044D                    u100_21 044C                    u101_20 0457  
                  u101_21 0456                    u101_25 0453                    u110_20 05D9  
                  u110_21 05D8                    u102_25 045E                    u111_20 0633  
                  u103_20 046A                    u111_21 0632                    u103_21 0469  
                  i1l1401 04DA                    i1l1411 0609                    i1l1403 04E4  
                  i1l1413 0609                    i1l1421 0642                    i1l1501 03F9  
                  i1l1405 04EC                    i1l1415 0611                    i1l1511 041C  
                  i1l1503 03FC                    i1l1407 0500                    i1l1431 0365  
                  u104_20 05E6                    u112_20 0556                    u120_20 01D9  
                  u104_21 05E5                    u112_21 0555                    i1l1513 0422  
                  i1l1505 0403                    u120_21 01D8                    i1l1601 0507  
                  i1l1425 0355                    i1l1417 0617                    i1l1419 063C  
                  i1l1515 0423                    i1l1507 0407                    i1l1531 0449  
                  i1l1523 0435                    i1l1603 050B                    i1l1451 03A3  
                  i1l1443 0382                    i1l1435 0367                    i1l1427 035A  
                  i1l1517 042A                    i1l1509 040B                    i1l1533 044D  
                  i1l1525 043B                    i1l1541 046A                    i1l1621 017A  
                  i1l1613 0163                    i1l1605 050F                    i1l1381 056C  
                  i1l1453 03A4                    i1l1445 0393                    i1l1437 0375  
                  i1l1429 0360                    i1l1519 0430                    i1l1535 0457  
                  i1l1527 043E                    i1l1631 01A4                    i1l1615 0168  
                  i1l1607 0526                    i1l1383 057B                    i1l1375 055E  
                  i1l1391 04B5                    i1l1447 039B                    i1l1439 037D  
                  i1l1711 0029                    u105_20 05EB                    u113_20 055C  
                  u121_20 01DF                    i1l1561 05B8                    u105_21 05EA  
                  i1l1553 05DA                    u113_21 055B                    i1l1537 045D  
                  i1l1529 0445                    u121_21 01DE                    i1l1633 01A8  
                  i1l1625 017B                    i1l1617 016E                    i1l1609 052D  
                  i1l1377 056A                    i1l1393 04BD                    i1l1449 039E  
                  i1l1721 0064                    i1l1713 002F                    i1l1563 05C3  
                  i1l1555 05DF                    i1l1571 05D1                    i1l1539 0464  
                  i1l1651 01DF                    i1l1643 01B3                    i1l1635 01AC  
                  i1l1627 0198                    i1l1619 0175                    i1l1395 04D1  
                  i1l1387 04A8                    i1l1731 00AB                    i1l1723 0079  
                  i1l1715 0035                    i1l1707 0022                    i1l1573 062B  
                  i1l1557 05FB                    i1l1581 054C                    i1l1661 0224  
                  i1l1653 01E6                    i1l1637 01B1                    i1l1629 01A0  
                  i1l1389 04AB                    i1l1741 00E0                    i1l1725 007E  
                  i1l1733 00B2                    i1l1717 0047                    i1l1709 0023  
                  i1l1559 05B3                    i1l1567 05C8                    i1l1583 0550  
                  i1l1575 0534                    i1l1663 0228                    i1l1655 01EA  
                  i1l1647 01CF                    i1l1399 04D7                    i1l1591 0484  
                  i1l1751 0125                    i1l1743 00EB                    i1l1735 00BD  
                  i1l1727 008D                    i1l1719 0059                    u106_20 0602  
                  u122_20 0231                    u114_20 04A6                    u130_20 00E0  
                  u106_21 0601                    i1l1569 05CD                    i1l1585 0556  
                  i1l1577 0535                    i1l1497 03F1                    u122_21 0230  
                  i1l1657 01EF                    i1l1649 01D9                    i1l1665 0231  
                  u114_21 04A5                    i1l1593 048C                    i1l1681 05AA  
                  i1l1753 0133                    i1l1745 0100                    u130_21 00DF  
                  i1l1737 00C8                    i1l1729 009D                    i1l1761 0151  
                  i1l1579 0543                    i1l1499 03F3                    i1l1659 021D  
                  i1l1667 0243                    i1l1595 049B                    i1l1587 0472  
                  i1l1675 059D                    i1l1763 0154                    i1l1747 0105  
                  i1l1755 013A                    i1l1739 00CE                    i1l1597 04A1  
                  i1l1589 0474                    i1l1677 059E                    i1l1757 0145  
                  i1l1749 0114                    i1l1599 0506                    i1l1679 05A6  
                  u107_20 0607                    u123_20 0243                    u115_20 0526  
                  u131_20 00EB                    u107_21 0606                    u123_21 0242  
                  u115_21 0525                    u131_21 00EA                    i1l1895 018D  
                  u108_20 05BF                    u116_20 052D                    u124_20 05B2  
                  u108_21 05BE                    u116_21 052C                    u124_21 05B1  
                  u109_20 05C3                    u117_20 016E                    u109_21 05C2  
                  u117_21 016D                    u118_20 01A8                    u118_21 01A7  
                  u119_20 01CE                    u127_20 0047                    u119_21 01CD  
                  u127_21 0046                    u119_25 01CA                    u128_20 0059  
                  u128_21 0058                    u129_20 0064                    u129_21 0063  
                  _SSPADD 0093                    _TRISC3 043B                    _TRISC4 043C  
                  _SSPCON 0014                    _SSPBUF 0013        __size_of_i2c_start 0013  
      __size_of_i2c_write 0013             recivedCMD@cmd 0072                 ??___aldiv 003D  
               ??___lwdiv 0074                 ??___lwmod 007C                    _strchr 055D  
                  _strcmp 0505                    _strtok 0354                    _strspn 04A7  
                  saved_w 007E                    token@i 0022                 ??_sprintf 0023  
        __end_of_usart_Tx 0622                 ??_strcspn 0075   __end_of__initialization 001E  
             _i2c_sendACK 062B            __pcstackCOMMON 0070            usart_TxStr@str 0072  
           __end_of_myISR 0160             __end_of_token 04A7         __end_of_i2c_start 05ED  
       __end_of_i2c_write 05DA               recivedCMD@i 0073               recivedCMD@j 0074  
__size_of_usart_Interrupt 0009                   ??_myISR 002D                   ??_token 0020  
            ?_usart_TxStr 0070                __pbssBANK0 0048              usart_Tx@send 0070  
               ?_i2c_idle 0070                 ?_i2c_init 0070                 ?_i2c_read 0070  
               ?_i2c_stop 0070                __pmaintext 03A6            usart_init@BAUD 0044  
              __pintentry 0004                   ?_strchr 0070                   ?_strcmp 0070  
                 ?_strtok 007A                   ?_strspn 0073                   _SSPCON2 0091  
                 _SSPSTAT 0094                __stringtab 057D                ??_i2c_idle 0070  
              ??_i2c_init 0035                ??_i2c_read 0070                ??_i2c_stop 0070  
                 ___aldiv 0248                   ___lwdiv 03F1                   ___lwmod 0435  
               ?_usart_Tx 0070                   __ptext1 02E5                   __ptext2 0248  
                 __ptext3 0622                   __ptext4 05ED                   __ptext5 0022  
                 __ptext6 059C                   __ptext7 0616                   __ptext8 046F  
                 __ptext9 0354           __size_of_strchr 0020           __size_of_strcmp 002E  
         __size_of_strtok 0052           __size_of_strspn 002F                   _lectura 004D  
                 _dpowers 0583          ___aldiv@dividend 0039                _recivedCMD 0533  
                 _sprintf 0160                   clrloop0 0635                   _strcspn 04D6  
    end_of_initialization 001E         ??_usart_Interrupt 0035                 _RCSTAbits 0018  
        ___aldiv@quotient 0040                   strcmp@r 0075                ??_usart_Tx 0070  
                 strspn@i 0077                 _PORTBbits 0006             i2c_write@dato 0070  
               _TRISBbits 0086                 _TRISCbits 0087      __size_of_usart_TxStr 0017  
               _TXSTAbits 0098                _usart_init 02E5              ?_i2c_sendACK 0070  
          __end_of_strchr 057D            __end_of_strcmp 0533            __end_of_strtok 03A6  
          __end_of_strspn 04D6       start_initialization 0015               ?_recivedCMD 0070  
               _i2c_start 05DA                 _i2c_write 05C7         __size_of_i2c_idle 000D  
       __size_of_i2c_init 000E         __size_of_i2c_read 0014         __size_of_i2c_stop 000E  
                ??_strchr 0072                  ??_strcmp 0072                  ??_strtok 007B  
                ??_strspn 0075                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0                ?_i2c_start 0070                ?_i2c_write 0070  
             sprintf@flag 0027               sprintf@prec 0028               ?_usart_init 0044  
        ___lwdiv@dividend 0072       __size_of_recivedCMD 002A                  ?___aldiv 0035  
                ?___lwdiv 0070                  ?___lwmod 0078                 __pstrings 057D  
       __size_of_usart_Tx 000C           _usart_Interrupt 0622          ___lwdiv@quotient 0075  
          __size_of_myISR 013E                  ?_sprintf 0020                  ?_strcspn 0073  
          __size_of_token 0038           ___aldiv@divisor 0035         interrupt_function 0004  
         ___aldiv@counter 003E                 clear_ram0 0634                  _PIE1bits 008C  
                _PIR1bits 000C      __size_of_i2c_sendACK 0009               __stringbase 0582  
     __size_of_usart_init 006F               ??_i2c_start 0070               ??_i2c_write 0070  
                _i2c_idle 0609                  _i2c_init 05ED                  _i2c_read 05B3  
                _i2c_stop 05FB           _usart_init$1350 00A0          __size_of___aldiv 009D  
 __end_of_usart_Interrupt 062B          __size_of___lwdiv 0044          __size_of___lwmod 003A  
      __end_of__stringtab 0583                sprintf@val 0029              ??_recivedCMD 0070  
         ___lwdiv@divisor 0070           ___lwdiv@counter 0077                  __ptext10 04A7  
                __ptext11 04D6                  __ptext20 05FB                  __ptext12 055D  
                __ptext21 05DA                  __ptext13 0505                  __ptext22 062B  
                __ptext14 0160                  __ptext23 05B3                  __ptext15 0435  
                __ptext24 0609                  __ptext16 03F1                  __ptext17 0533  
                __ptext18 063C                  __ptext19 05C7             ??_usart_TxStr 0071  
        __size_of_sprintf 00E8          __size_of_strcspn 002F             __size_of_get1 0008  
           __size_of_main 004B        __end_of_recivedCMD 055D                  _usart_Tx 0616  
              _INTCONbits 000B                  intlevel1 0000                 sprintf@ap 0026  
               sprintf@sp 002B                 strchr@chr 0070          ___lwmod@dividend 007A  
               strchr@ptr 0072              ??_usart_init 0048                 strcspn@s1 0079  
               strcspn@s2 0073       __end_of_usart_TxStr 05B3                 stringcode 057D  
                token@cmd 0024                  token@tok 0025          ?_usart_Interrupt 0070  
                sprintf@c 002C                  sprintf@f 0020                  strcmp@s1 0076  
                strcmp@s2 0070           ___lwmod@divisor 0078           ___lwmod@counter 007D  
                strcspn@i 0077                  stringdir 057D                  stringtab 057D  
            ___aldiv@sign 003F        __end_of_usart_init 0354                  strtok@s1 007D  
                strtok@s2 007A                  strspn@s1 0079                  strspn@s2 0073  
                strtok@sp 004F               _SSPCON2bits 0091                _SSPCONbits 0014  
