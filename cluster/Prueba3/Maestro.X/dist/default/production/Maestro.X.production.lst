

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun May 30 09:21:23 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0088                     	;# 
   332  0089                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  008F                     	;# 
   337  0090                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009A                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  0105                     	;# 
   356  0107                     	;# 
   357  0108                     	;# 
   358  0109                     	;# 
   359  010C                     	;# 
   360  010C                     	;# 
   361  010D                     	;# 
   362  010E                     	;# 
   363  010F                     	;# 
   364  0185                     	;# 
   365  0187                     	;# 
   366  0188                     	;# 
   367  0189                     	;# 
   368  018C                     	;# 
   369  018D                     	;# 
   370  001A                     _RCREG	set	26
   371  0019                     _TXREG	set	25
   372  0018                     _RCSTAbits	set	24
   373  000C                     _PIR1bits	set	12
   374  000B                     _INTCONbits	set	11
   375  0014                     _SSPCONbits	set	20
   376  0013                     _SSPBUF	set	19
   377  0014                     _SSPCON	set	20
   378  0008                     _PORTD	set	8
   379  0006                     _PORTB	set	6
   380  0063                     _SSPIF	set	99
   381  0098                     _TXSTAbits	set	152
   382  0099                     _SPBRG	set	153
   383  008C                     _PIE1bits	set	140
   384  0086                     _TRISBbits	set	134
   385  0094                     _SSPSTATbits	set	148
   386  0091                     _SSPCON2bits	set	145
   387  0091                     _SSPCON2	set	145
   388  0094                     _SSPSTAT	set	148
   389  0093                     _SSPADD	set	147
   390  0087                     _TRISCbits	set	135
   391  0088                     _TRISD	set	136
   392  0086                     _TRISB	set	134
   393  043C                     _TRISC4	set	1084
   394  043B                     _TRISC3	set	1083
   395                           
   396                           	psect	cinit
   397  07F2                     start_initialization:	
   398                           ; #config settings
   399                           
   400  07F2                     __initialization:
   401                           
   402                           ; Clear objects allocated to COMMON
   403  07F2  01FD               	clrf	__pbssCOMMON& (0+127)
   404                           
   405                           ; Clear objects allocated to BANK0
   406  07F3  1383               	bcf	3,7	;select IRP bank0
   407  07F4  3020               	movlw	low __pbssBANK0
   408  07F5  0084               	movwf	4
   409  07F6  3034               	movlw	low (__pbssBANK0+20)
   410  07F7  120A  118A  25EF  120A  118A  	fcall	clear_ram0
   411  07FC                     end_of_initialization:	
   412                           ;End of C runtime variable initialization code
   413                           
   414  07FC                     __end_of__initialization:
   415  07FC  0183               	clrf	3
   416  07FD  120A  118A  2F01   	ljmp	_main	;jump to C main() function
   417                           
   418                           	psect	bssCOMMON
   419  007D                     __pbssCOMMON:
   420  007D                     _revD:
   421  007D                     	ds	1
   422                           
   423                           	psect	bssBANK0
   424  0020                     __pbssBANK0:
   425  0020                     _buffer:
   426  0020                     	ds	20
   427                           
   428                           	psect	clrtext
   429  05EF                     clear_ram0:	
   430                           ;	Called with FSR containing the base address, and
   431                           ;	W with the last address+1
   432                           
   433  05EF  0064               	clrwdt	;clear the watchdog before getting into this loop
   434  05F0                     clrloop0:
   435  05F0  0180               	clrf	0	;clear RAM location pointed to by FSR
   436  05F1  0A84               	incf	4,f	;increment pointer
   437  05F2  0604               	xorwf	4,w	;XOR with final address
   438  05F3  1903               	btfsc	3,2	;have we reached the end yet?
   439  05F4  3400               	retlw	0	;all done for this memory range, return
   440  05F5  0604               	xorwf	4,w	;XOR again to restore value
   441  05F6  2DF0               	goto	clrloop0	;do the next byte
   442                           
   443                           	psect	cstackCOMMON
   444  0070                     __pcstackCOMMON:
   445  0070                     ?_i2c_init:
   446  0070                     ??_i2c_init:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_blink:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_i2c_start:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ??_i2c_start:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_i2c_write:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ??_i2c_write:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?_i2c_stop:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ??_i2c_stop:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ?_i2c_read:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ??_i2c_read:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ?_usart_Tx:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ??_usart_Tx:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_i2c_idle:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ??_i2c_idle:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ?_main:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?___aldiv:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     i2c_write@dato:	
   495                           ; 4 bytes @ 0x0
   496                           
   497  0070                     usart_Tx@send:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ___aldiv@divisor:	
   501                           ; 1 bytes @ 0x0
   502                           
   503                           
   504                           ; 4 bytes @ 0x0
   505  0070                     	ds	1
   506  0071                     ??_blink:
   507                           
   508                           ; 1 bytes @ 0x1
   509  0071                     	ds	3
   510  0074                     blink@data:
   511  0074                     ___aldiv@dividend:	
   512                           ; 1 bytes @ 0x4
   513                           
   514                           
   515                           ; 4 bytes @ 0x4
   516  0074                     	ds	4
   517  0078                     ??___aldiv:
   518                           
   519                           ; 1 bytes @ 0x8
   520  0078                     	ds	1
   521  0079                     ??_usart_init:
   522  0079                     _usart_init$1127:	
   523                           ; 1 bytes @ 0x9
   524                           
   525                           
   526                           ; 4 bytes @ 0x9
   527  0079                     	ds	4
   528                           
   529                           	psect	cstackBANK0
   530  0034                     __pcstackBANK0:
   531  0034                     ___aldiv@counter:
   532                           
   533                           ; 1 bytes @ 0x0
   534  0034                     	ds	1
   535  0035                     ___aldiv@sign:
   536                           
   537                           ; 1 bytes @ 0x1
   538  0035                     	ds	1
   539  0036                     ___aldiv@quotient:
   540                           
   541                           ; 4 bytes @ 0x2
   542  0036                     	ds	4
   543  003A                     ?_usart_init:
   544  003A                     usart_init@BAUD:	
   545                           ; 1 bytes @ 0x6
   546                           
   547                           
   548                           ; 4 bytes @ 0x6
   549  003A                     	ds	4
   550  003E                     ??_main:
   551                           
   552                           ; 1 bytes @ 0xA
   553  003E                     	ds	3
   554  0041                     main@i:
   555                           
   556                           ; 2 bytes @ 0xD
   557  0041                     	ds	2
   558                           
   559                           	psect	maintext
   560  0701                     __pmaintext:	
   561 ;;
   562 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   563 ;;
   564 ;; *************** function _main *****************
   565 ;; Defined at:
   566 ;;		line 16 in file "main.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;  i               2   13[BANK0 ] int 
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   575 ;; Tracked objects:
   576 ;;		On entry : B00/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   580 ;;      Params:         0       0       0       0       0
   581 ;;      Locals:         0       2       0       0       0
   582 ;;      Temps:          0       3       0       0       0
   583 ;;      Totals:         0       5       0       0       0
   584 ;;Total ram usage:        5 bytes
   585 ;; Hardware stack levels required when called:    3
   586 ;; This function calls:
   587 ;;		_blink
   588 ;;		_i2c_init
   589 ;;		_usart_init
   590 ;; This function is called by:
   591 ;;		Startup code after reset
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595                           
   596                           ;psect for function _main
   597  0701                     _main:
   598  0701                     l1059:	
   599                           ;incstack = 0
   600                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   601                           
   602                           
   603                           ;main.c: 17:     TRISB = 0x00;
   604  0701  1683               	bsf	3,5	;RP0=1, select bank1
   605  0702  1303               	bcf	3,6	;RP1=0, select bank1
   606  0703  0186               	clrf	6	;volatile
   607                           
   608                           ;main.c: 18:     PORTB = 0x00;
   609  0704  1283               	bcf	3,5	;RP0=0, select bank0
   610  0705  1303               	bcf	3,6	;RP1=0, select bank0
   611  0706  0186               	clrf	6	;volatile
   612                           
   613                           ;main.c: 19:     TRISD = 0x00;
   614  0707  1683               	bsf	3,5	;RP0=1, select bank1
   615  0708  1303               	bcf	3,6	;RP1=0, select bank1
   616  0709  0188               	clrf	8	;volatile
   617                           
   618                           ;main.c: 20:     PORTD = 0x00;
   619  070A  1283               	bcf	3,5	;RP0=0, select bank0
   620  070B  1303               	bcf	3,6	;RP1=0, select bank0
   621  070C  0188               	clrf	8	;volatile
   622  070D                     l1061:
   623                           
   624                           ;main.c: 22:     i2c_init();
   625  070D  120A  118A  261E  120A  118A  	fcall	_i2c_init
   626  0712                     l1063:
   627                           
   628                           ;main.c: 23:     usart_init(9600);
   629  0712  3000               	movlw	0
   630  0713  1283               	bcf	3,5	;RP0=0, select bank0
   631  0714  1303               	bcf	3,6	;RP1=0, select bank0
   632  0715  00BD               	movwf	usart_init@BAUD+3
   633  0716  3000               	movlw	0
   634  0717  00BC               	movwf	usart_init@BAUD+2
   635  0718  3025               	movlw	37
   636  0719  00BB               	movwf	usart_init@BAUD+1
   637  071A  3080               	movlw	128
   638  071B  00BA               	movwf	usart_init@BAUD
   639  071C  120A  118A  2666  120A  118A  	fcall	_usart_init
   640  0721                     l1065:
   641                           
   642                           ;main.c: 24:     _delay((unsigned long)((1500)*(20000000/4000.0)));
   643  0721  3027               	movlw	39
   644  0722  1283               	bcf	3,5	;RP0=0, select bank0
   645  0723  1303               	bcf	3,6	;RP1=0, select bank0
   646  0724  00C0               	movwf	??_main+2
   647  0725  300D               	movlw	13
   648  0726  00BF               	movwf	??_main+1
   649  0727  3025               	movlw	37
   650  0728  00BE               	movwf	??_main
   651  0729                     u517:
   652  0729  0BBE               	decfsz	??_main,f
   653  072A  2F29               	goto	u517
   654  072B  0BBF               	decfsz	??_main+1,f
   655  072C  2F29               	goto	u517
   656  072D  0BC0               	decfsz	??_main+2,f
   657  072E  2F29               	goto	u517
   658  072F  2F30               	nop2
   659  0730                     l1067:
   660                           
   661                           ;main.c: 26:         for(int i = 0; i < 255;i++){
   662  0730  1283               	bcf	3,5	;RP0=0, select bank0
   663  0731  1303               	bcf	3,6	;RP1=0, select bank0
   664  0732  01C1               	clrf	main@i
   665  0733  01C2               	clrf	main@i+1
   666  0734                     l1071:
   667                           
   668                           ;main.c: 27:         blink(i);
   669  0734  1283               	bcf	3,5	;RP0=0, select bank0
   670  0735  1303               	bcf	3,6	;RP1=0, select bank0
   671  0736  0841               	movf	main@i,w
   672  0737  120A  118A  26B1  120A  118A  	fcall	_blink
   673  073C                     l1073:
   674                           
   675                           ;main.c: 29:         }
   676  073C  3001               	movlw	1
   677  073D  1283               	bcf	3,5	;RP0=0, select bank0
   678  073E  1303               	bcf	3,6	;RP1=0, select bank0
   679  073F  07C1               	addwf	main@i,f
   680  0740  1803               	skipnc
   681  0741  0AC2               	incf	main@i+1,f
   682  0742  3000               	movlw	0
   683  0743  07C2               	addwf	main@i+1,f
   684  0744                     l1075:
   685  0744  0842               	movf	main@i+1,w
   686  0745  3A80               	xorlw	128
   687  0746  00FF               	movwf	btemp+1
   688  0747  3080               	movlw	128
   689  0748  027F               	subwf	btemp+1,w
   690  0749  1D03               	skipz
   691  074A  2F4D               	goto	u475
   692  074B  30FF               	movlw	255
   693  074C  0241               	subwf	main@i,w
   694  074D                     u475:
   695  074D  1C03               	skipc
   696  074E  2F50               	goto	u471
   697  074F  2F51               	goto	u470
   698  0750                     u471:
   699  0750  2F34               	goto	l1071
   700  0751                     u470:
   701  0751  2F30               	goto	l1067
   702  0752  120A  118A  2800   	ljmp	start
   703  0755                     __end_of_main:
   704                           
   705                           	psect	text1
   706  0666                     __ptext1:	
   707 ;; *************** function _usart_init *****************
   708 ;; Defined at:
   709 ;;		line 9 in file "usart.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;  BAUD            4    6[BANK0 ] long 
   712 ;; Auto vars:     Size  Location     Type
   713 ;;		None
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   723 ;;      Params:         0       4       0       0       0
   724 ;;      Locals:         4       0       0       0       0
   725 ;;      Temps:          0       0       0       0       0
   726 ;;      Totals:         4       4       0       0       0
   727 ;;Total ram usage:        8 bytes
   728 ;; Hardware stack levels used:    1
   729 ;; Hardware stack levels required when called:    1
   730 ;; This function calls:
   731 ;;		___aldiv
   732 ;; This function is called by:
   733 ;;		_main
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           
   738                           ;psect for function _usart_init
   739  0666                     _usart_init:
   740  0666                     l1023:	
   741                           ;incstack = 0
   742                           ; Regs used in _usart_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   743                           
   744                           
   745                           ;usart.c: 11:     TRISCbits.TRISC6 = 0;
   746  0666  1683               	bsf	3,5	;RP0=1, select bank1
   747  0667  1303               	bcf	3,6	;RP1=0, select bank1
   748  0668  1307               	bcf	7,6	;volatile
   749                           
   750                           ;usart.c: 12:     TRISCbits.TRISC7 = 1;
   751  0669  1787               	bsf	7,7	;volatile
   752  066A                     l1025:
   753                           
   754                           ;usart.c: 13:     SPBRG = (unsigned char)(((20000000/BAUD)/64) - 1);
   755  066A  1283               	bcf	3,5	;RP0=0, select bank0
   756  066B  1303               	bcf	3,6	;RP1=0, select bank0
   757  066C  083D               	movf	usart_init@BAUD+3,w
   758  066D  00F3               	movwf	___aldiv@divisor+3
   759  066E  083C               	movf	usart_init@BAUD+2,w
   760  066F  00F2               	movwf	___aldiv@divisor+2
   761  0670  083B               	movf	usart_init@BAUD+1,w
   762  0671  00F1               	movwf	___aldiv@divisor+1
   763  0672  083A               	movf	usart_init@BAUD,w
   764  0673  00F0               	movwf	___aldiv@divisor
   765  0674  3001               	movlw	1
   766  0675  00F7               	movwf	___aldiv@dividend+3
   767  0676  3031               	movlw	49
   768  0677  00F6               	movwf	___aldiv@dividend+2
   769  0678  302D               	movlw	45
   770  0679  00F5               	movwf	___aldiv@dividend+1
   771  067A  3000               	movlw	0
   772  067B  00F4               	movwf	___aldiv@dividend
   773  067C  120A  118A  2755  120A  118A  	fcall	___aldiv
   774  0681  0873               	movf	?___aldiv+3,w
   775  0682  00FC               	movwf	_usart_init$1127+3
   776  0683  0872               	movf	?___aldiv+2,w
   777  0684  00FB               	movwf	_usart_init$1127+2
   778  0685  0871               	movf	?___aldiv+1,w
   779  0686  00FA               	movwf	_usart_init$1127+1
   780  0687  0870               	movf	?___aldiv,w
   781  0688  00F9               	movwf	_usart_init$1127
   782                           
   783                           ;usart.c: 13:     SPBRG = (unsigned char)(((20000000/BAUD)/64) - 1);
   784  0689  3000               	movlw	0
   785  068A  00F3               	movwf	___aldiv@divisor+3
   786  068B  3000               	movlw	0
   787  068C  00F2               	movwf	___aldiv@divisor+2
   788  068D  3000               	movlw	0
   789  068E  00F1               	movwf	___aldiv@divisor+1
   790  068F  3040               	movlw	64
   791  0690  00F0               	movwf	___aldiv@divisor
   792  0691  087C               	movf	_usart_init$1127+3,w
   793  0692  00F7               	movwf	___aldiv@dividend+3
   794  0693  087B               	movf	_usart_init$1127+2,w
   795  0694  00F6               	movwf	___aldiv@dividend+2
   796  0695  087A               	movf	_usart_init$1127+1,w
   797  0696  00F5               	movwf	___aldiv@dividend+1
   798  0697  0879               	movf	_usart_init$1127,w
   799  0698  00F4               	movwf	___aldiv@dividend
   800  0699  120A  118A  2755  120A  118A  	fcall	___aldiv
   801  069E  0870               	movf	?___aldiv,w
   802  069F  3EFF               	addlw	255
   803  06A0  1683               	bsf	3,5	;RP0=1, select bank1
   804  06A1  1303               	bcf	3,6	;RP1=0, select bank1
   805  06A2  0099               	movwf	25	;volatile
   806  06A3                     l1027:
   807                           
   808                           ;usart.c: 14:     TXSTAbits.BRGH = 0;
   809  06A3  1118               	bcf	24,2	;volatile
   810  06A4                     l1029:
   811                           
   812                           ;usart.c: 15:     TXSTAbits.SYNC = 0;
   813  06A4  1218               	bcf	24,4	;volatile
   814  06A5                     l1031:
   815                           
   816                           ;usart.c: 16:     RCSTAbits.SPEN = 1;
   817  06A5  1283               	bcf	3,5	;RP0=0, select bank0
   818  06A6  1303               	bcf	3,6	;RP1=0, select bank0
   819  06A7  1798               	bsf	24,7	;volatile
   820  06A8                     l1033:
   821                           
   822                           ;usart.c: 19:     TXSTAbits.TX9 = 0;
   823  06A8  1683               	bsf	3,5	;RP0=1, select bank1
   824  06A9  1303               	bcf	3,6	;RP1=0, select bank1
   825  06AA  1318               	bcf	24,6	;volatile
   826  06AB                     l1035:
   827                           
   828                           ;usart.c: 20:     TXSTAbits.TXEN = 1;
   829  06AB  1698               	bsf	24,5	;volatile
   830  06AC                     l1037:
   831                           
   832                           ;usart.c: 23:     RCSTAbits.RC9 = 0;
   833  06AC  1283               	bcf	3,5	;RP0=0, select bank0
   834  06AD  1303               	bcf	3,6	;RP1=0, select bank0
   835  06AE  1318               	bcf	24,6	;volatile
   836  06AF                     l1039:
   837                           
   838                           ;usart.c: 24:     RCSTAbits.CREN = 1;
   839  06AF  1618               	bsf	24,4	;volatile
   840  06B0                     l158:
   841  06B0  0008               	return
   842  06B1                     __end_of_usart_init:
   843                           
   844                           	psect	text2
   845  0755                     __ptext2:	
   846 ;; *************** function ___aldiv *****************
   847 ;; Defined at:
   848 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\aldiv.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;  divisor         4    0[COMMON] long 
   851 ;;  dividend        4    4[COMMON] long 
   852 ;; Auto vars:     Size  Location     Type
   853 ;;  quotient        4    2[BANK0 ] long 
   854 ;;  sign            1    1[BANK0 ] unsigned char 
   855 ;;  counter         1    0[BANK0 ] unsigned char 
   856 ;; Return value:  Size  Location     Type
   857 ;;                  4    0[COMMON] long 
   858 ;; Registers used:
   859 ;;		wreg, status,2, status,0, btemp+1
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   865 ;;      Params:         8       0       0       0       0
   866 ;;      Locals:         0       6       0       0       0
   867 ;;      Temps:          1       0       0       0       0
   868 ;;      Totals:         9       6       0       0       0
   869 ;;Total ram usage:       15 bytes
   870 ;; Hardware stack levels used:    1
   871 ;; This function calls:
   872 ;;		Nothing
   873 ;; This function is called by:
   874 ;;		_usart_init
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           
   879                           ;psect for function ___aldiv
   880  0755                     ___aldiv:
   881  0755                     l973:	
   882                           ;incstack = 0
   883                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
   884                           
   885  0755  1283               	bcf	3,5	;RP0=0, select bank0
   886  0756  1303               	bcf	3,6	;RP1=0, select bank0
   887  0757  01B5               	clrf	___aldiv@sign
   888  0758                     l975:
   889  0758  1FF3               	btfss	___aldiv@divisor+3,7
   890  0759  2F5B               	goto	u371
   891  075A  2F5C               	goto	u370
   892  075B                     u371:
   893  075B  2F69               	goto	l324
   894  075C                     u370:
   895  075C                     l977:
   896  075C  09F0               	comf	___aldiv@divisor,f
   897  075D  09F1               	comf	___aldiv@divisor+1,f
   898  075E  09F2               	comf	___aldiv@divisor+2,f
   899  075F  09F3               	comf	___aldiv@divisor+3,f
   900  0760  0AF0               	incf	___aldiv@divisor,f
   901  0761  1903               	skipnz
   902  0762  0AF1               	incf	___aldiv@divisor+1,f
   903  0763  1903               	skipnz
   904  0764  0AF2               	incf	___aldiv@divisor+2,f
   905  0765  1903               	skipnz
   906  0766  0AF3               	incf	___aldiv@divisor+3,f
   907  0767  01B5               	clrf	___aldiv@sign
   908  0768  0AB5               	incf	___aldiv@sign,f
   909  0769                     l324:
   910  0769  1FF7               	btfss	___aldiv@dividend+3,7
   911  076A  2F6C               	goto	u381
   912  076B  2F6D               	goto	u380
   913  076C                     u381:
   914  076C  2F7C               	goto	l983
   915  076D                     u380:
   916  076D                     l979:
   917  076D  09F4               	comf	___aldiv@dividend,f
   918  076E  09F5               	comf	___aldiv@dividend+1,f
   919  076F  09F6               	comf	___aldiv@dividend+2,f
   920  0770  09F7               	comf	___aldiv@dividend+3,f
   921  0771  0AF4               	incf	___aldiv@dividend,f
   922  0772  1903               	skipnz
   923  0773  0AF5               	incf	___aldiv@dividend+1,f
   924  0774  1903               	skipnz
   925  0775  0AF6               	incf	___aldiv@dividend+2,f
   926  0776  1903               	skipnz
   927  0777  0AF7               	incf	___aldiv@dividend+3,f
   928  0778                     l981:
   929  0778  3001               	movlw	1
   930  0779  00FF               	movwf	btemp+1
   931  077A  087F               	movf	btemp+1,w
   932  077B  06B5               	xorwf	___aldiv@sign,f
   933  077C                     l983:
   934  077C  3000               	movlw	0
   935  077D  00B9               	movwf	___aldiv@quotient+3
   936  077E  3000               	movlw	0
   937  077F  00B8               	movwf	___aldiv@quotient+2
   938  0780  3000               	movlw	0
   939  0781  00B7               	movwf	___aldiv@quotient+1
   940  0782  3000               	movlw	0
   941  0783  00B6               	movwf	___aldiv@quotient
   942  0784                     l985:
   943  0784  0873               	movf	___aldiv@divisor+3,w
   944  0785  0472               	iorwf	___aldiv@divisor+2,w
   945  0786  0471               	iorwf	___aldiv@divisor+1,w
   946  0787  0470               	iorwf	___aldiv@divisor,w
   947  0788  1903               	skipnz
   948  0789  2F8B               	goto	u391
   949  078A  2F8C               	goto	u390
   950  078B                     u391:
   951  078B  2FD9               	goto	l1007
   952  078C                     u390:
   953  078C                     l987:
   954  078C  01B4               	clrf	___aldiv@counter
   955  078D  0AB4               	incf	___aldiv@counter,f
   956  078E  2F9C               	goto	l993
   957  078F                     l989:
   958  078F  3001               	movlw	1
   959  0790  00F8               	movwf	??___aldiv
   960  0791                     u405:
   961  0791  1003               	clrc
   962  0792  0DF0               	rlf	___aldiv@divisor,f
   963  0793  0DF1               	rlf	___aldiv@divisor+1,f
   964  0794  0DF2               	rlf	___aldiv@divisor+2,f
   965  0795  0DF3               	rlf	___aldiv@divisor+3,f
   966  0796  0BF8               	decfsz	??___aldiv,f
   967  0797  2F91               	goto	u405
   968  0798                     l991:
   969  0798  3001               	movlw	1
   970  0799  00FF               	movwf	btemp+1
   971  079A  087F               	movf	btemp+1,w
   972  079B  07B4               	addwf	___aldiv@counter,f
   973  079C                     l993:
   974  079C  1FF3               	btfss	___aldiv@divisor+3,7
   975  079D  2F9F               	goto	u411
   976  079E  2FA0               	goto	u410
   977  079F                     u411:
   978  079F  2F8F               	goto	l989
   979  07A0                     u410:
   980  07A0                     l995:
   981  07A0  3001               	movlw	1
   982  07A1  00F8               	movwf	??___aldiv
   983  07A2                     u425:
   984  07A2  1003               	clrc
   985  07A3  0DB6               	rlf	___aldiv@quotient,f
   986  07A4  0DB7               	rlf	___aldiv@quotient+1,f
   987  07A5  0DB8               	rlf	___aldiv@quotient+2,f
   988  07A6  0DB9               	rlf	___aldiv@quotient+3,f
   989  07A7  0BF8               	decfsz	??___aldiv,f
   990  07A8  2FA2               	goto	u425
   991  07A9                     l997:
   992  07A9  0873               	movf	___aldiv@divisor+3,w
   993  07AA  0277               	subwf	___aldiv@dividend+3,w
   994  07AB  1D03               	skipz
   995  07AC  2FB7               	goto	u435
   996  07AD  0872               	movf	___aldiv@divisor+2,w
   997  07AE  0276               	subwf	___aldiv@dividend+2,w
   998  07AF  1D03               	skipz
   999  07B0  2FB7               	goto	u435
  1000  07B1  0871               	movf	___aldiv@divisor+1,w
  1001  07B2  0275               	subwf	___aldiv@dividend+1,w
  1002  07B3  1D03               	skipz
  1003  07B4  2FB7               	goto	u435
  1004  07B5  0870               	movf	___aldiv@divisor,w
  1005  07B6  0274               	subwf	___aldiv@dividend,w
  1006  07B7                     u435:
  1007  07B7  1C03               	skipc
  1008  07B8  2FBA               	goto	u431
  1009  07B9  2FBB               	goto	u430
  1010  07BA                     u431:
  1011  07BA  2FCA               	goto	l1003
  1012  07BB                     u430:
  1013  07BB                     l999:
  1014  07BB  0870               	movf	___aldiv@divisor,w
  1015  07BC  02F4               	subwf	___aldiv@dividend,f
  1016  07BD  0871               	movf	___aldiv@divisor+1,w
  1017  07BE  1C03               	skipc
  1018  07BF  0F71               	incfsz	___aldiv@divisor+1,w
  1019  07C0  02F5               	subwf	___aldiv@dividend+1,f
  1020  07C1  0872               	movf	___aldiv@divisor+2,w
  1021  07C2  1C03               	skipc
  1022  07C3  0F72               	incfsz	___aldiv@divisor+2,w
  1023  07C4  02F6               	subwf	___aldiv@dividend+2,f
  1024  07C5  0873               	movf	___aldiv@divisor+3,w
  1025  07C6  1C03               	skipc
  1026  07C7  0F73               	incfsz	___aldiv@divisor+3,w
  1027  07C8  02F7               	subwf	___aldiv@dividend+3,f
  1028  07C9                     l1001:
  1029  07C9  1436               	bsf	___aldiv@quotient,0
  1030  07CA                     l1003:
  1031  07CA  3001               	movlw	1
  1032  07CB                     u445:
  1033  07CB  1003               	clrc
  1034  07CC  0CF3               	rrf	___aldiv@divisor+3,f
  1035  07CD  0CF2               	rrf	___aldiv@divisor+2,f
  1036  07CE  0CF1               	rrf	___aldiv@divisor+1,f
  1037  07CF  0CF0               	rrf	___aldiv@divisor,f
  1038  07D0  3EFF               	addlw	-1
  1039  07D1  1D03               	skipz
  1040  07D2  2FCB               	goto	u445
  1041  07D3                     l1005:
  1042  07D3  3001               	movlw	1
  1043  07D4  02B4               	subwf	___aldiv@counter,f
  1044  07D5  1D03               	btfss	3,2
  1045  07D6  2FD8               	goto	u451
  1046  07D7  2FD9               	goto	u450
  1047  07D8                     u451:
  1048  07D8  2FA0               	goto	l995
  1049  07D9                     u450:
  1050  07D9                     l1007:
  1051  07D9  0835               	movf	___aldiv@sign,w
  1052  07DA  1903               	btfsc	3,2
  1053  07DB  2FDD               	goto	u461
  1054  07DC  2FDE               	goto	u460
  1055  07DD                     u461:
  1056  07DD  2FE9               	goto	l1011
  1057  07DE                     u460:
  1058  07DE                     l1009:
  1059  07DE  09B6               	comf	___aldiv@quotient,f
  1060  07DF  09B7               	comf	___aldiv@quotient+1,f
  1061  07E0  09B8               	comf	___aldiv@quotient+2,f
  1062  07E1  09B9               	comf	___aldiv@quotient+3,f
  1063  07E2  0AB6               	incf	___aldiv@quotient,f
  1064  07E3  1903               	skipnz
  1065  07E4  0AB7               	incf	___aldiv@quotient+1,f
  1066  07E5  1903               	skipnz
  1067  07E6  0AB8               	incf	___aldiv@quotient+2,f
  1068  07E7  1903               	skipnz
  1069  07E8  0AB9               	incf	___aldiv@quotient+3,f
  1070  07E9                     l1011:
  1071  07E9  0839               	movf	___aldiv@quotient+3,w
  1072  07EA  00F3               	movwf	?___aldiv+3
  1073  07EB  0838               	movf	___aldiv@quotient+2,w
  1074  07EC  00F2               	movwf	?___aldiv+2
  1075  07ED  0837               	movf	___aldiv@quotient+1,w
  1076  07EE  00F1               	movwf	?___aldiv+1
  1077  07EF  0836               	movf	___aldiv@quotient,w
  1078  07F0  00F0               	movwf	?___aldiv
  1079  07F1                     l334:
  1080  07F1  0008               	return
  1081  07F2                     __end_of___aldiv:
  1082                           
  1083                           	psect	text3
  1084  061E                     __ptext3:	
  1085 ;; *************** function _i2c_init *****************
  1086 ;; Defined at:
  1087 ;;		line 10 in file "i2c.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;		None
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;		None
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  1    wreg      void 
  1094 ;; Registers used:
  1095 ;;		wreg, status,2
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1101 ;;      Params:         0       0       0       0       0
  1102 ;;      Locals:         0       0       0       0       0
  1103 ;;      Temps:          0       0       0       0       0
  1104 ;;      Totals:         0       0       0       0       0
  1105 ;;Total ram usage:        0 bytes
  1106 ;; Hardware stack levels used:    1
  1107 ;; This function calls:
  1108 ;;		Nothing
  1109 ;; This function is called by:
  1110 ;;		_main
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114                           
  1115                           ;psect for function _i2c_init
  1116  061E                     _i2c_init:
  1117  061E                     l1015:	
  1118                           ;incstack = 0
  1119                           ; Regs used in _i2c_init: [wreg+status,2]
  1120                           
  1121                           
  1122                           ;i2c.c: 12:     TRISCbits.TRISC3 = 1;
  1123  061E  1683               	bsf	3,5	;RP0=1, select bank1
  1124  061F  1303               	bcf	3,6	;RP1=0, select bank1
  1125  0620  1587               	bsf	7,3	;volatile
  1126                           
  1127                           ;i2c.c: 13:     TRISCbits.TRISC4 = 1;
  1128  0621  1607               	bsf	7,4	;volatile
  1129  0622                     l1017:
  1130                           
  1131                           ;i2c.c: 14:     SSPADD = 0x09;
  1132  0622  3009               	movlw	9
  1133  0623  0093               	movwf	19	;volatile
  1134                           
  1135                           ;i2c.c: 15:     SSPSTAT = 0x80;
  1136  0624  3080               	movlw	128
  1137  0625  0094               	movwf	20	;volatile
  1138  0626                     l1019:
  1139                           
  1140                           ;i2c.c: 16:     SSPCON2 = 0x00;
  1141  0626  0191               	clrf	17	;volatile
  1142  0627                     l1021:
  1143                           
  1144                           ;i2c.c: 17:     SSPCON = 0x28;
  1145  0627  3028               	movlw	40
  1146  0628  1283               	bcf	3,5	;RP0=0, select bank0
  1147  0629  1303               	bcf	3,6	;RP1=0, select bank0
  1148  062A  0094               	movwf	20	;volatile
  1149  062B                     l80:
  1150  062B  0008               	return
  1151  062C                     __end_of_i2c_init:
  1152                           
  1153                           	psect	text4
  1154  06B1                     __ptext4:	
  1155 ;; *************** function _blink *****************
  1156 ;; Defined at:
  1157 ;;		line 34 in file "main.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;  data            1    wreg     unsigned char 
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;  data            1    4[COMMON] unsigned char 
  1162 ;; Return value:  Size  Location     Type
  1163 ;;                  1    wreg      void 
  1164 ;; Registers used:
  1165 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1171 ;;      Params:         0       0       0       0       0
  1172 ;;      Locals:         1       0       0       0       0
  1173 ;;      Temps:          3       0       0       0       0
  1174 ;;      Totals:         4       0       0       0       0
  1175 ;;Total ram usage:        4 bytes
  1176 ;; Hardware stack levels used:    1
  1177 ;; Hardware stack levels required when called:    2
  1178 ;; This function calls:
  1179 ;;		_i2c_read
  1180 ;;		_i2c_start
  1181 ;;		_i2c_stop
  1182 ;;		_i2c_write
  1183 ;;		_usart_Tx
  1184 ;; This function is called by:
  1185 ;;		_main
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           
  1190                           ;psect for function _blink
  1191  06B1                     _blink:
  1192                           
  1193                           ;incstack = 0
  1194                           ; Regs used in _blink: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1195                           ;blink@data stored from wreg
  1196  06B1  00F4               	movwf	blink@data
  1197  06B2                     l1041:
  1198                           
  1199                           ;main.c: 36:     _delay((unsigned long)((500)*(20000000/4000.0)));
  1200  06B2  300D               	movlw	13
  1201  06B3  00F3               	movwf	??_blink+2
  1202  06B4  30AF               	movlw	175
  1203  06B5  00F2               	movwf	??_blink+1
  1204  06B6  30B6               	movlw	182
  1205  06B7  00F1               	movwf	??_blink
  1206  06B8                     u527:
  1207  06B8  0BF1               	decfsz	??_blink,f
  1208  06B9  2EB8               	goto	u527
  1209  06BA  0BF2               	decfsz	??_blink+1,f
  1210  06BB  2EB8               	goto	u527
  1211  06BC  0BF3               	decfsz	??_blink+2,f
  1212  06BD  2EB8               	goto	u527
  1213  06BE  0000               	nop
  1214                           
  1215                           ;main.c: 38:     _delay((unsigned long)((500)*(20000000/4000.0)));
  1216  06BF  300D               	movlw	13
  1217  06C0  00F3               	movwf	??_blink+2
  1218  06C1  30AF               	movlw	175
  1219  06C2  00F2               	movwf	??_blink+1
  1220  06C3  30B6               	movlw	182
  1221  06C4  00F1               	movwf	??_blink
  1222  06C5                     u537:
  1223  06C5  0BF1               	decfsz	??_blink,f
  1224  06C6  2EC5               	goto	u537
  1225  06C7  0BF2               	decfsz	??_blink+1,f
  1226  06C8  2EC5               	goto	u537
  1227  06C9  0BF3               	decfsz	??_blink+2,f
  1228  06CA  2EC5               	goto	u537
  1229  06CB  0000               	nop
  1230  06CC                     l1043:
  1231                           
  1232                           ;main.c: 40:     i2c_start();
  1233  06CC  120A  118A  262C  120A  118A  	fcall	_i2c_start
  1234  06D1                     l1045:
  1235                           
  1236                           ;main.c: 41:     i2c_write(0x30);
  1237  06D1  3030               	movlw	48
  1238  06D2  120A  118A  263F  120A  118A  	fcall	_i2c_write
  1239  06D7                     l1047:
  1240                           
  1241                           ;main.c: 42:     i2c_write(data);
  1242  06D7  0874               	movf	blink@data,w
  1243  06D8  120A  118A  263F  120A  118A  	fcall	_i2c_write
  1244                           
  1245                           ;main.c: 43:     i2c_stop();
  1246  06DD  120A  118A  2610  120A  118A  	fcall	_i2c_stop
  1247  06E2                     l1049:
  1248                           
  1249                           ;main.c: 45:     i2c_start();
  1250  06E2  120A  118A  262C  120A  118A  	fcall	_i2c_start
  1251  06E7                     l1051:
  1252                           
  1253                           ;main.c: 46:     i2c_write(0x31);
  1254  06E7  3031               	movlw	49
  1255  06E8  120A  118A  263F  120A  118A  	fcall	_i2c_write
  1256  06ED                     l1053:
  1257                           
  1258                           ;main.c: 47:     revD = i2c_read();
  1259  06ED  120A  118A  2652  120A  118A  	fcall	_i2c_read
  1260  06F2  00FF               	movwf	btemp+1
  1261  06F3  087F               	movf	btemp+1,w
  1262  06F4  00FD               	movwf	_revD
  1263  06F5                     l1055:
  1264                           
  1265                           ;main.c: 48:     i2c_stop();
  1266  06F5  120A  118A  2610  120A  118A  	fcall	_i2c_stop
  1267  06FA                     l1057:
  1268                           
  1269                           ;main.c: 49:     usart_Tx(revD);
  1270  06FA  087D               	movf	_revD,w
  1271  06FB  120A  118A  25F7  120A  118A  	fcall	_usart_Tx
  1272  0700                     l43:
  1273  0700  0008               	return
  1274  0701                     __end_of_blink:
  1275                           
  1276                           	psect	text5
  1277  05F7                     __ptext5:	
  1278 ;; *************** function _usart_Tx *****************
  1279 ;; Defined at:
  1280 ;;		line 28 in file "usart.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;  send            1    wreg     unsigned char 
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  send            1    0[COMMON] unsigned char 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1294 ;;      Params:         0       0       0       0       0
  1295 ;;      Locals:         1       0       0       0       0
  1296 ;;      Temps:          0       0       0       0       0
  1297 ;;      Totals:         1       0       0       0       0
  1298 ;;Total ram usage:        1 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; This function calls:
  1301 ;;		Nothing
  1302 ;; This function is called by:
  1303 ;;		_blink
  1304 ;;		_usart_TxStr
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           
  1309                           ;psect for function _usart_Tx
  1310  05F7                     _usart_Tx:
  1311                           
  1312                           ;incstack = 0
  1313                           ; Regs used in _usart_Tx: [wreg]
  1314                           ;usart_Tx@send stored from wreg
  1315  05F7  00F0               	movwf	usart_Tx@send
  1316  05F8                     l971:
  1317                           
  1318                           ;usart.c: 29:     TXREG = send;
  1319  05F8  0870               	movf	usart_Tx@send,w
  1320  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  1321  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  1322  05FB  0099               	movwf	25	;volatile
  1323  05FC                     l161:	
  1324                           ;usart.c: 30:     while (!TXSTAbits.TRMT);
  1325                           
  1326  05FC  1683               	bsf	3,5	;RP0=1, select bank1
  1327  05FD  1303               	bcf	3,6	;RP1=0, select bank1
  1328  05FE  1C98               	btfss	24,1	;volatile
  1329  05FF  2E01               	goto	u361
  1330  0600  2E02               	goto	u360
  1331  0601                     u361:
  1332  0601  2DFC               	goto	l161
  1333  0602                     u360:
  1334  0602                     l164:
  1335  0602  0008               	return
  1336  0603                     __end_of_usart_Tx:
  1337                           
  1338                           	psect	text6
  1339  063F                     __ptext6:	
  1340 ;; *************** function _i2c_write *****************
  1341 ;; Defined at:
  1342 ;;		line 52 in file "i2c.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;  dato            1    wreg     unsigned char 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;  dato            1    0[COMMON] unsigned char 
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      unsigned char 
  1349 ;; Registers used:
  1350 ;;		wreg, status,2, status,0, pclath, cstack
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1356 ;;      Params:         0       0       0       0       0
  1357 ;;      Locals:         1       0       0       0       0
  1358 ;;      Temps:          0       0       0       0       0
  1359 ;;      Totals:         1       0       0       0       0
  1360 ;;Total ram usage:        1 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; Hardware stack levels required when called:    1
  1363 ;; This function calls:
  1364 ;;		_i2c_idle
  1365 ;; This function is called by:
  1366 ;;		_blink
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           
  1371                           ;psect for function _i2c_write
  1372  063F                     _i2c_write:
  1373                           
  1374                           ;incstack = 0
  1375                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  1376                           ;i2c_write@dato stored from wreg
  1377  063F  00F0               	movwf	i2c_write@dato
  1378  0640                     l955:
  1379                           
  1380                           ;i2c.c: 53:     i2c_idle();
  1381  0640  120A  118A  2603  120A  118A  	fcall	_i2c_idle
  1382  0645                     l957:
  1383                           
  1384                           ;i2c.c: 54:     SSPBUF = dato;
  1385  0645  0870               	movf	i2c_write@dato,w
  1386  0646  1283               	bcf	3,5	;RP0=0, select bank0
  1387  0647  1303               	bcf	3,6	;RP1=0, select bank0
  1388  0648  0093               	movwf	19	;volatile
  1389  0649                     l959:	
  1390                           ;i2c.c: 55:     while(SSPSTAT & 0x05);
  1391                           
  1392  0649  1683               	bsf	3,5	;RP0=1, select bank1
  1393  064A  1303               	bcf	3,6	;RP1=0, select bank1
  1394  064B  0814               	movf	20,w	;volatile
  1395  064C  3905               	andlw	5
  1396  064D  1D03               	btfss	3,2
  1397  064E  2E50               	goto	u311
  1398  064F  2E51               	goto	u310
  1399  0650                     u311:
  1400  0650  2E49               	goto	l959
  1401  0651                     u310:
  1402  0651                     l122:
  1403  0651  0008               	return
  1404  0652                     __end_of_i2c_write:
  1405                           
  1406                           	psect	text7
  1407  0610                     __ptext7:	
  1408 ;; *************** function _i2c_stop *****************
  1409 ;; Defined at:
  1410 ;;		line 37 in file "i2c.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;		None
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;		None
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  1    wreg      void 
  1417 ;; Registers used:
  1418 ;;		None
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1424 ;;      Params:         0       0       0       0       0
  1425 ;;      Locals:         0       0       0       0       0
  1426 ;;      Temps:          0       0       0       0       0
  1427 ;;      Totals:         0       0       0       0       0
  1428 ;;Total ram usage:        0 bytes
  1429 ;; Hardware stack levels used:    1
  1430 ;; This function calls:
  1431 ;;		Nothing
  1432 ;; This function is called by:
  1433 ;;		_blink
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           
  1438                           ;psect for function _i2c_stop
  1439  0610                     _i2c_stop:
  1440  0610                     l961:	
  1441                           ;incstack = 0
  1442                           ; Regs used in _i2c_stop: []
  1443                           
  1444                           
  1445                           ;i2c.c: 38:     SSPCON2bits.PEN = 1;
  1446  0610  1683               	bsf	3,5	;RP0=1, select bank1
  1447  0611  1303               	bcf	3,6	;RP1=0, select bank1
  1448  0612  1511               	bsf	17,2	;volatile
  1449  0613                     l101:	
  1450                           ;i2c.c: 39:     while(SSPCON2bits.PEN);
  1451                           
  1452  0613  1911               	btfsc	17,2	;volatile
  1453  0614  2E16               	goto	u321
  1454  0615  2E17               	goto	u320
  1455  0616                     u321:
  1456  0616  2E13               	goto	l101
  1457  0617                     u320:
  1458  0617                     l104:
  1459  0617  1283               	bcf	3,5	;RP0=0, select bank0
  1460  0618  1D8C               	btfss	12,3	;volatile
  1461  0619  2E1B               	goto	u331
  1462  061A  2E1C               	goto	u330
  1463  061B                     u331:
  1464  061B  2E17               	goto	l104
  1465  061C                     u330:
  1466  061C                     l106:
  1467                           
  1468                           ;i2c.c: 41:     SSPIF = 0;
  1469  061C  118C               	bcf	12,3	;volatile
  1470  061D                     l107:
  1471  061D  0008               	return
  1472  061E                     __end_of_i2c_stop:
  1473                           
  1474                           	psect	text8
  1475  062C                     __ptext8:	
  1476 ;; *************** function _i2c_start *****************
  1477 ;; Defined at:
  1478 ;;		line 20 in file "i2c.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		wreg, status,2, status,0, pclath, cstack
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1492 ;;      Params:         0       0       0       0       0
  1493 ;;      Locals:         0       0       0       0       0
  1494 ;;      Temps:          0       0       0       0       0
  1495 ;;      Totals:         0       0       0       0       0
  1496 ;;Total ram usage:        0 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:    1
  1499 ;; This function calls:
  1500 ;;		_i2c_idle
  1501 ;; This function is called by:
  1502 ;;		_blink
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           
  1507                           ;psect for function _i2c_start
  1508  062C                     _i2c_start:
  1509  062C                     l951:	
  1510                           ;incstack = 0
  1511                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  1512                           
  1513                           
  1514                           ;i2c.c: 22:     i2c_idle();
  1515  062C  120A  118A  2603  120A  118A  	fcall	_i2c_idle
  1516  0631                     l953:
  1517                           
  1518                           ;i2c.c: 23:     SSPCON2bits.SEN = 1;
  1519  0631  1683               	bsf	3,5	;RP0=1, select bank1
  1520  0632  1303               	bcf	3,6	;RP1=0, select bank1
  1521  0633  1411               	bsf	17,0	;volatile
  1522  0634                     l83:	
  1523                           ;i2c.c: 24:     while(SSPCON2bits.SEN == 1);
  1524                           
  1525  0634  1811               	btfsc	17,0	;volatile
  1526  0635  2E37               	goto	u291
  1527  0636  2E38               	goto	u290
  1528  0637                     u291:
  1529  0637  2E34               	goto	l83
  1530  0638                     u290:
  1531  0638                     l86:
  1532  0638  1283               	bcf	3,5	;RP0=0, select bank0
  1533  0639  1D8C               	btfss	12,3	;volatile
  1534  063A  2E3C               	goto	u301
  1535  063B  2E3D               	goto	u300
  1536  063C                     u301:
  1537  063C  2E38               	goto	l86
  1538  063D                     u300:
  1539  063D                     l88:
  1540                           
  1541                           ;i2c.c: 26:     SSPIF = 0;
  1542  063D  118C               	bcf	12,3	;volatile
  1543  063E                     l89:
  1544  063E  0008               	return
  1545  063F                     __end_of_i2c_start:
  1546                           
  1547                           	psect	text9
  1548  0652                     __ptext9:	
  1549 ;; *************** function _i2c_read *****************
  1550 ;; Defined at:
  1551 ;;		line 44 in file "i2c.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;		None
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;		None
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      unsigned char 
  1558 ;; Registers used:
  1559 ;;		wreg, status,2, status,0, pclath, cstack
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1565 ;;      Params:         0       0       0       0       0
  1566 ;;      Locals:         0       0       0       0       0
  1567 ;;      Temps:          0       0       0       0       0
  1568 ;;      Totals:         0       0       0       0       0
  1569 ;;Total ram usage:        0 bytes
  1570 ;; Hardware stack levels used:    1
  1571 ;; Hardware stack levels required when called:    1
  1572 ;; This function calls:
  1573 ;;		_i2c_idle
  1574 ;; This function is called by:
  1575 ;;		_blink
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579                           
  1580                           ;psect for function _i2c_read
  1581  0652                     _i2c_read:
  1582  0652                     l963:	
  1583                           ;incstack = 0
  1584                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  1585                           
  1586                           
  1587                           ;i2c.c: 45:     i2c_idle();
  1588  0652  120A  118A  2603  120A  118A  	fcall	_i2c_idle
  1589  0657                     l965:
  1590                           
  1591                           ;i2c.c: 46:     SSPCON2bits.RCEN = 1;
  1592  0657  1683               	bsf	3,5	;RP0=1, select bank1
  1593  0658  1303               	bcf	3,6	;RP1=0, select bank1
  1594  0659  1591               	bsf	17,3	;volatile
  1595  065A                     l110:	
  1596                           ;i2c.c: 47:     while(SSPCON2bits.RCEN == 1);
  1597                           
  1598  065A  1991               	btfsc	17,3	;volatile
  1599  065B  2E5D               	goto	u341
  1600  065C  2E5E               	goto	u340
  1601  065D                     u341:
  1602  065D  2E5A               	goto	l110
  1603  065E                     u340:
  1604  065E                     l113:
  1605  065E  1C14               	btfss	20,0	;volatile
  1606  065F  2E61               	goto	u351
  1607  0660  2E62               	goto	u350
  1608  0661                     u351:
  1609  0661  2E5E               	goto	l113
  1610  0662                     u350:
  1611  0662                     l967:
  1612                           
  1613                           ;i2c.c: 49:     return SSPBUF;
  1614  0662  1283               	bcf	3,5	;RP0=0, select bank0
  1615  0663  1303               	bcf	3,6	;RP1=0, select bank0
  1616  0664  0813               	movf	19,w	;volatile
  1617  0665                     l116:
  1618  0665  0008               	return
  1619  0666                     __end_of_i2c_read:
  1620                           
  1621                           	psect	text10
  1622  0603                     __ptext10:	
  1623 ;; *************** function _i2c_idle *****************
  1624 ;; Defined at:
  1625 ;;		line 81 in file "i2c.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;		None
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;		None
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  1    wreg      void 
  1632 ;; Registers used:
  1633 ;;		wreg, status,2
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1639 ;;      Params:         0       0       0       0       0
  1640 ;;      Locals:         0       0       0       0       0
  1641 ;;      Temps:          0       0       0       0       0
  1642 ;;      Totals:         0       0       0       0       0
  1643 ;;Total ram usage:        0 bytes
  1644 ;; Hardware stack levels used:    1
  1645 ;; This function calls:
  1646 ;;		Nothing
  1647 ;; This function is called by:
  1648 ;;		_i2c_start
  1649 ;;		_i2c_read
  1650 ;;		_i2c_write
  1651 ;;		_i2c_restart
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           
  1656                           ;psect for function _i2c_idle
  1657  0603                     _i2c_idle:
  1658  0603                     l945:	
  1659                           ;incstack = 0
  1660                           ; Regs used in _i2c_idle: [wreg+status,2]
  1661                           
  1662  0603                     l947:	
  1663                           ;i2c.c: 82:     while((SSPCON2 & 0x1F)|| (SSPSTAT & 0x04));
  1664                           
  1665  0603  1683               	bsf	3,5	;RP0=1, select bank1
  1666  0604  1303               	bcf	3,6	;RP1=0, select bank1
  1667  0605  0811               	movf	17,w	;volatile
  1668  0606  391F               	andlw	31
  1669  0607  1D03               	btfss	3,2
  1670  0608  2E0A               	goto	u271
  1671  0609  2E0B               	goto	u270
  1672  060A                     u271:
  1673  060A  2E03               	goto	l947
  1674  060B                     u270:
  1675  060B                     l949:
  1676  060B  1914               	btfsc	20,2	;volatile
  1677  060C  2E0E               	goto	u281
  1678  060D  2E0F               	goto	u280
  1679  060E                     u281:
  1680  060E  2E03               	goto	l947
  1681  060F                     u280:
  1682  060F                     l140:
  1683  060F  0008               	return
  1684  0610                     __end_of_i2c_idle:
  1685  007E                     btemp	set	126	;btemp
  1686  007E                     wtemp0	set	126
  1687                           
  1688                           	psect	config
  1689                           
  1690                           ;Config register CONFIG1 @ 0x2007
  1691                           ;	Oscillator Selection bits
  1692                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1693                           ;	Watchdog Timer Enable bit
  1694                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1695                           ;	Power-up Timer Enable bit
  1696                           ;	PWRTE = OFF, PWRT disabled
  1697                           ;	RE3/MCLR pin function select bit
  1698                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1699                           ;	Code Protection bit
  1700                           ;	CP = OFF, Program memory code protection is disabled
  1701                           ;	Data Code Protection bit
  1702                           ;	CPD = OFF, Data memory code protection is disabled
  1703                           ;	Brown Out Reset Selection bits
  1704                           ;	BOREN = ON, BOR enabled
  1705                           ;	Internal External Switchover bit
  1706                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1707                           ;	Fail-Safe Clock Monitor Enabled bit
  1708                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1709                           ;	Low Voltage Programming Enable bit
  1710                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1711                           ;	In-Circuit Debugger Mode bit
  1712                           ;	DEBUG = 0x1, unprogrammed default
  1713  2007                     	org	8199
  1714  2007  3FF4               	dw	16372
  1715                           
  1716                           ;Config register CONFIG2 @ 0x2008
  1717                           ;	Brown-out Reset Selection bit
  1718                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1719                           ;	Flash Program Memory Self Write Enable bits
  1720                           ;	WRT = OFF, Write protection off
  1721  2008                     	org	8200
  1722  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     15      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_usart_init
    _usart_init->___aldiv
    _blink->_i2c_write
    _blink->_usart_Tx

Critical Paths under _main in BANK0

    _main->_usart_init
    _usart_init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     859
                                             10 BANK0      5     5      0
                              _blink
                           _i2c_init
                         _usart_init
 ---------------------------------------------------------------------------------
 (1) _usart_init                                           8     4      4     725
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blink                                                4     4      0      66
                                              1 COMMON     4     4      0
                           _i2c_read
                          _i2c_start
                           _i2c_stop
                          _i2c_write
                           _usart_Tx
 ---------------------------------------------------------------------------------
 (2) _usart_Tx                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _blink
     _i2c_read
       _i2c_idle
     _i2c_start
       _i2c_idle
     _i2c_stop
     _i2c_write
       _i2c_idle
     _usart_Tx
   _i2c_init
   _usart_init
     ___aldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      31       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      F      23       5       43.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      31      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun May 30 09:21:23 2021

            _SSPSTATbits 0094                       l43 0700                       l80 062B  
                     l83 0634                       l86 0638                       l88 063D  
                     l89 063E                       fsr 0004                      l101 0613  
                    l110 065A                      l104 0617                      l113 065E  
                    l106 061C                      l122 0651                      l107 061D  
                    l140 060F                      l116 0665                      l161 05FC  
                    l164 0602                      l324 0769                      l334 07F1  
                    l158 06B0                      l951 062C                      l945 0603  
                    l953 0631                      l961 0610                      l947 0603  
                    l963 0652                      l955 0640                      l971 05F8  
                    l949 060B                      l965 0657                      l957 0645  
                    l981 0778                      l973 0755                      l967 0662  
                    l959 0649                      l991 0798                      l983 077C  
                    l975 0758                      l993 079C                      l985 0784  
                    l977 075C                      l995 07A0                      l987 078C  
                    l979 076D                      l997 07A9                      l989 078F  
                    l999 07BB                      u300 063D                      u301 063C  
                    u310 0651                      u311 0650                      u320 0617  
                    u321 0616                      u330 061C                      u410 07A0  
                    u331 061B                      u411 079F                      u340 065E  
                    u341 065D                      u405 0791                      u270 060B  
                    u350 0662                      u430 07BB                      u271 060A  
                    u351 0661                      u431 07BA                      u280 060F  
                    u360 0602                      u281 060E                      u361 0601  
                    u425 07A2                      u290 0638                      u450 07D9  
                    u370 075C                      u291 0637                      u451 07D8  
                    u435 07B7                      u371 075B                      u460 07DE  
                    u380 076D                      u461 07DD                      u445 07CB  
                    u381 076C                      u517 0729                      u390 078C  
                    u470 0751                      u527 06B8                      u391 078B  
                    u471 0750                      u537 06C5                      u475 074D  
                    indf 0000                     l1001 07C9                     l1011 07E9  
                   l1003 07CA                     l1021 0627                     l1005 07D3  
                   l1015 061E                     l1007 07D9                     l1031 06A5  
                   l1023 0666                     l1041 06B2                     l1017 0622  
                   l1009 07DE                     l1033 06A8                     l1025 066A  
                   l1051 06E7                     l1043 06CC                     l1019 0626  
                   l1035 06AB                     l1027 06A3                     l1053 06ED  
                   l1045 06D1                     l1037 06AC                     l1029 06A4  
                   l1061 070D                     l1055 06F5                     l1047 06D7  
                   l1039 06AF                     l1071 0734                     l1063 0712  
                   l1057 06FA                     l1049 06E2                     l1073 073C  
                   l1065 0721                     l1075 0744                     l1067 0730  
                   l1059 0701                     _main 0701                     _revD 007D  
                   btemp 007E                     start 0000          __end_of___aldiv 07F2  
                  ?_main 0070                    _RCREG 001A                    _SPBRG 0099  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    _SSPIF 0063                    _TXREG 0019  
                  _blink 06B1                    main@i 0041                    status 0003  
                  wtemp0 007E          __initialization 07F2             __end_of_main 0755  
       __end_of_i2c_idle 0610         __end_of_i2c_init 062C         __end_of_i2c_read 0666  
       __end_of_i2c_stop 061E                   ??_main 003E                   ?_blink 0070  
                 _SSPADD 0093                   _TRISC3 043B                   _TRISC4 043C  
                 _SSPCON 0014                   _SSPBUF 0013       __size_of_i2c_start 0013  
     __size_of_i2c_write 0013                ??___aldiv 0078                   _buffer 0020  
       __end_of_usart_Tx 0603  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_blink 0701        __end_of_i2c_start 063F        __end_of_i2c_write 0652  
                ??_blink 0071               __pbssBANK0 0020             usart_Tx@send 0070  
              ?_i2c_idle 0070                ?_i2c_init 0070                ?_i2c_read 0070  
              ?_i2c_stop 0070               __pmaintext 0701           usart_init@BAUD 003A  
                _SSPCON2 0091                  _SSPSTAT 0094               ??_i2c_idle 0070  
             ??_i2c_init 0070               ??_i2c_read 0070               ??_i2c_stop 0070  
                ___aldiv 0755                ?_usart_Tx 0070                  __ptext1 0666  
                __ptext2 0755                  __ptext3 061E                  __ptext4 06B1  
                __ptext5 05F7                  __ptext6 063F                  __ptext7 0610  
                __ptext8 062C                  __ptext9 0652         ___aldiv@dividend 0074  
                clrloop0 05F0     end_of_initialization 07FC                _RCSTAbits 0018  
       ___aldiv@quotient 0036               ??_usart_Tx 0070            i2c_write@dato 0070  
              _TRISBbits 0086                _TRISCbits 0087                _TXSTAbits 0098  
             _usart_init 0666      start_initialization 07F2                _i2c_start 062C  
              _i2c_write 063F        __size_of_i2c_idle 000D        __size_of_i2c_init 000E  
      __size_of_i2c_read 0014        __size_of_i2c_stop 000E              __pbssCOMMON 007D  
              ___latbits 0002            __pcstackBANK0 0034               ?_i2c_start 0070  
             ?_i2c_write 0070              ?_usart_init 003A                 ?___aldiv 0070  
      __size_of_usart_Tx 000C           __size_of_blink 0050          ___aldiv@divisor 0070  
        ___aldiv@counter 0034                clear_ram0 05EF                 _PIE1bits 008C  
              blink@data 0074                 _PIR1bits 000C      __size_of_usart_init 004B  
            ??_i2c_start 0070              ??_i2c_write 0070                 _i2c_idle 0603  
               _i2c_init 061E                 _i2c_read 0652                 _i2c_stop 0610  
        _usart_init$1127 0079         __size_of___aldiv 009D                 __ptext10 0603  
          __size_of_main 0054                 _usart_Tx 05F7               _INTCONbits 000B  
           ??_usart_init 0079             ___aldiv@sign 0035       __end_of_usart_init 06B1  
            _SSPCON2bits 0091               _SSPCONbits 0014  
