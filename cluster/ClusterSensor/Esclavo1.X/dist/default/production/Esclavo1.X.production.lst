

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Sep 18 22:52:20 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  000E                     	;# 
   322  000F                     	;# 
   323  0010                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0014                     	;# 
   328  0015                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  001A                     	;# 
   335  001B                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001D                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  0081                     	;# 
   342  0085                     	;# 
   343  0086                     	;# 
   344  0087                     	;# 
   345  0088                     	;# 
   346  0089                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  008F                     	;# 
   351  0090                     	;# 
   352  0091                     	;# 
   353  0092                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  0105                     	;# 
   370  0107                     	;# 
   371  0108                     	;# 
   372  0109                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  0185                     	;# 
   379  0187                     	;# 
   380  0188                     	;# 
   381  0189                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384                           
   385                           	psect	strings
   386  052A                     __pstrings:
   387  052A                     stringtab:
   388  052A                     __stringtab:
   389  052A                     stringcode:	
   390                           ;	String table - string pointers are 1 byte each
   391                           
   392  052A                     stringdir:
   393  052A  3005               	movlw	high stringdir
   394  052B  008A               	movwf	10
   395  052C  0804               	movf	4,w
   396  052D  0A84               	incf	4,f
   397  052E  0782               	addwf	2,f
   398  052F                     __stringbase:
   399  052F  3400               	retlw	0
   400  0530                     __end_of__stringtab:
   401  0530                     _dpowers:
   402  0530  3401               	retlw	1
   403  0531  3400               	retlw	0
   404  0532  340A               	retlw	10
   405  0533  3400               	retlw	0
   406  0534  3464               	retlw	100
   407  0535  3400               	retlw	0
   408  0536  34E8               	retlw	232
   409  0537  3403               	retlw	3
   410  0538  3410               	retlw	16
   411  0539  3427               	retlw	39
   412  053A                     __end_of_dpowers:
   413  0006                     _PORTBbits	set	6
   414  0006                     _PORTB	set	6
   415  0008                     _PORTD	set	8
   416  001A                     _RCREG	set	26
   417  0019                     _TXREG	set	25
   418  0018                     _RCSTAbits	set	24
   419  000C                     _PIR1bits	set	12
   420  000B                     _INTCONbits	set	11
   421  0014                     _SSPCONbits	set	20
   422  0013                     _SSPBUF	set	19
   423  0014                     _SSPCON	set	20
   424  0063                     _SSPIF	set	99
   425  0086                     _TRISB	set	134
   426  0088                     _TRISD	set	136
   427  0098                     _TXSTAbits	set	152
   428  0099                     _SPBRG	set	153
   429  008C                     _PIE1bits	set	140
   430  0086                     _TRISBbits	set	134
   431  0094                     _SSPSTATbits	set	148
   432  0091                     _SSPCON2bits	set	145
   433  0091                     _SSPCON2	set	145
   434  0094                     _SSPSTAT	set	148
   435  0093                     _SSPADD	set	147
   436  0087                     _TRISCbits	set	135
   437  043C                     _TRISC4	set	1084
   438  043B                     _TRISC3	set	1083
   439  053A                     STR_5:
   440  053A  3425               	retlw	37	;'%'
   441  053B  3464               	retlw	100	;'d'
   442  053C  340A               	retlw	10
   443  053D  3400               	retlw	0
   444  053E                     STR_4:
   445  053E  3450               	retlw	80	;'P'
   446  053F  3431               	retlw	49	;'1'
   447  0540  3400               	retlw	0
   448  0541                     STR_3:
   449  0541  344D               	retlw	77	;'M'
   450  0542  3432               	retlw	50	;'2'
   451  0543  3400               	retlw	0
   452  0544                     STR_6:
   453  0544  3450               	retlw	80	;'P'
   454  0545  3432               	retlw	50	;'2'
   455  0546  3400               	retlw	0
   456  0547                     STR_1:
   457  0547  342C               	retlw	44	;','
   458  0548  3400               	retlw	0
   459  053A                     
   460                           	psect	cinit
   461  0015                     start_initialization:	
   462                           ; #config settings
   463                           
   464  0015                     __initialization:
   465                           
   466                           ; Clear objects allocated to BANK0
   467  0015  1283               	bcf	3,5	;RP0=0, select bank0
   468  0016  1303               	bcf	3,6	;RP1=0, select bank0
   469  0017  01CB               	clrf	__pbssBANK0& (0+127)
   470  0018  01CC               	clrf	(__pbssBANK0+1)& (0+127)
   471  0019  01CD               	clrf	(__pbssBANK0+2)& (0+127)
   472  001A  01CE               	clrf	(__pbssBANK0+3)& (0+127)
   473  001B  01CF               	clrf	(__pbssBANK0+4)& (0+127)
   474  001C  01D0               	clrf	(__pbssBANK0+5)& (0+127)
   475  001D  01D1               	clrf	(__pbssBANK0+6)& (0+127)
   476  001E  01D2               	clrf	(__pbssBANK0+7)& (0+127)
   477  001F  01D3               	clrf	(__pbssBANK0+8)& (0+127)
   478  0020  01D4               	clrf	(__pbssBANK0+9)& (0+127)
   479  0021  01D5               	clrf	(__pbssBANK0+10)& (0+127)
   480  0022  01D6               	clrf	(__pbssBANK0+11)& (0+127)
   481  0023  01D7               	clrf	(__pbssBANK0+12)& (0+127)
   482  0024  01D8               	clrf	(__pbssBANK0+13)& (0+127)
   483  0025  01D9               	clrf	(__pbssBANK0+14)& (0+127)
   484  0026                     end_of_initialization:	
   485                           ;End of C runtime variable initialization code
   486                           
   487  0026                     __end_of__initialization:
   488  0026  0183               	clrf	3
   489  0027  120A  118A  2B53   	ljmp	_main	;jump to C main() function
   490                           
   491                           	psect	bssBANK0
   492  004B                     __pbssBANK0:
   493  004B                     _dir:
   494  004B                     	ds	3
   495  004E                     strtok@sp:
   496  004E                     	ds	1
   497  004F                     _lectura:
   498  004F                     	ds	1
   499  0050                     _data:
   500  0050                     	ds	10
   501                           
   502                           	psect	cstackBANK1
   503  00A0                     __pcstackBANK1:
   504  00A0                     ??_main:
   505                           
   506                           ; 1 bytes @ 0x0
   507  00A0                     	ds	3
   508                           
   509                           	psect	cstackCOMMON
   510  0070                     __pcstackCOMMON:
   511  0070                     ?_i2c_idle:
   512  0070                     ??_i2c_idle:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_get1:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ??_get1:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?_strchr:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_i2c_init:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_i2c_start:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ??_i2c_start:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_i2c_stop:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ??_i2c_stop:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?_i2c_read:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ??_i2c_read:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_i2c_write:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ??_i2c_write:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_usart_Tx:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ??_usart_Tx:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_usart_TxStr:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_usart_Interrupt:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ?_recivedCMD:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ??_recivedCMD:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ?_token:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_myISR:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_main:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_strcmp:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?___lwdiv:	
   582                           ; 2 bytes @ 0x0
   583                           
   584  0070                     i2c_write@dato:	
   585                           ; 2 bytes @ 0x0
   586                           
   587  0070                     usart_Tx@send:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     strcmp@s2:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ___lwdiv@divisor:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     strchr@chr:	
   597                           ; 2 bytes @ 0x0
   598                           
   599                           
   600                           ; 2 bytes @ 0x0
   601  0070                     	ds	1
   602  0071                     ??_usart_TxStr:
   603                           
   604                           ; 1 bytes @ 0x1
   605  0071                     	ds	1
   606  0072                     ??_strcmp:
   607  0072                     ??_strchr:	
   608                           ; 1 bytes @ 0x2
   609                           
   610  0072                     usart_TxStr@str:	
   611                           ; 1 bytes @ 0x2
   612                           
   613  0072                     recivedCMD@cmd:	
   614                           ; 1 bytes @ 0x2
   615                           
   616  0072                     strchr@ptr:	
   617                           ; 1 bytes @ 0x2
   618                           
   619  0072                     ___lwdiv@dividend:	
   620                           ; 1 bytes @ 0x2
   621                           
   622                           
   623                           ; 2 bytes @ 0x2
   624  0072                     	ds	1
   625  0073                     ?_strspn:
   626  0073                     ?_strcspn:	
   627                           ; 2 bytes @ 0x3
   628                           
   629  0073                     recivedCMD@i:	
   630                           ; 2 bytes @ 0x3
   631                           
   632  0073                     strcspn@s2:	
   633                           ; 1 bytes @ 0x3
   634                           
   635  0073                     strspn@s2:	
   636                           ; 1 bytes @ 0x3
   637                           
   638                           
   639                           ; 1 bytes @ 0x3
   640  0073                     	ds	1
   641  0074                     ??___lwdiv:
   642  0074                     recivedCMD@j:	
   643                           ; 1 bytes @ 0x4
   644                           
   645                           
   646                           ; 1 bytes @ 0x4
   647  0074                     	ds	1
   648  0075                     ??_strspn:
   649  0075                     ??_strcspn:	
   650                           ; 1 bytes @ 0x5
   651                           
   652  0075                     strcmp@r:	
   653                           ; 1 bytes @ 0x5
   654                           
   655  0075                     ___lwdiv@quotient:	
   656                           ; 1 bytes @ 0x5
   657                           
   658                           
   659                           ; 2 bytes @ 0x5
   660  0075                     	ds	1
   661  0076                     strcmp@s1:
   662                           
   663                           ; 1 bytes @ 0x6
   664  0076                     	ds	1
   665  0077                     ___lwdiv@counter:
   666  0077                     strcspn@i:	
   667                           ; 1 bytes @ 0x7
   668                           
   669  0077                     strspn@i:	
   670                           ; 2 bytes @ 0x7
   671                           
   672                           
   673                           ; 2 bytes @ 0x7
   674  0077                     	ds	1
   675  0078                     ?___lwmod:
   676  0078                     ___lwmod@divisor:	
   677                           ; 2 bytes @ 0x8
   678                           
   679                           
   680                           ; 2 bytes @ 0x8
   681  0078                     	ds	1
   682  0079                     strcspn@s1:
   683  0079                     strspn@s1:	
   684                           ; 1 bytes @ 0x9
   685                           
   686                           
   687                           ; 1 bytes @ 0x9
   688  0079                     	ds	1
   689  007A                     ?_strtok:
   690  007A                     strtok@s2:	
   691                           ; 1 bytes @ 0xA
   692                           
   693  007A                     ___lwmod@dividend:	
   694                           ; 1 bytes @ 0xA
   695                           
   696                           
   697                           ; 2 bytes @ 0xA
   698  007A                     	ds	1
   699  007B                     ??_strtok:
   700                           
   701                           ; 1 bytes @ 0xB
   702  007B                     	ds	1
   703  007C                     ??___lwmod:
   704                           
   705                           ; 1 bytes @ 0xC
   706  007C                     	ds	1
   707  007D                     ___lwmod@counter:
   708  007D                     strtok@s1:	
   709                           ; 1 bytes @ 0xD
   710                           
   711                           
   712                           ; 1 bytes @ 0xD
   713  007D                     	ds	1
   714                           
   715                           	psect	cstackBANK0
   716  0020                     __pcstackBANK0:
   717  0020                     ??_token:
   718  0020                     ?_sprintf:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0020                     sprintf@f:	
   722                           ; 2 bytes @ 0x0
   723                           
   724                           
   725                           ; 1 bytes @ 0x0
   726  0020                     	ds	2
   727  0022                     token@i:
   728                           
   729                           ; 2 bytes @ 0x2
   730  0022                     	ds	1
   731  0023                     ??_sprintf:
   732                           
   733                           ; 1 bytes @ 0x3
   734  0023                     	ds	1
   735  0024                     token@cmd:
   736                           
   737                           ; 1 bytes @ 0x4
   738  0024                     	ds	1
   739  0025                     token@tok:
   740                           
   741                           ; 1 bytes @ 0x5
   742  0025                     	ds	1
   743  0026                     sprintf@ap:
   744                           
   745                           ; 1 bytes @ 0x6
   746  0026                     	ds	1
   747  0027                     sprintf@flag:
   748                           
   749                           ; 1 bytes @ 0x7
   750  0027                     	ds	1
   751  0028                     sprintf@prec:
   752                           
   753                           ; 1 bytes @ 0x8
   754  0028                     	ds	1
   755  0029                     sprintf@val:
   756                           
   757                           ; 2 bytes @ 0x9
   758  0029                     	ds	2
   759  002B                     sprintf@sp:
   760                           
   761                           ; 1 bytes @ 0xB
   762  002B                     	ds	1
   763  002C                     sprintf@c:
   764                           
   765                           ; 1 bytes @ 0xC
   766  002C                     	ds	1
   767  002D                     ??_myISR:
   768                           
   769                           ; 1 bytes @ 0xD
   770  002D                     	ds	7
   771  0034                     ??_i2c_init:
   772  0034                     ??_usart_Interrupt:	
   773                           ; 1 bytes @ 0x14
   774                           
   775  0034                     ?___aldiv:	
   776                           ; 1 bytes @ 0x14
   777                           
   778  0034                     ___aldiv@divisor:	
   779                           ; 4 bytes @ 0x14
   780                           
   781                           
   782                           ; 4 bytes @ 0x14
   783  0034                     	ds	4
   784  0038                     ___aldiv@dividend:
   785                           
   786                           ; 4 bytes @ 0x18
   787  0038                     	ds	4
   788  003C                     ??___aldiv:
   789                           
   790                           ; 1 bytes @ 0x1C
   791  003C                     	ds	1
   792  003D                     ___aldiv@counter:
   793                           
   794                           ; 1 bytes @ 0x1D
   795  003D                     	ds	1
   796  003E                     ___aldiv@sign:
   797                           
   798                           ; 1 bytes @ 0x1E
   799  003E                     	ds	1
   800  003F                     ___aldiv@quotient:
   801                           
   802                           ; 4 bytes @ 0x1F
   803  003F                     	ds	4
   804  0043                     ?_usart_init:
   805  0043                     usart_init@BAUD:	
   806                           ; 1 bytes @ 0x23
   807                           
   808                           
   809                           ; 4 bytes @ 0x23
   810  0043                     	ds	4
   811  0047                     ??_usart_init:
   812  0047                     _usart_init$1340:	
   813                           ; 1 bytes @ 0x27
   814                           
   815                           
   816                           ; 4 bytes @ 0x27
   817  0047                     	ds	4
   818                           
   819                           	psect	maintext
   820  0353                     __pmaintext:	
   821 ;;
   822 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   823 ;;
   824 ;; *************** function _main *****************
   825 ;; Defined at:
   826 ;;		line 57 in file "main.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;		None
   831 ;; Return value:  Size  Location     Type
   832 ;;                  1    wreg      void 
   833 ;; Registers used:
   834 ;;		wreg, status,2, status,0, pclath, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : B00/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   840 ;;      Params:         0       0       0       0       0
   841 ;;      Locals:         0       0       0       0       0
   842 ;;      Temps:          0       0       3       0       0
   843 ;;      Totals:         0       0       3       0       0
   844 ;;Total ram usage:        3 bytes
   845 ;; Hardware stack levels required when called:    8
   846 ;; This function calls:
   847 ;;		_i2c_init
   848 ;;		_usart_Interrupt
   849 ;;		_usart_init
   850 ;; This function is called by:
   851 ;;		Startup code after reset
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           
   856                           ;psect for function _main
   857  0353                     _main:
   858  0353                     l1761:	
   859                           ;incstack = 0
   860                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   861                           
   862                           
   863                           ;main.c: 58:     TRISD = 0x00;
   864  0353  1683               	bsf	3,5	;RP0=1, select bank1
   865  0354  1303               	bcf	3,6	;RP1=0, select bank1
   866  0355  0188               	clrf	8	;volatile
   867                           
   868                           ;main.c: 59:     PORTD = 0x00;
   869  0356  1283               	bcf	3,5	;RP0=0, select bank0
   870  0357  1303               	bcf	3,6	;RP1=0, select bank0
   871  0358  0188               	clrf	8	;volatile
   872                           
   873                           ;main.c: 60:     TRISB = 0x00;
   874  0359  1683               	bsf	3,5	;RP0=1, select bank1
   875  035A  1303               	bcf	3,6	;RP1=0, select bank1
   876  035B  0186               	clrf	6	;volatile
   877                           
   878                           ;main.c: 61:     PORTB = 0x00;
   879  035C  1283               	bcf	3,5	;RP0=0, select bank0
   880  035D  1303               	bcf	3,6	;RP1=0, select bank0
   881  035E  0186               	clrf	6	;volatile
   882  035F                     l1763:
   883                           
   884                           ;main.c: 62:     usart_init(9600);
   885  035F  3000               	movlw	0
   886  0360  00C6               	movwf	usart_init@BAUD+3
   887  0361  3000               	movlw	0
   888  0362  00C5               	movwf	usart_init@BAUD+2
   889  0363  3025               	movlw	37
   890  0364  00C4               	movwf	usart_init@BAUD+1
   891  0365  3080               	movlw	128
   892  0366  00C3               	movwf	usart_init@BAUD
   893  0367  120A  118A  2304  120A  118A  	fcall	_usart_init
   894  036C                     l1765:
   895                           
   896                           ;main.c: 63:     usart_Interrupt();
   897  036C  120A  118A  25CF  120A  118A  	fcall	_usart_Interrupt
   898  0371                     l1767:
   899                           
   900                           ;main.c: 64:     i2c_init();
   901  0371  120A  118A  259A  120A  118A  	fcall	_i2c_init
   902  0376                     l1769:
   903                           
   904                           ;main.c: 67:         PORTBbits.RB0 = 1;
   905  0376  1283               	bcf	3,5	;RP0=0, select bank0
   906  0377  1303               	bcf	3,6	;RP1=0, select bank0
   907  0378  1406               	bsf	6,0	;volatile
   908  0379                     l1771:
   909                           
   910                           ;main.c: 68:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   911  0379  301A               	movlw	26
   912  037A  1683               	bsf	3,5	;RP0=1, select bank1
   913  037B  1303               	bcf	3,6	;RP1=0, select bank1
   914  037C  00A2               	movwf	(??_main^(0+128)+2)
   915  037D  305E               	movlw	94
   916  037E  00A1               	movwf	(??_main^(0+128)+1)
   917  037F  306D               	movlw	109
   918  0380  00A0               	movwf	??_main^(0+128)
   919  0381                     u1317:
   920  0381  0BA0               	decfsz	??_main^(0+128),f
   921  0382  2B81               	goto	u1317
   922  0383  0BA1               	decfsz	(??_main^(0+128)+1),f
   923  0384  2B81               	goto	u1317
   924  0385  0BA2               	decfsz	(??_main^(0+128)+2),f
   925  0386  2B81               	goto	u1317
   926  0387  2B88               	nop2
   927  0388                     l1773:
   928                           
   929                           ;main.c: 70:         PORTBbits.RB0 = 0;
   930  0388  1283               	bcf	3,5	;RP0=0, select bank0
   931  0389  1303               	bcf	3,6	;RP1=0, select bank0
   932  038A  1006               	bcf	6,0	;volatile
   933  038B                     l1775:
   934                           
   935                           ;main.c: 71:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   936  038B  301A               	movlw	26
   937  038C  1683               	bsf	3,5	;RP0=1, select bank1
   938  038D  1303               	bcf	3,6	;RP1=0, select bank1
   939  038E  00A2               	movwf	(??_main^(0+128)+2)
   940  038F  305E               	movlw	94
   941  0390  00A1               	movwf	(??_main^(0+128)+1)
   942  0391  306D               	movlw	109
   943  0392  00A0               	movwf	??_main^(0+128)
   944  0393                     u1327:
   945  0393  0BA0               	decfsz	??_main^(0+128),f
   946  0394  2B93               	goto	u1327
   947  0395  0BA1               	decfsz	(??_main^(0+128)+1),f
   948  0396  2B93               	goto	u1327
   949  0397  0BA2               	decfsz	(??_main^(0+128)+2),f
   950  0398  2B93               	goto	u1327
   951  0399  2B9A               	nop2
   952  039A  2B76               	goto	l1769
   953  039B  120A  118A  2812   	ljmp	start
   954  039E                     __end_of_main:
   955                           
   956                           	psect	text1
   957  0304                     __ptext1:	
   958 ;; *************** function _usart_init *****************
   959 ;; Defined at:
   960 ;;		line 4 in file "usart.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;  BAUD            4   35[BANK0 ] long 
   963 ;; Auto vars:     Size  Location     Type
   964 ;;		None
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      void 
   967 ;; Registers used:
   968 ;;		wreg, status,2, status,0, pclath, cstack
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   974 ;;      Params:         0       4       0       0       0
   975 ;;      Locals:         0       4       0       0       0
   976 ;;      Temps:          0       0       0       0       0
   977 ;;      Totals:         0       8       0       0       0
   978 ;;Total ram usage:        8 bytes
   979 ;; Hardware stack levels used:    1
   980 ;; Hardware stack levels required when called:    7
   981 ;; This function calls:
   982 ;;		___aldiv
   983 ;; This function is called by:
   984 ;;		_main
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           
   989                           ;psect for function _usart_init
   990  0304                     _usart_init:
   991  0304                     l1549:	
   992                           ;incstack = 0
   993                           ; Regs used in _usart_init: [wreg+status,2+status,0+pclath+cstack]
   994                           
   995                           
   996                           ;usart.c: 6:     TRISBbits.TRISB1 = 1;
   997  0304  1683               	bsf	3,5	;RP0=1, select bank1
   998  0305  1303               	bcf	3,6	;RP1=0, select bank1
   999  0306  1486               	bsf	6,1	;volatile
  1000                           
  1001                           ;usart.c: 7:     TRISBbits.TRISB2 = 0;
  1002  0307  1106               	bcf	6,2	;volatile
  1003  0308                     l1551:
  1004                           
  1005                           ;usart.c: 8:     SPBRG = (unsigned char)(((20000000/BAUD)/64) - 1);
  1006  0308  1283               	bcf	3,5	;RP0=0, select bank0
  1007  0309  1303               	bcf	3,6	;RP1=0, select bank0
  1008  030A  0846               	movf	usart_init@BAUD+3,w
  1009  030B  00B7               	movwf	___aldiv@divisor+3
  1010  030C  0845               	movf	usart_init@BAUD+2,w
  1011  030D  00B6               	movwf	___aldiv@divisor+2
  1012  030E  0844               	movf	usart_init@BAUD+1,w
  1013  030F  00B5               	movwf	___aldiv@divisor+1
  1014  0310  0843               	movf	usart_init@BAUD,w
  1015  0311  00B4               	movwf	___aldiv@divisor
  1016  0312  3001               	movlw	1
  1017  0313  00BB               	movwf	___aldiv@dividend+3
  1018  0314  3031               	movlw	49
  1019  0315  00BA               	movwf	___aldiv@dividend+2
  1020  0316  302D               	movlw	45
  1021  0317  00B9               	movwf	___aldiv@dividend+1
  1022  0318  3000               	movlw	0
  1023  0319  00B8               	movwf	___aldiv@dividend
  1024  031A  120A  118A  2215  120A  118A  	fcall	___aldiv
  1025  031F  1283               	bcf	3,5	;RP0=0, select bank0
  1026  0320  1303               	bcf	3,6	;RP1=0, select bank0
  1027  0321  0837               	movf	?___aldiv+3,w
  1028  0322  00CA               	movwf	_usart_init$1340+3
  1029  0323  0836               	movf	?___aldiv+2,w
  1030  0324  00C9               	movwf	_usart_init$1340+2
  1031  0325  0835               	movf	?___aldiv+1,w
  1032  0326  00C8               	movwf	_usart_init$1340+1
  1033  0327  0834               	movf	?___aldiv,w
  1034  0328  00C7               	movwf	_usart_init$1340
  1035                           
  1036                           ;usart.c: 8:     SPBRG = (unsigned char)(((20000000/BAUD)/64) - 1);
  1037  0329  3000               	movlw	0
  1038  032A  00B7               	movwf	___aldiv@divisor+3
  1039  032B  3000               	movlw	0
  1040  032C  00B6               	movwf	___aldiv@divisor+2
  1041  032D  3000               	movlw	0
  1042  032E  00B5               	movwf	___aldiv@divisor+1
  1043  032F  3040               	movlw	64
  1044  0330  00B4               	movwf	___aldiv@divisor
  1045  0331  084A               	movf	_usart_init$1340+3,w
  1046  0332  00BB               	movwf	___aldiv@dividend+3
  1047  0333  0849               	movf	_usart_init$1340+2,w
  1048  0334  00BA               	movwf	___aldiv@dividend+2
  1049  0335  0848               	movf	_usart_init$1340+1,w
  1050  0336  00B9               	movwf	___aldiv@dividend+1
  1051  0337  0847               	movf	_usart_init$1340,w
  1052  0338  00B8               	movwf	___aldiv@dividend
  1053  0339  120A  118A  2215  120A  118A  	fcall	___aldiv
  1054  033E  1283               	bcf	3,5	;RP0=0, select bank0
  1055  033F  1303               	bcf	3,6	;RP1=0, select bank0
  1056  0340  0834               	movf	?___aldiv,w
  1057  0341  3EFF               	addlw	255
  1058  0342  1683               	bsf	3,5	;RP0=1, select bank1
  1059  0343  1303               	bcf	3,6	;RP1=0, select bank1
  1060  0344  0099               	movwf	25	;volatile
  1061  0345                     l1553:
  1062                           
  1063                           ;usart.c: 13:     RCSTAbits.SPEN = 1;
  1064  0345  1283               	bcf	3,5	;RP0=0, select bank0
  1065  0346  1303               	bcf	3,6	;RP1=0, select bank0
  1066  0347  1798               	bsf	24,7	;volatile
  1067  0348                     l1555:
  1068                           
  1069                           ;usart.c: 14:     TXSTAbits.SYNC = 0;
  1070  0348  1683               	bsf	3,5	;RP0=1, select bank1
  1071  0349  1303               	bcf	3,6	;RP1=0, select bank1
  1072  034A  1218               	bcf	24,4	;volatile
  1073  034B                     l1557:
  1074                           
  1075                           ;usart.c: 15:     TXSTAbits.TX9 = 0;
  1076  034B  1318               	bcf	24,6	;volatile
  1077  034C                     l1559:
  1078                           
  1079                           ;usart.c: 16:     TXSTAbits.TXEN = 1;
  1080  034C  1698               	bsf	24,5	;volatile
  1081  034D                     l1561:
  1082                           
  1083                           ;usart.c: 17:     RCSTAbits.RX9 = 0;
  1084  034D  1283               	bcf	3,5	;RP0=0, select bank0
  1085  034E  1303               	bcf	3,6	;RP1=0, select bank0
  1086  034F  1318               	bcf	24,6	;volatile
  1087  0350                     l1563:
  1088                           
  1089                           ;usart.c: 18:     RCSTAbits.CREN = 1;
  1090  0350  1618               	bsf	24,4	;volatile
  1091  0351                     l1565:
  1092                           
  1093                           ;usart.c: 19:     RCSTAbits.SPEN = 1;
  1094  0351  1798               	bsf	24,7	;volatile
  1095  0352                     l133:
  1096  0352  0008               	return
  1097  0353                     __end_of_usart_init:
  1098                           
  1099                           	psect	text2
  1100  0215                     __ptext2:	
  1101 ;; *************** function ___aldiv *****************
  1102 ;; Defined at:
  1103 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;  divisor         4   20[BANK0 ] long 
  1106 ;;  dividend        4   24[BANK0 ] long 
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  quotient        4   31[BANK0 ] long 
  1109 ;;  sign            1   30[BANK0 ] unsigned char 
  1110 ;;  counter         1   29[BANK0 ] unsigned char 
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  4   20[BANK0 ] long 
  1113 ;; Registers used:
  1114 ;;		wreg, status,2, status,0
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1120 ;;      Params:         0       8       0       0       0
  1121 ;;      Locals:         0       6       0       0       0
  1122 ;;      Temps:          0       1       0       0       0
  1123 ;;      Totals:         0      15       0       0       0
  1124 ;;Total ram usage:       15 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; Hardware stack levels required when called:    6
  1127 ;; This function calls:
  1128 ;;		Nothing
  1129 ;; This function is called by:
  1130 ;;		_usart_init
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           
  1135                           ;psect for function ___aldiv
  1136  0215                     ___aldiv:
  1137  0215                     l1433:	
  1138                           ;incstack = 0
  1139                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1140                           
  1141  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1142  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1143  0217  01BE               	clrf	___aldiv@sign
  1144  0218                     l1435:
  1145  0218  1FB7               	btfss	___aldiv@divisor+3,7
  1146  0219  2A1B               	goto	u811
  1147  021A  2A1C               	goto	u810
  1148  021B                     u811:
  1149  021B  2A29               	goto	l416
  1150  021C                     u810:
  1151  021C                     l1437:
  1152  021C  09B4               	comf	___aldiv@divisor,f
  1153  021D  09B5               	comf	___aldiv@divisor+1,f
  1154  021E  09B6               	comf	___aldiv@divisor+2,f
  1155  021F  09B7               	comf	___aldiv@divisor+3,f
  1156  0220  0AB4               	incf	___aldiv@divisor,f
  1157  0221  1903               	skipnz
  1158  0222  0AB5               	incf	___aldiv@divisor+1,f
  1159  0223  1903               	skipnz
  1160  0224  0AB6               	incf	___aldiv@divisor+2,f
  1161  0225  1903               	skipnz
  1162  0226  0AB7               	incf	___aldiv@divisor+3,f
  1163  0227  01BE               	clrf	___aldiv@sign
  1164  0228  0ABE               	incf	___aldiv@sign,f
  1165  0229                     l416:
  1166  0229  1FBB               	btfss	___aldiv@dividend+3,7
  1167  022A  2A2C               	goto	u821
  1168  022B  2A2D               	goto	u820
  1169  022C                     u821:
  1170  022C  2A3C               	goto	l1443
  1171  022D                     u820:
  1172  022D                     l1439:
  1173  022D  09B8               	comf	___aldiv@dividend,f
  1174  022E  09B9               	comf	___aldiv@dividend+1,f
  1175  022F  09BA               	comf	___aldiv@dividend+2,f
  1176  0230  09BB               	comf	___aldiv@dividend+3,f
  1177  0231  0AB8               	incf	___aldiv@dividend,f
  1178  0232  1903               	skipnz
  1179  0233  0AB9               	incf	___aldiv@dividend+1,f
  1180  0234  1903               	skipnz
  1181  0235  0ABA               	incf	___aldiv@dividend+2,f
  1182  0236  1903               	skipnz
  1183  0237  0ABB               	incf	___aldiv@dividend+3,f
  1184  0238                     l1441:
  1185  0238  3001               	movlw	1
  1186  0239  00BC               	movwf	??___aldiv
  1187  023A  083C               	movf	??___aldiv,w
  1188  023B  06BE               	xorwf	___aldiv@sign,f
  1189  023C                     l1443:
  1190  023C  3000               	movlw	0
  1191  023D  00C2               	movwf	___aldiv@quotient+3
  1192  023E  3000               	movlw	0
  1193  023F  00C1               	movwf	___aldiv@quotient+2
  1194  0240  3000               	movlw	0
  1195  0241  00C0               	movwf	___aldiv@quotient+1
  1196  0242  3000               	movlw	0
  1197  0243  00BF               	movwf	___aldiv@quotient
  1198  0244                     l1445:
  1199  0244  0837               	movf	___aldiv@divisor+3,w
  1200  0245  0436               	iorwf	___aldiv@divisor+2,w
  1201  0246  0435               	iorwf	___aldiv@divisor+1,w
  1202  0247  0434               	iorwf	___aldiv@divisor,w
  1203  0248  1903               	skipnz
  1204  0249  2A4B               	goto	u831
  1205  024A  2A4C               	goto	u830
  1206  024B                     u831:
  1207  024B  2A99               	goto	l1465
  1208  024C                     u830:
  1209  024C                     l1447:
  1210  024C  01BD               	clrf	___aldiv@counter
  1211  024D  0ABD               	incf	___aldiv@counter,f
  1212  024E  2A5C               	goto	l1451
  1213  024F                     l1449:
  1214  024F  3001               	movlw	1
  1215  0250  00BC               	movwf	??___aldiv
  1216  0251                     u845:
  1217  0251  1003               	clrc
  1218  0252  0DB4               	rlf	___aldiv@divisor,f
  1219  0253  0DB5               	rlf	___aldiv@divisor+1,f
  1220  0254  0DB6               	rlf	___aldiv@divisor+2,f
  1221  0255  0DB7               	rlf	___aldiv@divisor+3,f
  1222  0256  0BBC               	decfsz	??___aldiv,f
  1223  0257  2A51               	goto	u845
  1224  0258  3001               	movlw	1
  1225  0259  00BC               	movwf	??___aldiv
  1226  025A  083C               	movf	??___aldiv,w
  1227  025B  07BD               	addwf	___aldiv@counter,f
  1228  025C                     l1451:
  1229  025C  1FB7               	btfss	___aldiv@divisor+3,7
  1230  025D  2A5F               	goto	u851
  1231  025E  2A60               	goto	u850
  1232  025F                     u851:
  1233  025F  2A4F               	goto	l1449
  1234  0260                     u850:
  1235  0260                     l1453:
  1236  0260  3001               	movlw	1
  1237  0261  00BC               	movwf	??___aldiv
  1238  0262                     u865:
  1239  0262  1003               	clrc
  1240  0263  0DBF               	rlf	___aldiv@quotient,f
  1241  0264  0DC0               	rlf	___aldiv@quotient+1,f
  1242  0265  0DC1               	rlf	___aldiv@quotient+2,f
  1243  0266  0DC2               	rlf	___aldiv@quotient+3,f
  1244  0267  0BBC               	decfsz	??___aldiv,f
  1245  0268  2A62               	goto	u865
  1246  0269                     l1455:
  1247  0269  0837               	movf	___aldiv@divisor+3,w
  1248  026A  023B               	subwf	___aldiv@dividend+3,w
  1249  026B  1D03               	skipz
  1250  026C  2A77               	goto	u875
  1251  026D  0836               	movf	___aldiv@divisor+2,w
  1252  026E  023A               	subwf	___aldiv@dividend+2,w
  1253  026F  1D03               	skipz
  1254  0270  2A77               	goto	u875
  1255  0271  0835               	movf	___aldiv@divisor+1,w
  1256  0272  0239               	subwf	___aldiv@dividend+1,w
  1257  0273  1D03               	skipz
  1258  0274  2A77               	goto	u875
  1259  0275  0834               	movf	___aldiv@divisor,w
  1260  0276  0238               	subwf	___aldiv@dividend,w
  1261  0277                     u875:
  1262  0277  1C03               	skipc
  1263  0278  2A7A               	goto	u871
  1264  0279  2A7B               	goto	u870
  1265  027A                     u871:
  1266  027A  2A8A               	goto	l1461
  1267  027B                     u870:
  1268  027B                     l1457:
  1269  027B  0834               	movf	___aldiv@divisor,w
  1270  027C  02B8               	subwf	___aldiv@dividend,f
  1271  027D  0835               	movf	___aldiv@divisor+1,w
  1272  027E  1C03               	skipc
  1273  027F  0F35               	incfsz	___aldiv@divisor+1,w
  1274  0280  02B9               	subwf	___aldiv@dividend+1,f
  1275  0281  0836               	movf	___aldiv@divisor+2,w
  1276  0282  1C03               	skipc
  1277  0283  0F36               	incfsz	___aldiv@divisor+2,w
  1278  0284  02BA               	subwf	___aldiv@dividend+2,f
  1279  0285  0837               	movf	___aldiv@divisor+3,w
  1280  0286  1C03               	skipc
  1281  0287  0F37               	incfsz	___aldiv@divisor+3,w
  1282  0288  02BB               	subwf	___aldiv@dividend+3,f
  1283  0289                     l1459:
  1284  0289  143F               	bsf	___aldiv@quotient,0
  1285  028A                     l1461:
  1286  028A  3001               	movlw	1
  1287  028B                     u885:
  1288  028B  1003               	clrc
  1289  028C  0CB7               	rrf	___aldiv@divisor+3,f
  1290  028D  0CB6               	rrf	___aldiv@divisor+2,f
  1291  028E  0CB5               	rrf	___aldiv@divisor+1,f
  1292  028F  0CB4               	rrf	___aldiv@divisor,f
  1293  0290  3EFF               	addlw	-1
  1294  0291  1D03               	skipz
  1295  0292  2A8B               	goto	u885
  1296  0293                     l1463:
  1297  0293  3001               	movlw	1
  1298  0294  02BD               	subwf	___aldiv@counter,f
  1299  0295  1D03               	btfss	3,2
  1300  0296  2A98               	goto	u891
  1301  0297  2A99               	goto	u890
  1302  0298                     u891:
  1303  0298  2A60               	goto	l1453
  1304  0299                     u890:
  1305  0299                     l1465:
  1306  0299  083E               	movf	___aldiv@sign,w
  1307  029A  1903               	btfsc	3,2
  1308  029B  2A9D               	goto	u901
  1309  029C  2A9E               	goto	u900
  1310  029D                     u901:
  1311  029D  2AA9               	goto	l1469
  1312  029E                     u900:
  1313  029E                     l1467:
  1314  029E  09BF               	comf	___aldiv@quotient,f
  1315  029F  09C0               	comf	___aldiv@quotient+1,f
  1316  02A0  09C1               	comf	___aldiv@quotient+2,f
  1317  02A1  09C2               	comf	___aldiv@quotient+3,f
  1318  02A2  0ABF               	incf	___aldiv@quotient,f
  1319  02A3  1903               	skipnz
  1320  02A4  0AC0               	incf	___aldiv@quotient+1,f
  1321  02A5  1903               	skipnz
  1322  02A6  0AC1               	incf	___aldiv@quotient+2,f
  1323  02A7  1903               	skipnz
  1324  02A8  0AC2               	incf	___aldiv@quotient+3,f
  1325  02A9                     l1469:
  1326  02A9  0842               	movf	___aldiv@quotient+3,w
  1327  02AA  00B7               	movwf	?___aldiv+3
  1328  02AB  0841               	movf	___aldiv@quotient+2,w
  1329  02AC  00B6               	movwf	?___aldiv+2
  1330  02AD  0840               	movf	___aldiv@quotient+1,w
  1331  02AE  00B5               	movwf	?___aldiv+1
  1332  02AF  083F               	movf	___aldiv@quotient,w
  1333  02B0  00B4               	movwf	?___aldiv
  1334  02B1                     l426:
  1335  02B1  0008               	return
  1336  02B2                     __end_of___aldiv:
  1337                           
  1338                           	psect	text3
  1339  05CF                     __ptext3:	
  1340 ;; *************** function _usart_Interrupt *****************
  1341 ;; Defined at:
  1342 ;;		line 41 in file "usart.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;		None
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		None
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1356 ;;      Params:         0       0       0       0       0
  1357 ;;      Locals:         0       0       0       0       0
  1358 ;;      Temps:          0       0       0       0       0
  1359 ;;      Totals:         0       0       0       0       0
  1360 ;;Total ram usage:        0 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; Hardware stack levels required when called:    6
  1363 ;; This function calls:
  1364 ;;		Nothing
  1365 ;; This function is called by:
  1366 ;;		_main
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           
  1371                           ;psect for function _usart_Interrupt
  1372  05CF                     _usart_Interrupt:
  1373  05CF                     l1575:	
  1374                           ;incstack = 0
  1375                           ; Regs used in _usart_Interrupt: []
  1376                           
  1377                           
  1378                           ;usart.c: 42:     PIR1bits.RCIF = 0;
  1379  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  1380  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  1381  05D1  128C               	bcf	12,5	;volatile
  1382                           
  1383                           ;usart.c: 43:     PIE1bits.RCIE = 1;
  1384  05D2  1683               	bsf	3,5	;RP0=1, select bank1
  1385  05D3  1303               	bcf	3,6	;RP1=0, select bank1
  1386  05D4  168C               	bsf	12,5	;volatile
  1387                           
  1388                           ;usart.c: 44:     INTCONbits.PEIE = 1;
  1389  05D5  170B               	bsf	11,6	;volatile
  1390                           
  1391                           ;usart.c: 45:     INTCONbits.GIE = 1;
  1392  05D6  178B               	bsf	11,7	;volatile
  1393  05D7                     l151:
  1394  05D7  0008               	return
  1395  05D8                     __end_of_usart_Interrupt:
  1396                           
  1397                           	psect	text4
  1398  059A                     __ptext4:	
  1399 ;; *************** function _i2c_init *****************
  1400 ;; Defined at:
  1401 ;;		line 10 in file "i2c.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;		None
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;		None
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  1    wreg      void 
  1408 ;; Registers used:
  1409 ;;		wreg, status,2
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1415 ;;      Params:         0       0       0       0       0
  1416 ;;      Locals:         0       0       0       0       0
  1417 ;;      Temps:          0       0       0       0       0
  1418 ;;      Totals:         0       0       0       0       0
  1419 ;;Total ram usage:        0 bytes
  1420 ;; Hardware stack levels used:    1
  1421 ;; Hardware stack levels required when called:    6
  1422 ;; This function calls:
  1423 ;;		Nothing
  1424 ;; This function is called by:
  1425 ;;		_main
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           
  1430                           ;psect for function _i2c_init
  1431  059A                     _i2c_init:
  1432  059A                     l1521:	
  1433                           ;incstack = 0
  1434                           ; Regs used in _i2c_init: [wreg+status,2]
  1435                           
  1436                           
  1437                           ;i2c.c: 12:     TRISCbits.TRISC3 = 1;
  1438  059A  1683               	bsf	3,5	;RP0=1, select bank1
  1439  059B  1303               	bcf	3,6	;RP1=0, select bank1
  1440  059C  1587               	bsf	7,3	;volatile
  1441                           
  1442                           ;i2c.c: 13:     TRISCbits.TRISC4 = 1;
  1443  059D  1607               	bsf	7,4	;volatile
  1444  059E                     l1523:
  1445                           
  1446                           ;i2c.c: 14:     SSPADD = 0x09;
  1447  059E  3009               	movlw	9
  1448  059F  0093               	movwf	19	;volatile
  1449                           
  1450                           ;i2c.c: 15:     SSPSTAT = 0x80;
  1451  05A0  3080               	movlw	128
  1452  05A1  0094               	movwf	20	;volatile
  1453  05A2                     l1525:
  1454                           
  1455                           ;i2c.c: 16:     SSPCON2 = 0x00;
  1456  05A2  0191               	clrf	17	;volatile
  1457  05A3                     l1527:
  1458                           
  1459                           ;i2c.c: 17:     SSPCON = 0x28;
  1460  05A3  3028               	movlw	40
  1461  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  1462  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  1463  05A6  0094               	movwf	20	;volatile
  1464  05A7                     l41:
  1465  05A7  0008               	return
  1466  05A8                     __end_of_i2c_init:
  1467                           
  1468                           	psect	text5
  1469  002A                     __ptext5:	
  1470 ;; *************** function _myISR *****************
  1471 ;; Defined at:
  1472 ;;		line 14 in file "main.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         0       0       0       0       0
  1487 ;;      Locals:         0       0       0       0       0
  1488 ;;      Temps:          0       7       0       0       0
  1489 ;;      Totals:         0       7       0       0       0
  1490 ;;Total ram usage:        7 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; Hardware stack levels required when called:    5
  1493 ;; This function calls:
  1494 ;;		_i2c_read
  1495 ;;		_i2c_start
  1496 ;;		_i2c_stop
  1497 ;;		_i2c_write
  1498 ;;		_recivedCMD
  1499 ;;		_sprintf
  1500 ;;		_strcmp
  1501 ;;		_token
  1502 ;;		_usart_TxStr
  1503 ;; This function is called by:
  1504 ;;		Interrupt level 1
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           
  1509                           ;psect for function _myISR
  1510  002A                     _myISR:
  1511  002A                     i1l1681:
  1512                           
  1513                           ;main.c: 15:     INTCONbits.GIE = 0;
  1514  002A  138B               	bcf	11,7	;volatile
  1515  002B                     i1l1683:
  1516                           
  1517                           ;main.c: 17:     recivedCMD(data);
  1518  002B  3050               	movlw	(low (_data| 0))& (0+255)
  1519  002C  120A  118A  24E0  120A  118A  	fcall	_recivedCMD
  1520                           
  1521                           ;main.c: 18:     token(data);
  1522  0031  3050               	movlw	(low (_data| 0))& (0+255)
  1523  0032  120A  118A  241C  120A  118A  	fcall	_token
  1524                           
  1525                           ;main.c: 19:     if(strcmp(dir[0],"M2") == 0){
  1526  0037  3012               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1527  0038  1283               	bcf	3,5	;RP0=0, select bank0
  1528  0039  1303               	bcf	3,6	;RP1=0, select bank0
  1529  003A  00AD               	movwf	??_myISR
  1530  003B  082D               	movf	??_myISR,w
  1531  003C  00F0               	movwf	strcmp@s2
  1532  003D  084B               	movf	_dir,w
  1533  003E  120A  118A  24B2  120A  118A  	fcall	_strcmp
  1534  0043  0870               	movf	?_strcmp,w
  1535  0044  0471               	iorwf	?_strcmp+1,w
  1536  0045  1D03               	btfss	3,2
  1537  0046  2848               	goto	u126_21
  1538  0047  2849               	goto	u126_20
  1539  0048                     u126_21:
  1540  0048  291E               	goto	i1l1721
  1541  0049                     u126_20:
  1542  0049                     i1l1685:
  1543                           
  1544                           ;main.c: 20:   if(strcmp(dir[1],"P1") == 0){
  1545  0049  300F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1546  004A  1283               	bcf	3,5	;RP0=0, select bank0
  1547  004B  1303               	bcf	3,6	;RP1=0, select bank0
  1548  004C  00AD               	movwf	??_myISR
  1549  004D  082D               	movf	??_myISR,w
  1550  004E  00F0               	movwf	strcmp@s2
  1551  004F  084C               	movf	low ((_dir| 0+1)),w
  1552  0050  120A  118A  24B2  120A  118A  	fcall	_strcmp
  1553  0055  0870               	movf	?_strcmp,w
  1554  0056  0471               	iorwf	?_strcmp+1,w
  1555  0057  1D03               	btfss	3,2
  1556  0058  285A               	goto	u127_21
  1557  0059  285B               	goto	u127_20
  1558  005A                     u127_21:
  1559  005A  28B6               	goto	i1l1703
  1560  005B                     u127_20:
  1561  005B                     i1l1687:
  1562                           
  1563                           ;main.c: 21:         if(*dir[2] == 'a'){
  1564  005B  1283               	bcf	3,5	;RP0=0, select bank0
  1565  005C  1303               	bcf	3,6	;RP1=0, select bank0
  1566  005D  084D               	movf	low ((_dir| 0+2)),w
  1567  005E  0084               	movwf	4
  1568  005F  3061               	movlw	97
  1569  0060  1383               	bcf	3,7	;select IRP bank0
  1570  0061  0600               	xorwf	0,w
  1571  0062  1D03               	btfss	3,2
  1572  0063  2865               	goto	u128_21
  1573  0064  2866               	goto	u128_20
  1574  0065                     u128_21:
  1575  0065  289A               	goto	i1l1697
  1576  0066                     u128_20:
  1577  0066                     i1l1689:
  1578                           
  1579                           ;main.c: 22:             i2c_start();
  1580  0066  120A  118A  2587  120A  118A  	fcall	_i2c_start
  1581                           
  1582                           ;main.c: 23:             i2c_write(0x31);
  1583  006B  3031               	movlw	49
  1584  006C  120A  118A  2574  120A  118A  	fcall	_i2c_write
  1585                           
  1586                           ;main.c: 24:             lectura = i2c_read();
  1587  0071  120A  118A  2560  120A  118A  	fcall	_i2c_read
  1588  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1589  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1590  0078  00AD               	movwf	??_myISR
  1591  0079  082D               	movf	??_myISR,w
  1592  007A  00CF               	movwf	_lectura
  1593  007B                     i1l1691:
  1594                           
  1595                           ;main.c: 25:             i2c_stop();
  1596  007B  120A  118A  25A8  120A  118A  	fcall	_i2c_stop
  1597  0080                     i1l1693:
  1598                           
  1599                           ;main.c: 26:             sprintf(data,"%d\n",lectura);
  1600  0080  300B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1601  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1602  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1603  0083  00AD               	movwf	??_myISR
  1604  0084  082D               	movf	??_myISR,w
  1605  0085  00A0               	movwf	sprintf@f
  1606  0086  084F               	movf	_lectura,w
  1607  0087  00AE               	movwf	??_myISR+1
  1608  0088  01AF               	clrf	??_myISR+2
  1609  0089  082E               	movf	??_myISR+1,w
  1610  008A  00A1               	movwf	?_sprintf+1
  1611  008B  082F               	movf	??_myISR+2,w
  1612  008C  00A2               	movwf	?_sprintf+2
  1613  008D  3050               	movlw	(low (_data| 0))& (0+255)
  1614  008E  120A  118A  212D  120A  118A  	fcall	_sprintf
  1615  0093                     i1l1695:
  1616                           
  1617                           ;main.c: 27:             usart_TxStr(data);
  1618  0093  3050               	movlw	(low (_data| 0))& (0+255)
  1619  0094  120A  118A  2549  120A  118A  	fcall	_usart_TxStr
  1620                           
  1621                           ;main.c: 28:         }
  1622  0099  291E               	goto	i1l1721
  1623  009A                     i1l1697:
  1624                           
  1625                           ;main.c: 30:             i2c_start();
  1626  009A  120A  118A  2587  120A  118A  	fcall	_i2c_start
  1627                           
  1628                           ;main.c: 31:             i2c_write(0x30);
  1629  009F  3030               	movlw	48
  1630  00A0  120A  118A  2574  120A  118A  	fcall	_i2c_write
  1631  00A5                     i1l1699:
  1632                           
  1633                           ;main.c: 32:             i2c_write(*dir[2]);
  1634  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1635  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1636  00A7  084D               	movf	low ((_dir| 0+2)),w
  1637  00A8  0084               	movwf	4
  1638  00A9  1383               	bcf	3,7	;select IRP bank0
  1639  00AA  0800               	movf	0,w
  1640  00AB  120A  118A  2574  120A  118A  	fcall	_i2c_write
  1641  00B0                     i1l1701:
  1642                           
  1643                           ;main.c: 33:              i2c_stop();
  1644  00B0  120A  118A  25A8  120A  118A  	fcall	_i2c_stop
  1645  00B5  291E               	goto	i1l1721
  1646  00B6                     i1l1703:
  1647  00B6  3015               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1648  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1649  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1650  00B9  00AD               	movwf	??_myISR
  1651  00BA  082D               	movf	??_myISR,w
  1652  00BB  00F0               	movwf	strcmp@s2
  1653  00BC  084C               	movf	low ((_dir| 0+1)),w
  1654  00BD  120A  118A  24B2  120A  118A  	fcall	_strcmp
  1655  00C2  0870               	movf	?_strcmp,w
  1656  00C3  0471               	iorwf	?_strcmp+1,w
  1657  00C4  1D03               	btfss	3,2
  1658  00C5  28C7               	goto	u129_21
  1659  00C6  28C8               	goto	u129_20
  1660  00C7                     u129_21:
  1661  00C7  291E               	goto	i1l1721
  1662  00C8                     u129_20:
  1663  00C8                     i1l1705:
  1664                           
  1665                           ;main.c: 37:         if(*dir[2] == 'a'){
  1666  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1667  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1668  00CA  084D               	movf	low ((_dir| 0+2)),w
  1669  00CB  0084               	movwf	4
  1670  00CC  3061               	movlw	97
  1671  00CD  1383               	bcf	3,7	;select IRP bank0
  1672  00CE  0600               	xorwf	0,w
  1673  00CF  1D03               	btfss	3,2
  1674  00D0  28D2               	goto	u130_21
  1675  00D1  28D3               	goto	u130_20
  1676  00D2                     u130_21:
  1677  00D2  2907               	goto	i1l1715
  1678  00D3                     u130_20:
  1679  00D3                     i1l1707:
  1680                           
  1681                           ;main.c: 38:             i2c_start();
  1682  00D3  120A  118A  2587  120A  118A  	fcall	_i2c_start
  1683                           
  1684                           ;main.c: 39:             i2c_write(0x33);
  1685  00D8  3033               	movlw	51
  1686  00D9  120A  118A  2574  120A  118A  	fcall	_i2c_write
  1687                           
  1688                           ;main.c: 40:             lectura = i2c_read();
  1689  00DE  120A  118A  2560  120A  118A  	fcall	_i2c_read
  1690  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1691  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1692  00E5  00AD               	movwf	??_myISR
  1693  00E6  082D               	movf	??_myISR,w
  1694  00E7  00CF               	movwf	_lectura
  1695  00E8                     i1l1709:
  1696                           
  1697                           ;main.c: 41:             i2c_stop();
  1698  00E8  120A  118A  25A8  120A  118A  	fcall	_i2c_stop
  1699  00ED                     i1l1711:
  1700                           
  1701                           ;main.c: 42:             sprintf(data,"%d\n",lectura);
  1702  00ED  300B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1703  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1704  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1705  00F0  00AD               	movwf	??_myISR
  1706  00F1  082D               	movf	??_myISR,w
  1707  00F2  00A0               	movwf	sprintf@f
  1708  00F3  084F               	movf	_lectura,w
  1709  00F4  00AE               	movwf	??_myISR+1
  1710  00F5  01AF               	clrf	??_myISR+2
  1711  00F6  082E               	movf	??_myISR+1,w
  1712  00F7  00A1               	movwf	?_sprintf+1
  1713  00F8  082F               	movf	??_myISR+2,w
  1714  00F9  00A2               	movwf	?_sprintf+2
  1715  00FA  3050               	movlw	(low (_data| 0))& (0+255)
  1716  00FB  120A  118A  212D  120A  118A  	fcall	_sprintf
  1717  0100                     i1l1713:
  1718                           
  1719                           ;main.c: 43:             usart_TxStr(data);
  1720  0100  3050               	movlw	(low (_data| 0))& (0+255)
  1721  0101  120A  118A  2549  120A  118A  	fcall	_usart_TxStr
  1722                           
  1723                           ;main.c: 44:         }
  1724  0106  291E               	goto	i1l1721
  1725  0107                     i1l1715:
  1726                           
  1727                           ;main.c: 46:             i2c_start();
  1728  0107  120A  118A  2587  120A  118A  	fcall	_i2c_start
  1729                           
  1730                           ;main.c: 47:             i2c_write(0x32);
  1731  010C  3032               	movlw	50
  1732  010D  120A  118A  2574  120A  118A  	fcall	_i2c_write
  1733  0112                     i1l1717:
  1734                           
  1735                           ;main.c: 48:             i2c_write(*dir[2]);
  1736  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1737  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1738  0114  084D               	movf	low ((_dir| 0+2)),w
  1739  0115  0084               	movwf	4
  1740  0116  1383               	bcf	3,7	;select IRP bank0
  1741  0117  0800               	movf	0,w
  1742  0118  120A  118A  2574  120A  118A  	fcall	_i2c_write
  1743  011D  28B0               	goto	i1l1701
  1744  011E                     i1l1721:
  1745                           
  1746                           ;main.c: 53:     PIR1bits.RCIF = 0;
  1747  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1748  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1749  0120  128C               	bcf	12,5	;volatile
  1750  0121                     i1l1723:
  1751                           
  1752                           ;main.c: 54:     INTCONbits.GIE = 1;
  1753  0121  178B               	bsf	11,7	;volatile
  1754  0122                     i1l229:
  1755  0122  0833               	movf	??_myISR+6,w
  1756  0123  00FF               	movwf	btemp+1
  1757  0124  0832               	movf	??_myISR+5,w
  1758  0125  008A               	movwf	10
  1759  0126  0831               	movf	??_myISR+4,w
  1760  0127  0084               	movwf	4
  1761  0128  0E30               	swapf	??_myISR+3,w
  1762  0129  0083               	movwf	3
  1763  012A  0EFE               	swapf	btemp,f
  1764  012B  0E7E               	swapf	btemp,w
  1765  012C  0009               	retfie
  1766  012D                     __end_of_myISR:
  1767                           
  1768                           	psect	intentry
  1769  0004                     __pintentry:	
  1770                           ;incstack = 0
  1771                           ; Regs used in _myISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1772                           
  1773  0004                     interrupt_function:
  1774  007E                     saved_w	set	btemp
  1775  0004  00FE               	movwf	btemp
  1776  0005  0E03               	swapf	3,w
  1777  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1778  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1779  0008  00B0               	movwf	??_myISR+3
  1780  0009  0804               	movf	4,w
  1781  000A  00B1               	movwf	??_myISR+4
  1782  000B  080A               	movf	10,w
  1783  000C  00B2               	movwf	??_myISR+5
  1784  000D  087F               	movf	btemp+1,w
  1785  000E  00B3               	movwf	??_myISR+6
  1786  000F  120A  118A  282A   	ljmp	_myISR
  1787                           
  1788                           	psect	text6
  1789  0549                     __ptext6:	
  1790 ;; *************** function _usart_TxStr *****************
  1791 ;; Defined at:
  1792 ;;		line 33 in file "usart.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  str             1    wreg     PTR unsigned char 
  1795 ;;		 -> data(10), 
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;  str             1    2[COMMON] PTR unsigned char 
  1798 ;;		 -> data(10), 
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      void 
  1801 ;; Registers used:
  1802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1808 ;;      Params:         0       0       0       0       0
  1809 ;;      Locals:         1       0       0       0       0
  1810 ;;      Temps:          1       0       0       0       0
  1811 ;;      Totals:         2       0       0       0       0
  1812 ;;Total ram usage:        2 bytes
  1813 ;; Hardware stack levels used:    1
  1814 ;; Hardware stack levels required when called:    1
  1815 ;; This function calls:
  1816 ;;		_usart_Tx
  1817 ;; This function is called by:
  1818 ;;		_myISR
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           
  1823                           ;psect for function _usart_TxStr
  1824  0549                     _usart_TxStr:
  1825                           
  1826                           ;incstack = 0
  1827                           ; Regs used in _usart_TxStr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1828                           ;usart_TxStr@str stored from wreg
  1829  0549  00F2               	movwf	usart_TxStr@str
  1830  054A                     i1l1567:
  1831                           
  1832                           ;usart.c: 34:     while(*str != '\0'){
  1833  054A  2D57               	goto	i1l1573
  1834  054B                     i1l1569:
  1835                           
  1836                           ;usart.c: 35:         usart_Tx(*str);
  1837  054B  0872               	movf	usart_TxStr@str,w
  1838  054C  0084               	movwf	4
  1839  054D  0800               	movf	0,w
  1840  054E  120A  118A  25C3  120A  118A  	fcall	_usart_Tx
  1841  0553                     i1l1571:
  1842                           
  1843                           ;usart.c: 36:         str++;
  1844  0553  3001               	movlw	1
  1845  0554  00F1               	movwf	??_usart_TxStr
  1846  0555  0871               	movf	??_usart_TxStr,w
  1847  0556  07F2               	addwf	usart_TxStr@str,f
  1848  0557                     i1l1573:
  1849                           
  1850                           ;usart.c: 34:     while(*str != '\0'){
  1851  0557  0872               	movf	usart_TxStr@str,w
  1852  0558  0084               	movwf	4
  1853  0559  1383               	bcf	3,7	;select IRP bank0
  1854  055A  0800               	movf	0,w
  1855  055B  1D03               	btfss	3,2
  1856  055C  2D5E               	goto	u111_21
  1857  055D  2D5F               	goto	u111_20
  1858  055E                     u111_21:
  1859  055E  2D4B               	goto	i1l1569
  1860  055F                     u111_20:
  1861  055F                     i1l148:
  1862  055F  0008               	return
  1863  0560                     __end_of_usart_TxStr:
  1864                           
  1865                           	psect	text7
  1866  05C3                     __ptext7:	
  1867 ;; *************** function _usart_Tx *****************
  1868 ;; Defined at:
  1869 ;;		line 24 in file "usart.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;  send            1    wreg     unsigned char 
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;  send            1    0[COMMON] unsigned char 
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  1    wreg      void 
  1876 ;; Registers used:
  1877 ;;		wreg
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1883 ;;      Params:         0       0       0       0       0
  1884 ;;      Locals:         1       0       0       0       0
  1885 ;;      Temps:          0       0       0       0       0
  1886 ;;      Totals:         1       0       0       0       0
  1887 ;;Total ram usage:        1 bytes
  1888 ;; Hardware stack levels used:    1
  1889 ;; This function calls:
  1890 ;;		Nothing
  1891 ;; This function is called by:
  1892 ;;		_usart_TxStr
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           
  1897                           ;psect for function _usart_Tx
  1898  05C3                     _usart_Tx:
  1899                           
  1900                           ;incstack = 0
  1901                           ; Regs used in _usart_Tx: [wreg]
  1902                           ;usart_Tx@send stored from wreg
  1903  05C3  00F0               	movwf	usart_Tx@send
  1904  05C4                     i1l1393:
  1905                           
  1906                           ;usart.c: 25:     TXREG = send;
  1907  05C4  0870               	movf	usart_Tx@send,w
  1908  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  1909  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  1910  05C7  0099               	movwf	25	;volatile
  1911  05C8                     i1l136:	
  1912                           ;usart.c: 26:     while (!TXSTAbits.TRMT);
  1913                           
  1914  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  1915  05C9  1303               	bcf	3,6	;RP1=0, select bank1
  1916  05CA  1C98               	btfss	24,1	;volatile
  1917  05CB  2DCD               	goto	u75_21
  1918  05CC  2DCE               	goto	u75_20
  1919  05CD                     u75_21:
  1920  05CD  2DC8               	goto	i1l136
  1921  05CE                     u75_20:
  1922  05CE                     i1l139:
  1923  05CE  0008               	return
  1924  05CF                     __end_of_usart_Tx:
  1925                           
  1926                           	psect	text8
  1927  041C                     __ptext8:	
  1928 ;; *************** function _token *****************
  1929 ;; Defined at:
  1930 ;;		line 68 in file "usart.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  cmd             1    wreg     PTR unsigned char 
  1933 ;;		 -> data(10), 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  cmd             1    4[BANK0 ] PTR unsigned char 
  1936 ;;		 -> data(10), 
  1937 ;;  i               2    2[BANK0 ] int 
  1938 ;;  tok             1    5[BANK0 ] PTR unsigned char 
  1939 ;;		 -> data(10), NULL(0), 
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  1    wreg      void 
  1942 ;; Registers used:
  1943 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1949 ;;      Params:         0       0       0       0       0
  1950 ;;      Locals:         0       4       0       0       0
  1951 ;;      Temps:          0       2       0       0       0
  1952 ;;      Totals:         0       6       0       0       0
  1953 ;;Total ram usage:        6 bytes
  1954 ;; Hardware stack levels used:    1
  1955 ;; Hardware stack levels required when called:    4
  1956 ;; This function calls:
  1957 ;;		_strtok
  1958 ;; This function is called by:
  1959 ;;		_myISR
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           
  1964                           ;psect for function _token
  1965  041C                     _token:
  1966                           
  1967                           ;incstack = 0
  1968                           ; Regs used in _token: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1969                           ;token@cmd stored from wreg
  1970  041C  1283               	bcf	3,5	;RP0=0, select bank0
  1971  041D  1303               	bcf	3,6	;RP1=0, select bank0
  1972  041E  00A4               	movwf	token@cmd
  1973  041F                     i1l1589:
  1974                           
  1975                           ;usart.c: 70:     int i = 0;
  1976  041F  01A2               	clrf	token@i
  1977  0420  01A3               	clrf	token@i+1
  1978  0421                     i1l1591:
  1979                           
  1980                           ;usart.c: 71:     tok = strtok(cmd, ",");
  1981  0421  3018               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1982  0422  00A0               	movwf	??_token
  1983  0423  0820               	movf	??_token,w
  1984  0424  00FA               	movwf	strtok@s2
  1985  0425  0824               	movf	token@cmd,w
  1986  0426  120A  118A  22B2  120A  118A  	fcall	_strtok
  1987  042B  1283               	bcf	3,5	;RP0=0, select bank0
  1988  042C  1303               	bcf	3,6	;RP1=0, select bank0
  1989  042D  00A1               	movwf	??_token+1
  1990  042E  0821               	movf	??_token+1,w
  1991  042F  00A5               	movwf	token@tok
  1992                           
  1993                           ;usart.c: 72:     while( tok != (0) ) {
  1994  0430  2C4E               	goto	i1l1599
  1995  0431                     i1l1593:
  1996                           
  1997                           ;usart.c: 73:         dir[i] = tok;
  1998  0431  0825               	movf	token@tok,w
  1999  0432  00A0               	movwf	??_token
  2000  0433  0822               	movf	token@i,w
  2001  0434  3E4B               	addlw	(low (_dir| 0))& (0+255)
  2002  0435  0084               	movwf	4
  2003  0436  0820               	movf	??_token,w
  2004  0437  1383               	bcf	3,7	;select IRP bank0
  2005  0438  0080               	movwf	0
  2006  0439                     i1l1595:
  2007                           
  2008                           ;usart.c: 74:         tok = strtok((0), ",");
  2009  0439  3018               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2010  043A  00A0               	movwf	??_token
  2011  043B  0820               	movf	??_token,w
  2012  043C  00FA               	movwf	strtok@s2
  2013  043D  3000               	movlw	0
  2014  043E  120A  118A  22B2  120A  118A  	fcall	_strtok
  2015  0443  1283               	bcf	3,5	;RP0=0, select bank0
  2016  0444  1303               	bcf	3,6	;RP1=0, select bank0
  2017  0445  00A1               	movwf	??_token+1
  2018  0446  0821               	movf	??_token+1,w
  2019  0447  00A5               	movwf	token@tok
  2020  0448                     i1l1597:
  2021                           
  2022                           ;usart.c: 75:         i++;
  2023  0448  3001               	movlw	1
  2024  0449  07A2               	addwf	token@i,f
  2025  044A  1803               	skipnc
  2026  044B  0AA3               	incf	token@i+1,f
  2027  044C  3000               	movlw	0
  2028  044D  07A3               	addwf	token@i+1,f
  2029  044E                     i1l1599:
  2030                           
  2031                           ;usart.c: 72:     while( tok != (0) ) {
  2032  044E  0825               	movf	token@tok,w
  2033  044F  1D03               	btfss	3,2
  2034  0450  2C52               	goto	u114_21
  2035  0451  2C53               	goto	u114_20
  2036  0452                     u114_21:
  2037  0452  2C31               	goto	i1l1593
  2038  0453                     u114_20:
  2039  0453                     i1l170:
  2040  0453  0008               	return
  2041  0454                     __end_of_token:
  2042                           
  2043                           	psect	text9
  2044  02B2                     __ptext9:	
  2045 ;; *************** function _strtok *****************
  2046 ;; Defined at:
  2047 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strtok.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;  s1              1    wreg     PTR unsigned char 
  2050 ;;		 -> data(10), NULL(0), 
  2051 ;;  s2              1   10[COMMON] PTR const unsigned char 
  2052 ;;		 -> STR_2(2), STR_1(2), 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  s1              1   13[COMMON] PTR unsigned char 
  2055 ;;		 -> data(10), NULL(0), 
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      PTR unsigned char 
  2058 ;; Registers used:
  2059 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2065 ;;      Params:         1       0       0       0       0
  2066 ;;      Locals:         1       0       0       0       0
  2067 ;;      Temps:          2       0       0       0       0
  2068 ;;      Totals:         4       0       0       0       0
  2069 ;;Total ram usage:        4 bytes
  2070 ;; Hardware stack levels used:    1
  2071 ;; Hardware stack levels required when called:    3
  2072 ;; This function calls:
  2073 ;;		_strcspn
  2074 ;;		_strspn
  2075 ;; This function is called by:
  2076 ;;		_token
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           
  2081                           ;psect for function _strtok
  2082  02B2                     _strtok:
  2083                           
  2084                           ;incstack = 0
  2085                           ; Regs used in _strtok: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2086                           ;strtok@s1 stored from wreg
  2087  02B2  00FD               	movwf	strtok@s1
  2088  02B3                     i1l1401:
  2089  02B3  087D               	movf	strtok@s1,w
  2090  02B4  1D03               	btfss	3,2
  2091  02B5  2AB7               	goto	u77_21
  2092  02B6  2AB8               	goto	u77_20
  2093  02B7                     u77_21:
  2094  02B7  2ABE               	goto	i1l1405
  2095  02B8                     u77_20:
  2096  02B8                     i1l1403:
  2097  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2098  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  2099  02BA  084E               	movf	strtok@sp,w
  2100  02BB  00FB               	movwf	??_strtok
  2101  02BC  087B               	movf	??_strtok,w
  2102  02BD  00FD               	movwf	strtok@s1
  2103  02BE                     i1l1405:
  2104  02BE  087D               	movf	strtok@s1,w
  2105  02BF  1D03               	btfss	3,2
  2106  02C0  2AC2               	goto	u78_21
  2107  02C1  2AC3               	goto	u78_20
  2108  02C2                     u78_21:
  2109  02C2  2AC5               	goto	i1l1411
  2110  02C3                     u78_20:
  2111  02C3                     i1l1407:
  2112  02C3  3000               	movlw	0
  2113  02C4  2B03               	goto	i1l818
  2114  02C5                     i1l1411:
  2115  02C5  087A               	movf	strtok@s2,w
  2116  02C6  00FB               	movwf	??_strtok
  2117  02C7  087B               	movf	??_strtok,w
  2118  02C8  00F3               	movwf	strspn@s2
  2119  02C9  087D               	movf	strtok@s1,w
  2120  02CA  120A  118A  2454  120A  118A  	fcall	_strspn
  2121  02CF  0873               	movf	?_strspn,w
  2122  02D0  00FC               	movwf	??_strtok+1
  2123  02D1  087C               	movf	??_strtok+1,w
  2124  02D2  07FD               	addwf	strtok@s1,f
  2125  02D3                     i1l1413:
  2126  02D3  087D               	movf	strtok@s1,w
  2127  02D4  0084               	movwf	4
  2128  02D5  1383               	bcf	3,7	;select IRP bank0
  2129  02D6  0800               	movf	0,w
  2130  02D7  1D03               	btfss	3,2
  2131  02D8  2ADA               	goto	u79_21
  2132  02D9  2ADB               	goto	u79_20
  2133  02DA                     u79_21:
  2134  02DA  2AE0               	goto	i1l1419
  2135  02DB                     u79_20:
  2136  02DB                     i1l1415:
  2137  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2138  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  2139  02DD  01CE               	clrf	strtok@sp
  2140  02DE  3000               	movlw	0
  2141  02DF  2B03               	goto	i1l818
  2142  02E0                     i1l1419:
  2143  02E0  087A               	movf	strtok@s2,w
  2144  02E1  00FB               	movwf	??_strtok
  2145  02E2  087B               	movf	??_strtok,w
  2146  02E3  00F3               	movwf	strcspn@s2
  2147  02E4  087D               	movf	strtok@s1,w
  2148  02E5  120A  118A  2483  120A  118A  	fcall	_strcspn
  2149  02EA  0873               	movf	?_strcspn,w
  2150  02EB  077D               	addwf	strtok@s1,w
  2151  02EC  00FC               	movwf	??_strtok+1
  2152  02ED  087C               	movf	??_strtok+1,w
  2153  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  2154  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2155  02F0  00CE               	movwf	strtok@sp
  2156  02F1                     i1l1421:
  2157  02F1  084E               	movf	strtok@sp,w
  2158  02F2  0084               	movwf	4
  2159  02F3  1383               	bcf	3,7	;select IRP bank0
  2160  02F4  0800               	movf	0,w
  2161  02F5  1903               	btfsc	3,2
  2162  02F6  2AF8               	goto	u80_21
  2163  02F7  2AF9               	goto	u80_20
  2164  02F8                     u80_21:
  2165  02F8  2B01               	goto	i1l1427
  2166  02F9                     u80_20:
  2167  02F9                     i1l1423:
  2168  02F9  084E               	movf	strtok@sp,w
  2169  02FA  0084               	movwf	4
  2170  02FB  0180               	clrf	0
  2171  02FC                     i1l1425:
  2172  02FC  3001               	movlw	1
  2173  02FD  00FB               	movwf	??_strtok
  2174  02FE  087B               	movf	??_strtok,w
  2175  02FF  07CE               	addwf	strtok@sp,f
  2176  0300  2B02               	goto	i1l1429
  2177  0301                     i1l1427:
  2178  0301  01CE               	clrf	strtok@sp
  2179  0302                     i1l1429:
  2180  0302  087D               	movf	strtok@s1,w
  2181  0303                     i1l818:
  2182  0303  0008               	return
  2183  0304                     __end_of_strtok:
  2184                           
  2185                           	psect	text10
  2186  0454                     __ptext10:	
  2187 ;; *************** function _strspn *****************
  2188 ;; Defined at:
  2189 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strspn.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;  s1              1    wreg     PTR const unsigned char 
  2192 ;;		 -> data(10), NULL(0), 
  2193 ;;  s2              1    3[COMMON] PTR const unsigned char 
  2194 ;;		 -> STR_2(2), STR_1(2), 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  s1              1    9[COMMON] PTR const unsigned char 
  2197 ;;		 -> data(10), NULL(0), 
  2198 ;;  i               2    7[COMMON] unsigned int 
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  2    3[COMMON] unsigned int 
  2201 ;; Registers used:
  2202 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2208 ;;      Params:         2       0       0       0       0
  2209 ;;      Locals:         3       0       0       0       0
  2210 ;;      Temps:          2       0       0       0       0
  2211 ;;      Totals:         7       0       0       0       0
  2212 ;;Total ram usage:        7 bytes
  2213 ;; Hardware stack levels used:    1
  2214 ;; Hardware stack levels required when called:    2
  2215 ;; This function calls:
  2216 ;;		_strchr
  2217 ;; This function is called by:
  2218 ;;		_strtok
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           
  2223                           ;psect for function _strspn
  2224  0454                     _strspn:
  2225                           
  2226                           ;incstack = 0
  2227                           ; Regs used in _strspn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2228                           ;strspn@s1 stored from wreg
  2229  0454  00F9               	movwf	strspn@s1
  2230  0455                     i1l1363:
  2231  0455  01F7               	clrf	strspn@i
  2232  0456  01F8               	clrf	strspn@i+1
  2233  0457  2C62               	goto	i1l1367
  2234  0458                     i1l1365:
  2235  0458  3001               	movlw	1
  2236  0459  00F5               	movwf	??_strspn
  2237  045A  0875               	movf	??_strspn,w
  2238  045B  07F9               	addwf	strspn@s1,f
  2239  045C  3001               	movlw	1
  2240  045D  07F7               	addwf	strspn@i,f
  2241  045E  1803               	skipnc
  2242  045F  0AF8               	incf	strspn@i+1,f
  2243  0460  3000               	movlw	0
  2244  0461  07F8               	addwf	strspn@i+1,f
  2245  0462                     i1l1367:
  2246  0462  0879               	movf	strspn@s1,w
  2247  0463  0084               	movwf	4
  2248  0464  1383               	bcf	3,7	;select IRP bank0
  2249  0465  0800               	movf	0,w
  2250  0466  1903               	btfsc	3,2
  2251  0467  2C69               	goto	u69_21
  2252  0468  2C6A               	goto	u69_20
  2253  0469                     u69_21:
  2254  0469  2C7E               	goto	i1l1371
  2255  046A                     u69_20:
  2256  046A                     i1l1369:
  2257  046A  0879               	movf	strspn@s1,w
  2258  046B  0084               	movwf	4
  2259  046C  0800               	movf	0,w
  2260  046D  00F5               	movwf	??_strspn
  2261  046E  01F6               	clrf	??_strspn+1
  2262  046F  0875               	movf	??_strspn,w
  2263  0470  00F0               	movwf	strchr@chr
  2264  0471  0876               	movf	??_strspn+1,w
  2265  0472  00F1               	movwf	strchr@chr+1
  2266  0473  0873               	movf	strspn@s2,w
  2267  0474  120A  118A  250A  120A  118A  	fcall	_strchr
  2268  0479  3A00               	xorlw	0
  2269  047A  1D03               	skipz
  2270  047B  2C7D               	goto	u70_21
  2271  047C  2C7E               	goto	u70_20
  2272  047D                     u70_21:
  2273  047D  2C58               	goto	i1l1365
  2274  047E                     u70_20:
  2275  047E                     i1l1371:
  2276  047E  0878               	movf	strspn@i+1,w
  2277  047F  00F4               	movwf	?_strspn+1
  2278  0480  0877               	movf	strspn@i,w
  2279  0481  00F3               	movwf	?_strspn
  2280  0482                     i1l847:
  2281  0482  0008               	return
  2282  0483                     __end_of_strspn:
  2283                           
  2284                           	psect	text11
  2285  0483                     __ptext11:	
  2286 ;; *************** function _strcspn *****************
  2287 ;; Defined at:
  2288 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcspn.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;  s1              1    wreg     PTR const unsigned char 
  2291 ;;		 -> data(10), NULL(0), 
  2292 ;;  s2              1    3[COMMON] PTR const unsigned char 
  2293 ;;		 -> STR_2(2), STR_1(2), 
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;  s1              1    9[COMMON] PTR const unsigned char 
  2296 ;;		 -> data(10), NULL(0), 
  2297 ;;  i               2    7[COMMON] unsigned int 
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  2    3[COMMON] unsigned int 
  2300 ;; Registers used:
  2301 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2307 ;;      Params:         2       0       0       0       0
  2308 ;;      Locals:         3       0       0       0       0
  2309 ;;      Temps:          2       0       0       0       0
  2310 ;;      Totals:         7       0       0       0       0
  2311 ;;Total ram usage:        7 bytes
  2312 ;; Hardware stack levels used:    1
  2313 ;; Hardware stack levels required when called:    2
  2314 ;; This function calls:
  2315 ;;		_strchr
  2316 ;; This function is called by:
  2317 ;;		_strtok
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           
  2322                           ;psect for function _strcspn
  2323  0483                     _strcspn:
  2324                           
  2325                           ;incstack = 0
  2326                           ; Regs used in _strcspn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2327                           ;strcspn@s1 stored from wreg
  2328  0483  00F9               	movwf	strcspn@s1
  2329  0484                     i1l1375:
  2330  0484  01F7               	clrf	strcspn@i
  2331  0485  01F8               	clrf	strcspn@i+1
  2332  0486  2C91               	goto	i1l1379
  2333  0487                     i1l1377:
  2334  0487  3001               	movlw	1
  2335  0488  00F5               	movwf	??_strcspn
  2336  0489  0875               	movf	??_strcspn,w
  2337  048A  07F9               	addwf	strcspn@s1,f
  2338  048B  3001               	movlw	1
  2339  048C  07F7               	addwf	strcspn@i,f
  2340  048D  1803               	skipnc
  2341  048E  0AF8               	incf	strcspn@i+1,f
  2342  048F  3000               	movlw	0
  2343  0490  07F8               	addwf	strcspn@i+1,f
  2344  0491                     i1l1379:
  2345  0491  0879               	movf	strcspn@s1,w
  2346  0492  0084               	movwf	4
  2347  0493  1383               	bcf	3,7	;select IRP bank0
  2348  0494  0800               	movf	0,w
  2349  0495  1903               	btfsc	3,2
  2350  0496  2C98               	goto	u71_21
  2351  0497  2C99               	goto	u71_20
  2352  0498                     u71_21:
  2353  0498  2CAD               	goto	i1l1383
  2354  0499                     u71_20:
  2355  0499                     i1l1381:
  2356  0499  0879               	movf	strcspn@s1,w
  2357  049A  0084               	movwf	4
  2358  049B  0800               	movf	0,w
  2359  049C  00F5               	movwf	??_strcspn
  2360  049D  01F6               	clrf	??_strcspn+1
  2361  049E  0875               	movf	??_strcspn,w
  2362  049F  00F0               	movwf	strchr@chr
  2363  04A0  0876               	movf	??_strcspn+1,w
  2364  04A1  00F1               	movwf	strchr@chr+1
  2365  04A2  0873               	movf	strcspn@s2,w
  2366  04A3  120A  118A  250A  120A  118A  	fcall	_strchr
  2367  04A8  3A00               	xorlw	0
  2368  04A9  1903               	skipnz
  2369  04AA  2CAC               	goto	u72_21
  2370  04AB  2CAD               	goto	u72_20
  2371  04AC                     u72_21:
  2372  04AC  2C87               	goto	i1l1377
  2373  04AD                     u72_20:
  2374  04AD                     i1l1383:
  2375  04AD  0878               	movf	strcspn@i+1,w
  2376  04AE  00F4               	movwf	?_strcspn+1
  2377  04AF  0877               	movf	strcspn@i,w
  2378  04B0  00F3               	movwf	?_strcspn
  2379  04B1                     i1l831:
  2380  04B1  0008               	return
  2381  04B2                     __end_of_strcspn:
  2382                           
  2383                           	psect	text12
  2384  050A                     __ptext12:	
  2385 ;; *************** function _strchr *****************
  2386 ;; Defined at:
  2387 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strchr.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  ptr             1    wreg     PTR const unsigned char 
  2390 ;;		 -> STR_2(2), STR_1(2), 
  2391 ;;  chr             2    0[COMMON] int 
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;  ptr             1    2[COMMON] PTR const unsigned char 
  2394 ;;		 -> STR_2(2), STR_1(2), 
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  1    wreg      PTR unsigned char 
  2397 ;; Registers used:
  2398 ;;		wreg, fsr0l, fsr0h, pclath
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2404 ;;      Params:         2       0       0       0       0
  2405 ;;      Locals:         1       0       0       0       0
  2406 ;;      Temps:          0       0       0       0       0
  2407 ;;      Totals:         3       0       0       0       0
  2408 ;;Total ram usage:        3 bytes
  2409 ;; Hardware stack levels used:    2
  2410 ;; This function calls:
  2411 ;;		Nothing
  2412 ;; This function is called by:
  2413 ;;		_strcspn
  2414 ;;		_strspn
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           
  2419                           ;psect for function _strchr
  2420  050A                     _strchr:
  2421                           
  2422                           ;incstack = 0
  2423 ;; using string table level
  2424                           ; Regs used in _strchr: [wreg-fsr0h+pclath]
  2425                           ;strchr@ptr stored from wreg
  2426  050A  00F2               	movwf	strchr@ptr
  2427  050B                     i1l834:
  2428  050B                     i1l1351:
  2429  050B  0872               	movf	strchr@ptr,w
  2430  050C  0084               	movwf	4
  2431  050D  120A  118A  252A  120A  118A  	fcall	stringdir
  2432  0512  0670               	xorwf	strchr@chr,w
  2433  0513  1D03               	skipz
  2434  0514  2D16               	goto	u67_21
  2435  0515  2D17               	goto	u67_20
  2436  0516                     u67_21:
  2437  0516  2D19               	goto	i1l1357
  2438  0517                     u67_20:
  2439  0517                     i1l1353:
  2440  0517  0872               	movf	strchr@ptr,w
  2441  0518  2D29               	goto	i1l836
  2442  0519                     i1l1357:
  2443  0519  3001               	movlw	1
  2444  051A  07F2               	addwf	strchr@ptr,f
  2445  051B  30FF               	movlw	-1
  2446  051C  0772               	addwf	strchr@ptr,w
  2447  051D  0084               	movwf	4
  2448  051E  120A  118A  252A  120A  118A  	fcall	stringdir
  2449  0523  3A00               	xorlw	0
  2450  0524  1D03               	skipz
  2451  0525  2D27               	goto	u68_21
  2452  0526  2D28               	goto	u68_20
  2453  0527                     u68_21:
  2454  0527  2D0B               	goto	i1l834
  2455  0528                     u68_20:
  2456  0528                     i1l1359:
  2457  0528  3000               	movlw	0
  2458  0529                     i1l836:
  2459  0529  0008               	return
  2460  052A                     __end_of_strchr:
  2461                           
  2462                           	psect	text13
  2463  04B2                     __ptext13:	
  2464 ;; *************** function _strcmp *****************
  2465 ;; Defined at:
  2466 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcmp.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  s1              1    wreg     PTR const unsigned char 
  2469 ;;		 -> data(10), NULL(0), 
  2470 ;;  s2              1    0[COMMON] PTR const unsigned char 
  2471 ;;		 -> STR_6(3), STR_4(3), STR_3(3), 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  s1              1    6[COMMON] PTR const unsigned char 
  2474 ;;		 -> data(10), NULL(0), 
  2475 ;;  r               1    5[COMMON] char 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  2    0[COMMON] int 
  2478 ;; Registers used:
  2479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2485 ;;      Params:         2       0       0       0       0
  2486 ;;      Locals:         2       0       0       0       0
  2487 ;;      Temps:          3       0       0       0       0
  2488 ;;      Totals:         7       0       0       0       0
  2489 ;;Total ram usage:        7 bytes
  2490 ;; Hardware stack levels used:    2
  2491 ;; This function calls:
  2492 ;;		Nothing
  2493 ;; This function is called by:
  2494 ;;		_myISR
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           
  2499                           ;psect for function _strcmp
  2500  04B2                     _strcmp:
  2501                           
  2502                           ;incstack = 0
  2503                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+pclath]
  2504                           ;strcmp@s1 stored from wreg
  2505  04B2  00F6               	movwf	strcmp@s1
  2506  04B3                     i1l1601:
  2507  04B3  2CBC               	goto	i1l1607
  2508  04B4                     i1l1603:
  2509  04B4  3001               	movlw	1
  2510  04B5  00F2               	movwf	??_strcmp
  2511  04B6  0872               	movf	??_strcmp,w
  2512  04B7  07F6               	addwf	strcmp@s1,f
  2513  04B8                     i1l1605:
  2514  04B8  3001               	movlw	1
  2515  04B9  00F2               	movwf	??_strcmp
  2516  04BA  0872               	movf	??_strcmp,w
  2517  04BB  07F0               	addwf	strcmp@s2,f
  2518  04BC                     i1l1607:
  2519  04BC  0870               	movf	strcmp@s2,w
  2520  04BD  0084               	movwf	4
  2521  04BE  120A  118A  252A  120A  118A  	fcall	stringdir
  2522  04C3  00F2               	movwf	??_strcmp
  2523  04C4  0876               	movf	strcmp@s1,w
  2524  04C5  0084               	movwf	4
  2525  04C6  1383               	bcf	3,7	;select IRP bank0
  2526  04C7  0800               	movf	0,w
  2527  04C8  00F3               	movwf	??_strcmp+1
  2528  04C9  0872               	movf	??_strcmp,w
  2529  04CA  0273               	subwf	??_strcmp+1,w
  2530  04CB  00F4               	movwf	??_strcmp+2
  2531  04CC  0874               	movf	??_strcmp+2,w
  2532  04CD  00F5               	movwf	strcmp@r
  2533  04CE  0875               	movf	strcmp@r,w
  2534  04CF  1D03               	btfss	3,2
  2535  04D0  2CD2               	goto	u115_21
  2536  04D1  2CD3               	goto	u115_20
  2537  04D2                     u115_21:
  2538  04D2  2CDA               	goto	i1l1611
  2539  04D3                     u115_20:
  2540  04D3                     i1l1609:
  2541  04D3  0876               	movf	strcmp@s1,w
  2542  04D4  0084               	movwf	4
  2543  04D5  0800               	movf	0,w
  2544  04D6  1D03               	btfss	3,2
  2545  04D7  2CD9               	goto	u116_21
  2546  04D8  2CDA               	goto	u116_20
  2547  04D9                     u116_21:
  2548  04D9  2CB4               	goto	i1l1603
  2549  04DA                     u116_20:
  2550  04DA                     i1l1611:
  2551  04DA  0875               	movf	strcmp@r,w
  2552  04DB  00F0               	movwf	?_strcmp
  2553  04DC  01F1               	clrf	?_strcmp+1
  2554  04DD  1BF0               	btfsc	?_strcmp,7
  2555  04DE  03F1               	decf	?_strcmp+1,f
  2556  04DF                     i1l807:
  2557  04DF  0008               	return
  2558  04E0                     __end_of_strcmp:
  2559                           
  2560                           	psect	text14
  2561  012D                     __ptext14:	
  2562 ;; *************** function _sprintf *****************
  2563 ;; Defined at:
  2564 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;  sp              1    wreg     PTR unsigned char 
  2567 ;;		 -> data(10), 
  2568 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2569 ;;		 -> STR_7(4), STR_5(4), 
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  2572 ;;		 -> data(10), 
  2573 ;;  tmpval          4    0        struct .
  2574 ;;  val             2    9[BANK0 ] unsigned int 
  2575 ;;  cp              2    0        PTR const unsigned char 
  2576 ;;  len             2    0        unsigned int 
  2577 ;;  c               1   12[BANK0 ] unsigned char 
  2578 ;;  prec            1    8[BANK0 ] char 
  2579 ;;  flag            1    7[BANK0 ] unsigned char 
  2580 ;;  ap              1    6[BANK0 ] PTR void [1]
  2581 ;;		 -> ?_sprintf(2), 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  2    0[BANK0 ] int 
  2584 ;; Registers used:
  2585 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2591 ;;      Params:         0       3       0       0       0
  2592 ;;      Locals:         0       7       0       0       0
  2593 ;;      Temps:          0       3       0       0       0
  2594 ;;      Totals:         0      13       0       0       0
  2595 ;;Total ram usage:       13 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; Hardware stack levels required when called:    1
  2598 ;; This function calls:
  2599 ;;		___lwdiv
  2600 ;;		___lwmod
  2601 ;; This function is called by:
  2602 ;;		_myISR
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           
  2607                           ;psect for function _sprintf
  2608  012D                     _sprintf:
  2609                           
  2610                           ;incstack = 0
  2611                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2612                           ;sprintf@sp stored from wreg
  2613  012D  1283               	bcf	3,5	;RP0=0, select bank0
  2614  012E  1303               	bcf	3,6	;RP1=0, select bank0
  2615  012F  00AB               	movwf	sprintf@sp
  2616  0130                     i1l1615:
  2617                           
  2618                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2619  0130  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2620  0131  00A3               	movwf	??_sprintf
  2621  0132  0823               	movf	??_sprintf,w
  2622  0133  00A6               	movwf	sprintf@ap
  2623                           
  2624                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2625  0134  29FE               	goto	i1l1667
  2626  0135                     i1l1617:
  2627                           
  2628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2629  0135  3025               	movlw	37
  2630  0136  062C               	xorwf	sprintf@c,w
  2631  0137  1903               	btfsc	3,2
  2632  0138  293A               	goto	u117_21
  2633  0139  293B               	goto	u117_20
  2634  013A                     u117_21:
  2635  013A  2947               	goto	i1l1623
  2636  013B                     u117_20:
  2637  013B                     i1l1619:
  2638                           
  2639                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2640  013B  082C               	movf	sprintf@c,w
  2641  013C  00A3               	movwf	??_sprintf
  2642  013D  082B               	movf	sprintf@sp,w
  2643  013E  0084               	movwf	4
  2644  013F  0823               	movf	??_sprintf,w
  2645  0140  1383               	bcf	3,7	;select IRP bank0
  2646  0141  0080               	movwf	0
  2647  0142                     i1l1621:
  2648  0142  3001               	movlw	1
  2649  0143  00A3               	movwf	??_sprintf
  2650  0144  0823               	movf	??_sprintf,w
  2651  0145  07AB               	addwf	sprintf@sp,f
  2652                           
  2653                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2654  0146  29FE               	goto	i1l1667
  2655  0147                     i1l1623:
  2656                           
  2657                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2658  0147  01A7               	clrf	sprintf@flag
  2659  0148                     i1l1627:	
  2660                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2661                           
  2662  0148  3001               	movlw	1
  2663  0149  07A0               	addwf	sprintf@f,f
  2664  014A  30FF               	movlw	-1
  2665  014B  0720               	addwf	sprintf@f,w
  2666  014C  0084               	movwf	4
  2667  014D  120A  118A  252A  120A  118A  	fcall	stringdir
  2668  0152  00AC               	movwf	sprintf@c
  2669  0153  00A3               	movwf	??_sprintf
  2670  0154  01A4               	clrf	??_sprintf+1
  2671                           
  2672                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2673                           ; Switch size 1, requested type "simple"
  2674                           ; Number of cases is 1, Range of values is 0 to 0
  2675                           ; switch strategies available:
  2676                           ; Name         Instructions Cycles
  2677                           ; simple_byte            4     3 (average)
  2678                           ; direct_byte           11     8 (fixed)
  2679                           ; jumptable            260     6 (fixed)
  2680                           ;	Chosen strategy is simple_byte
  2681  0155  0824               	movf	??_sprintf+1,w
  2682  0156  3A00               	xorlw	0	; case 0
  2683  0157  1903               	skipnz
  2684  0158  295A               	goto	i1l1797
  2685  0159  29FE               	goto	i1l1667
  2686  015A                     i1l1797:
  2687                           
  2688                           ; Switch size 1, requested type "simple"
  2689                           ; Number of cases is 3, Range of values is 0 to 105
  2690                           ; switch strategies available:
  2691                           ; Name         Instructions Cycles
  2692                           ; simple_byte           10     6 (average)
  2693                           ; jumptable            260     6 (fixed)
  2694                           ;	Chosen strategy is simple_byte
  2695  015A  0823               	movf	??_sprintf,w
  2696  015B  3A00               	xorlw	0	; case 0
  2697  015C  1903               	skipnz
  2698  015D  2A10               	goto	i1l1669
  2699  015E  3A64               	xorlw	100	; case 100
  2700  015F  1903               	skipnz
  2701  0160  2965               	goto	i1l1629
  2702  0161  3A0D               	xorlw	13	; case 105
  2703  0162  1903               	skipnz
  2704  0163  2965               	goto	i1l1629
  2705  0164  29FE               	goto	i1l1667
  2706  0165                     i1l1629:
  2707                           
  2708                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2709  0165  0826               	movf	sprintf@ap,w
  2710  0166  0084               	movwf	4
  2711  0167  1383               	bcf	3,7	;select IRP bank0
  2712  0168  0800               	movf	0,w
  2713  0169  00A9               	movwf	sprintf@val
  2714  016A  0A84               	incf	4,f
  2715  016B  0800               	movf	0,w
  2716  016C  00AA               	movwf	sprintf@val+1
  2717  016D                     i1l1631:
  2718  016D  3002               	movlw	2
  2719  016E  00A3               	movwf	??_sprintf
  2720  016F  0823               	movf	??_sprintf,w
  2721  0170  07A6               	addwf	sprintf@ap,f
  2722  0171                     i1l1633:
  2723                           
  2724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2725  0171  1FAA               	btfss	sprintf@val+1,7
  2726  0172  2974               	goto	u118_21
  2727  0173  2975               	goto	u118_20
  2728  0174                     u118_21:
  2729  0174  297E               	goto	i1l1639
  2730  0175                     u118_20:
  2731  0175                     i1l1635:
  2732                           
  2733                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2734  0175  3003               	movlw	3
  2735  0176  00A3               	movwf	??_sprintf
  2736  0177  0823               	movf	??_sprintf,w
  2737  0178  04A7               	iorwf	sprintf@flag,f
  2738  0179                     i1l1637:
  2739                           
  2740                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2741  0179  09A9               	comf	sprintf@val,f
  2742  017A  09AA               	comf	sprintf@val+1,f
  2743  017B  0AA9               	incf	sprintf@val,f
  2744  017C  1903               	skipnz
  2745  017D  0AAA               	incf	sprintf@val+1,f
  2746  017E                     i1l1639:
  2747                           
  2748                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2749  017E  01AC               	clrf	sprintf@c
  2750  017F  0AAC               	incf	sprintf@c,f
  2751  0180                     i1l1645:
  2752                           
  2753                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2754  0180  082C               	movf	sprintf@c,w
  2755  0181  00A3               	movwf	??_sprintf
  2756  0182  0723               	addwf	??_sprintf,w
  2757  0183  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2758  0184  0084               	movwf	4
  2759  0185  120A  118A  252A  120A  118A  	fcall	stringdir
  2760  018A  00A4               	movwf	??_sprintf+1
  2761  018B  120A  118A  252A  120A  118A  	fcall	stringdir
  2762  0190  00A5               	movwf	??_sprintf+2
  2763  0191  0825               	movf	??_sprintf+2,w
  2764  0192  022A               	subwf	sprintf@val+1,w
  2765  0193  1D03               	skipz
  2766  0194  2997               	goto	u119_25
  2767  0195  0824               	movf	??_sprintf+1,w
  2768  0196  0229               	subwf	sprintf@val,w
  2769  0197                     u119_25:
  2770  0197  1803               	skipnc
  2771  0198  299A               	goto	u119_21
  2772  0199  299B               	goto	u119_20
  2773  019A                     u119_21:
  2774  019A  299C               	goto	i1l1649
  2775  019B                     u119_20:
  2776  019B  29A6               	goto	i1l1651
  2777  019C                     i1l1649:
  2778  019C  3001               	movlw	1
  2779  019D  00A3               	movwf	??_sprintf
  2780  019E  0823               	movf	??_sprintf,w
  2781  019F  07AC               	addwf	sprintf@c,f
  2782  01A0  3005               	movlw	5
  2783  01A1  062C               	xorwf	sprintf@c,w
  2784  01A2  1D03               	btfss	3,2
  2785  01A3  29A5               	goto	u120_21
  2786  01A4  29A6               	goto	u120_20
  2787  01A5                     u120_21:
  2788  01A5  2980               	goto	i1l1645
  2789  01A6                     u120_20:
  2790  01A6                     i1l1651:
  2791                           
  2792                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2793  01A6  0827               	movf	sprintf@flag,w
  2794  01A7  3903               	andlw	3
  2795  01A8  1903               	btfsc	3,2
  2796  01A9  29AB               	goto	u121_21
  2797  01AA  29AC               	goto	u121_20
  2798  01AB                     u121_21:
  2799  01AB  29B7               	goto	i1l1657
  2800  01AC                     u121_20:
  2801  01AC                     i1l1653:
  2802                           
  2803                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2804  01AC  302D               	movlw	45
  2805  01AD  00A3               	movwf	??_sprintf
  2806  01AE  082B               	movf	sprintf@sp,w
  2807  01AF  0084               	movwf	4
  2808  01B0  0823               	movf	??_sprintf,w
  2809  01B1  1383               	bcf	3,7	;select IRP bank0
  2810  01B2  0080               	movwf	0
  2811  01B3                     i1l1655:
  2812  01B3  3001               	movlw	1
  2813  01B4  00A3               	movwf	??_sprintf
  2814  01B5  0823               	movf	??_sprintf,w
  2815  01B6  07AB               	addwf	sprintf@sp,f
  2816  01B7                     i1l1657:
  2817                           
  2818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2819  01B7  082C               	movf	sprintf@c,w
  2820  01B8  00A3               	movwf	??_sprintf
  2821  01B9  0823               	movf	??_sprintf,w
  2822  01BA  00A8               	movwf	sprintf@prec
  2823                           
  2824                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2825  01BB  29F5               	goto	i1l1665
  2826  01BC                     i1l1659:
  2827                           
  2828                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2829  01BC  300A               	movlw	10
  2830  01BD  00F8               	movwf	___lwmod@divisor
  2831  01BE  3000               	movlw	0
  2832  01BF  00F9               	movwf	___lwmod@divisor+1
  2833  01C0  0828               	movf	sprintf@prec,w
  2834  01C1  00A3               	movwf	??_sprintf
  2835  01C2  0723               	addwf	??_sprintf,w
  2836  01C3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2837  01C4  0084               	movwf	4
  2838  01C5  120A  118A  252A  120A  118A  	fcall	stringdir
  2839  01CA  00F0               	movwf	___lwdiv@divisor
  2840  01CB  120A  118A  252A  120A  118A  	fcall	stringdir
  2841  01D0  00F1               	movwf	___lwdiv@divisor+1
  2842  01D1  082A               	movf	sprintf@val+1,w
  2843  01D2  00F3               	movwf	___lwdiv@dividend+1
  2844  01D3  0829               	movf	sprintf@val,w
  2845  01D4  00F2               	movwf	___lwdiv@dividend
  2846  01D5  120A  118A  239E  120A  118A  	fcall	___lwdiv
  2847  01DA  0871               	movf	?___lwdiv+1,w
  2848  01DB  00FB               	movwf	___lwmod@dividend+1
  2849  01DC  0870               	movf	?___lwdiv,w
  2850  01DD  00FA               	movwf	___lwmod@dividend
  2851  01DE  120A  118A  23E2  120A  118A  	fcall	___lwmod
  2852  01E3  0878               	movf	?___lwmod,w
  2853  01E4  3E30               	addlw	48
  2854  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  2855  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  2856  01E7  00A4               	movwf	??_sprintf+1
  2857  01E8  0824               	movf	??_sprintf+1,w
  2858  01E9  00AC               	movwf	sprintf@c
  2859  01EA                     i1l1661:
  2860                           
  2861                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2862  01EA  082C               	movf	sprintf@c,w
  2863  01EB  00A3               	movwf	??_sprintf
  2864  01EC  082B               	movf	sprintf@sp,w
  2865  01ED  0084               	movwf	4
  2866  01EE  0823               	movf	??_sprintf,w
  2867  01EF  1383               	bcf	3,7	;select IRP bank0
  2868  01F0  0080               	movwf	0
  2869  01F1                     i1l1663:
  2870  01F1  3001               	movlw	1
  2871  01F2  00A3               	movwf	??_sprintf
  2872  01F3  0823               	movf	??_sprintf,w
  2873  01F4  07AB               	addwf	sprintf@sp,f
  2874  01F5                     i1l1665:
  2875                           
  2876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2877  01F5  30FF               	movlw	255
  2878  01F6  00A3               	movwf	??_sprintf
  2879  01F7  0823               	movf	??_sprintf,w
  2880  01F8  07A8               	addwf	sprintf@prec,f
  2881  01F9  0A28               	incf	sprintf@prec,w
  2882  01FA  1D03               	btfss	3,2
  2883  01FB  29FD               	goto	u122_21
  2884  01FC  29FE               	goto	u122_20
  2885  01FD                     u122_21:
  2886  01FD  29BC               	goto	i1l1659
  2887  01FE                     u122_20:
  2888  01FE                     i1l1667:
  2889                           
  2890                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2891  01FE  3001               	movlw	1
  2892  01FF  07A0               	addwf	sprintf@f,f
  2893  0200  30FF               	movlw	-1
  2894  0201  0720               	addwf	sprintf@f,w
  2895  0202  0084               	movwf	4
  2896  0203  120A  118A  252A  120A  118A  	fcall	stringdir
  2897  0208  00A3               	movwf	??_sprintf
  2898  0209  0823               	movf	??_sprintf,w
  2899  020A  00AC               	movwf	sprintf@c
  2900  020B  082C               	movf	sprintf@c,w
  2901  020C  1D03               	btfss	3,2
  2902  020D  2A0F               	goto	u123_21
  2903  020E  2A10               	goto	u123_20
  2904  020F                     u123_21:
  2905  020F  2935               	goto	i1l1617
  2906  0210                     u123_20:
  2907  0210                     i1l1669:
  2908                           
  2909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2910  0210  082B               	movf	sprintf@sp,w
  2911  0211  0084               	movwf	4
  2912  0212  1383               	bcf	3,7	;select IRP bank0
  2913  0213  0180               	clrf	0
  2914  0214                     i1l347:
  2915  0214  0008               	return
  2916  0215                     __end_of_sprintf:
  2917                           
  2918                           	psect	text15
  2919  03E2                     __ptext15:	
  2920 ;; *************** function ___lwmod *****************
  2921 ;; Defined at:
  2922 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  divisor         2    8[COMMON] unsigned int 
  2925 ;;  dividend        2   10[COMMON] unsigned int 
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;  counter         1   13[COMMON] unsigned char 
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  2    8[COMMON] unsigned int 
  2930 ;; Registers used:
  2931 ;;		wreg, status,2, status,0
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2937 ;;      Params:         4       0       0       0       0
  2938 ;;      Locals:         1       0       0       0       0
  2939 ;;      Temps:          1       0       0       0       0
  2940 ;;      Totals:         6       0       0       0       0
  2941 ;;Total ram usage:        6 bytes
  2942 ;; Hardware stack levels used:    1
  2943 ;; This function calls:
  2944 ;;		Nothing
  2945 ;; This function is called by:
  2946 ;;		_sprintf
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           
  2951                           ;psect for function ___lwmod
  2952  03E2                     ___lwmod:
  2953  03E2                     i1l1499:	
  2954                           ;incstack = 0
  2955                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2956                           
  2957  03E2  0878               	movf	___lwmod@divisor,w
  2958  03E3  0479               	iorwf	___lwmod@divisor+1,w
  2959  03E4  1903               	btfsc	3,2
  2960  03E5  2BE7               	goto	u98_21
  2961  03E6  2BE8               	goto	u98_20
  2962  03E7                     u98_21:
  2963  03E7  2C17               	goto	i1l1517
  2964  03E8                     u98_20:
  2965  03E8                     i1l1501:
  2966  03E8  01FD               	clrf	___lwmod@counter
  2967  03E9  0AFD               	incf	___lwmod@counter,f
  2968  03EA  2BF6               	goto	i1l1507
  2969  03EB                     i1l1503:
  2970  03EB  3001               	movlw	1
  2971  03EC                     u99_25:
  2972  03EC  1003               	clrc
  2973  03ED  0DF8               	rlf	___lwmod@divisor,f
  2974  03EE  0DF9               	rlf	___lwmod@divisor+1,f
  2975  03EF  3EFF               	addlw	-1
  2976  03F0  1D03               	skipz
  2977  03F1  2BEC               	goto	u99_25
  2978  03F2                     i1l1505:
  2979  03F2  3001               	movlw	1
  2980  03F3  00FC               	movwf	??___lwmod
  2981  03F4  087C               	movf	??___lwmod,w
  2982  03F5  07FD               	addwf	___lwmod@counter,f
  2983  03F6                     i1l1507:
  2984  03F6  1FF9               	btfss	___lwmod@divisor+1,7
  2985  03F7  2BF9               	goto	u100_21
  2986  03F8  2BFA               	goto	u100_20
  2987  03F9                     u100_21:
  2988  03F9  2BEB               	goto	i1l1503
  2989  03FA                     u100_20:
  2990  03FA                     i1l1509:
  2991  03FA  0879               	movf	___lwmod@divisor+1,w
  2992  03FB  027B               	subwf	___lwmod@dividend+1,w
  2993  03FC  1D03               	skipz
  2994  03FD  2C00               	goto	u101_25
  2995  03FE  0878               	movf	___lwmod@divisor,w
  2996  03FF  027A               	subwf	___lwmod@dividend,w
  2997  0400                     u101_25:
  2998  0400  1C03               	skipc
  2999  0401  2C03               	goto	u101_21
  3000  0402  2C04               	goto	u101_20
  3001  0403                     u101_21:
  3002  0403  2C0A               	goto	i1l1513
  3003  0404                     u101_20:
  3004  0404                     i1l1511:
  3005  0404  0878               	movf	___lwmod@divisor,w
  3006  0405  02FA               	subwf	___lwmod@dividend,f
  3007  0406  0879               	movf	___lwmod@divisor+1,w
  3008  0407  1C03               	skipc
  3009  0408  03FB               	decf	___lwmod@dividend+1,f
  3010  0409  02FB               	subwf	___lwmod@dividend+1,f
  3011  040A                     i1l1513:
  3012  040A  3001               	movlw	1
  3013  040B                     u102_25:
  3014  040B  1003               	clrc
  3015  040C  0CF9               	rrf	___lwmod@divisor+1,f
  3016  040D  0CF8               	rrf	___lwmod@divisor,f
  3017  040E  3EFF               	addlw	-1
  3018  040F  1D03               	skipz
  3019  0410  2C0B               	goto	u102_25
  3020  0411                     i1l1515:
  3021  0411  3001               	movlw	1
  3022  0412  02FD               	subwf	___lwmod@counter,f
  3023  0413  1D03               	btfss	3,2
  3024  0414  2C16               	goto	u103_21
  3025  0415  2C17               	goto	u103_20
  3026  0416                     u103_21:
  3027  0416  2BFA               	goto	i1l1509
  3028  0417                     u103_20:
  3029  0417                     i1l1517:
  3030  0417  087B               	movf	___lwmod@dividend+1,w
  3031  0418  00F9               	movwf	?___lwmod+1
  3032  0419  087A               	movf	___lwmod@dividend,w
  3033  041A  00F8               	movwf	?___lwmod
  3034  041B                     i1l633:
  3035  041B  0008               	return
  3036  041C                     __end_of___lwmod:
  3037                           
  3038                           	psect	text16
  3039  039E                     __ptext16:	
  3040 ;; *************** function ___lwdiv *****************
  3041 ;; Defined at:
  3042 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;  divisor         2    0[COMMON] unsigned int 
  3045 ;;  dividend        2    2[COMMON] unsigned int 
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;  quotient        2    5[COMMON] unsigned int 
  3048 ;;  counter         1    7[COMMON] unsigned char 
  3049 ;; Return value:  Size  Location     Type
  3050 ;;                  2    0[COMMON] unsigned int 
  3051 ;; Registers used:
  3052 ;;		wreg, status,2, status,0
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/0
  3055 ;;		On exit  : 0/0
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3058 ;;      Params:         4       0       0       0       0
  3059 ;;      Locals:         3       0       0       0       0
  3060 ;;      Temps:          1       0       0       0       0
  3061 ;;      Totals:         8       0       0       0       0
  3062 ;;Total ram usage:        8 bytes
  3063 ;; Hardware stack levels used:    1
  3064 ;; This function calls:
  3065 ;;		Nothing
  3066 ;; This function is called by:
  3067 ;;		_sprintf
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           
  3072                           ;psect for function ___lwdiv
  3073  039E                     ___lwdiv:
  3074  039E                     i1l1473:	
  3075                           ;incstack = 0
  3076                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3077                           
  3078  039E  01F5               	clrf	___lwdiv@quotient
  3079  039F  01F6               	clrf	___lwdiv@quotient+1
  3080  03A0                     i1l1475:
  3081  03A0  0870               	movf	___lwdiv@divisor,w
  3082  03A1  0471               	iorwf	___lwdiv@divisor+1,w
  3083  03A2  1903               	btfsc	3,2
  3084  03A3  2BA5               	goto	u91_21
  3085  03A4  2BA6               	goto	u91_20
  3086  03A5                     u91_21:
  3087  03A5  2BDD               	goto	i1l1495
  3088  03A6                     u91_20:
  3089  03A6                     i1l1477:
  3090  03A6  01F7               	clrf	___lwdiv@counter
  3091  03A7  0AF7               	incf	___lwdiv@counter,f
  3092  03A8  2BB4               	goto	i1l1483
  3093  03A9                     i1l1479:
  3094  03A9  3001               	movlw	1
  3095  03AA                     u92_25:
  3096  03AA  1003               	clrc
  3097  03AB  0DF0               	rlf	___lwdiv@divisor,f
  3098  03AC  0DF1               	rlf	___lwdiv@divisor+1,f
  3099  03AD  3EFF               	addlw	-1
  3100  03AE  1D03               	skipz
  3101  03AF  2BAA               	goto	u92_25
  3102  03B0                     i1l1481:
  3103  03B0  3001               	movlw	1
  3104  03B1  00F4               	movwf	??___lwdiv
  3105  03B2  0874               	movf	??___lwdiv,w
  3106  03B3  07F7               	addwf	___lwdiv@counter,f
  3107  03B4                     i1l1483:
  3108  03B4  1FF1               	btfss	___lwdiv@divisor+1,7
  3109  03B5  2BB7               	goto	u93_21
  3110  03B6  2BB8               	goto	u93_20
  3111  03B7                     u93_21:
  3112  03B7  2BA9               	goto	i1l1479
  3113  03B8                     u93_20:
  3114  03B8                     i1l1485:
  3115  03B8  3001               	movlw	1
  3116  03B9                     u94_25:
  3117  03B9  1003               	clrc
  3118  03BA  0DF5               	rlf	___lwdiv@quotient,f
  3119  03BB  0DF6               	rlf	___lwdiv@quotient+1,f
  3120  03BC  3EFF               	addlw	-1
  3121  03BD  1D03               	skipz
  3122  03BE  2BB9               	goto	u94_25
  3123  03BF  0871               	movf	___lwdiv@divisor+1,w
  3124  03C0  0273               	subwf	___lwdiv@dividend+1,w
  3125  03C1  1D03               	skipz
  3126  03C2  2BC5               	goto	u95_25
  3127  03C3  0870               	movf	___lwdiv@divisor,w
  3128  03C4  0272               	subwf	___lwdiv@dividend,w
  3129  03C5                     u95_25:
  3130  03C5  1C03               	skipc
  3131  03C6  2BC8               	goto	u95_21
  3132  03C7  2BC9               	goto	u95_20
  3133  03C8                     u95_21:
  3134  03C8  2BD0               	goto	i1l1491
  3135  03C9                     u95_20:
  3136  03C9                     i1l1487:
  3137  03C9  0870               	movf	___lwdiv@divisor,w
  3138  03CA  02F2               	subwf	___lwdiv@dividend,f
  3139  03CB  0871               	movf	___lwdiv@divisor+1,w
  3140  03CC  1C03               	skipc
  3141  03CD  03F3               	decf	___lwdiv@dividend+1,f
  3142  03CE  02F3               	subwf	___lwdiv@dividend+1,f
  3143  03CF                     i1l1489:
  3144  03CF  1475               	bsf	___lwdiv@quotient,0
  3145  03D0                     i1l1491:
  3146  03D0  3001               	movlw	1
  3147  03D1                     u96_25:
  3148  03D1  1003               	clrc
  3149  03D2  0CF1               	rrf	___lwdiv@divisor+1,f
  3150  03D3  0CF0               	rrf	___lwdiv@divisor,f
  3151  03D4  3EFF               	addlw	-1
  3152  03D5  1D03               	skipz
  3153  03D6  2BD1               	goto	u96_25
  3154  03D7                     i1l1493:
  3155  03D7  3001               	movlw	1
  3156  03D8  02F7               	subwf	___lwdiv@counter,f
  3157  03D9  1D03               	btfss	3,2
  3158  03DA  2BDC               	goto	u97_21
  3159  03DB  2BDD               	goto	u97_20
  3160  03DC                     u97_21:
  3161  03DC  2BB8               	goto	i1l1485
  3162  03DD                     u97_20:
  3163  03DD                     i1l1495:
  3164  03DD  0876               	movf	___lwdiv@quotient+1,w
  3165  03DE  00F1               	movwf	?___lwdiv+1
  3166  03DF  0875               	movf	___lwdiv@quotient,w
  3167  03E0  00F0               	movwf	?___lwdiv
  3168  03E1                     i1l623:
  3169  03E1  0008               	return
  3170  03E2                     __end_of___lwdiv:
  3171                           
  3172                           	psect	text17
  3173  04E0                     __ptext17:	
  3174 ;; *************** function _recivedCMD *****************
  3175 ;; Defined at:
  3176 ;;		line 48 in file "usart.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  cmd             1    wreg     PTR unsigned char 
  3179 ;;		 -> data(10), 
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;  cmd             1    2[COMMON] PTR unsigned char 
  3182 ;;		 -> data(10), 
  3183 ;;  j               1    4[COMMON] unsigned char 
  3184 ;;  i               1    3[COMMON] unsigned char 
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  1    wreg      void 
  3187 ;; Registers used:
  3188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3194 ;;      Params:         0       0       0       0       0
  3195 ;;      Locals:         3       0       0       0       0
  3196 ;;      Temps:          2       0       0       0       0
  3197 ;;      Totals:         5       0       0       0       0
  3198 ;;Total ram usage:        5 bytes
  3199 ;; Hardware stack levels used:    1
  3200 ;; Hardware stack levels required when called:    1
  3201 ;; This function calls:
  3202 ;;		_get1
  3203 ;; This function is called by:
  3204 ;;		_myISR
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208                           
  3209                           ;psect for function _recivedCMD
  3210  04E0                     _recivedCMD:
  3211                           
  3212                           ;incstack = 0
  3213                           ; Regs used in _recivedCMD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3214                           ;recivedCMD@cmd stored from wreg
  3215  04E0  00F2               	movwf	recivedCMD@cmd
  3216  04E1                     i1l1577:
  3217                           
  3218                           ;usart.c: 49:     unsigned char i = 0;
  3219  04E1  01F3               	clrf	recivedCMD@i
  3220  04E2                     i1l1579:
  3221                           
  3222                           ;usart.c: 52:         cmd[i] = get1();
  3223  04E2  120A  118A  25D8  120A  118A  	fcall	_get1
  3224  04E7  00F0               	movwf	??_recivedCMD
  3225  04E8  0873               	movf	recivedCMD@i,w
  3226  04E9  0772               	addwf	recivedCMD@cmd,w
  3227  04EA  00F1               	movwf	??_recivedCMD+1
  3228  04EB  0871               	movf	??_recivedCMD+1,w
  3229  04EC  0084               	movwf	4
  3230  04ED  0870               	movf	??_recivedCMD,w
  3231  04EE  1383               	bcf	3,7	;select IRP bank0
  3232  04EF  0080               	movwf	0
  3233  04F0                     i1l1581:
  3234                           
  3235                           ;usart.c: 53:         j = cmd[i];
  3236  04F0  0873               	movf	recivedCMD@i,w
  3237  04F1  0772               	addwf	recivedCMD@cmd,w
  3238  04F2  00F0               	movwf	??_recivedCMD
  3239  04F3  0870               	movf	??_recivedCMD,w
  3240  04F4  0084               	movwf	4
  3241  04F5  0800               	movf	0,w
  3242  04F6  00F1               	movwf	??_recivedCMD+1
  3243  04F7  0871               	movf	??_recivedCMD+1,w
  3244  04F8  00F4               	movwf	recivedCMD@j
  3245  04F9                     i1l1583:
  3246                           
  3247                           ;usart.c: 54:         i++;
  3248  04F9  3001               	movlw	1
  3249  04FA  00F0               	movwf	??_recivedCMD
  3250  04FB  0870               	movf	??_recivedCMD,w
  3251  04FC  07F3               	addwf	recivedCMD@i,f
  3252  04FD                     i1l1585:
  3253                           
  3254                           ;usart.c: 55:         }
  3255  04FD  300A               	movlw	10
  3256  04FE  0674               	xorwf	recivedCMD@j,w
  3257  04FF  1903               	btfsc	3,2
  3258  0500  2D02               	goto	u112_21
  3259  0501  2D03               	goto	u112_20
  3260  0502                     u112_21:
  3261  0502  2D09               	goto	i1l158
  3262  0503                     u112_20:
  3263  0503                     i1l1587:
  3264  0503  300D               	movlw	13
  3265  0504  0674               	xorwf	recivedCMD@j,w
  3266  0505  1D03               	btfss	3,2
  3267  0506  2D08               	goto	u113_21
  3268  0507  2D09               	goto	u113_20
  3269  0508                     u113_21:
  3270  0508  2CE2               	goto	i1l1579
  3271  0509                     u113_20:
  3272  0509                     i1l158:
  3273  0509  0008               	return
  3274  050A                     __end_of_recivedCMD:
  3275                           
  3276                           	psect	text18
  3277  05D8                     __ptext18:	
  3278 ;; *************** function _get1 *****************
  3279 ;; Defined at:
  3280 ;;		line 61 in file "usart.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;		None
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;		None
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      unsigned char 
  3287 ;; Registers used:
  3288 ;;		wreg
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3294 ;;      Params:         0       0       0       0       0
  3295 ;;      Locals:         0       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0
  3297 ;;      Totals:         0       0       0       0       0
  3298 ;;Total ram usage:        0 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; This function calls:
  3301 ;;		Nothing
  3302 ;; This function is called by:
  3303 ;;		_recivedCMD
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           
  3308                           ;psect for function _get1
  3309  05D8                     _get1:
  3310  05D8                     i1l1395:	
  3311                           ;incstack = 0
  3312                           ; Regs used in _get1: [wreg]
  3313                           
  3314  05D8                     i1l161:	
  3315                           ;usart.c: 64:     }
  3316                           
  3317                           
  3318                           ;usart.c: 62:     while(!PIR1bits.RCIF){
  3319  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  3320  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  3321  05DA  1E8C               	btfss	12,5	;volatile
  3322  05DB  2DDD               	goto	u76_21
  3323  05DC  2DDE               	goto	u76_20
  3324  05DD                     u76_21:
  3325  05DD  2DD8               	goto	i1l161
  3326  05DE                     u76_20:
  3327  05DE                     i1l1397:
  3328                           
  3329                           ;usart.c: 65:     return RCREG;
  3330  05DE  081A               	movf	26,w	;volatile
  3331  05DF                     i1l164:
  3332  05DF  0008               	return
  3333  05E0                     __end_of_get1:
  3334                           
  3335                           	psect	text19
  3336  0574                     __ptext19:	
  3337 ;; *************** function _i2c_write *****************
  3338 ;; Defined at:
  3339 ;;		line 52 in file "i2c.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  dato            1    wreg     unsigned char 
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;  dato            1    0[COMMON] unsigned char 
  3344 ;; Return value:  Size  Location     Type
  3345 ;;                  1    wreg      unsigned char 
  3346 ;; Registers used:
  3347 ;;		wreg, status,2, status,0, pclath, cstack
  3348 ;; Tracked objects:
  3349 ;;		On entry : 0/0
  3350 ;;		On exit  : 0/0
  3351 ;;		Unchanged: 0/0
  3352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3353 ;;      Params:         0       0       0       0       0
  3354 ;;      Locals:         1       0       0       0       0
  3355 ;;      Temps:          0       0       0       0       0
  3356 ;;      Totals:         1       0       0       0       0
  3357 ;;Total ram usage:        1 bytes
  3358 ;; Hardware stack levels used:    1
  3359 ;; Hardware stack levels required when called:    1
  3360 ;; This function calls:
  3361 ;;		_i2c_idle
  3362 ;; This function is called by:
  3363 ;;		_myISR
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366                           
  3367                           
  3368                           ;psect for function _i2c_write
  3369  0574                     _i2c_write:
  3370                           
  3371                           ;incstack = 0
  3372                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  3373                           ;i2c_write@dato stored from wreg
  3374  0574  00F0               	movwf	i2c_write@dato
  3375  0575                     i1l1543:
  3376                           
  3377                           ;i2c.c: 53:     i2c_idle();
  3378  0575  120A  118A  25B6  120A  118A  	fcall	_i2c_idle
  3379  057A                     i1l1545:
  3380                           
  3381                           ;i2c.c: 54:     SSPBUF = dato;
  3382  057A  0870               	movf	i2c_write@dato,w
  3383  057B  1283               	bcf	3,5	;RP0=0, select bank0
  3384  057C  1303               	bcf	3,6	;RP1=0, select bank0
  3385  057D  0093               	movwf	19	;volatile
  3386  057E                     i1l1547:	
  3387                           ;i2c.c: 55:     while(SSPSTAT & 0x05);
  3388                           
  3389  057E  1683               	bsf	3,5	;RP0=1, select bank1
  3390  057F  1303               	bcf	3,6	;RP1=0, select bank1
  3391  0580  0814               	movf	20,w	;volatile
  3392  0581  3905               	andlw	5
  3393  0582  1D03               	btfss	3,2
  3394  0583  2D85               	goto	u110_21
  3395  0584  2D86               	goto	u110_20
  3396  0585                     u110_21:
  3397  0585  2D7E               	goto	i1l1547
  3398  0586                     u110_20:
  3399  0586                     i1l83:
  3400  0586  0008               	return
  3401  0587                     __end_of_i2c_write:
  3402                           
  3403                           	psect	text20
  3404  05A8                     __ptext20:	
  3405 ;; *************** function _i2c_stop *****************
  3406 ;; Defined at:
  3407 ;;		line 37 in file "i2c.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;		None
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;		None
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  1    wreg      void 
  3414 ;; Registers used:
  3415 ;;		None
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3421 ;;      Params:         0       0       0       0       0
  3422 ;;      Locals:         0       0       0       0       0
  3423 ;;      Temps:          0       0       0       0       0
  3424 ;;      Totals:         0       0       0       0       0
  3425 ;;Total ram usage:        0 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; This function calls:
  3428 ;;		Nothing
  3429 ;; This function is called by:
  3430 ;;		_myISR
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           
  3435                           ;psect for function _i2c_stop
  3436  05A8                     _i2c_stop:
  3437  05A8                     i1l1533:	
  3438                           ;incstack = 0
  3439                           ; Regs used in _i2c_stop: []
  3440                           
  3441                           
  3442                           ;i2c.c: 38:     SSPCON2bits.PEN = 1;
  3443  05A8  1683               	bsf	3,5	;RP0=1, select bank1
  3444  05A9  1303               	bcf	3,6	;RP1=0, select bank1
  3445  05AA  1511               	bsf	17,2	;volatile
  3446  05AB                     i1l62:	
  3447                           ;i2c.c: 39:     while(SSPCON2bits.PEN);
  3448                           
  3449  05AB  1911               	btfsc	17,2	;volatile
  3450  05AC  2DAE               	goto	u106_21
  3451  05AD  2DAF               	goto	u106_20
  3452  05AE                     u106_21:
  3453  05AE  2DAB               	goto	i1l62
  3454  05AF                     u106_20:
  3455  05AF                     i1l65:
  3456  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  3457  05B0  1D8C               	btfss	12,3	;volatile
  3458  05B1  2DB3               	goto	u107_21
  3459  05B2  2DB4               	goto	u107_20
  3460  05B3                     u107_21:
  3461  05B3  2DAF               	goto	i1l65
  3462  05B4                     u107_20:
  3463  05B4                     i1l67:
  3464                           
  3465                           ;i2c.c: 41:     SSPIF = 0;
  3466  05B4  118C               	bcf	12,3	;volatile
  3467  05B5                     i1l68:
  3468  05B5  0008               	return
  3469  05B6                     __end_of_i2c_stop:
  3470                           
  3471                           	psect	text21
  3472  0587                     __ptext21:	
  3473 ;; *************** function _i2c_start *****************
  3474 ;; Defined at:
  3475 ;;		line 20 in file "i2c.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;		None
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;		None
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  1    wreg      void 
  3482 ;; Registers used:
  3483 ;;		wreg, status,2, status,0, pclath, cstack
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3489 ;;      Params:         0       0       0       0       0
  3490 ;;      Locals:         0       0       0       0       0
  3491 ;;      Temps:          0       0       0       0       0
  3492 ;;      Totals:         0       0       0       0       0
  3493 ;;Total ram usage:        0 bytes
  3494 ;; Hardware stack levels used:    1
  3495 ;; Hardware stack levels required when called:    1
  3496 ;; This function calls:
  3497 ;;		_i2c_idle
  3498 ;; This function is called by:
  3499 ;;		_myISR
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           
  3504                           ;psect for function _i2c_start
  3505  0587                     _i2c_start:
  3506  0587                     i1l1529:	
  3507                           ;incstack = 0
  3508                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  3509                           
  3510                           
  3511                           ;i2c.c: 22:     i2c_idle();
  3512  0587  120A  118A  25B6  120A  118A  	fcall	_i2c_idle
  3513  058C                     i1l1531:
  3514                           
  3515                           ;i2c.c: 23:     SSPCON2bits.SEN = 1;
  3516  058C  1683               	bsf	3,5	;RP0=1, select bank1
  3517  058D  1303               	bcf	3,6	;RP1=0, select bank1
  3518  058E  1411               	bsf	17,0	;volatile
  3519  058F                     i1l44:	
  3520                           ;i2c.c: 24:     while(SSPCON2bits.SEN == 1);
  3521                           
  3522  058F  1811               	btfsc	17,0	;volatile
  3523  0590  2D92               	goto	u104_21
  3524  0591  2D93               	goto	u104_20
  3525  0592                     u104_21:
  3526  0592  2D8F               	goto	i1l44
  3527  0593                     u104_20:
  3528  0593                     i1l47:
  3529  0593  1283               	bcf	3,5	;RP0=0, select bank0
  3530  0594  1D8C               	btfss	12,3	;volatile
  3531  0595  2D97               	goto	u105_21
  3532  0596  2D98               	goto	u105_20
  3533  0597                     u105_21:
  3534  0597  2D93               	goto	i1l47
  3535  0598                     u105_20:
  3536  0598                     i1l49:
  3537                           
  3538                           ;i2c.c: 26:     SSPIF = 0;
  3539  0598  118C               	bcf	12,3	;volatile
  3540  0599                     i1l50:
  3541  0599  0008               	return
  3542  059A                     __end_of_i2c_start:
  3543                           
  3544                           	psect	text22
  3545  0560                     __ptext22:	
  3546 ;; *************** function _i2c_read *****************
  3547 ;; Defined at:
  3548 ;;		line 44 in file "i2c.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;		None
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  1    wreg      unsigned char 
  3555 ;; Registers used:
  3556 ;;		wreg, status,2, status,0, pclath, cstack
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3562 ;;      Params:         0       0       0       0       0
  3563 ;;      Locals:         0       0       0       0       0
  3564 ;;      Temps:          0       0       0       0       0
  3565 ;;      Totals:         0       0       0       0       0
  3566 ;;Total ram usage:        0 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; Hardware stack levels required when called:    1
  3569 ;; This function calls:
  3570 ;;		_i2c_idle
  3571 ;; This function is called by:
  3572 ;;		_myISR
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           
  3577                           ;psect for function _i2c_read
  3578  0560                     _i2c_read:
  3579  0560                     i1l1535:	
  3580                           ;incstack = 0
  3581                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  3582                           
  3583                           
  3584                           ;i2c.c: 45:     i2c_idle();
  3585  0560  120A  118A  25B6  120A  118A  	fcall	_i2c_idle
  3586  0565                     i1l1537:
  3587                           
  3588                           ;i2c.c: 46:     SSPCON2bits.RCEN = 1;
  3589  0565  1683               	bsf	3,5	;RP0=1, select bank1
  3590  0566  1303               	bcf	3,6	;RP1=0, select bank1
  3591  0567  1591               	bsf	17,3	;volatile
  3592  0568                     i1l71:	
  3593                           ;i2c.c: 47:     while(SSPCON2bits.RCEN == 1);
  3594                           
  3595  0568  1991               	btfsc	17,3	;volatile
  3596  0569  2D6B               	goto	u108_21
  3597  056A  2D6C               	goto	u108_20
  3598  056B                     u108_21:
  3599  056B  2D68               	goto	i1l71
  3600  056C                     u108_20:
  3601  056C                     i1l74:
  3602  056C  1C14               	btfss	20,0	;volatile
  3603  056D  2D6F               	goto	u109_21
  3604  056E  2D70               	goto	u109_20
  3605  056F                     u109_21:
  3606  056F  2D6C               	goto	i1l74
  3607  0570                     u109_20:
  3608  0570                     i1l1539:
  3609                           
  3610                           ;i2c.c: 49:     return SSPBUF;
  3611  0570  1283               	bcf	3,5	;RP0=0, select bank0
  3612  0571  1303               	bcf	3,6	;RP1=0, select bank0
  3613  0572  0813               	movf	19,w	;volatile
  3614  0573                     i1l77:
  3615  0573  0008               	return
  3616  0574                     __end_of_i2c_read:
  3617                           
  3618                           	psect	text23
  3619  05B6                     __ptext23:	
  3620 ;; *************** function _i2c_idle *****************
  3621 ;; Defined at:
  3622 ;;		line 81 in file "i2c.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;		None
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;		None
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      void 
  3629 ;; Registers used:
  3630 ;;		wreg, status,2
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3636 ;;      Params:         0       0       0       0       0
  3637 ;;      Locals:         0       0       0       0       0
  3638 ;;      Temps:          0       0       0       0       0
  3639 ;;      Totals:         0       0       0       0       0
  3640 ;;Total ram usage:        0 bytes
  3641 ;; Hardware stack levels used:    1
  3642 ;; This function calls:
  3643 ;;		Nothing
  3644 ;; This function is called by:
  3645 ;;		_i2c_start
  3646 ;;		_i2c_read
  3647 ;;		_i2c_write
  3648 ;;		_i2c_restart
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           
  3653                           ;psect for function _i2c_idle
  3654  05B6                     _i2c_idle:
  3655  05B6                     i1l1387:	
  3656                           ;incstack = 0
  3657                           ; Regs used in _i2c_idle: [wreg+status,2]
  3658                           
  3659  05B6                     i1l1389:	
  3660                           ;i2c.c: 82:     while((SSPCON2 & 0x1F)|| (SSPSTAT & 0x04));
  3661                           
  3662  05B6  1683               	bsf	3,5	;RP0=1, select bank1
  3663  05B7  1303               	bcf	3,6	;RP1=0, select bank1
  3664  05B8  0811               	movf	17,w	;volatile
  3665  05B9  391F               	andlw	31
  3666  05BA  1D03               	btfss	3,2
  3667  05BB  2DBD               	goto	u73_21
  3668  05BC  2DBE               	goto	u73_20
  3669  05BD                     u73_21:
  3670  05BD  2DB6               	goto	i1l1389
  3671  05BE                     u73_20:
  3672  05BE                     i1l1391:
  3673  05BE  1914               	btfsc	20,2	;volatile
  3674  05BF  2DC1               	goto	u74_21
  3675  05C0  2DC2               	goto	u74_20
  3676  05C1                     u74_21:
  3677  05C1  2DB6               	goto	i1l1389
  3678  05C2                     u74_20:
  3679  05C2                     i1l101:
  3680  05C2  0008               	return
  3681  05C3                     __end_of_i2c_idle:
  3682  007E                     btemp	set	126	;btemp
  3683  007E                     wtemp0	set	126
  3684                           
  3685                           	psect	config
  3686                           
  3687                           ;Config register CONFIG1 @ 0x2007
  3688                           ;	Oscillator Selection bits
  3689                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  3690                           ;	Watchdog Timer Enable bit
  3691                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3692                           ;	Power-up Timer Enable bit
  3693                           ;	PWRTE = OFF, PWRT disabled
  3694                           ;	RE3/MCLR pin function select bit
  3695                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  3696                           ;	Code Protection bit
  3697                           ;	CP = OFF, Program memory code protection is disabled
  3698                           ;	Data Code Protection bit
  3699                           ;	CPD = OFF, Data memory code protection is disabled
  3700                           ;	Brown Out Reset Selection bits
  3701                           ;	BOREN = ON, BOR enabled
  3702                           ;	Internal External Switchover bit
  3703                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3704                           ;	Fail-Safe Clock Monitor Enabled bit
  3705                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3706                           ;	Low Voltage Programming Enable bit
  3707                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  3708                           ;	In-Circuit Debugger Mode bit
  3709                           ;	DEBUG = 0x1, unprogrammed default
  3710  2007                     	org	8199
  3711  2007  3FF2               	dw	16370
  3712                           
  3713                           ;Config register CONFIG2 @ 0x2008
  3714                           ;	Brown-out Reset Selection bit
  3715                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3716                           ;	Flash Program Memory Self Write Enable bits
  3717                           ;	WRT = OFF, Write protection off
  3718  2008                     	org	8200
  3719  2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    10
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     43      58
    BANK1            80      3       3
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), NULL(NULL[0]), 

    strchr@ptr	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 2
		 -> STR_2(CODE[2]), STR_1(CODE[2]), NULL(NULL[0]), 

    strcspn@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), NULL(NULL[0]), 

    strtok@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), NULL(NULL[0]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), NULL(NULL[0]), 

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_7(CODE[4]), STR_5(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    dir	PTR unsigned char [3] size(1) Largest target is 10
		 -> data(BANK0[10]), NULL(NULL[0]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), NULL(NULL[0]), 

    token@cmd	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    token@tok	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), NULL(NULL[0]), 

    recivedCMD@cmd	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    usart_TxStr@str	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myISR in COMMON

    _usart_TxStr->_usart_Tx
    _token->_strtok
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    _main->_usart_init
    _usart_init->___aldiv

Critical Paths under _myISR in BANK0

    _myISR->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     725
                                              0 BANK1      3     3      0
                           _i2c_init
                    _usart_Interrupt
                         _usart_init
 ---------------------------------------------------------------------------------
 (1) _usart_init                                           8     4      4     725
                                             35 BANK0      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                             20 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _usart_Interrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _myISR                                                7     7      0    3618
                                             13 BANK0      7     7      0
                           _i2c_read
                          _i2c_start
                           _i2c_stop
                          _i2c_write
                         _recivedCMD
                            _sprintf
                             _strcmp
                              _token
                        _usart_TxStr
 ---------------------------------------------------------------------------------
 (4) _usart_TxStr                                          2     2      0     133
                                              1 COMMON     2     2      0
                           _usart_Tx
 ---------------------------------------------------------------------------------
 (5) _usart_Tx                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _token                                                6     6      0    1556
                                              0 BANK0      6     6      0
                             _strtok
 ---------------------------------------------------------------------------------
 (5) _strtok                                               4     3      1    1430
                                             10 COMMON     4     3      1
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (6) _strspn                                               7     5      2     506
                                              3 COMMON     7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (6) _strcspn                                              7     5      2     506
                                              3 COMMON     7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (8) _strchr                                               3     1      2     306
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (5) _strcmp                                               7     5      2     418
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             21    18      3    1320
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) _recivedCMD                                           5     5      0     169
                                              0 COMMON     5     5      0
                               _get1
 ---------------------------------------------------------------------------------
 (5) _get1                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_read                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (5) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_init
   _usart_Interrupt
   _usart_init
     ___aldiv

 _myISR (ROOT)
   _i2c_read
     _i2c_idle
   _i2c_start
     _i2c_idle
   _i2c_stop
   _i2c_write
     _i2c_idle
   _recivedCMD
     _get1
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _strcmp
   _token
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr
   _usart_TxStr
     _usart_Tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2B      3A       5       72.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      3       3       7        3.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Sep 18 22:52:20 2021

                       pc 0002               _SSPSTATbits 0094                        l41 05A7  
                      fsr 0004                       l133 0352                       l151 05D7  
                     l416 0229                       l426 02B1                       u810 021C  
                     u811 021B                       u900 029E                       u820 022D  
                     u901 029D                       u821 022C                       u830 024C  
                     u831 024B                       u850 0260                       u851 025F  
                     u845 0251                       u870 027B                       u871 027A  
                     u865 0262                       u890 0299                       u891 0298  
                     u875 0277                       u885 028B                       _dir 004B  
                     fsr0 0004                       indf 0000                      l1521 059A  
                    l1441 0238                      l1433 0215                      l1523 059E  
                    l1451 025C                      l1443 023C                      l1435 0218  
                    l1525 05A2                      l1461 028A                      l1453 0260  
                    l1445 0244                      l1437 021C                      l1527 05A3  
                    l1463 0293                      l1455 0269                      l1447 024C  
                    l1439 022D                      l1551 0308                      l1457 027B  
                    l1449 024F                      l1465 0299                      l1561 034D  
                    l1553 0345                      l1467 029E                      l1459 0289  
                    l1563 0350                      l1555 0348                      l1469 02A9  
                    l1565 0351                      l1557 034B                      l1549 0304  
                    l1575 05CF                      l1559 034C                      l1761 0353  
                    l1771 0379                      l1763 035F                      l1773 0388  
                    l1765 036C                      l1775 038B                      l1767 0371  
                    l1769 0376                      STR_1 0547                      STR_2 0547  
                    STR_3 0541                      STR_4 053E                      STR_5 053A  
                    STR_6 0544                      STR_7 053A                      u1317 0381  
                    u1327 0393                      i1l50 0599                      i1l44 058F  
                    i1l62 05AB                      i1l71 0568                      i1l47 0593  
                    i1l49 0598                      i1l65 05AF                      i1l74 056C  
                    i1l67 05B4                      i1l83 0586               _usart_TxStr 0549  
                    i1l68 05B5                      i1l77 0573                      _get1 05D8  
                    _data 0050                      _main 0353                      btemp 007E  
                    start 0012                     ?_get1 0070           __end_of___aldiv 02B2  
                   ?_main 0070           __end_of___lwdiv 03E2                     i1l101 05C2  
                   i1l136 05C8                     i1l161 05D8                     i1l170 0453  
                   i1l139 05CE                     i1l164 05DF                     i1l148 055F  
                   i1l229 0122                     i1l158 0509           __end_of___lwmod 041C  
                   i1l347 0214                     i1l623 03E1                     i1l633 041B  
                   i1l807 04DF                     i1l831 04B1                     i1l834 050B  
                   i1l818 0303                     i1l836 0529                     i1l847 0482  
                   _RCREG 001A                     _SPBRG 0099                     _PORTB 0006  
                   _PORTD 0008                     u70_20 047E                     u70_21 047D  
                   u71_20 0499                     u71_21 0498                     u72_20 04AD  
                   u80_20 02F9                     u72_21 04AC                     u80_21 02F8  
                   u73_20 05BE                     u73_21 05BD                     _TRISB 0086  
                   _TRISD 0088                     u74_20 05C2                     _SSPIF 0063  
                   u74_21 05C1                     u91_20 03A6                     u67_20 0517  
                   u75_20 05CE                     u91_21 03A5                     u67_21 0516  
                   u75_21 05CD                     u76_20 05DE                     u68_20 0528  
                   u76_21 05DD                     u68_21 0527                     u92_25 03AA  
                   u93_20 03B8                     u69_20 046A                     u77_20 02B8  
                   u93_21 03B7                     u69_21 0469                     u77_21 02B7  
                   u78_20 02C3                     u78_21 02C2                     u94_25 03B9  
                   u95_20 03C9                     u79_20 02DB                     u95_21 03C8  
                   u79_21 02DA                     u95_25 03C5                     u96_25 03D1  
                   u97_20 03DD                     u97_21 03DC                     _TXREG 0019  
                   u98_20 03E8                     u98_21 03E7                     u99_25 03EC  
         __end_of_dpowers 053A                     _myISR 002A                     _token 041C  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __end_of_sprintf 0215           __end_of_strcspn 04B2           __initialization 0015  
            __end_of_get1 05E0              __end_of_main 039E          __end_of_i2c_idle 05C3  
        __end_of_i2c_init 05A8          __end_of_i2c_read 0574          __end_of_i2c_stop 05B6  
                  ??_get1 0070                    ??_main 00A0                    ?_myISR 0070  
                  ?_token 0070                    u100_20 03FA                    u100_21 03F9  
                  u101_20 0404                    u101_21 0403                    u101_25 0400  
                  u110_20 0586                    u110_21 0585                    u102_25 040B  
                  u103_20 0417                    u111_20 055F                    u103_21 0416  
                  i1l1401 02B3                    u111_21 055E                    i1l1411 02C5  
                  i1l1403 02B8                    i1l1501 03E8                    i1l1421 02F1  
                  i1l1413 02D3                    i1l1405 02BE                    i1l1511 0404  
                  i1l1503 03EB                    i1l1351 050B                    i1l1423 02F9  
                  i1l1415 02DB                    i1l1407 02C3                    u104_20 0593  
                  u112_20 0503                    u120_20 01A6                    u104_21 0592  
                  u112_21 0502                    i1l1513 040A                    i1l1505 03F2  
                  u120_21 01A5                    i1l1601 04B3                    i1l1353 0517  
                  i1l1425 02FC                    i1l1531 058C                    i1l1515 0411  
                  i1l1507 03F6                    i1l1611 04DA                    i1l1603 04B4  
                  i1l1371 047E                    i1l1363 0455                    i1l1427 0301  
                  i1l1419 02E0                    i1l1533 05A8                    i1l1509 03FA  
                  i1l1517 0417                    i1l1621 0142                    i1l1605 04B8  
                  i1l1357 0519                    i1l1381 0499                    i1l1365 0458  
                  i1l1429 0302                    i1l1701 00B0                    i1l1391 05BE  
                  i1l1535 0560                    i1l1543 0575                    i1l1631 016D  
                  i1l1623 0147                    i1l1615 0130                    i1l1607 04BC  
                  i1l1359 0528                    i1l1383 04AD                    i1l1375 0484  
                  i1l1367 0462                    i1l1711 00ED                    i1l1703 00B6  
                  u105_20 0598                    u113_20 0509                    u121_20 01AC  
                  i1l1537 0565                    u105_21 0597                    i1l1529 0587  
                  i1l1545 057A                    u113_21 0508                    i1l1481 03B0  
                  i1l1473 039E                    u121_21 01AB                    i1l1633 0171  
                  i1l1617 0135                    i1l1609 04D3                    i1l1377 0487  
                  i1l1369 046A                    i1l1393 05C4                    i1l1713 0100  
                  i1l1705 00C8                    i1l1721 011E                    i1l1387 05B6  
                  i1l1539 0570                    i1l1547 057E                    i1l1395 05D8  
                  i1l1491 03D0                    i1l1483 03B4                    i1l1475 03A0  
                  i1l1651 01A6                    i1l1635 0175                    i1l1627 0148  
                  i1l1619 013B                    i1l1379 0491                    i1l1571 0553  
                  i1l1723 0121                    i1l1707 00D3                    i1l1715 0107  
                  i1l1389 05B6                    i1l1397 05DE                    i1l1581 04F0  
                  i1l1493 03D7                    i1l1485 03B8                    i1l1477 03A6  
                  i1l1661 01EA                    i1l1653 01AC                    i1l1645 0180  
                  i1l1637 0179                    i1l1629 0165                    i1l1573 0557  
                  i1l1717 0112                    i1l1709 00E8                    i1l1583 04F9  
                  i1l1487 03C9                    i1l1479 03A9                    i1l1495 03DD  
                  i1l1663 01F1                    i1l1655 01B3                    i1l1639 017E  
                  i1l1591 0421                    i1l1567 054A                    u106_20 05AF  
                  u122_20 01FE                    u114_20 0453                    u130_20 00D3  
                  u106_21 05AE                    i1l1585 04FD                    i1l1577 04E1  
                  i1l1489 03CF                    u122_21 01FD                    i1l1665 01F5  
                  i1l1657 01B7                    i1l1649 019C                    u114_21 0452  
                  i1l1593 0431                    i1l1569 054B                    u130_21 00D2  
                  i1l1681 002A                    i1l1587 0503                    i1l1579 04E2  
                  i1l1499 03E2                    i1l1659 01BC                    i1l1667 01FE  
                  i1l1595 0439                    i1l1691 007B                    i1l1683 002B  
                  i1l1669 0210                    i1l1597 0448                    i1l1589 041F  
                  i1l1693 0080                    i1l1685 0049                    i1l1599 044E  
                  i1l1695 0093                    i1l1687 005B                    u107_20 05B4  
                  u123_20 0210                    u115_20 04D3                    u107_21 05B3  
                  u123_21 020F                    u115_21 04D2                    i1l1689 0066  
                  i1l1697 009A                    i1l1699 00A5                    i1l1797 015A  
                  u108_20 056C                    u116_20 04DA                    u108_21 056B  
                  u116_21 04D9                    u109_20 0570                    u117_20 013B  
                  u109_21 056F                    u117_21 013A                    u118_20 0175  
                  u126_20 0049                    u118_21 0174                    u126_21 0048  
                  u119_20 019B                    u127_20 005B                    u119_21 019A  
                  u127_21 005A                    u119_25 0197                    u128_20 0066  
                  u128_21 0065                    u129_20 00C8                    u129_21 00C7  
                  _SSPADD 0093                    _TRISC3 043B                    _TRISC4 043C  
                  _SSPCON 0014                    _SSPBUF 0013        __size_of_i2c_start 0013  
      __size_of_i2c_write 0013             recivedCMD@cmd 0072                 ??___aldiv 003C  
               ??___lwdiv 0074                 ??___lwmod 007C                    _strchr 050A  
                  _strcmp 04B2                    _strtok 02B2                    _strspn 0454  
                  saved_w 007E                    token@i 0022                 ??_sprintf 0023  
        __end_of_usart_Tx 05CF                 ??_strcspn 0075   __end_of__initialization 0026  
          __pcstackCOMMON 0070            usart_TxStr@str 0072             __end_of_myISR 012D  
           __end_of_token 0454         __end_of_i2c_start 059A         __end_of_i2c_write 0587  
             recivedCMD@i 0073               recivedCMD@j 0074  __size_of_usart_Interrupt 0009  
                 ??_myISR 002D                   ??_token 0020              ?_usart_TxStr 0070  
              __pbssBANK0 004B              usart_Tx@send 0070                 ?_i2c_idle 0070  
               ?_i2c_init 0070                 ?_i2c_read 0070                 ?_i2c_stop 0070  
              __pmaintext 0353            usart_init@BAUD 0043                __pintentry 0004  
                 ?_strchr 0070                   ?_strcmp 0070                   ?_strtok 007A  
                 ?_strspn 0073                   _SSPCON2 0091                   _SSPSTAT 0094  
              __stringtab 052A                ??_i2c_idle 0070                ??_i2c_init 0034  
              ??_i2c_read 0070                ??_i2c_stop 0070                   ___aldiv 0215  
                 ___lwdiv 039E                   ___lwmod 03E2                 ?_usart_Tx 0070  
                 __ptext1 0304                   __ptext2 0215                   __ptext3 05CF  
                 __ptext4 059A                   __ptext5 002A                   __ptext6 0549  
                 __ptext7 05C3                   __ptext8 041C                   __ptext9 02B2  
         __size_of_strchr 0020           __size_of_strcmp 002E           __size_of_strtok 0052  
         __size_of_strspn 002F                   _lectura 004F                   _dpowers 0530  
        ___aldiv@dividend 0038                _recivedCMD 04E0                   _sprintf 012D  
                 _strcspn 0483      end_of_initialization 0026         ??_usart_Interrupt 0034  
               _RCSTAbits 0018          ___aldiv@quotient 003F                   strcmp@r 0075  
              ??_usart_Tx 0070                   strspn@i 0077                 _PORTBbits 0006  
           i2c_write@dato 0070                 _TRISBbits 0086                 _TRISCbits 0087  
    __size_of_usart_TxStr 0017                 _TXSTAbits 0098                _usart_init 0304  
          __end_of_strchr 052A            __end_of_strcmp 04E0            __end_of_strtok 0304  
          __end_of_strspn 0483       start_initialization 0015               ?_recivedCMD 0070  
               _i2c_start 0587                 _i2c_write 0574         __size_of_i2c_idle 000D  
       __size_of_i2c_init 000E         __size_of_i2c_read 0014         __size_of_i2c_stop 000E  
                ??_strchr 0072                  ??_strcmp 0072                  ??_strtok 007B  
                ??_strspn 0075                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0                ?_i2c_start 0070                ?_i2c_write 0070  
             sprintf@flag 0027               sprintf@prec 0028               ?_usart_init 0043  
        ___lwdiv@dividend 0072       __size_of_recivedCMD 002A                  ?___aldiv 0034  
                ?___lwdiv 0070                  ?___lwmod 0078                 __pstrings 052A  
       __size_of_usart_Tx 000C           _usart_Interrupt 05CF          ___lwdiv@quotient 0075  
          __size_of_myISR 0103                  ?_sprintf 0020                  ?_strcspn 0073  
          __size_of_token 0038           ___aldiv@divisor 0034         interrupt_function 0004  
         ___aldiv@counter 003D                  _PIE1bits 008C                  _PIR1bits 000C  
             __stringbase 052F       __size_of_usart_init 004F               ??_i2c_start 0070  
             ??_i2c_write 0070                  _i2c_idle 05B6                  _i2c_init 059A  
                _i2c_read 0560                  _i2c_stop 05A8           _usart_init$1340 0047  
        __size_of___aldiv 009D   __end_of_usart_Interrupt 05D8          __size_of___lwdiv 0044  
        __size_of___lwmod 003A        __end_of__stringtab 0530                sprintf@val 0029  
            ??_recivedCMD 0070           ___lwdiv@divisor 0070           ___lwdiv@counter 0077  
                __ptext10 0454                  __ptext11 0483                  __ptext20 05A8  
                __ptext12 050A                  __ptext21 0587                  __ptext13 04B2  
                __ptext22 0560                  __ptext14 012D                  __ptext23 05B6  
                __ptext15 03E2                  __ptext16 039E                  __ptext17 04E0  
                __ptext18 05D8                  __ptext19 0574             ??_usart_TxStr 0071  
        __size_of_sprintf 00E8          __size_of_strcspn 002F             __size_of_get1 0008  
           __size_of_main 004B        __end_of_recivedCMD 050A                  _usart_Tx 05C3  
              _INTCONbits 000B                  intlevel1 0000                 sprintf@ap 0026  
               sprintf@sp 002B                 strchr@chr 0070          ___lwmod@dividend 007A  
               strchr@ptr 0072              ??_usart_init 0047                 strcspn@s1 0079  
               strcspn@s2 0073       __end_of_usart_TxStr 0560                 stringcode 052A  
                token@cmd 0024                  token@tok 0025          ?_usart_Interrupt 0070  
                sprintf@c 002C                  sprintf@f 0020                  strcmp@s1 0076  
                strcmp@s2 0070           ___lwmod@divisor 0078           ___lwmod@counter 007D  
                strcspn@i 0077                  stringdir 052A                  stringtab 052A  
            ___aldiv@sign 003E        __end_of_usart_init 0353                  strtok@s1 007D  
                strtok@s2 007A                  strspn@s1 0079                  strspn@s2 0073  
                strtok@sp 004E               _SSPCON2bits 0091                _SSPCONbits 0014  
