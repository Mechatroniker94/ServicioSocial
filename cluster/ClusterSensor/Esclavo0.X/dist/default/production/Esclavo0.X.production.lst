

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Sep 18 22:41:43 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  000E                     	;# 
   322  000F                     	;# 
   323  0010                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0014                     	;# 
   328  0015                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  001A                     	;# 
   335  001B                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001D                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  0081                     	;# 
   342  0085                     	;# 
   343  0086                     	;# 
   344  0087                     	;# 
   345  0088                     	;# 
   346  0089                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  008F                     	;# 
   351  0090                     	;# 
   352  0091                     	;# 
   353  0092                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  0105                     	;# 
   370  0107                     	;# 
   371  0108                     	;# 
   372  0109                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  0185                     	;# 
   379  0187                     	;# 
   380  0188                     	;# 
   381  0189                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384                           
   385                           	psect	strings
   386  052D                     __pstrings:
   387  052D                     stringtab:
   388  052D                     __stringtab:
   389  052D                     stringcode:	
   390                           ;	String table - string pointers are 1 byte each
   391                           
   392  052D                     stringdir:
   393  052D  3005               	movlw	high stringdir
   394  052E  008A               	movwf	10
   395  052F  0804               	movf	4,w
   396  0530  0A84               	incf	4,f
   397  0531  0782               	addwf	2,f
   398  0532                     __stringbase:
   399  0532  3400               	retlw	0
   400  0533                     __end_of__stringtab:
   401  0533                     _dpowers:
   402  0533  3401               	retlw	1
   403  0534  3400               	retlw	0
   404  0535  340A               	retlw	10
   405  0536  3400               	retlw	0
   406  0537  3464               	retlw	100
   407  0538  3400               	retlw	0
   408  0539  34E8               	retlw	232
   409  053A  3403               	retlw	3
   410  053B  3410               	retlw	16
   411  053C  3427               	retlw	39
   412  053D                     __end_of_dpowers:
   413  0014                     _SSPCONbits	set	20
   414  0013                     _SSPBUF	set	19
   415  0014                     _SSPCON	set	20
   416  001A                     _RCREG	set	26
   417  0019                     _TXREG	set	25
   418  0018                     _RCSTAbits	set	24
   419  0006                     _PORTBbits	set	6
   420  0006                     _PORTB	set	6
   421  0008                     _PORTD	set	8
   422  000B                     _INTCONbits	set	11
   423  000C                     _PIR1bits	set	12
   424  0008                     _PORTDbits	set	8
   425  0063                     _SSPIF	set	99
   426  0094                     _SSPSTATbits	set	148
   427  0091                     _SSPCON2bits	set	145
   428  0091                     _SSPCON2	set	145
   429  0094                     _SSPSTAT	set	148
   430  0093                     _SSPADD	set	147
   431  0087                     _TRISCbits	set	135
   432  008C                     _PIE1bits	set	140
   433  0098                     _TXSTAbits	set	152
   434  0099                     _SPBRG	set	153
   435  0086                     _TRISBbits	set	134
   436  0086                     _TRISB	set	134
   437  0088                     _TRISD	set	136
   438  043C                     _TRISC4	set	1084
   439  043B                     _TRISC3	set	1083
   440  053D                     STR_3:
   441  053D  3425               	retlw	37	;'%'
   442  053E  3464               	retlw	100	;'d'
   443  053F  340A               	retlw	10
   444  0540  3400               	retlw	0
   445  0541                     STR_1:
   446  0541  344D               	retlw	77	;'M'
   447  0542  3431               	retlw	49	;'1'
   448  0543  3400               	retlw	0
   449  0544                     STR_2:
   450  0544  3450               	retlw	80	;'P'
   451  0545  3431               	retlw	49	;'1'
   452  0546  3400               	retlw	0
   453  0547                     STR_4:
   454  0547  3450               	retlw	80	;'P'
   455  0548  3432               	retlw	50	;'2'
   456  0549  3400               	retlw	0
   457  054A                     STR_6:
   458  054A  342C               	retlw	44	;','
   459  054B  3400               	retlw	0
   460  053D                     
   461                           	psect	cinit
   462  0015                     start_initialization:	
   463                           ; #config settings
   464                           
   465  0015                     __initialization:
   466                           
   467                           ; Clear objects allocated to COMMON
   468  0015  01FC               	clrf	__pbssCOMMON& (0+127)
   469                           
   470                           ; Clear objects allocated to BANK0
   471  0016  1283               	bcf	3,5	;RP0=0, select bank0
   472  0017  1303               	bcf	3,6	;RP1=0, select bank0
   473  0018  01CD               	clrf	__pbssBANK0& (0+127)
   474  0019  01CE               	clrf	(__pbssBANK0+1)& (0+127)
   475  001A  01CF               	clrf	(__pbssBANK0+2)& (0+127)
   476  001B  01D0               	clrf	(__pbssBANK0+3)& (0+127)
   477  001C  01D1               	clrf	(__pbssBANK0+4)& (0+127)
   478  001D  01D2               	clrf	(__pbssBANK0+5)& (0+127)
   479  001E  01D3               	clrf	(__pbssBANK0+6)& (0+127)
   480  001F  01D4               	clrf	(__pbssBANK0+7)& (0+127)
   481  0020  01D5               	clrf	(__pbssBANK0+8)& (0+127)
   482  0021  01D6               	clrf	(__pbssBANK0+9)& (0+127)
   483  0022  01D7               	clrf	(__pbssBANK0+10)& (0+127)
   484  0023  01D8               	clrf	(__pbssBANK0+11)& (0+127)
   485  0024  01D9               	clrf	(__pbssBANK0+12)& (0+127)
   486  0025  01DA               	clrf	(__pbssBANK0+13)& (0+127)
   487  0026                     end_of_initialization:	
   488                           ;End of C runtime variable initialization code
   489                           
   490  0026                     __end_of__initialization:
   491  0026  0183               	clrf	3
   492  0027  120A  118A  2B56   	ljmp	_main	;jump to C main() function
   493                           
   494                           	psect	bssCOMMON
   495  007C                     __pbssCOMMON:
   496  007C                     strtok@sp:
   497  007C                     	ds	1
   498                           
   499                           	psect	bssBANK0
   500  004D                     __pbssBANK0:
   501  004D                     _dir:
   502  004D                     	ds	3
   503  0050                     _lectura:
   504  0050                     	ds	1
   505  0051                     _data:
   506  0051                     	ds	10
   507                           
   508                           	psect	cstackCOMMON
   509  0070                     __pcstackCOMMON:
   510  0070                     ?_recivedCMD:
   511  0070                     ??_recivedCMD:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?_token:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ?_i2c_start:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ??_i2c_start:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?_i2c_write:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ??_i2c_write:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ?_i2c_read:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ??_i2c_read:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ?_i2c_stop:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ??_i2c_stop:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?_usart_TxStr:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_usart_Interrupt:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_i2c_init:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_get1:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ??_get1:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_i2c_idle:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ??_i2c_idle:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_strchr:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_myISR:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_main:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_usart_Tx:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ??_usart_Tx:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_strcmp:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?___lwdiv:	
   581                           ; 2 bytes @ 0x0
   582                           
   583  0070                     usart_Tx@send:	
   584                           ; 2 bytes @ 0x0
   585                           
   586  0070                     i2c_write@dato:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     strcmp@s2:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ___lwdiv@divisor:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     strchr@chr:	
   596                           ; 2 bytes @ 0x0
   597                           
   598                           
   599                           ; 2 bytes @ 0x0
   600  0070                     	ds	1
   601  0071                     ??_usart_TxStr:
   602  0071                     usart_TxStr@str:	
   603                           ; 1 bytes @ 0x1
   604                           
   605  0071                     recivedCMD@cmd:	
   606                           ; 1 bytes @ 0x1
   607                           
   608                           
   609                           ; 1 bytes @ 0x1
   610  0071                     	ds	1
   611  0072                     ??_strcmp:
   612  0072                     ??_strchr:	
   613                           ; 1 bytes @ 0x2
   614                           
   615  0072                     recivedCMD@i:	
   616                           ; 1 bytes @ 0x2
   617                           
   618  0072                     strchr@ptr:	
   619                           ; 1 bytes @ 0x2
   620                           
   621  0072                     ___lwdiv@dividend:	
   622                           ; 1 bytes @ 0x2
   623                           
   624                           
   625                           ; 2 bytes @ 0x2
   626  0072                     	ds	1
   627  0073                     ?_strspn:
   628  0073                     ?_strcspn:	
   629                           ; 2 bytes @ 0x3
   630                           
   631  0073                     recivedCMD@j:	
   632                           ; 2 bytes @ 0x3
   633                           
   634  0073                     strcspn@s2:	
   635                           ; 1 bytes @ 0x3
   636                           
   637  0073                     strspn@s2:	
   638                           ; 1 bytes @ 0x3
   639                           
   640                           
   641                           ; 1 bytes @ 0x3
   642  0073                     	ds	1
   643  0074                     ??___lwdiv:
   644  0074                     strcmp@r:	
   645                           ; 1 bytes @ 0x4
   646                           
   647  0074                     ___lwdiv@quotient:	
   648                           ; 1 bytes @ 0x4
   649                           
   650                           
   651                           ; 2 bytes @ 0x4
   652  0074                     	ds	1
   653  0075                     ??_strspn:
   654  0075                     ??_strcspn:	
   655                           ; 1 bytes @ 0x5
   656                           
   657  0075                     strcmp@s1:	
   658                           ; 1 bytes @ 0x5
   659                           
   660                           
   661                           ; 1 bytes @ 0x5
   662  0075                     	ds	1
   663  0076                     ___lwdiv@counter:
   664                           
   665                           ; 1 bytes @ 0x6
   666  0076                     	ds	1
   667  0077                     ?___lwmod:
   668  0077                     ___lwmod@divisor:	
   669                           ; 2 bytes @ 0x7
   670                           
   671  0077                     strcspn@i:	
   672                           ; 2 bytes @ 0x7
   673                           
   674  0077                     strspn@i:	
   675                           ; 2 bytes @ 0x7
   676                           
   677                           
   678                           ; 2 bytes @ 0x7
   679  0077                     	ds	2
   680  0079                     strcspn@s1:
   681  0079                     strspn@s1:	
   682                           ; 1 bytes @ 0x9
   683                           
   684  0079                     ___lwmod@dividend:	
   685                           ; 1 bytes @ 0x9
   686                           
   687                           
   688                           ; 2 bytes @ 0x9
   689  0079                     	ds	1
   690  007A                     ?_strtok:
   691  007A                     strtok@s2:	
   692                           ; 1 bytes @ 0xA
   693                           
   694                           
   695                           ; 1 bytes @ 0xA
   696  007A                     	ds	1
   697  007B                     ??_strtok:
   698  007B                     ??___lwmod:	
   699                           ; 1 bytes @ 0xB
   700                           
   701  007B                     ___lwmod@counter:	
   702                           ; 1 bytes @ 0xB
   703                           
   704  007B                     strtok@s1:	
   705                           ; 1 bytes @ 0xB
   706                           
   707                           
   708                           ; 1 bytes @ 0xB
   709  007B                     	ds	1
   710  007C                     ??_token:
   711                           
   712                           	psect	cstackBANK0
   713  0020                     __pcstackBANK0:	
   714                           ; 1 bytes @ 0xC
   715                           
   716  0020                     ?_sprintf:
   717  0020                     sprintf@f:	
   718                           ; 2 bytes @ 0x0
   719                           
   720  0020                     token@i:	
   721                           ; 1 bytes @ 0x0
   722                           
   723                           
   724                           ; 2 bytes @ 0x0
   725  0020                     	ds	2
   726  0022                     token@cmd:
   727                           
   728                           ; 1 bytes @ 0x2
   729  0022                     	ds	1
   730  0023                     ??_sprintf:
   731  0023                     token@tok:	
   732                           ; 1 bytes @ 0x3
   733                           
   734                           
   735                           ; 1 bytes @ 0x3
   736  0023                     	ds	3
   737  0026                     sprintf@ap:
   738                           
   739                           ; 1 bytes @ 0x6
   740  0026                     	ds	1
   741  0027                     sprintf@flag:
   742                           
   743                           ; 1 bytes @ 0x7
   744  0027                     	ds	1
   745  0028                     sprintf@prec:
   746                           
   747                           ; 1 bytes @ 0x8
   748  0028                     	ds	1
   749  0029                     sprintf@val:
   750                           
   751                           ; 2 bytes @ 0x9
   752  0029                     	ds	2
   753  002B                     sprintf@sp:
   754                           
   755                           ; 1 bytes @ 0xB
   756  002B                     	ds	1
   757  002C                     sprintf@c:
   758                           
   759                           ; 1 bytes @ 0xC
   760  002C                     	ds	1
   761  002D                     ??_myISR:
   762                           
   763                           ; 1 bytes @ 0xD
   764  002D                     	ds	6
   765  0033                     ??_usart_Interrupt:
   766  0033                     ??_i2c_init:	
   767                           ; 1 bytes @ 0x13
   768                           
   769  0033                     ?___aldiv:	
   770                           ; 1 bytes @ 0x13
   771                           
   772  0033                     ___aldiv@divisor:	
   773                           ; 4 bytes @ 0x13
   774                           
   775                           
   776                           ; 4 bytes @ 0x13
   777  0033                     	ds	4
   778  0037                     ___aldiv@dividend:
   779                           
   780                           ; 4 bytes @ 0x17
   781  0037                     	ds	4
   782  003B                     ??___aldiv:
   783                           
   784                           ; 1 bytes @ 0x1B
   785  003B                     	ds	1
   786  003C                     ___aldiv@counter:
   787                           
   788                           ; 1 bytes @ 0x1C
   789  003C                     	ds	1
   790  003D                     ___aldiv@sign:
   791                           
   792                           ; 1 bytes @ 0x1D
   793  003D                     	ds	1
   794  003E                     ___aldiv@quotient:
   795                           
   796                           ; 4 bytes @ 0x1E
   797  003E                     	ds	4
   798  0042                     ?_usart_init:
   799  0042                     usart_init@BAUD:	
   800                           ; 1 bytes @ 0x22
   801                           
   802                           
   803                           ; 4 bytes @ 0x22
   804  0042                     	ds	4
   805  0046                     ??_usart_init:
   806  0046                     _usart_init$1374:	
   807                           ; 1 bytes @ 0x26
   808                           
   809                           
   810                           ; 4 bytes @ 0x26
   811  0046                     	ds	4
   812  004A                     ??_main:
   813                           
   814                           ; 1 bytes @ 0x2A
   815  004A                     	ds	3
   816                           
   817                           	psect	maintext
   818  0356                     __pmaintext:	
   819 ;;
   820 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   821 ;;
   822 ;; *************** function _main *****************
   823 ;; Defined at:
   824 ;;		line 56 in file "main.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;		None
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   833 ;; Tracked objects:
   834 ;;		On entry : B00/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   838 ;;      Params:         0       0       0       0       0
   839 ;;      Locals:         0       0       0       0       0
   840 ;;      Temps:          0       3       0       0       0
   841 ;;      Totals:         0       3       0       0       0
   842 ;;Total ram usage:        3 bytes
   843 ;; Hardware stack levels required when called:    8
   844 ;; This function calls:
   845 ;;		_i2c_init
   846 ;;		_usart_Interrupt
   847 ;;		_usart_init
   848 ;; This function is called by:
   849 ;;		Startup code after reset
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           
   854                           ;psect for function _main
   855  0356                     _main:
   856  0356                     l1739:	
   857                           ;incstack = 0
   858                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   859                           
   860                           
   861                           ;main.c: 57:     TRISD = 0x00;
   862  0356  1683               	bsf	3,5	;RP0=1, select bank1
   863  0357  1303               	bcf	3,6	;RP1=0, select bank1
   864  0358  0188               	clrf	8	;volatile
   865                           
   866                           ;main.c: 58:     PORTD = 0x00;
   867  0359  1283               	bcf	3,5	;RP0=0, select bank0
   868  035A  1303               	bcf	3,6	;RP1=0, select bank0
   869  035B  0188               	clrf	8	;volatile
   870                           
   871                           ;main.c: 59:     TRISB = 0x00;
   872  035C  1683               	bsf	3,5	;RP0=1, select bank1
   873  035D  1303               	bcf	3,6	;RP1=0, select bank1
   874  035E  0186               	clrf	6	;volatile
   875                           
   876                           ;main.c: 60:     PORTB = 0x00;
   877  035F  1283               	bcf	3,5	;RP0=0, select bank0
   878  0360  1303               	bcf	3,6	;RP1=0, select bank0
   879  0361  0186               	clrf	6	;volatile
   880  0362                     l1741:
   881                           
   882                           ;main.c: 61:     usart_init(9600);
   883  0362  3000               	movlw	0
   884  0363  00C5               	movwf	usart_init@BAUD+3
   885  0364  3000               	movlw	0
   886  0365  00C4               	movwf	usart_init@BAUD+2
   887  0366  3025               	movlw	37
   888  0367  00C3               	movwf	usart_init@BAUD+1
   889  0368  3080               	movlw	128
   890  0369  00C2               	movwf	usart_init@BAUD
   891  036A  120A  118A  22BB  120A  118A  	fcall	_usart_init
   892  036F                     l1743:
   893                           
   894                           ;main.c: 62:     usart_Interrupt();
   895  036F  120A  118A  25D2  120A  118A  	fcall	_usart_Interrupt
   896  0374                     l1745:
   897                           
   898                           ;main.c: 63:     i2c_init();
   899  0374  120A  118A  259D  120A  118A  	fcall	_i2c_init
   900  0379                     l1747:
   901                           
   902                           ;main.c: 66:         PORTBbits.RB0 = 1;
   903  0379  1283               	bcf	3,5	;RP0=0, select bank0
   904  037A  1303               	bcf	3,6	;RP1=0, select bank0
   905  037B  1406               	bsf	6,0	;volatile
   906  037C                     l1749:
   907                           
   908                           ;main.c: 67:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   909  037C  301A               	movlw	26
   910  037D  1283               	bcf	3,5	;RP0=0, select bank0
   911  037E  1303               	bcf	3,6	;RP1=0, select bank0
   912  037F  00CC               	movwf	??_main+2
   913  0380  305E               	movlw	94
   914  0381  00CB               	movwf	??_main+1
   915  0382  306D               	movlw	109
   916  0383  00CA               	movwf	??_main
   917  0384                     u1317:
   918  0384  0BCA               	decfsz	??_main,f
   919  0385  2B84               	goto	u1317
   920  0386  0BCB               	decfsz	??_main+1,f
   921  0387  2B84               	goto	u1317
   922  0388  0BCC               	decfsz	??_main+2,f
   923  0389  2B84               	goto	u1317
   924  038A  2B8B               	nop2
   925  038B                     l1751:
   926                           
   927                           ;main.c: 69:         PORTBbits.RB0 = 0;
   928  038B  1283               	bcf	3,5	;RP0=0, select bank0
   929  038C  1303               	bcf	3,6	;RP1=0, select bank0
   930  038D  1006               	bcf	6,0	;volatile
   931  038E                     l1753:
   932                           
   933                           ;main.c: 70:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   934  038E  301A               	movlw	26
   935  038F  1283               	bcf	3,5	;RP0=0, select bank0
   936  0390  1303               	bcf	3,6	;RP1=0, select bank0
   937  0391  00CC               	movwf	??_main+2
   938  0392  305E               	movlw	94
   939  0393  00CB               	movwf	??_main+1
   940  0394  306D               	movlw	109
   941  0395  00CA               	movwf	??_main
   942  0396                     u1327:
   943  0396  0BCA               	decfsz	??_main,f
   944  0397  2B96               	goto	u1327
   945  0398  0BCB               	decfsz	??_main+1,f
   946  0399  2B96               	goto	u1327
   947  039A  0BCC               	decfsz	??_main+2,f
   948  039B  2B96               	goto	u1327
   949  039C  2B9D               	nop2
   950  039D  2B79               	goto	l1747
   951  039E  120A  118A  2812   	ljmp	start
   952  03A1                     __end_of_main:
   953                           
   954                           	psect	text1
   955  02BB                     __ptext1:	
   956 ;; *************** function _usart_init *****************
   957 ;; Defined at:
   958 ;;		line 4 in file "usart.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;  BAUD            4   34[BANK0 ] long 
   961 ;; Auto vars:     Size  Location     Type
   962 ;;		None
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   972 ;;      Params:         0       4       0       0       0
   973 ;;      Locals:         0       4       0       0       0
   974 ;;      Temps:          0       0       0       0       0
   975 ;;      Totals:         0       8       0       0       0
   976 ;;Total ram usage:        8 bytes
   977 ;; Hardware stack levels used:    1
   978 ;; Hardware stack levels required when called:    7
   979 ;; This function calls:
   980 ;;		___aldiv
   981 ;; This function is called by:
   982 ;;		_main
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986                           
   987                           ;psect for function _usart_init
   988  02BB                     _usart_init:
   989  02BB                     l1663:	
   990                           ;incstack = 0
   991                           ; Regs used in _usart_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   992                           
   993                           
   994                           ;usart.c: 6:     TRISBbits.TRISB1 = 1;
   995  02BB  1683               	bsf	3,5	;RP0=1, select bank1
   996  02BC  1303               	bcf	3,6	;RP1=0, select bank1
   997  02BD  1486               	bsf	6,1	;volatile
   998                           
   999                           ;usart.c: 7:     TRISBbits.TRISB2 = 0;
  1000  02BE  1106               	bcf	6,2	;volatile
  1001  02BF                     l1665:
  1002                           
  1003                           ;usart.c: 8:     SPBRG = (unsigned char)(((20000000/BAUD)/64) - 1);
  1004  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  1005  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  1006  02C1  0845               	movf	usart_init@BAUD+3,w
  1007  02C2  00B6               	movwf	___aldiv@divisor+3
  1008  02C3  0844               	movf	usart_init@BAUD+2,w
  1009  02C4  00B5               	movwf	___aldiv@divisor+2
  1010  02C5  0843               	movf	usart_init@BAUD+1,w
  1011  02C6  00B4               	movwf	___aldiv@divisor+1
  1012  02C7  0842               	movf	usart_init@BAUD,w
  1013  02C8  00B3               	movwf	___aldiv@divisor
  1014  02C9  3001               	movlw	1
  1015  02CA  00BA               	movwf	___aldiv@dividend+3
  1016  02CB  3031               	movlw	49
  1017  02CC  00B9               	movwf	___aldiv@dividend+2
  1018  02CD  302D               	movlw	45
  1019  02CE  00B8               	movwf	___aldiv@dividend+1
  1020  02CF  3000               	movlw	0
  1021  02D0  00B7               	movwf	___aldiv@dividend
  1022  02D1  120A  118A  221E  120A  118A  	fcall	___aldiv
  1023  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  1024  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  1025  02D8  0836               	movf	?___aldiv+3,w
  1026  02D9  00C9               	movwf	_usart_init$1374+3
  1027  02DA  0835               	movf	?___aldiv+2,w
  1028  02DB  00C8               	movwf	_usart_init$1374+2
  1029  02DC  0834               	movf	?___aldiv+1,w
  1030  02DD  00C7               	movwf	_usart_init$1374+1
  1031  02DE  0833               	movf	?___aldiv,w
  1032  02DF  00C6               	movwf	_usart_init$1374
  1033                           
  1034                           ;usart.c: 8:     SPBRG = (unsigned char)(((20000000/BAUD)/64) - 1);
  1035  02E0  3000               	movlw	0
  1036  02E1  00B6               	movwf	___aldiv@divisor+3
  1037  02E2  3000               	movlw	0
  1038  02E3  00B5               	movwf	___aldiv@divisor+2
  1039  02E4  3000               	movlw	0
  1040  02E5  00B4               	movwf	___aldiv@divisor+1
  1041  02E6  3040               	movlw	64
  1042  02E7  00B3               	movwf	___aldiv@divisor
  1043  02E8  0849               	movf	_usart_init$1374+3,w
  1044  02E9  00BA               	movwf	___aldiv@dividend+3
  1045  02EA  0848               	movf	_usart_init$1374+2,w
  1046  02EB  00B9               	movwf	___aldiv@dividend+2
  1047  02EC  0847               	movf	_usart_init$1374+1,w
  1048  02ED  00B8               	movwf	___aldiv@dividend+1
  1049  02EE  0846               	movf	_usart_init$1374,w
  1050  02EF  00B7               	movwf	___aldiv@dividend
  1051  02F0  120A  118A  221E  120A  118A  	fcall	___aldiv
  1052  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  1053  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  1054  02F7  0833               	movf	?___aldiv,w
  1055  02F8  3EFF               	addlw	255
  1056  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  1057  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  1058  02FB  0099               	movwf	25	;volatile
  1059  02FC                     l1667:
  1060                           
  1061                           ;usart.c: 13:     RCSTAbits.SPEN = 1;
  1062  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1063  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1064  02FE  1798               	bsf	24,7	;volatile
  1065  02FF                     l1669:
  1066                           
  1067                           ;usart.c: 14:     TXSTAbits.SYNC = 0;
  1068  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  1069  0300  1303               	bcf	3,6	;RP1=0, select bank1
  1070  0301  1218               	bcf	24,4	;volatile
  1071  0302                     l1671:
  1072                           
  1073                           ;usart.c: 15:     TXSTAbits.TX9 = 0;
  1074  0302  1318               	bcf	24,6	;volatile
  1075  0303                     l1673:
  1076                           
  1077                           ;usart.c: 16:     TXSTAbits.TXEN = 1;
  1078  0303  1698               	bsf	24,5	;volatile
  1079  0304                     l1675:
  1080                           
  1081                           ;usart.c: 17:     RCSTAbits.RX9 = 0;
  1082  0304  1283               	bcf	3,5	;RP0=0, select bank0
  1083  0305  1303               	bcf	3,6	;RP1=0, select bank0
  1084  0306  1318               	bcf	24,6	;volatile
  1085  0307                     l1677:
  1086                           
  1087                           ;usart.c: 18:     RCSTAbits.CREN = 1;
  1088  0307  1618               	bsf	24,4	;volatile
  1089  0308                     l1679:
  1090                           
  1091                           ;usart.c: 19:     RCSTAbits.SPEN = 1;
  1092  0308  1798               	bsf	24,7	;volatile
  1093  0309                     l98:
  1094  0309  0008               	return
  1095  030A                     __end_of_usart_init:
  1096                           
  1097                           	psect	text2
  1098  021E                     __ptext2:	
  1099 ;; *************** function ___aldiv *****************
  1100 ;; Defined at:
  1101 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\aldiv.c"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;  divisor         4   19[BANK0 ] long 
  1104 ;;  dividend        4   23[BANK0 ] long 
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;  quotient        4   30[BANK0 ] long 
  1107 ;;  sign            1   29[BANK0 ] unsigned char 
  1108 ;;  counter         1   28[BANK0 ] unsigned char 
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  4   19[BANK0 ] long 
  1111 ;; Registers used:
  1112 ;;		wreg, status,2, status,0, btemp+1
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1118 ;;      Params:         0       8       0       0       0
  1119 ;;      Locals:         0       6       0       0       0
  1120 ;;      Temps:          0       1       0       0       0
  1121 ;;      Totals:         0      15       0       0       0
  1122 ;;Total ram usage:       15 bytes
  1123 ;; Hardware stack levels used:    1
  1124 ;; Hardware stack levels required when called:    6
  1125 ;; This function calls:
  1126 ;;		Nothing
  1127 ;; This function is called by:
  1128 ;;		_usart_init
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           
  1133                           ;psect for function ___aldiv
  1134  021E                     ___aldiv:
  1135  021E                     l1443:	
  1136                           ;incstack = 0
  1137                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
  1138                           
  1139  021E  1283               	bcf	3,5	;RP0=0, select bank0
  1140  021F  1303               	bcf	3,6	;RP1=0, select bank0
  1141  0220  01BD               	clrf	___aldiv@sign
  1142  0221                     l1445:
  1143  0221  1FB6               	btfss	___aldiv@divisor+3,7
  1144  0222  2A24               	goto	u811
  1145  0223  2A25               	goto	u810
  1146  0224                     u811:
  1147  0224  2A32               	goto	l418
  1148  0225                     u810:
  1149  0225                     l1447:
  1150  0225  09B3               	comf	___aldiv@divisor,f
  1151  0226  09B4               	comf	___aldiv@divisor+1,f
  1152  0227  09B5               	comf	___aldiv@divisor+2,f
  1153  0228  09B6               	comf	___aldiv@divisor+3,f
  1154  0229  0AB3               	incf	___aldiv@divisor,f
  1155  022A  1903               	skipnz
  1156  022B  0AB4               	incf	___aldiv@divisor+1,f
  1157  022C  1903               	skipnz
  1158  022D  0AB5               	incf	___aldiv@divisor+2,f
  1159  022E  1903               	skipnz
  1160  022F  0AB6               	incf	___aldiv@divisor+3,f
  1161  0230  01BD               	clrf	___aldiv@sign
  1162  0231  0ABD               	incf	___aldiv@sign,f
  1163  0232                     l418:
  1164  0232  1FBA               	btfss	___aldiv@dividend+3,7
  1165  0233  2A35               	goto	u821
  1166  0234  2A36               	goto	u820
  1167  0235                     u821:
  1168  0235  2A45               	goto	l1453
  1169  0236                     u820:
  1170  0236                     l1449:
  1171  0236  09B7               	comf	___aldiv@dividend,f
  1172  0237  09B8               	comf	___aldiv@dividend+1,f
  1173  0238  09B9               	comf	___aldiv@dividend+2,f
  1174  0239  09BA               	comf	___aldiv@dividend+3,f
  1175  023A  0AB7               	incf	___aldiv@dividend,f
  1176  023B  1903               	skipnz
  1177  023C  0AB8               	incf	___aldiv@dividend+1,f
  1178  023D  1903               	skipnz
  1179  023E  0AB9               	incf	___aldiv@dividend+2,f
  1180  023F  1903               	skipnz
  1181  0240  0ABA               	incf	___aldiv@dividend+3,f
  1182  0241                     l1451:
  1183  0241  3001               	movlw	1
  1184  0242  00FF               	movwf	btemp+1
  1185  0243  087F               	movf	btemp+1,w
  1186  0244  06BD               	xorwf	___aldiv@sign,f
  1187  0245                     l1453:
  1188  0245  3000               	movlw	0
  1189  0246  00C1               	movwf	___aldiv@quotient+3
  1190  0247  3000               	movlw	0
  1191  0248  00C0               	movwf	___aldiv@quotient+2
  1192  0249  3000               	movlw	0
  1193  024A  00BF               	movwf	___aldiv@quotient+1
  1194  024B  3000               	movlw	0
  1195  024C  00BE               	movwf	___aldiv@quotient
  1196  024D                     l1455:
  1197  024D  0836               	movf	___aldiv@divisor+3,w
  1198  024E  0435               	iorwf	___aldiv@divisor+2,w
  1199  024F  0434               	iorwf	___aldiv@divisor+1,w
  1200  0250  0433               	iorwf	___aldiv@divisor,w
  1201  0251  1903               	skipnz
  1202  0252  2A54               	goto	u831
  1203  0253  2A55               	goto	u830
  1204  0254                     u831:
  1205  0254  2AA2               	goto	l1477
  1206  0255                     u830:
  1207  0255                     l1457:
  1208  0255  01BC               	clrf	___aldiv@counter
  1209  0256  0ABC               	incf	___aldiv@counter,f
  1210  0257  2A65               	goto	l1463
  1211  0258                     l1459:
  1212  0258  3001               	movlw	1
  1213  0259  00BB               	movwf	??___aldiv
  1214  025A                     u845:
  1215  025A  1003               	clrc
  1216  025B  0DB3               	rlf	___aldiv@divisor,f
  1217  025C  0DB4               	rlf	___aldiv@divisor+1,f
  1218  025D  0DB5               	rlf	___aldiv@divisor+2,f
  1219  025E  0DB6               	rlf	___aldiv@divisor+3,f
  1220  025F  0BBB               	decfsz	??___aldiv,f
  1221  0260  2A5A               	goto	u845
  1222  0261                     l1461:
  1223  0261  3001               	movlw	1
  1224  0262  00FF               	movwf	btemp+1
  1225  0263  087F               	movf	btemp+1,w
  1226  0264  07BC               	addwf	___aldiv@counter,f
  1227  0265                     l1463:
  1228  0265  1FB6               	btfss	___aldiv@divisor+3,7
  1229  0266  2A68               	goto	u851
  1230  0267  2A69               	goto	u850
  1231  0268                     u851:
  1232  0268  2A58               	goto	l1459
  1233  0269                     u850:
  1234  0269                     l1465:
  1235  0269  3001               	movlw	1
  1236  026A  00BB               	movwf	??___aldiv
  1237  026B                     u865:
  1238  026B  1003               	clrc
  1239  026C  0DBE               	rlf	___aldiv@quotient,f
  1240  026D  0DBF               	rlf	___aldiv@quotient+1,f
  1241  026E  0DC0               	rlf	___aldiv@quotient+2,f
  1242  026F  0DC1               	rlf	___aldiv@quotient+3,f
  1243  0270  0BBB               	decfsz	??___aldiv,f
  1244  0271  2A6B               	goto	u865
  1245  0272                     l1467:
  1246  0272  0836               	movf	___aldiv@divisor+3,w
  1247  0273  023A               	subwf	___aldiv@dividend+3,w
  1248  0274  1D03               	skipz
  1249  0275  2A80               	goto	u875
  1250  0276  0835               	movf	___aldiv@divisor+2,w
  1251  0277  0239               	subwf	___aldiv@dividend+2,w
  1252  0278  1D03               	skipz
  1253  0279  2A80               	goto	u875
  1254  027A  0834               	movf	___aldiv@divisor+1,w
  1255  027B  0238               	subwf	___aldiv@dividend+1,w
  1256  027C  1D03               	skipz
  1257  027D  2A80               	goto	u875
  1258  027E  0833               	movf	___aldiv@divisor,w
  1259  027F  0237               	subwf	___aldiv@dividend,w
  1260  0280                     u875:
  1261  0280  1C03               	skipc
  1262  0281  2A83               	goto	u871
  1263  0282  2A84               	goto	u870
  1264  0283                     u871:
  1265  0283  2A93               	goto	l1473
  1266  0284                     u870:
  1267  0284                     l1469:
  1268  0284  0833               	movf	___aldiv@divisor,w
  1269  0285  02B7               	subwf	___aldiv@dividend,f
  1270  0286  0834               	movf	___aldiv@divisor+1,w
  1271  0287  1C03               	skipc
  1272  0288  0F34               	incfsz	___aldiv@divisor+1,w
  1273  0289  02B8               	subwf	___aldiv@dividend+1,f
  1274  028A  0835               	movf	___aldiv@divisor+2,w
  1275  028B  1C03               	skipc
  1276  028C  0F35               	incfsz	___aldiv@divisor+2,w
  1277  028D  02B9               	subwf	___aldiv@dividend+2,f
  1278  028E  0836               	movf	___aldiv@divisor+3,w
  1279  028F  1C03               	skipc
  1280  0290  0F36               	incfsz	___aldiv@divisor+3,w
  1281  0291  02BA               	subwf	___aldiv@dividend+3,f
  1282  0292                     l1471:
  1283  0292  143E               	bsf	___aldiv@quotient,0
  1284  0293                     l1473:
  1285  0293  3001               	movlw	1
  1286  0294                     u885:
  1287  0294  1003               	clrc
  1288  0295  0CB6               	rrf	___aldiv@divisor+3,f
  1289  0296  0CB5               	rrf	___aldiv@divisor+2,f
  1290  0297  0CB4               	rrf	___aldiv@divisor+1,f
  1291  0298  0CB3               	rrf	___aldiv@divisor,f
  1292  0299  3EFF               	addlw	-1
  1293  029A  1D03               	skipz
  1294  029B  2A94               	goto	u885
  1295  029C                     l1475:
  1296  029C  3001               	movlw	1
  1297  029D  02BC               	subwf	___aldiv@counter,f
  1298  029E  1D03               	btfss	3,2
  1299  029F  2AA1               	goto	u891
  1300  02A0  2AA2               	goto	u890
  1301  02A1                     u891:
  1302  02A1  2A69               	goto	l1465
  1303  02A2                     u890:
  1304  02A2                     l1477:
  1305  02A2  083D               	movf	___aldiv@sign,w
  1306  02A3  1903               	btfsc	3,2
  1307  02A4  2AA6               	goto	u901
  1308  02A5  2AA7               	goto	u900
  1309  02A6                     u901:
  1310  02A6  2AB2               	goto	l1481
  1311  02A7                     u900:
  1312  02A7                     l1479:
  1313  02A7  09BE               	comf	___aldiv@quotient,f
  1314  02A8  09BF               	comf	___aldiv@quotient+1,f
  1315  02A9  09C0               	comf	___aldiv@quotient+2,f
  1316  02AA  09C1               	comf	___aldiv@quotient+3,f
  1317  02AB  0ABE               	incf	___aldiv@quotient,f
  1318  02AC  1903               	skipnz
  1319  02AD  0ABF               	incf	___aldiv@quotient+1,f
  1320  02AE  1903               	skipnz
  1321  02AF  0AC0               	incf	___aldiv@quotient+2,f
  1322  02B0  1903               	skipnz
  1323  02B1  0AC1               	incf	___aldiv@quotient+3,f
  1324  02B2                     l1481:
  1325  02B2  0841               	movf	___aldiv@quotient+3,w
  1326  02B3  00B6               	movwf	?___aldiv+3
  1327  02B4  0840               	movf	___aldiv@quotient+2,w
  1328  02B5  00B5               	movwf	?___aldiv+2
  1329  02B6  083F               	movf	___aldiv@quotient+1,w
  1330  02B7  00B4               	movwf	?___aldiv+1
  1331  02B8  083E               	movf	___aldiv@quotient,w
  1332  02B9  00B3               	movwf	?___aldiv
  1333  02BA                     l428:
  1334  02BA  0008               	return
  1335  02BB                     __end_of___aldiv:
  1336                           
  1337                           	psect	text3
  1338  05D2                     __ptext3:	
  1339 ;; *************** function _usart_Interrupt *****************
  1340 ;; Defined at:
  1341 ;;		line 41 in file "usart.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;		None
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;		None
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		None
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1355 ;;      Params:         0       0       0       0       0
  1356 ;;      Locals:         0       0       0       0       0
  1357 ;;      Temps:          0       0       0       0       0
  1358 ;;      Totals:         0       0       0       0       0
  1359 ;;Total ram usage:        0 bytes
  1360 ;; Hardware stack levels used:    1
  1361 ;; Hardware stack levels required when called:    6
  1362 ;; This function calls:
  1363 ;;		Nothing
  1364 ;; This function is called by:
  1365 ;;		_main
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           
  1370                           ;psect for function _usart_Interrupt
  1371  05D2                     _usart_Interrupt:
  1372  05D2                     l1681:	
  1373                           ;incstack = 0
  1374                           ; Regs used in _usart_Interrupt: []
  1375                           
  1376                           
  1377                           ;usart.c: 42:     PIR1bits.RCIF = 0;
  1378  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  1379  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  1380  05D4  128C               	bcf	12,5	;volatile
  1381                           
  1382                           ;usart.c: 43:     PIE1bits.RCIE = 1;
  1383  05D5  1683               	bsf	3,5	;RP0=1, select bank1
  1384  05D6  1303               	bcf	3,6	;RP1=0, select bank1
  1385  05D7  168C               	bsf	12,5	;volatile
  1386                           
  1387                           ;usart.c: 44:     INTCONbits.PEIE = 1;
  1388  05D8  170B               	bsf	11,6	;volatile
  1389                           
  1390                           ;usart.c: 45:     INTCONbits.GIE = 1;
  1391  05D9  178B               	bsf	11,7	;volatile
  1392  05DA                     l116:
  1393  05DA  0008               	return
  1394  05DB                     __end_of_usart_Interrupt:
  1395                           
  1396                           	psect	text4
  1397  059D                     __ptext4:	
  1398 ;; *************** function _i2c_init *****************
  1399 ;; Defined at:
  1400 ;;		line 10 in file "i2c.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;		None
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;		None
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      void 
  1407 ;; Registers used:
  1408 ;;		wreg, status,2
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1414 ;;      Params:         0       0       0       0       0
  1415 ;;      Locals:         0       0       0       0       0
  1416 ;;      Temps:          0       0       0       0       0
  1417 ;;      Totals:         0       0       0       0       0
  1418 ;;Total ram usage:        0 bytes
  1419 ;; Hardware stack levels used:    1
  1420 ;; Hardware stack levels required when called:    6
  1421 ;; This function calls:
  1422 ;;		Nothing
  1423 ;; This function is called by:
  1424 ;;		_main
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           
  1429                           ;psect for function _i2c_init
  1430  059D                     _i2c_init:
  1431  059D                     l1683:	
  1432                           ;incstack = 0
  1433                           ; Regs used in _i2c_init: [wreg+status,2]
  1434                           
  1435                           
  1436                           ;i2c.c: 12:     TRISCbits.TRISC3 = 1;
  1437  059D  1683               	bsf	3,5	;RP0=1, select bank1
  1438  059E  1303               	bcf	3,6	;RP1=0, select bank1
  1439  059F  1587               	bsf	7,3	;volatile
  1440                           
  1441                           ;i2c.c: 13:     TRISCbits.TRISC4 = 1;
  1442  05A0  1607               	bsf	7,4	;volatile
  1443  05A1                     l1685:
  1444                           
  1445                           ;i2c.c: 14:     SSPADD = 0x09;
  1446  05A1  3009               	movlw	9
  1447  05A2  0093               	movwf	19	;volatile
  1448                           
  1449                           ;i2c.c: 15:     SSPSTAT = 0x80;
  1450  05A3  3080               	movlw	128
  1451  05A4  0094               	movwf	20	;volatile
  1452  05A5                     l1687:
  1453                           
  1454                           ;i2c.c: 16:     SSPCON2 = 0x00;
  1455  05A5  0191               	clrf	17	;volatile
  1456  05A6                     l1689:
  1457                           
  1458                           ;i2c.c: 17:     SSPCON = 0x28;
  1459  05A6  3028               	movlw	40
  1460  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  1461  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  1462  05A9  0094               	movwf	20	;volatile
  1463  05AA                     l176:
  1464  05AA  0008               	return
  1465  05AB                     __end_of_i2c_init:
  1466                           
  1467                           	psect	text5
  1468  002A                     __ptext5:	
  1469 ;; *************** function _myISR *****************
  1470 ;; Defined at:
  1471 ;;		line 14 in file "main.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;		None
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1485 ;;      Params:         0       0       0       0       0
  1486 ;;      Locals:         0       0       0       0       0
  1487 ;;      Temps:          0       6       0       0       0
  1488 ;;      Totals:         0       6       0       0       0
  1489 ;;Total ram usage:        6 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:    5
  1492 ;; This function calls:
  1493 ;;		_i2c_read
  1494 ;;		_i2c_start
  1495 ;;		_i2c_stop
  1496 ;;		_i2c_write
  1497 ;;		_recivedCMD
  1498 ;;		_sprintf
  1499 ;;		_strcmp
  1500 ;;		_token
  1501 ;;		_usart_TxStr
  1502 ;; This function is called by:
  1503 ;;		Interrupt level 1
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           
  1508                           ;psect for function _myISR
  1509  002A                     _myISR:
  1510  002A                     i1l1691:
  1511                           
  1512                           ;main.c: 15:     recivedCMD(data);
  1513  002A  3051               	movlw	(low (_data| 0))& (0+255)
  1514  002B  120A  118A  24E3  120A  118A  	fcall	_recivedCMD
  1515                           
  1516                           ;main.c: 16:     token(data);
  1517  0030  3051               	movlw	(low (_data| 0))& (0+255)
  1518  0031  120A  118A  241F  120A  118A  	fcall	_token
  1519                           
  1520                           ;main.c: 17:     if(strcmp(dir[0],"M1") == 0){
  1521  0036  300F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1522  0037  00FF               	movwf	btemp+1
  1523  0038  087F               	movf	btemp+1,w
  1524  0039  00F0               	movwf	strcmp@s2
  1525  003A  1283               	bcf	3,5	;RP0=0, select bank0
  1526  003B  1303               	bcf	3,6	;RP1=0, select bank0
  1527  003C  084D               	movf	_dir,w
  1528  003D  120A  118A  24B5  120A  118A  	fcall	_strcmp
  1529  0042  0870               	movf	?_strcmp,w
  1530  0043  0471               	iorwf	?_strcmp+1,w
  1531  0044  1D03               	btfss	3,2
  1532  0045  2847               	goto	u124_21
  1533  0046  2848               	goto	u124_20
  1534  0047                     u124_21:
  1535  0047  2927               	goto	i1l1735
  1536  0048                     u124_20:
  1537  0048                     i1l1693:
  1538                           
  1539                           ;main.c: 18:         PORTDbits.RD0 ^= 1;
  1540  0048  1283               	bcf	3,5	;RP0=0, select bank0
  1541  0049  1303               	bcf	3,6	;RP1=0, select bank0
  1542  004A  0808               	movf	8,w	;volatile
  1543  004B  3901               	andlw	1
  1544  004C  00FF               	movwf	btemp+1
  1545  004D  3001               	movlw	1
  1546  004E  06FF               	xorwf	btemp+1,f
  1547  004F  0808               	movf	8,w	;volatile
  1548  0050  067F               	xorwf	btemp+1,w
  1549  0051  39FE               	andlw	-2
  1550  0052  067F               	xorwf	btemp+1,w
  1551  0053  0088               	movwf	8	;volatile
  1552  0054                     i1l1695:
  1553                           
  1554                           ;main.c: 19:         if(strcmp(dir[1],"P1") == 0){
  1555  0054  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1556  0055  00FF               	movwf	btemp+1
  1557  0056  087F               	movf	btemp+1,w
  1558  0057  00F0               	movwf	strcmp@s2
  1559  0058  084E               	movf	low ((_dir| 0+1)),w
  1560  0059  120A  118A  24B5  120A  118A  	fcall	_strcmp
  1561  005E  0870               	movf	?_strcmp,w
  1562  005F  0471               	iorwf	?_strcmp+1,w
  1563  0060  1D03               	btfss	3,2
  1564  0061  2863               	goto	u125_21
  1565  0062  2864               	goto	u125_20
  1566  0063                     u125_21:
  1567  0063  28BF               	goto	i1l1715
  1568  0064                     u125_20:
  1569  0064                     i1l1697:
  1570                           
  1571                           ;main.c: 20:             if(*dir[2] == 'a'){
  1572  0064  1283               	bcf	3,5	;RP0=0, select bank0
  1573  0065  1303               	bcf	3,6	;RP1=0, select bank0
  1574  0066  084F               	movf	low ((_dir| 0+2)),w
  1575  0067  0084               	movwf	4
  1576  0068  3061               	movlw	97
  1577  0069  1383               	bcf	3,7	;select IRP bank0
  1578  006A  0600               	xorwf	0,w
  1579  006B  1D03               	btfss	3,2
  1580  006C  286E               	goto	u126_21
  1581  006D  286F               	goto	u126_20
  1582  006E                     u126_21:
  1583  006E  28A3               	goto	i1l1709
  1584  006F                     u126_20:
  1585  006F                     i1l1699:
  1586                           
  1587                           ;main.c: 21:                 i2c_start();
  1588  006F  120A  118A  258A  120A  118A  	fcall	_i2c_start
  1589                           
  1590                           ;main.c: 22:                 i2c_write(0x31);
  1591  0074  3031               	movlw	49
  1592  0075  120A  118A  2577  120A  118A  	fcall	_i2c_write
  1593  007A                     i1l1701:
  1594                           
  1595                           ;main.c: 23:                 lectura = i2c_read();
  1596  007A  120A  118A  2563  120A  118A  	fcall	_i2c_read
  1597  007F  00FF               	movwf	btemp+1
  1598  0080  087F               	movf	btemp+1,w
  1599  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1600  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1601  0083  00D0               	movwf	_lectura
  1602  0084                     i1l1703:
  1603                           
  1604                           ;main.c: 24:                 i2c_stop();
  1605  0084  120A  118A  25AB  120A  118A  	fcall	_i2c_stop
  1606  0089                     i1l1705:
  1607                           
  1608                           ;main.c: 25:                 sprintf(data,"%d\n",lectura);
  1609  0089  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1610  008A  00FF               	movwf	btemp+1
  1611  008B  087F               	movf	btemp+1,w
  1612  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1613  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1614  008E  00A0               	movwf	sprintf@f
  1615  008F  0850               	movf	_lectura,w
  1616  0090  00AD               	movwf	??_myISR
  1617  0091  01AE               	clrf	??_myISR+1
  1618  0092  082D               	movf	??_myISR,w
  1619  0093  00A1               	movwf	?_sprintf+1
  1620  0094  082E               	movf	??_myISR+1,w
  1621  0095  00A2               	movwf	?_sprintf+2
  1622  0096  3051               	movlw	(low (_data| 0))& (0+255)
  1623  0097  120A  118A  2136  120A  118A  	fcall	_sprintf
  1624  009C                     i1l1707:
  1625                           
  1626                           ;main.c: 26:                 usart_TxStr(data);
  1627  009C  3051               	movlw	(low (_data| 0))& (0+255)
  1628  009D  120A  118A  254C  120A  118A  	fcall	_usart_TxStr
  1629                           
  1630                           ;main.c: 27:             }
  1631  00A2  2927               	goto	i1l1735
  1632  00A3                     i1l1709:
  1633                           
  1634                           ;main.c: 29:                 i2c_start();
  1635  00A3  120A  118A  258A  120A  118A  	fcall	_i2c_start
  1636                           
  1637                           ;main.c: 30:                 i2c_write(0x30);
  1638  00A8  3030               	movlw	48
  1639  00A9  120A  118A  2577  120A  118A  	fcall	_i2c_write
  1640  00AE                     i1l1711:
  1641                           
  1642                           ;main.c: 31:                 i2c_write(*dir[2]);
  1643  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1644  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1645  00B0  084F               	movf	low ((_dir| 0+2)),w
  1646  00B1  0084               	movwf	4
  1647  00B2  1383               	bcf	3,7	;select IRP bank0
  1648  00B3  0800               	movf	0,w
  1649  00B4  120A  118A  2577  120A  118A  	fcall	_i2c_write
  1650  00B9                     i1l1713:
  1651                           
  1652                           ;main.c: 32:                 i2c_stop();
  1653  00B9  120A  118A  25AB  120A  118A  	fcall	_i2c_stop
  1654  00BE  2927               	goto	i1l1735
  1655  00BF                     i1l1715:
  1656  00BF  3015               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1657  00C0  00FF               	movwf	btemp+1
  1658  00C1  087F               	movf	btemp+1,w
  1659  00C2  00F0               	movwf	strcmp@s2
  1660  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  1661  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  1662  00C5  084E               	movf	low ((_dir| 0+1)),w
  1663  00C6  120A  118A  24B5  120A  118A  	fcall	_strcmp
  1664  00CB  0870               	movf	?_strcmp,w
  1665  00CC  0471               	iorwf	?_strcmp+1,w
  1666  00CD  1D03               	btfss	3,2
  1667  00CE  28D0               	goto	u127_21
  1668  00CF  28D1               	goto	u127_20
  1669  00D0                     u127_21:
  1670  00D0  2927               	goto	i1l1735
  1671  00D1                     u127_20:
  1672  00D1                     i1l1717:
  1673                           
  1674                           ;main.c: 36:         if(*dir[2] == 'a'){
  1675  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1676  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1677  00D3  084F               	movf	low ((_dir| 0+2)),w
  1678  00D4  0084               	movwf	4
  1679  00D5  3061               	movlw	97
  1680  00D6  1383               	bcf	3,7	;select IRP bank0
  1681  00D7  0600               	xorwf	0,w
  1682  00D8  1D03               	btfss	3,2
  1683  00D9  28DB               	goto	u128_21
  1684  00DA  28DC               	goto	u128_20
  1685  00DB                     u128_21:
  1686  00DB  2910               	goto	i1l1729
  1687  00DC                     u128_20:
  1688  00DC                     i1l1719:
  1689                           
  1690                           ;main.c: 37:                 i2c_start();
  1691  00DC  120A  118A  258A  120A  118A  	fcall	_i2c_start
  1692                           
  1693                           ;main.c: 38:                 i2c_write(0x33);
  1694  00E1  3033               	movlw	51
  1695  00E2  120A  118A  2577  120A  118A  	fcall	_i2c_write
  1696  00E7                     i1l1721:
  1697                           
  1698                           ;main.c: 39:                 lectura = i2c_read();
  1699  00E7  120A  118A  2563  120A  118A  	fcall	_i2c_read
  1700  00EC  00FF               	movwf	btemp+1
  1701  00ED  087F               	movf	btemp+1,w
  1702  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1703  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1704  00F0  00D0               	movwf	_lectura
  1705  00F1                     i1l1723:
  1706                           
  1707                           ;main.c: 40:                 i2c_stop();
  1708  00F1  120A  118A  25AB  120A  118A  	fcall	_i2c_stop
  1709  00F6                     i1l1725:
  1710                           
  1711                           ;main.c: 41:                 sprintf(data,"%d\n",lectura);
  1712  00F6  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1713  00F7  00FF               	movwf	btemp+1
  1714  00F8  087F               	movf	btemp+1,w
  1715  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1716  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  1717  00FB  00A0               	movwf	sprintf@f
  1718  00FC  0850               	movf	_lectura,w
  1719  00FD  00AD               	movwf	??_myISR
  1720  00FE  01AE               	clrf	??_myISR+1
  1721  00FF  082D               	movf	??_myISR,w
  1722  0100  00A1               	movwf	?_sprintf+1
  1723  0101  082E               	movf	??_myISR+1,w
  1724  0102  00A2               	movwf	?_sprintf+2
  1725  0103  3051               	movlw	(low (_data| 0))& (0+255)
  1726  0104  120A  118A  2136  120A  118A  	fcall	_sprintf
  1727  0109                     i1l1727:
  1728                           
  1729                           ;main.c: 42:                 usart_TxStr(data);
  1730  0109  3051               	movlw	(low (_data| 0))& (0+255)
  1731  010A  120A  118A  254C  120A  118A  	fcall	_usart_TxStr
  1732                           
  1733                           ;main.c: 43:             }
  1734  010F  2927               	goto	i1l1735
  1735  0110                     i1l1729:
  1736                           
  1737                           ;main.c: 45:                 i2c_start();
  1738  0110  120A  118A  258A  120A  118A  	fcall	_i2c_start
  1739                           
  1740                           ;main.c: 46:                 i2c_write(0x32);
  1741  0115  3032               	movlw	50
  1742  0116  120A  118A  2577  120A  118A  	fcall	_i2c_write
  1743  011B                     i1l1731:
  1744                           
  1745                           ;main.c: 47:                 i2c_write(*dir[2]);
  1746  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1747  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1748  011D  084F               	movf	low ((_dir| 0+2)),w
  1749  011E  0084               	movwf	4
  1750  011F  1383               	bcf	3,7	;select IRP bank0
  1751  0120  0800               	movf	0,w
  1752  0121  120A  118A  2577  120A  118A  	fcall	_i2c_write
  1753  0126  28B9               	goto	i1l1713
  1754  0127                     i1l1735:
  1755                           
  1756                           ;main.c: 52:     PIR1bits.RCIF = 0;
  1757  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1758  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1759  0129  128C               	bcf	12,5	;volatile
  1760  012A                     i1l1737:
  1761                           
  1762                           ;main.c: 53:     INTCONbits.GIE = 1;
  1763  012A  178B               	bsf	11,7	;volatile
  1764  012B                     i1l61:
  1765  012B  0832               	movf	??_myISR+5,w
  1766  012C  00FF               	movwf	btemp+1
  1767  012D  0831               	movf	??_myISR+4,w
  1768  012E  008A               	movwf	10
  1769  012F  0830               	movf	??_myISR+3,w
  1770  0130  0084               	movwf	4
  1771  0131  0E2F               	swapf	(??_myISR+2)^0,w
  1772  0132  0083               	movwf	3
  1773  0133  0EFE               	swapf	btemp,f
  1774  0134  0E7E               	swapf	btemp,w
  1775  0135  0009               	retfie
  1776  0136                     __end_of_myISR:
  1777                           
  1778                           	psect	intentry
  1779  0004                     __pintentry:	
  1780                           ;incstack = 0
  1781                           ; Regs used in _myISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1782                           
  1783  0004                     interrupt_function:
  1784  007E                     saved_w	set	btemp
  1785  0004  00FE               	movwf	btemp
  1786  0005  0E03               	swapf	3,w
  1787  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1788  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1789  0008  00AF               	movwf	??_myISR+2
  1790  0009  0804               	movf	4,w
  1791  000A  00B0               	movwf	??_myISR+3
  1792  000B  080A               	movf	10,w
  1793  000C  00B1               	movwf	??_myISR+4
  1794  000D  087F               	movf	btemp+1,w
  1795  000E  00B2               	movwf	??_myISR+5
  1796  000F  120A  118A  282A   	ljmp	_myISR
  1797                           
  1798                           	psect	text6
  1799  054C                     __ptext6:	
  1800 ;; *************** function _usart_TxStr *****************
  1801 ;; Defined at:
  1802 ;;		line 33 in file "usart.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  str             1    wreg     PTR unsigned char 
  1805 ;;		 -> data(10), 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;  str             1    1[COMMON] PTR unsigned char 
  1808 ;;		 -> data(10), 
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  1    wreg      void 
  1811 ;; Registers used:
  1812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1818 ;;      Params:         0       0       0       0       0
  1819 ;;      Locals:         1       0       0       0       0
  1820 ;;      Temps:          0       0       0       0       0
  1821 ;;      Totals:         1       0       0       0       0
  1822 ;;Total ram usage:        1 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; Hardware stack levels required when called:    1
  1825 ;; This function calls:
  1826 ;;		_usart_Tx
  1827 ;; This function is called by:
  1828 ;;		_myISR
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           
  1833                           ;psect for function _usart_TxStr
  1834  054C                     _usart_TxStr:
  1835                           
  1836                           ;incstack = 0
  1837                           ; Regs used in _usart_TxStr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1838                           ;usart_TxStr@str stored from wreg
  1839  054C  00F1               	movwf	usart_TxStr@str
  1840  054D                     i1l1655:
  1841                           
  1842                           ;usart.c: 34:     while(*str != '\0'){
  1843  054D  2D5A               	goto	i1l1661
  1844  054E                     i1l1657:
  1845                           
  1846                           ;usart.c: 35:         usart_Tx(*str);
  1847  054E  0871               	movf	usart_TxStr@str,w
  1848  054F  0084               	movwf	4
  1849  0550  0800               	movf	0,w
  1850  0551  120A  118A  25C6  120A  118A  	fcall	_usart_Tx
  1851  0556                     i1l1659:
  1852                           
  1853                           ;usart.c: 36:         str++;
  1854  0556  3001               	movlw	1
  1855  0557  00FF               	movwf	btemp+1
  1856  0558  087F               	movf	btemp+1,w
  1857  0559  07F1               	addwf	usart_TxStr@str,f
  1858  055A                     i1l1661:
  1859                           
  1860                           ;usart.c: 34:     while(*str != '\0'){
  1861  055A  0871               	movf	usart_TxStr@str,w
  1862  055B  0084               	movwf	4
  1863  055C  1383               	bcf	3,7	;select IRP bank0
  1864  055D  0800               	movf	0,w
  1865  055E  1D03               	btfss	3,2
  1866  055F  2D61               	goto	u123_21
  1867  0560  2D62               	goto	u123_20
  1868  0561                     u123_21:
  1869  0561  2D4E               	goto	i1l1657
  1870  0562                     u123_20:
  1871  0562                     i1l113:
  1872  0562  0008               	return
  1873  0563                     __end_of_usart_TxStr:
  1874                           
  1875                           	psect	text7
  1876  05C6                     __ptext7:	
  1877 ;; *************** function _usart_Tx *****************
  1878 ;; Defined at:
  1879 ;;		line 24 in file "usart.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  send            1    wreg     unsigned char 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  send            1    0[COMMON] unsigned char 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1893 ;;      Params:         0       0       0       0       0
  1894 ;;      Locals:         1       0       0       0       0
  1895 ;;      Temps:          0       0       0       0       0
  1896 ;;      Totals:         1       0       0       0       0
  1897 ;;Total ram usage:        1 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; This function calls:
  1900 ;;		Nothing
  1901 ;; This function is called by:
  1902 ;;		_usart_TxStr
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           
  1907                           ;psect for function _usart_Tx
  1908  05C6                     _usart_Tx:
  1909                           
  1910                           ;incstack = 0
  1911                           ; Regs used in _usart_Tx: [wreg]
  1912                           ;usart_Tx@send stored from wreg
  1913  05C6  00F0               	movwf	usart_Tx@send
  1914  05C7                     i1l1397:
  1915                           
  1916                           ;usart.c: 25:     TXREG = send;
  1917  05C7  0870               	movf	usart_Tx@send,w
  1918  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  1919  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  1920  05CA  0099               	movwf	25	;volatile
  1921  05CB                     i1l101:	
  1922                           ;usart.c: 26:     while (!TXSTAbits.TRMT);
  1923                           
  1924  05CB  1683               	bsf	3,5	;RP0=1, select bank1
  1925  05CC  1303               	bcf	3,6	;RP1=0, select bank1
  1926  05CD  1C98               	btfss	24,1	;volatile
  1927  05CE  2DD0               	goto	u73_21
  1928  05CF  2DD1               	goto	u73_20
  1929  05D0                     u73_21:
  1930  05D0  2DCB               	goto	i1l101
  1931  05D1                     u73_20:
  1932  05D1                     i1l104:
  1933  05D1  0008               	return
  1934  05D2                     __end_of_usart_Tx:
  1935                           
  1936                           	psect	text8
  1937  041F                     __ptext8:	
  1938 ;; *************** function _token *****************
  1939 ;; Defined at:
  1940 ;;		line 68 in file "usart.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;  cmd             1    wreg     PTR unsigned char 
  1943 ;;		 -> data(10), 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  cmd             1    2[BANK0 ] PTR unsigned char 
  1946 ;;		 -> data(10), 
  1947 ;;  i               2    0[BANK0 ] int 
  1948 ;;  tok             1    3[BANK0 ] PTR unsigned char 
  1949 ;;		 -> NULL(0), data(10), 
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      void 
  1952 ;; Registers used:
  1953 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1959 ;;      Params:         0       0       0       0       0
  1960 ;;      Locals:         0       4       0       0       0
  1961 ;;      Temps:          0       0       0       0       0
  1962 ;;      Totals:         0       4       0       0       0
  1963 ;;Total ram usage:        4 bytes
  1964 ;; Hardware stack levels used:    1
  1965 ;; Hardware stack levels required when called:    4
  1966 ;; This function calls:
  1967 ;;		_strtok
  1968 ;; This function is called by:
  1969 ;;		_myISR
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           
  1974                           ;psect for function _token
  1975  041F                     _token:
  1976                           
  1977                           ;incstack = 0
  1978                           ; Regs used in _token: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1979                           ;token@cmd stored from wreg
  1980  041F  1283               	bcf	3,5	;RP0=0, select bank0
  1981  0420  1303               	bcf	3,6	;RP1=0, select bank0
  1982  0421  00A2               	movwf	token@cmd
  1983  0422                     i1l1545:
  1984                           
  1985                           ;usart.c: 70:     int i = 0;
  1986  0422  01A0               	clrf	token@i
  1987  0423  01A1               	clrf	token@i+1
  1988  0424                     i1l1547:
  1989                           
  1990                           ;usart.c: 71:     tok = strtok(cmd, ",");
  1991  0424  3018               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1992  0425  00FF               	movwf	btemp+1
  1993  0426  087F               	movf	btemp+1,w
  1994  0427  00FA               	movwf	strtok@s2
  1995  0428  0822               	movf	token@cmd,w
  1996  0429  120A  118A  230A  120A  118A  	fcall	_strtok
  1997  042E  00FF               	movwf	btemp+1
  1998  042F  087F               	movf	btemp+1,w
  1999  0430  1283               	bcf	3,5	;RP0=0, select bank0
  2000  0431  1303               	bcf	3,6	;RP1=0, select bank0
  2001  0432  00A3               	movwf	token@tok
  2002                           
  2003                           ;usart.c: 72:     while( tok != (0) ) {
  2004  0433  2C51               	goto	i1l1555
  2005  0434                     i1l1549:
  2006                           
  2007                           ;usart.c: 73:         dir[i] = tok;
  2008  0434  0823               	movf	token@tok,w
  2009  0435  00FF               	movwf	btemp+1
  2010  0436  0820               	movf	token@i,w
  2011  0437  3E4D               	addlw	(low (_dir| 0))& (0+255)
  2012  0438  0084               	movwf	4
  2013  0439  087F               	movf	btemp+1,w
  2014  043A  1383               	bcf	3,7	;select IRP bank0
  2015  043B  0080               	movwf	0
  2016  043C                     i1l1551:
  2017                           
  2018                           ;usart.c: 74:         tok = strtok((0), ",");
  2019  043C  3018               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2020  043D  00FF               	movwf	btemp+1
  2021  043E  087F               	movf	btemp+1,w
  2022  043F  00FA               	movwf	strtok@s2
  2023  0440  3000               	movlw	0
  2024  0441  120A  118A  230A  120A  118A  	fcall	_strtok
  2025  0446  00FF               	movwf	btemp+1
  2026  0447  087F               	movf	btemp+1,w
  2027  0448  1283               	bcf	3,5	;RP0=0, select bank0
  2028  0449  1303               	bcf	3,6	;RP1=0, select bank0
  2029  044A  00A3               	movwf	token@tok
  2030  044B                     i1l1553:
  2031                           
  2032                           ;usart.c: 75:         i++;
  2033  044B  3001               	movlw	1
  2034  044C  07A0               	addwf	token@i,f
  2035  044D  1803               	skipnc
  2036  044E  0AA1               	incf	token@i+1,f
  2037  044F  3000               	movlw	0
  2038  0450  07A1               	addwf	token@i+1,f
  2039  0451                     i1l1555:
  2040                           
  2041                           ;usart.c: 72:     while( tok != (0) ) {
  2042  0451  0823               	movf	token@tok,w
  2043  0452  1D03               	btfss	3,2
  2044  0453  2C55               	goto	u106_21
  2045  0454  2C56               	goto	u106_20
  2046  0455                     u106_21:
  2047  0455  2C34               	goto	i1l1549
  2048  0456                     u106_20:
  2049  0456                     i1l135:
  2050  0456  0008               	return
  2051  0457                     __end_of_token:
  2052                           
  2053                           	psect	text9
  2054  030A                     __ptext9:	
  2055 ;; *************** function _strtok *****************
  2056 ;; Defined at:
  2057 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\strtok.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  s1              1    wreg     PTR unsigned char 
  2060 ;;		 -> NULL(0), data(10), 
  2061 ;;  s2              1   10[COMMON] PTR const unsigned char 
  2062 ;;		 -> STR_7(2), STR_6(2), 
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;  s1              1   11[COMMON] PTR unsigned char 
  2065 ;;		 -> NULL(0), data(10), 
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  1    wreg      PTR unsigned char 
  2068 ;; Registers used:
  2069 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2075 ;;      Params:         1       0       0       0       0
  2076 ;;      Locals:         1       0       0       0       0
  2077 ;;      Temps:          0       0       0       0       0
  2078 ;;      Totals:         2       0       0       0       0
  2079 ;;Total ram usage:        2 bytes
  2080 ;; Hardware stack levels used:    1
  2081 ;; Hardware stack levels required when called:    3
  2082 ;; This function calls:
  2083 ;;		_strcspn
  2084 ;;		_strspn
  2085 ;; This function is called by:
  2086 ;;		_token
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           
  2091                           ;psect for function _strtok
  2092  030A                     _strtok:
  2093                           
  2094                           ;incstack = 0
  2095                           ; Regs used in _strtok: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2096                           ;strtok@s1 stored from wreg
  2097  030A  00FB               	movwf	strtok@s1
  2098  030B                     i1l1405:
  2099  030B  087B               	movf	strtok@s1,w
  2100  030C  1D03               	btfss	3,2
  2101  030D  2B0F               	goto	u75_21
  2102  030E  2B10               	goto	u75_20
  2103  030F                     u75_21:
  2104  030F  2B14               	goto	i1l1409
  2105  0310                     u75_20:
  2106  0310                     i1l1407:
  2107  0310  087C               	movf	strtok@sp,w
  2108  0311  00FF               	movwf	btemp+1
  2109  0312  087F               	movf	btemp+1,w
  2110  0313  00FB               	movwf	strtok@s1
  2111  0314                     i1l1409:
  2112  0314  087B               	movf	strtok@s1,w
  2113  0315  1D03               	btfss	3,2
  2114  0316  2B18               	goto	u76_21
  2115  0317  2B19               	goto	u76_20
  2116  0318                     u76_21:
  2117  0318  2B1B               	goto	i1l1415
  2118  0319                     u76_20:
  2119  0319                     i1l1411:
  2120  0319  3000               	movlw	0
  2121  031A  2B55               	goto	i1l820
  2122  031B                     i1l1415:
  2123  031B  087A               	movf	strtok@s2,w
  2124  031C  00FF               	movwf	btemp+1
  2125  031D  087F               	movf	btemp+1,w
  2126  031E  00F3               	movwf	strspn@s2
  2127  031F  087B               	movf	strtok@s1,w
  2128  0320  120A  118A  2457  120A  118A  	fcall	_strspn
  2129  0325  0873               	movf	?_strspn,w
  2130  0326  00FF               	movwf	btemp+1
  2131  0327  087F               	movf	btemp+1,w
  2132  0328  07FB               	addwf	strtok@s1,f
  2133  0329                     i1l1417:
  2134  0329  087B               	movf	strtok@s1,w
  2135  032A  0084               	movwf	4
  2136  032B  1383               	bcf	3,7	;select IRP bank0
  2137  032C  0800               	movf	0,w
  2138  032D  1D03               	btfss	3,2
  2139  032E  2B30               	goto	u77_21
  2140  032F  2B31               	goto	u77_20
  2141  0330                     u77_21:
  2142  0330  2B34               	goto	i1l1423
  2143  0331                     u77_20:
  2144  0331                     i1l1419:
  2145  0331  01FC               	clrf	strtok@sp
  2146  0332  3000               	movlw	0
  2147  0333  2B55               	goto	i1l820
  2148  0334                     i1l1423:
  2149  0334  087A               	movf	strtok@s2,w
  2150  0335  00FF               	movwf	btemp+1
  2151  0336  087F               	movf	btemp+1,w
  2152  0337  00F3               	movwf	strcspn@s2
  2153  0338  087B               	movf	strtok@s1,w
  2154  0339  120A  118A  2486  120A  118A  	fcall	_strcspn
  2155  033E  0873               	movf	?_strcspn,w
  2156  033F  077B               	addwf	strtok@s1,w
  2157  0340  00FF               	movwf	btemp+1
  2158  0341  087F               	movf	btemp+1,w
  2159  0342  00FC               	movwf	strtok@sp
  2160  0343                     i1l1425:
  2161  0343  087C               	movf	strtok@sp,w
  2162  0344  0084               	movwf	4
  2163  0345  1383               	bcf	3,7	;select IRP bank0
  2164  0346  0800               	movf	0,w
  2165  0347  1903               	btfsc	3,2
  2166  0348  2B4A               	goto	u78_21
  2167  0349  2B4B               	goto	u78_20
  2168  034A                     u78_21:
  2169  034A  2B53               	goto	i1l1431
  2170  034B                     u78_20:
  2171  034B                     i1l1427:
  2172  034B  087C               	movf	strtok@sp,w
  2173  034C  0084               	movwf	4
  2174  034D  0180               	clrf	0
  2175  034E                     i1l1429:
  2176  034E  3001               	movlw	1
  2177  034F  00FF               	movwf	btemp+1
  2178  0350  087F               	movf	btemp+1,w
  2179  0351  07FC               	addwf	strtok@sp,f
  2180  0352  2B54               	goto	i1l1433
  2181  0353                     i1l1431:
  2182  0353  01FC               	clrf	strtok@sp
  2183  0354                     i1l1433:
  2184  0354  087B               	movf	strtok@s1,w
  2185  0355                     i1l820:
  2186  0355  0008               	return
  2187  0356                     __end_of_strtok:
  2188                           
  2189                           	psect	text10
  2190  0457                     __ptext10:	
  2191 ;; *************** function _strspn *****************
  2192 ;; Defined at:
  2193 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\strspn.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;  s1              1    wreg     PTR const unsigned char 
  2196 ;;		 -> NULL(0), data(10), 
  2197 ;;  s2              1    3[COMMON] PTR const unsigned char 
  2198 ;;		 -> STR_7(2), STR_6(2), 
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;  s1              1    9[COMMON] PTR const unsigned char 
  2201 ;;		 -> NULL(0), data(10), 
  2202 ;;  i               2    7[COMMON] unsigned int 
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  2    3[COMMON] unsigned int 
  2205 ;; Registers used:
  2206 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2212 ;;      Params:         2       0       0       0       0
  2213 ;;      Locals:         3       0       0       0       0
  2214 ;;      Temps:          2       0       0       0       0
  2215 ;;      Totals:         7       0       0       0       0
  2216 ;;Total ram usage:        7 bytes
  2217 ;; Hardware stack levels used:    1
  2218 ;; Hardware stack levels required when called:    2
  2219 ;; This function calls:
  2220 ;;		_strchr
  2221 ;; This function is called by:
  2222 ;;		_strtok
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           
  2227                           ;psect for function _strspn
  2228  0457                     _strspn:
  2229                           
  2230                           ;incstack = 0
  2231                           ; Regs used in _strspn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2232                           ;strspn@s1 stored from wreg
  2233  0457  00F9               	movwf	strspn@s1
  2234  0458                     i1l1373:
  2235  0458  01F7               	clrf	strspn@i
  2236  0459  01F8               	clrf	strspn@i+1
  2237  045A  2C65               	goto	i1l1377
  2238  045B                     i1l1375:
  2239  045B  3001               	movlw	1
  2240  045C  00FF               	movwf	btemp+1
  2241  045D  087F               	movf	btemp+1,w
  2242  045E  07F9               	addwf	strspn@s1,f
  2243  045F  3001               	movlw	1
  2244  0460  07F7               	addwf	strspn@i,f
  2245  0461  1803               	skipnc
  2246  0462  0AF8               	incf	strspn@i+1,f
  2247  0463  3000               	movlw	0
  2248  0464  07F8               	addwf	strspn@i+1,f
  2249  0465                     i1l1377:
  2250  0465  0879               	movf	strspn@s1,w
  2251  0466  0084               	movwf	4
  2252  0467  1383               	bcf	3,7	;select IRP bank0
  2253  0468  0800               	movf	0,w
  2254  0469  1903               	btfsc	3,2
  2255  046A  2C6C               	goto	u69_21
  2256  046B  2C6D               	goto	u69_20
  2257  046C                     u69_21:
  2258  046C  2C81               	goto	i1l1381
  2259  046D                     u69_20:
  2260  046D                     i1l1379:
  2261  046D  0879               	movf	strspn@s1,w
  2262  046E  0084               	movwf	4
  2263  046F  0800               	movf	0,w
  2264  0470  00F5               	movwf	??_strspn
  2265  0471  01F6               	clrf	??_strspn+1
  2266  0472  0875               	movf	??_strspn,w
  2267  0473  00F0               	movwf	strchr@chr
  2268  0474  0876               	movf	??_strspn+1,w
  2269  0475  00F1               	movwf	strchr@chr+1
  2270  0476  0873               	movf	strspn@s2,w
  2271  0477  120A  118A  250D  120A  118A  	fcall	_strchr
  2272  047C  3A00               	xorlw	0
  2273  047D  1D03               	skipz
  2274  047E  2C80               	goto	u70_21
  2275  047F  2C81               	goto	u70_20
  2276  0480                     u70_21:
  2277  0480  2C5B               	goto	i1l1375
  2278  0481                     u70_20:
  2279  0481                     i1l1381:
  2280  0481  0878               	movf	strspn@i+1,w
  2281  0482  00F4               	movwf	?_strspn+1
  2282  0483  0877               	movf	strspn@i,w
  2283  0484  00F3               	movwf	?_strspn
  2284  0485                     i1l849:
  2285  0485  0008               	return
  2286  0486                     __end_of_strspn:
  2287                           
  2288                           	psect	text11
  2289  0486                     __ptext11:	
  2290 ;; *************** function _strcspn *****************
  2291 ;; Defined at:
  2292 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\strcspn.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;  s1              1    wreg     PTR const unsigned char 
  2295 ;;		 -> NULL(0), data(10), 
  2296 ;;  s2              1    3[COMMON] PTR const unsigned char 
  2297 ;;		 -> STR_7(2), STR_6(2), 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  s1              1    9[COMMON] PTR const unsigned char 
  2300 ;;		 -> NULL(0), data(10), 
  2301 ;;  i               2    7[COMMON] unsigned int 
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  2    3[COMMON] unsigned int 
  2304 ;; Registers used:
  2305 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2311 ;;      Params:         2       0       0       0       0
  2312 ;;      Locals:         3       0       0       0       0
  2313 ;;      Temps:          2       0       0       0       0
  2314 ;;      Totals:         7       0       0       0       0
  2315 ;;Total ram usage:        7 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; Hardware stack levels required when called:    2
  2318 ;; This function calls:
  2319 ;;		_strchr
  2320 ;; This function is called by:
  2321 ;;		_strtok
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           
  2326                           ;psect for function _strcspn
  2327  0486                     _strcspn:
  2328                           
  2329                           ;incstack = 0
  2330                           ; Regs used in _strcspn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2331                           ;strcspn@s1 stored from wreg
  2332  0486  00F9               	movwf	strcspn@s1
  2333  0487                     i1l1385:
  2334  0487  01F7               	clrf	strcspn@i
  2335  0488  01F8               	clrf	strcspn@i+1
  2336  0489  2C94               	goto	i1l1389
  2337  048A                     i1l1387:
  2338  048A  3001               	movlw	1
  2339  048B  00FF               	movwf	btemp+1
  2340  048C  087F               	movf	btemp+1,w
  2341  048D  07F9               	addwf	strcspn@s1,f
  2342  048E  3001               	movlw	1
  2343  048F  07F7               	addwf	strcspn@i,f
  2344  0490  1803               	skipnc
  2345  0491  0AF8               	incf	strcspn@i+1,f
  2346  0492  3000               	movlw	0
  2347  0493  07F8               	addwf	strcspn@i+1,f
  2348  0494                     i1l1389:
  2349  0494  0879               	movf	strcspn@s1,w
  2350  0495  0084               	movwf	4
  2351  0496  1383               	bcf	3,7	;select IRP bank0
  2352  0497  0800               	movf	0,w
  2353  0498  1903               	btfsc	3,2
  2354  0499  2C9B               	goto	u71_21
  2355  049A  2C9C               	goto	u71_20
  2356  049B                     u71_21:
  2357  049B  2CB0               	goto	i1l1393
  2358  049C                     u71_20:
  2359  049C                     i1l1391:
  2360  049C  0879               	movf	strcspn@s1,w
  2361  049D  0084               	movwf	4
  2362  049E  0800               	movf	0,w
  2363  049F  00F5               	movwf	??_strcspn
  2364  04A0  01F6               	clrf	??_strcspn+1
  2365  04A1  0875               	movf	??_strcspn,w
  2366  04A2  00F0               	movwf	strchr@chr
  2367  04A3  0876               	movf	??_strcspn+1,w
  2368  04A4  00F1               	movwf	strchr@chr+1
  2369  04A5  0873               	movf	strcspn@s2,w
  2370  04A6  120A  118A  250D  120A  118A  	fcall	_strchr
  2371  04AB  3A00               	xorlw	0
  2372  04AC  1903               	skipnz
  2373  04AD  2CAF               	goto	u72_21
  2374  04AE  2CB0               	goto	u72_20
  2375  04AF                     u72_21:
  2376  04AF  2C8A               	goto	i1l1387
  2377  04B0                     u72_20:
  2378  04B0                     i1l1393:
  2379  04B0  0878               	movf	strcspn@i+1,w
  2380  04B1  00F4               	movwf	?_strcspn+1
  2381  04B2  0877               	movf	strcspn@i,w
  2382  04B3  00F3               	movwf	?_strcspn
  2383  04B4                     i1l833:
  2384  04B4  0008               	return
  2385  04B5                     __end_of_strcspn:
  2386                           
  2387                           	psect	text12
  2388  050D                     __ptext12:	
  2389 ;; *************** function _strchr *****************
  2390 ;; Defined at:
  2391 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\strchr.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  ptr             1    wreg     PTR const unsigned char 
  2394 ;;		 -> STR_7(2), STR_6(2), 
  2395 ;;  chr             2    0[COMMON] int 
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;  ptr             1    2[COMMON] PTR const unsigned char 
  2398 ;;		 -> STR_7(2), STR_6(2), 
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      PTR unsigned char 
  2401 ;; Registers used:
  2402 ;;		wreg, fsr0l, fsr0h, pclath
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2408 ;;      Params:         2       0       0       0       0
  2409 ;;      Locals:         1       0       0       0       0
  2410 ;;      Temps:          0       0       0       0       0
  2411 ;;      Totals:         3       0       0       0       0
  2412 ;;Total ram usage:        3 bytes
  2413 ;; Hardware stack levels used:    2
  2414 ;; This function calls:
  2415 ;;		Nothing
  2416 ;; This function is called by:
  2417 ;;		_strcspn
  2418 ;;		_strspn
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           
  2423                           ;psect for function _strchr
  2424  050D                     _strchr:
  2425                           
  2426                           ;incstack = 0
  2427 ;; using string table level
  2428                           ; Regs used in _strchr: [wreg-fsr0h+pclath]
  2429                           ;strchr@ptr stored from wreg
  2430  050D  00F2               	movwf	strchr@ptr
  2431  050E                     i1l836:
  2432  050E                     i1l1361:
  2433  050E  0872               	movf	strchr@ptr,w
  2434  050F  0084               	movwf	4
  2435  0510  120A  118A  252D  120A  118A  	fcall	stringdir
  2436  0515  0670               	xorwf	strchr@chr,w
  2437  0516  1D03               	skipz
  2438  0517  2D19               	goto	u67_21
  2439  0518  2D1A               	goto	u67_20
  2440  0519                     u67_21:
  2441  0519  2D1C               	goto	i1l1367
  2442  051A                     u67_20:
  2443  051A                     i1l1363:
  2444  051A  0872               	movf	strchr@ptr,w
  2445  051B  2D2C               	goto	i1l838
  2446  051C                     i1l1367:
  2447  051C  3001               	movlw	1
  2448  051D  07F2               	addwf	strchr@ptr,f
  2449  051E  30FF               	movlw	-1
  2450  051F  0772               	addwf	strchr@ptr,w
  2451  0520  0084               	movwf	4
  2452  0521  120A  118A  252D  120A  118A  	fcall	stringdir
  2453  0526  3A00               	xorlw	0
  2454  0527  1D03               	skipz
  2455  0528  2D2A               	goto	u68_21
  2456  0529  2D2B               	goto	u68_20
  2457  052A                     u68_21:
  2458  052A  2D0E               	goto	i1l836
  2459  052B                     u68_20:
  2460  052B                     i1l1369:
  2461  052B  3000               	movlw	0
  2462  052C                     i1l838:
  2463  052C  0008               	return
  2464  052D                     __end_of_strchr:
  2465                           
  2466                           	psect	text13
  2467  04B5                     __ptext13:	
  2468 ;; *************** function _strcmp *****************
  2469 ;; Defined at:
  2470 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\strcmp.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  s1              1    wreg     PTR const unsigned char 
  2473 ;;		 -> NULL(0), data(10), 
  2474 ;;  s2              1    0[COMMON] PTR const unsigned char 
  2475 ;;		 -> STR_4(3), STR_2(3), STR_1(3), 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;  s1              1    5[COMMON] PTR const unsigned char 
  2478 ;;		 -> NULL(0), data(10), 
  2479 ;;  r               1    4[COMMON] char 
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  2    0[COMMON] int 
  2482 ;; Registers used:
  2483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2489 ;;      Params:         2       0       0       0       0
  2490 ;;      Locals:         2       0       0       0       0
  2491 ;;      Temps:          2       0       0       0       0
  2492 ;;      Totals:         6       0       0       0       0
  2493 ;;Total ram usage:        6 bytes
  2494 ;; Hardware stack levels used:    2
  2495 ;; This function calls:
  2496 ;;		Nothing
  2497 ;; This function is called by:
  2498 ;;		_myISR
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502                           
  2503                           ;psect for function _strcmp
  2504  04B5                     _strcmp:
  2505                           
  2506                           ;incstack = 0
  2507                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2508                           ;strcmp@s1 stored from wreg
  2509  04B5  00F5               	movwf	strcmp@s1
  2510  04B6                     i1l1557:
  2511  04B6  2CBF               	goto	i1l1563
  2512  04B7                     i1l1559:
  2513  04B7  3001               	movlw	1
  2514  04B8  00FF               	movwf	btemp+1
  2515  04B9  087F               	movf	btemp+1,w
  2516  04BA  07F5               	addwf	strcmp@s1,f
  2517  04BB                     i1l1561:
  2518  04BB  3001               	movlw	1
  2519  04BC  00FF               	movwf	btemp+1
  2520  04BD  087F               	movf	btemp+1,w
  2521  04BE  07F0               	addwf	strcmp@s2,f
  2522  04BF                     i1l1563:
  2523  04BF  0870               	movf	strcmp@s2,w
  2524  04C0  0084               	movwf	4
  2525  04C1  120A  118A  252D  120A  118A  	fcall	stringdir
  2526  04C6  00F2               	movwf	??_strcmp
  2527  04C7  0875               	movf	strcmp@s1,w
  2528  04C8  0084               	movwf	4
  2529  04C9  1383               	bcf	3,7	;select IRP bank0
  2530  04CA  0800               	movf	0,w
  2531  04CB  00F3               	movwf	??_strcmp+1
  2532  04CC  0872               	movf	??_strcmp,w
  2533  04CD  0273               	subwf	??_strcmp+1,w
  2534  04CE  00FF               	movwf	btemp+1
  2535  04CF  087F               	movf	btemp+1,w
  2536  04D0  00F4               	movwf	strcmp@r
  2537  04D1  0874               	movf	strcmp@r,w
  2538  04D2  1D03               	btfss	3,2
  2539  04D3  2CD5               	goto	u107_21
  2540  04D4  2CD6               	goto	u107_20
  2541  04D5                     u107_21:
  2542  04D5  2CDD               	goto	i1l1567
  2543  04D6                     u107_20:
  2544  04D6                     i1l1565:
  2545  04D6  0875               	movf	strcmp@s1,w
  2546  04D7  0084               	movwf	4
  2547  04D8  0800               	movf	0,w
  2548  04D9  1D03               	btfss	3,2
  2549  04DA  2CDC               	goto	u108_21
  2550  04DB  2CDD               	goto	u108_20
  2551  04DC                     u108_21:
  2552  04DC  2CB7               	goto	i1l1559
  2553  04DD                     u108_20:
  2554  04DD                     i1l1567:
  2555  04DD  0874               	movf	strcmp@r,w
  2556  04DE  00F0               	movwf	?_strcmp
  2557  04DF  01F1               	clrf	?_strcmp+1
  2558  04E0  1BF0               	btfsc	?_strcmp,7
  2559  04E1  03F1               	decf	?_strcmp+1,f
  2560  04E2                     i1l809:
  2561  04E2  0008               	return
  2562  04E3                     __end_of_strcmp:
  2563                           
  2564                           	psect	text14
  2565  0136                     __ptext14:	
  2566 ;; *************** function _sprintf *****************
  2567 ;; Defined at:
  2568 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  sp              1    wreg     PTR unsigned char 
  2571 ;;		 -> data(10), 
  2572 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2573 ;;		 -> STR_5(4), STR_3(4), 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  2576 ;;		 -> data(10), 
  2577 ;;  tmpval          4    0        struct .
  2578 ;;  val             2    9[BANK0 ] unsigned int 
  2579 ;;  cp              2    0        PTR const unsigned char 
  2580 ;;  len             2    0        unsigned int 
  2581 ;;  c               1   12[BANK0 ] unsigned char 
  2582 ;;  prec            1    8[BANK0 ] char 
  2583 ;;  flag            1    7[BANK0 ] unsigned char 
  2584 ;;  ap              1    6[BANK0 ] PTR void [1]
  2585 ;;		 -> ?_sprintf(2), 
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  2    0[BANK0 ] int 
  2588 ;; Registers used:
  2589 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2595 ;;      Params:         0       3       0       0       0
  2596 ;;      Locals:         0       7       0       0       0
  2597 ;;      Temps:          0       3       0       0       0
  2598 ;;      Totals:         0      13       0       0       0
  2599 ;;Total ram usage:       13 bytes
  2600 ;; Hardware stack levels used:    1
  2601 ;; Hardware stack levels required when called:    1
  2602 ;; This function calls:
  2603 ;;		___lwdiv
  2604 ;;		___lwmod
  2605 ;; This function is called by:
  2606 ;;		_myISR
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           
  2611                           ;psect for function _sprintf
  2612  0136                     _sprintf:
  2613                           
  2614                           ;incstack = 0
  2615                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2616                           ;sprintf@sp stored from wreg
  2617  0136  1283               	bcf	3,5	;RP0=0, select bank0
  2618  0137  1303               	bcf	3,6	;RP1=0, select bank0
  2619  0138  00AB               	movwf	sprintf@sp
  2620  0139                     i1l1591:
  2621                           
  2622                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2623  0139  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2624  013A  00FF               	movwf	btemp+1
  2625  013B  087F               	movf	btemp+1,w
  2626  013C  00A6               	movwf	sprintf@ap
  2627                           
  2628                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2629  013D  2A07               	goto	i1l1645
  2630  013E                     i1l1593:
  2631                           
  2632                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2633  013E  3025               	movlw	37
  2634  013F  062C               	xorwf	sprintf@c,w
  2635  0140  1903               	btfsc	3,2
  2636  0141  2943               	goto	u116_21
  2637  0142  2944               	goto	u116_20
  2638  0143                     u116_21:
  2639  0143  2950               	goto	i1l1599
  2640  0144                     u116_20:
  2641  0144                     i1l1595:
  2642                           
  2643                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2644  0144  082C               	movf	sprintf@c,w
  2645  0145  00FF               	movwf	btemp+1
  2646  0146  082B               	movf	sprintf@sp,w
  2647  0147  0084               	movwf	4
  2648  0148  087F               	movf	btemp+1,w
  2649  0149  1383               	bcf	3,7	;select IRP bank0
  2650  014A  0080               	movwf	0
  2651  014B                     i1l1597:
  2652  014B  3001               	movlw	1
  2653  014C  00FF               	movwf	btemp+1
  2654  014D  087F               	movf	btemp+1,w
  2655  014E  07AB               	addwf	sprintf@sp,f
  2656                           
  2657                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 559:    continue;
  2658  014F  2A07               	goto	i1l1645
  2659  0150                     i1l1599:
  2660                           
  2661                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2662  0150  01A7               	clrf	sprintf@flag
  2663  0151                     i1l1603:	
  2664                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2665                           
  2666  0151  3001               	movlw	1
  2667  0152  07A0               	addwf	sprintf@f,f
  2668  0153  30FF               	movlw	-1
  2669  0154  0720               	addwf	sprintf@f,w
  2670  0155  0084               	movwf	4
  2671  0156  120A  118A  252D  120A  118A  	fcall	stringdir
  2672  015B  00AC               	movwf	sprintf@c
  2673  015C  00A3               	movwf	??_sprintf
  2674  015D  01A4               	clrf	??_sprintf+1
  2675                           
  2676                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2677                           ; Switch size 1, requested type "simple"
  2678                           ; Number of cases is 1, Range of values is 0 to 0
  2679                           ; switch strategies available:
  2680                           ; Name         Instructions Cycles
  2681                           ; simple_byte            4     3 (average)
  2682                           ; direct_byte           11     8 (fixed)
  2683                           ; jumptable            260     6 (fixed)
  2684                           ;	Chosen strategy is simple_byte
  2685  015E  0824               	movf	??_sprintf+1,w
  2686  015F  3A00               	xorlw	0	; case 0
  2687  0160  1903               	skipnz
  2688  0161  2963               	goto	i1l1779
  2689  0162  2A07               	goto	i1l1645
  2690  0163                     i1l1779:
  2691                           
  2692                           ; Switch size 1, requested type "simple"
  2693                           ; Number of cases is 3, Range of values is 0 to 105
  2694                           ; switch strategies available:
  2695                           ; Name         Instructions Cycles
  2696                           ; simple_byte           10     6 (average)
  2697                           ; jumptable            260     6 (fixed)
  2698                           ;	Chosen strategy is simple_byte
  2699  0163  0823               	movf	??_sprintf,w
  2700  0164  3A00               	xorlw	0	; case 0
  2701  0165  1903               	skipnz
  2702  0166  2A19               	goto	i1l1647
  2703  0167  3A64               	xorlw	100	; case 100
  2704  0168  1903               	skipnz
  2705  0169  296E               	goto	i1l1605
  2706  016A  3A0D               	xorlw	13	; case 105
  2707  016B  1903               	skipnz
  2708  016C  296E               	goto	i1l1605
  2709  016D  2A07               	goto	i1l1645
  2710  016E                     i1l1605:
  2711                           
  2712                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2713  016E  0826               	movf	sprintf@ap,w
  2714  016F  0084               	movwf	4
  2715  0170  1383               	bcf	3,7	;select IRP bank0
  2716  0171  0800               	movf	0,w
  2717  0172  00A9               	movwf	sprintf@val
  2718  0173  0A84               	incf	4,f
  2719  0174  0800               	movf	0,w
  2720  0175  00AA               	movwf	sprintf@val+1
  2721  0176                     i1l1607:
  2722  0176  3002               	movlw	2
  2723  0177  00FF               	movwf	btemp+1
  2724  0178  087F               	movf	btemp+1,w
  2725  0179  07A6               	addwf	sprintf@ap,f
  2726  017A                     i1l1609:
  2727                           
  2728                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2729  017A  1FAA               	btfss	sprintf@val+1,7
  2730  017B  297D               	goto	u117_21
  2731  017C  297E               	goto	u117_20
  2732  017D                     u117_21:
  2733  017D  2987               	goto	i1l1615
  2734  017E                     u117_20:
  2735  017E                     i1l1611:
  2736                           
  2737                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2738  017E  3003               	movlw	3
  2739  017F  00FF               	movwf	btemp+1
  2740  0180  087F               	movf	btemp+1,w
  2741  0181  04A7               	iorwf	sprintf@flag,f
  2742  0182                     i1l1613:
  2743                           
  2744                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2745  0182  09A9               	comf	sprintf@val,f
  2746  0183  09AA               	comf	sprintf@val+1,f
  2747  0184  0AA9               	incf	sprintf@val,f
  2748  0185  1903               	skipnz
  2749  0186  0AAA               	incf	sprintf@val+1,f
  2750  0187                     i1l1615:
  2751                           
  2752                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2753  0187  01AC               	clrf	sprintf@c
  2754  0188  0AAC               	incf	sprintf@c,f
  2755  0189                     i1l1621:
  2756                           
  2757                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2758  0189  082C               	movf	sprintf@c,w
  2759  018A  00A3               	movwf	??_sprintf
  2760  018B  0723               	addwf	??_sprintf,w
  2761  018C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2762  018D  0084               	movwf	4
  2763  018E  120A  118A  252D  120A  118A  	fcall	stringdir
  2764  0193  00A4               	movwf	??_sprintf+1
  2765  0194  120A  118A  252D  120A  118A  	fcall	stringdir
  2766  0199  00A5               	movwf	??_sprintf+2
  2767  019A  0825               	movf	??_sprintf+2,w
  2768  019B  022A               	subwf	sprintf@val+1,w
  2769  019C  1D03               	skipz
  2770  019D  29A0               	goto	u118_25
  2771  019E  0824               	movf	??_sprintf+1,w
  2772  019F  0229               	subwf	sprintf@val,w
  2773  01A0                     u118_25:
  2774  01A0  1803               	skipnc
  2775  01A1  29A3               	goto	u118_21
  2776  01A2  29A4               	goto	u118_20
  2777  01A3                     u118_21:
  2778  01A3  29A5               	goto	i1l1625
  2779  01A4                     u118_20:
  2780  01A4  29AF               	goto	i1l1629
  2781  01A5                     i1l1625:
  2782  01A5  3001               	movlw	1
  2783  01A6  00FF               	movwf	btemp+1
  2784  01A7  087F               	movf	btemp+1,w
  2785  01A8  07AC               	addwf	sprintf@c,f
  2786  01A9                     i1l1627:
  2787  01A9  3005               	movlw	5
  2788  01AA  062C               	xorwf	sprintf@c,w
  2789  01AB  1D03               	btfss	3,2
  2790  01AC  29AE               	goto	u119_21
  2791  01AD  29AF               	goto	u119_20
  2792  01AE                     u119_21:
  2793  01AE  2989               	goto	i1l1621
  2794  01AF                     u119_20:
  2795  01AF                     i1l1629:
  2796                           
  2797                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2798  01AF  0827               	movf	sprintf@flag,w
  2799  01B0  3903               	andlw	3
  2800  01B1  1903               	btfsc	3,2
  2801  01B2  29B4               	goto	u120_21
  2802  01B3  29B5               	goto	u120_20
  2803  01B4                     u120_21:
  2804  01B4  29C0               	goto	i1l1635
  2805  01B5                     u120_20:
  2806  01B5                     i1l1631:
  2807                           
  2808                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2809  01B5  302D               	movlw	45
  2810  01B6  00FF               	movwf	btemp+1
  2811  01B7  082B               	movf	sprintf@sp,w
  2812  01B8  0084               	movwf	4
  2813  01B9  087F               	movf	btemp+1,w
  2814  01BA  1383               	bcf	3,7	;select IRP bank0
  2815  01BB  0080               	movwf	0
  2816  01BC                     i1l1633:
  2817  01BC  3001               	movlw	1
  2818  01BD  00FF               	movwf	btemp+1
  2819  01BE  087F               	movf	btemp+1,w
  2820  01BF  07AB               	addwf	sprintf@sp,f
  2821  01C0                     i1l1635:
  2822                           
  2823                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2824  01C0  082C               	movf	sprintf@c,w
  2825  01C1  00FF               	movwf	btemp+1
  2826  01C2  087F               	movf	btemp+1,w
  2827  01C3  00A8               	movwf	sprintf@prec
  2828                           
  2829                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2830  01C4  29FE               	goto	i1l1643
  2831  01C5                     i1l1637:
  2832                           
  2833                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2834  01C5  300A               	movlw	10
  2835  01C6  00F7               	movwf	___lwmod@divisor
  2836  01C7  3000               	movlw	0
  2837  01C8  00F8               	movwf	___lwmod@divisor+1
  2838  01C9  0828               	movf	sprintf@prec,w
  2839  01CA  00A3               	movwf	??_sprintf
  2840  01CB  0723               	addwf	??_sprintf,w
  2841  01CC  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2842  01CD  0084               	movwf	4
  2843  01CE  120A  118A  252D  120A  118A  	fcall	stringdir
  2844  01D3  00F0               	movwf	___lwdiv@divisor
  2845  01D4  120A  118A  252D  120A  118A  	fcall	stringdir
  2846  01D9  00F1               	movwf	___lwdiv@divisor+1
  2847  01DA  082A               	movf	sprintf@val+1,w
  2848  01DB  00F3               	movwf	___lwdiv@dividend+1
  2849  01DC  0829               	movf	sprintf@val,w
  2850  01DD  00F2               	movwf	___lwdiv@dividend
  2851  01DE  120A  118A  23A1  120A  118A  	fcall	___lwdiv
  2852  01E3  0871               	movf	?___lwdiv+1,w
  2853  01E4  00FA               	movwf	___lwmod@dividend+1
  2854  01E5  0870               	movf	?___lwdiv,w
  2855  01E6  00F9               	movwf	___lwmod@dividend
  2856  01E7  120A  118A  23E5  120A  118A  	fcall	___lwmod
  2857  01EC  0877               	movf	?___lwmod,w
  2858  01ED  3E30               	addlw	48
  2859  01EE  00FF               	movwf	btemp+1
  2860  01EF  087F               	movf	btemp+1,w
  2861  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2862  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  2863  01F2  00AC               	movwf	sprintf@c
  2864  01F3                     i1l1639:
  2865                           
  2866                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2867  01F3  082C               	movf	sprintf@c,w
  2868  01F4  00FF               	movwf	btemp+1
  2869  01F5  082B               	movf	sprintf@sp,w
  2870  01F6  0084               	movwf	4
  2871  01F7  087F               	movf	btemp+1,w
  2872  01F8  1383               	bcf	3,7	;select IRP bank0
  2873  01F9  0080               	movwf	0
  2874  01FA                     i1l1641:
  2875  01FA  3001               	movlw	1
  2876  01FB  00FF               	movwf	btemp+1
  2877  01FC  087F               	movf	btemp+1,w
  2878  01FD  07AB               	addwf	sprintf@sp,f
  2879  01FE                     i1l1643:
  2880                           
  2881                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2882  01FE  30FF               	movlw	255
  2883  01FF  00FF               	movwf	btemp+1
  2884  0200  087F               	movf	btemp+1,w
  2885  0201  07A8               	addwf	sprintf@prec,f
  2886  0202  0A28               	incf	sprintf@prec,w
  2887  0203  1D03               	btfss	3,2
  2888  0204  2A06               	goto	u121_21
  2889  0205  2A07               	goto	u121_20
  2890  0206                     u121_21:
  2891  0206  29C5               	goto	i1l1637
  2892  0207                     u121_20:
  2893  0207                     i1l1645:
  2894                           
  2895                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2896  0207  3001               	movlw	1
  2897  0208  07A0               	addwf	sprintf@f,f
  2898  0209  30FF               	movlw	-1
  2899  020A  0720               	addwf	sprintf@f,w
  2900  020B  0084               	movwf	4
  2901  020C  120A  118A  252D  120A  118A  	fcall	stringdir
  2902  0211  00FF               	movwf	btemp+1
  2903  0212  087F               	movf	btemp+1,w
  2904  0213  00AC               	movwf	sprintf@c
  2905  0214  082C               	movf	sprintf@c,w
  2906  0215  1D03               	btfss	3,2
  2907  0216  2A18               	goto	u122_21
  2908  0217  2A19               	goto	u122_20
  2909  0218                     u122_21:
  2910  0218  293E               	goto	i1l1593
  2911  0219                     u122_20:
  2912  0219                     i1l1647:
  2913                           
  2914                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2915  0219  082B               	movf	sprintf@sp,w
  2916  021A  0084               	movwf	4
  2917  021B  1383               	bcf	3,7	;select IRP bank0
  2918  021C  0180               	clrf	0
  2919  021D                     i1l349:
  2920  021D  0008               	return
  2921  021E                     __end_of_sprintf:
  2922                           
  2923                           	psect	text15
  2924  03E5                     __ptext15:	
  2925 ;; *************** function ___lwmod *****************
  2926 ;; Defined at:
  2927 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;  divisor         2    7[COMMON] unsigned int 
  2930 ;;  dividend        2    9[COMMON] unsigned int 
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;  counter         1   11[COMMON] unsigned char 
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  2    7[COMMON] unsigned int 
  2935 ;; Registers used:
  2936 ;;		wreg, status,2, status,0, btemp+1
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2942 ;;      Params:         4       0       0       0       0
  2943 ;;      Locals:         1       0       0       0       0
  2944 ;;      Temps:          0       0       0       0       0
  2945 ;;      Totals:         5       0       0       0       0
  2946 ;;Total ram usage:        5 bytes
  2947 ;; Hardware stack levels used:    1
  2948 ;; This function calls:
  2949 ;;		Nothing
  2950 ;; This function is called by:
  2951 ;;		_sprintf
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           
  2956                           ;psect for function ___lwmod
  2957  03E5                     ___lwmod:
  2958  03E5                     i1l1511:	
  2959                           ;incstack = 0
  2960                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  2961                           
  2962  03E5  0877               	movf	___lwmod@divisor,w
  2963  03E6  0478               	iorwf	___lwmod@divisor+1,w
  2964  03E7  1903               	btfsc	3,2
  2965  03E8  2BEA               	goto	u98_21
  2966  03E9  2BEB               	goto	u98_20
  2967  03EA                     u98_21:
  2968  03EA  2C1A               	goto	i1l1529
  2969  03EB                     u98_20:
  2970  03EB                     i1l1513:
  2971  03EB  01FB               	clrf	___lwmod@counter
  2972  03EC  0AFB               	incf	___lwmod@counter,f
  2973  03ED  2BF9               	goto	i1l1519
  2974  03EE                     i1l1515:
  2975  03EE  3001               	movlw	1
  2976  03EF                     u99_25:
  2977  03EF  1003               	clrc
  2978  03F0  0DF7               	rlf	___lwmod@divisor,f
  2979  03F1  0DF8               	rlf	___lwmod@divisor+1,f
  2980  03F2  3EFF               	addlw	-1
  2981  03F3  1D03               	skipz
  2982  03F4  2BEF               	goto	u99_25
  2983  03F5                     i1l1517:
  2984  03F5  3001               	movlw	1
  2985  03F6  00FF               	movwf	btemp+1
  2986  03F7  087F               	movf	btemp+1,w
  2987  03F8  07FB               	addwf	___lwmod@counter,f
  2988  03F9                     i1l1519:
  2989  03F9  1FF8               	btfss	___lwmod@divisor+1,7
  2990  03FA  2BFC               	goto	u100_21
  2991  03FB  2BFD               	goto	u100_20
  2992  03FC                     u100_21:
  2993  03FC  2BEE               	goto	i1l1515
  2994  03FD                     u100_20:
  2995  03FD                     i1l1521:
  2996  03FD  0878               	movf	___lwmod@divisor+1,w
  2997  03FE  027A               	subwf	___lwmod@dividend+1,w
  2998  03FF  1D03               	skipz
  2999  0400  2C03               	goto	u101_25
  3000  0401  0877               	movf	___lwmod@divisor,w
  3001  0402  0279               	subwf	___lwmod@dividend,w
  3002  0403                     u101_25:
  3003  0403  1C03               	skipc
  3004  0404  2C06               	goto	u101_21
  3005  0405  2C07               	goto	u101_20
  3006  0406                     u101_21:
  3007  0406  2C0D               	goto	i1l1525
  3008  0407                     u101_20:
  3009  0407                     i1l1523:
  3010  0407  0877               	movf	___lwmod@divisor,w
  3011  0408  02F9               	subwf	___lwmod@dividend,f
  3012  0409  0878               	movf	___lwmod@divisor+1,w
  3013  040A  1C03               	skipc
  3014  040B  03FA               	decf	___lwmod@dividend+1,f
  3015  040C  02FA               	subwf	___lwmod@dividend+1,f
  3016  040D                     i1l1525:
  3017  040D  3001               	movlw	1
  3018  040E                     u102_25:
  3019  040E  1003               	clrc
  3020  040F  0CF8               	rrf	___lwmod@divisor+1,f
  3021  0410  0CF7               	rrf	___lwmod@divisor,f
  3022  0411  3EFF               	addlw	-1
  3023  0412  1D03               	skipz
  3024  0413  2C0E               	goto	u102_25
  3025  0414                     i1l1527:
  3026  0414  3001               	movlw	1
  3027  0415  02FB               	subwf	___lwmod@counter,f
  3028  0416  1D03               	btfss	3,2
  3029  0417  2C19               	goto	u103_21
  3030  0418  2C1A               	goto	u103_20
  3031  0419                     u103_21:
  3032  0419  2BFD               	goto	i1l1521
  3033  041A                     u103_20:
  3034  041A                     i1l1529:
  3035  041A  087A               	movf	___lwmod@dividend+1,w
  3036  041B  00F8               	movwf	?___lwmod+1
  3037  041C  0879               	movf	___lwmod@dividend,w
  3038  041D  00F7               	movwf	?___lwmod
  3039  041E                     i1l635:
  3040  041E  0008               	return
  3041  041F                     __end_of___lwmod:
  3042                           
  3043                           	psect	text16
  3044  03A1                     __ptext16:	
  3045 ;; *************** function ___lwdiv *****************
  3046 ;; Defined at:
  3047 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  divisor         2    0[COMMON] unsigned int 
  3050 ;;  dividend        2    2[COMMON] unsigned int 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;  quotient        2    4[COMMON] unsigned int 
  3053 ;;  counter         1    6[COMMON] unsigned char 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  2    0[COMMON] unsigned int 
  3056 ;; Registers used:
  3057 ;;		wreg, status,2, status,0, btemp+1
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3063 ;;      Params:         4       0       0       0       0
  3064 ;;      Locals:         3       0       0       0       0
  3065 ;;      Temps:          0       0       0       0       0
  3066 ;;      Totals:         7       0       0       0       0
  3067 ;;Total ram usage:        7 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; This function calls:
  3070 ;;		Nothing
  3071 ;; This function is called by:
  3072 ;;		_sprintf
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           
  3077                           ;psect for function ___lwdiv
  3078  03A1                     ___lwdiv:
  3079  03A1                     i1l1485:	
  3080                           ;incstack = 0
  3081                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  3082                           
  3083  03A1  01F4               	clrf	___lwdiv@quotient
  3084  03A2  01F5               	clrf	___lwdiv@quotient+1
  3085  03A3                     i1l1487:
  3086  03A3  0870               	movf	___lwdiv@divisor,w
  3087  03A4  0471               	iorwf	___lwdiv@divisor+1,w
  3088  03A5  1903               	btfsc	3,2
  3089  03A6  2BA8               	goto	u91_21
  3090  03A7  2BA9               	goto	u91_20
  3091  03A8                     u91_21:
  3092  03A8  2BE0               	goto	i1l1507
  3093  03A9                     u91_20:
  3094  03A9                     i1l1489:
  3095  03A9  01F6               	clrf	___lwdiv@counter
  3096  03AA  0AF6               	incf	___lwdiv@counter,f
  3097  03AB  2BB7               	goto	i1l1495
  3098  03AC                     i1l1491:
  3099  03AC  3001               	movlw	1
  3100  03AD                     u92_25:
  3101  03AD  1003               	clrc
  3102  03AE  0DF0               	rlf	___lwdiv@divisor,f
  3103  03AF  0DF1               	rlf	___lwdiv@divisor+1,f
  3104  03B0  3EFF               	addlw	-1
  3105  03B1  1D03               	skipz
  3106  03B2  2BAD               	goto	u92_25
  3107  03B3                     i1l1493:
  3108  03B3  3001               	movlw	1
  3109  03B4  00FF               	movwf	btemp+1
  3110  03B5  087F               	movf	btemp+1,w
  3111  03B6  07F6               	addwf	___lwdiv@counter,f
  3112  03B7                     i1l1495:
  3113  03B7  1FF1               	btfss	___lwdiv@divisor+1,7
  3114  03B8  2BBA               	goto	u93_21
  3115  03B9  2BBB               	goto	u93_20
  3116  03BA                     u93_21:
  3117  03BA  2BAC               	goto	i1l1491
  3118  03BB                     u93_20:
  3119  03BB                     i1l1497:
  3120  03BB  3001               	movlw	1
  3121  03BC                     u94_25:
  3122  03BC  1003               	clrc
  3123  03BD  0DF4               	rlf	___lwdiv@quotient,f
  3124  03BE  0DF5               	rlf	___lwdiv@quotient+1,f
  3125  03BF  3EFF               	addlw	-1
  3126  03C0  1D03               	skipz
  3127  03C1  2BBC               	goto	u94_25
  3128  03C2  0871               	movf	___lwdiv@divisor+1,w
  3129  03C3  0273               	subwf	___lwdiv@dividend+1,w
  3130  03C4  1D03               	skipz
  3131  03C5  2BC8               	goto	u95_25
  3132  03C6  0870               	movf	___lwdiv@divisor,w
  3133  03C7  0272               	subwf	___lwdiv@dividend,w
  3134  03C8                     u95_25:
  3135  03C8  1C03               	skipc
  3136  03C9  2BCB               	goto	u95_21
  3137  03CA  2BCC               	goto	u95_20
  3138  03CB                     u95_21:
  3139  03CB  2BD3               	goto	i1l1503
  3140  03CC                     u95_20:
  3141  03CC                     i1l1499:
  3142  03CC  0870               	movf	___lwdiv@divisor,w
  3143  03CD  02F2               	subwf	___lwdiv@dividend,f
  3144  03CE  0871               	movf	___lwdiv@divisor+1,w
  3145  03CF  1C03               	skipc
  3146  03D0  03F3               	decf	___lwdiv@dividend+1,f
  3147  03D1  02F3               	subwf	___lwdiv@dividend+1,f
  3148  03D2                     i1l1501:
  3149  03D2  1474               	bsf	___lwdiv@quotient,0
  3150  03D3                     i1l1503:
  3151  03D3  3001               	movlw	1
  3152  03D4                     u96_25:
  3153  03D4  1003               	clrc
  3154  03D5  0CF1               	rrf	___lwdiv@divisor+1,f
  3155  03D6  0CF0               	rrf	___lwdiv@divisor,f
  3156  03D7  3EFF               	addlw	-1
  3157  03D8  1D03               	skipz
  3158  03D9  2BD4               	goto	u96_25
  3159  03DA                     i1l1505:
  3160  03DA  3001               	movlw	1
  3161  03DB  02F6               	subwf	___lwdiv@counter,f
  3162  03DC  1D03               	btfss	3,2
  3163  03DD  2BDF               	goto	u97_21
  3164  03DE  2BE0               	goto	u97_20
  3165  03DF                     u97_21:
  3166  03DF  2BBB               	goto	i1l1497
  3167  03E0                     u97_20:
  3168  03E0                     i1l1507:
  3169  03E0  0875               	movf	___lwdiv@quotient+1,w
  3170  03E1  00F1               	movwf	?___lwdiv+1
  3171  03E2  0874               	movf	___lwdiv@quotient,w
  3172  03E3  00F0               	movwf	?___lwdiv
  3173  03E4                     i1l625:
  3174  03E4  0008               	return
  3175  03E5                     __end_of___lwdiv:
  3176                           
  3177                           	psect	text17
  3178  04E3                     __ptext17:	
  3179 ;; *************** function _recivedCMD *****************
  3180 ;; Defined at:
  3181 ;;		line 48 in file "usart.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  cmd             1    wreg     PTR unsigned char 
  3184 ;;		 -> data(10), 
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;  cmd             1    1[COMMON] PTR unsigned char 
  3187 ;;		 -> data(10), 
  3188 ;;  j               1    3[COMMON] unsigned char 
  3189 ;;  i               1    2[COMMON] unsigned char 
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      void 
  3192 ;; Registers used:
  3193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3199 ;;      Params:         0       0       0       0       0
  3200 ;;      Locals:         3       0       0       0       0
  3201 ;;      Temps:          1       0       0       0       0
  3202 ;;      Totals:         4       0       0       0       0
  3203 ;;Total ram usage:        4 bytes
  3204 ;; Hardware stack levels used:    1
  3205 ;; Hardware stack levels required when called:    1
  3206 ;; This function calls:
  3207 ;;		_get1
  3208 ;; This function is called by:
  3209 ;;		_myISR
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           
  3214                           ;psect for function _recivedCMD
  3215  04E3                     _recivedCMD:
  3216                           
  3217                           ;incstack = 0
  3218                           ; Regs used in _recivedCMD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3219                           ;recivedCMD@cmd stored from wreg
  3220  04E3  00F1               	movwf	recivedCMD@cmd
  3221  04E4                     i1l1533:
  3222                           
  3223                           ;usart.c: 49:     unsigned char i = 0;
  3224  04E4  01F2               	clrf	recivedCMD@i
  3225  04E5                     i1l1535:
  3226                           
  3227                           ;usart.c: 52:         cmd[i] = get1();
  3228  04E5  120A  118A  25DB  120A  118A  	fcall	_get1
  3229  04EA  00FF               	movwf	btemp+1
  3230  04EB  0872               	movf	recivedCMD@i,w
  3231  04EC  0771               	addwf	recivedCMD@cmd,w
  3232  04ED  00F0               	movwf	??_recivedCMD
  3233  04EE  0870               	movf	??_recivedCMD,w
  3234  04EF  0084               	movwf	4
  3235  04F0  087F               	movf	btemp+1,w
  3236  04F1  1383               	bcf	3,7	;select IRP bank0
  3237  04F2  0080               	movwf	0
  3238  04F3                     i1l1537:
  3239                           
  3240                           ;usart.c: 53:         j = cmd[i];
  3241  04F3  0872               	movf	recivedCMD@i,w
  3242  04F4  0771               	addwf	recivedCMD@cmd,w
  3243  04F5  00F0               	movwf	??_recivedCMD
  3244  04F6  0870               	movf	??_recivedCMD,w
  3245  04F7  0084               	movwf	4
  3246  04F8  0800               	movf	0,w
  3247  04F9  00FF               	movwf	btemp+1
  3248  04FA  087F               	movf	btemp+1,w
  3249  04FB  00F3               	movwf	recivedCMD@j
  3250  04FC                     i1l1539:
  3251                           
  3252                           ;usart.c: 54:         i++;
  3253  04FC  3001               	movlw	1
  3254  04FD  00FF               	movwf	btemp+1
  3255  04FE  087F               	movf	btemp+1,w
  3256  04FF  07F2               	addwf	recivedCMD@i,f
  3257  0500                     i1l1541:
  3258                           
  3259                           ;usart.c: 55:         }
  3260  0500  300A               	movlw	10
  3261  0501  0673               	xorwf	recivedCMD@j,w
  3262  0502  1903               	btfsc	3,2
  3263  0503  2D05               	goto	u104_21
  3264  0504  2D06               	goto	u104_20
  3265  0505                     u104_21:
  3266  0505  2D0C               	goto	i1l123
  3267  0506                     u104_20:
  3268  0506                     i1l1543:
  3269  0506  300D               	movlw	13
  3270  0507  0673               	xorwf	recivedCMD@j,w
  3271  0508  1D03               	btfss	3,2
  3272  0509  2D0B               	goto	u105_21
  3273  050A  2D0C               	goto	u105_20
  3274  050B                     u105_21:
  3275  050B  2CE5               	goto	i1l1535
  3276  050C                     u105_20:
  3277  050C                     i1l123:
  3278  050C  0008               	return
  3279  050D                     __end_of_recivedCMD:
  3280                           
  3281                           	psect	text18
  3282  05DB                     __ptext18:	
  3283 ;; *************** function _get1 *****************
  3284 ;; Defined at:
  3285 ;;		line 61 in file "usart.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;		None
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;		None
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  1    wreg      unsigned char 
  3292 ;; Registers used:
  3293 ;;		wreg
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3299 ;;      Params:         0       0       0       0       0
  3300 ;;      Locals:         0       0       0       0       0
  3301 ;;      Temps:          0       0       0       0       0
  3302 ;;      Totals:         0       0       0       0       0
  3303 ;;Total ram usage:        0 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; This function calls:
  3306 ;;		Nothing
  3307 ;; This function is called by:
  3308 ;;		_recivedCMD
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           
  3313                           ;psect for function _get1
  3314  05DB                     _get1:
  3315  05DB                     i1l1399:	
  3316                           ;incstack = 0
  3317                           ; Regs used in _get1: [wreg]
  3318                           
  3319  05DB                     i1l126:	
  3320                           ;usart.c: 64:     }
  3321                           
  3322                           
  3323                           ;usart.c: 62:     while(!PIR1bits.RCIF){
  3324  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  3325  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  3326  05DD  1E8C               	btfss	12,5	;volatile
  3327  05DE  2DE0               	goto	u74_21
  3328  05DF  2DE1               	goto	u74_20
  3329  05E0                     u74_21:
  3330  05E0  2DDB               	goto	i1l126
  3331  05E1                     u74_20:
  3332  05E1                     i1l1401:
  3333                           
  3334                           ;usart.c: 65:     return RCREG;
  3335  05E1  081A               	movf	26,w	;volatile
  3336  05E2                     i1l129:
  3337  05E2  0008               	return
  3338  05E3                     __end_of_get1:
  3339                           
  3340                           	psect	text19
  3341  0577                     __ptext19:	
  3342 ;; *************** function _i2c_write *****************
  3343 ;; Defined at:
  3344 ;;		line 52 in file "i2c.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;  dato            1    wreg     unsigned char 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;  dato            1    0[COMMON] unsigned char 
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      unsigned char 
  3351 ;; Registers used:
  3352 ;;		wreg, status,2, status,0, pclath, cstack
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3358 ;;      Params:         0       0       0       0       0
  3359 ;;      Locals:         1       0       0       0       0
  3360 ;;      Temps:          0       0       0       0       0
  3361 ;;      Totals:         1       0       0       0       0
  3362 ;;Total ram usage:        1 bytes
  3363 ;; Hardware stack levels used:    1
  3364 ;; Hardware stack levels required when called:    1
  3365 ;; This function calls:
  3366 ;;		_i2c_idle
  3367 ;; This function is called by:
  3368 ;;		_myISR
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           
  3373                           ;psect for function _i2c_write
  3374  0577                     _i2c_write:
  3375                           
  3376                           ;incstack = 0
  3377                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  3378                           ;i2c_write@dato stored from wreg
  3379  0577  00F0               	movwf	i2c_write@dato
  3380  0578                     i1l1575:
  3381                           
  3382                           ;i2c.c: 53:     i2c_idle();
  3383  0578  120A  118A  25B9  120A  118A  	fcall	_i2c_idle
  3384  057D                     i1l1577:
  3385                           
  3386                           ;i2c.c: 54:     SSPBUF = dato;
  3387  057D  0870               	movf	i2c_write@dato,w
  3388  057E  1283               	bcf	3,5	;RP0=0, select bank0
  3389  057F  1303               	bcf	3,6	;RP1=0, select bank0
  3390  0580  0093               	movwf	19	;volatile
  3391  0581                     i1l1579:	
  3392                           ;i2c.c: 55:     while(SSPSTAT & 0x05);
  3393                           
  3394  0581  1683               	bsf	3,5	;RP0=1, select bank1
  3395  0582  1303               	bcf	3,6	;RP1=0, select bank1
  3396  0583  0814               	movf	20,w	;volatile
  3397  0584  3905               	andlw	5
  3398  0585  1D03               	btfss	3,2
  3399  0586  2D88               	goto	u111_21
  3400  0587  2D89               	goto	u111_20
  3401  0588                     u111_21:
  3402  0588  2D81               	goto	i1l1579
  3403  0589                     u111_20:
  3404  0589                     i1l218:
  3405  0589  0008               	return
  3406  058A                     __end_of_i2c_write:
  3407                           
  3408                           	psect	text20
  3409  05AB                     __ptext20:	
  3410 ;; *************** function _i2c_stop *****************
  3411 ;; Defined at:
  3412 ;;		line 37 in file "i2c.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		None
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3426 ;;      Params:         0       0       0       0       0
  3427 ;;      Locals:         0       0       0       0       0
  3428 ;;      Temps:          0       0       0       0       0
  3429 ;;      Totals:         0       0       0       0       0
  3430 ;;Total ram usage:        0 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; This function calls:
  3433 ;;		Nothing
  3434 ;; This function is called by:
  3435 ;;		_myISR
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           
  3440                           ;psect for function _i2c_stop
  3441  05AB                     _i2c_stop:
  3442  05AB                     i1l1589:	
  3443                           ;incstack = 0
  3444                           ; Regs used in _i2c_stop: []
  3445                           
  3446                           
  3447                           ;i2c.c: 38:     SSPCON2bits.PEN = 1;
  3448  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  3449  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  3450  05AD  1511               	bsf	17,2	;volatile
  3451  05AE                     i1l197:	
  3452                           ;i2c.c: 39:     while(SSPCON2bits.PEN);
  3453                           
  3454  05AE  1911               	btfsc	17,2	;volatile
  3455  05AF  2DB1               	goto	u114_21
  3456  05B0  2DB2               	goto	u114_20
  3457  05B1                     u114_21:
  3458  05B1  2DAE               	goto	i1l197
  3459  05B2                     u114_20:
  3460  05B2                     i1l200:
  3461  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  3462  05B3  1D8C               	btfss	12,3	;volatile
  3463  05B4  2DB6               	goto	u115_21
  3464  05B5  2DB7               	goto	u115_20
  3465  05B6                     u115_21:
  3466  05B6  2DB2               	goto	i1l200
  3467  05B7                     u115_20:
  3468  05B7                     i1l202:
  3469                           
  3470                           ;i2c.c: 41:     SSPIF = 0;
  3471  05B7  118C               	bcf	12,3	;volatile
  3472  05B8                     i1l203:
  3473  05B8  0008               	return
  3474  05B9                     __end_of_i2c_stop:
  3475                           
  3476                           	psect	text21
  3477  058A                     __ptext21:	
  3478 ;; *************** function _i2c_start *****************
  3479 ;; Defined at:
  3480 ;;		line 20 in file "i2c.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;		None
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;		None
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  1    wreg      void 
  3487 ;; Registers used:
  3488 ;;		wreg, status,2, status,0, pclath, cstack
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3494 ;;      Params:         0       0       0       0       0
  3495 ;;      Locals:         0       0       0       0       0
  3496 ;;      Temps:          0       0       0       0       0
  3497 ;;      Totals:         0       0       0       0       0
  3498 ;;Total ram usage:        0 bytes
  3499 ;; Hardware stack levels used:    1
  3500 ;; Hardware stack levels required when called:    1
  3501 ;; This function calls:
  3502 ;;		_i2c_idle
  3503 ;; This function is called by:
  3504 ;;		_myISR
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           
  3509                           ;psect for function _i2c_start
  3510  058A                     _i2c_start:
  3511  058A                     i1l1571:	
  3512                           ;incstack = 0
  3513                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  3514                           
  3515                           
  3516                           ;i2c.c: 22:     i2c_idle();
  3517  058A  120A  118A  25B9  120A  118A  	fcall	_i2c_idle
  3518  058F                     i1l1573:
  3519                           
  3520                           ;i2c.c: 23:     SSPCON2bits.SEN = 1;
  3521  058F  1683               	bsf	3,5	;RP0=1, select bank1
  3522  0590  1303               	bcf	3,6	;RP1=0, select bank1
  3523  0591  1411               	bsf	17,0	;volatile
  3524  0592                     i1l179:	
  3525                           ;i2c.c: 24:     while(SSPCON2bits.SEN == 1);
  3526                           
  3527  0592  1811               	btfsc	17,0	;volatile
  3528  0593  2D95               	goto	u109_21
  3529  0594  2D96               	goto	u109_20
  3530  0595                     u109_21:
  3531  0595  2D92               	goto	i1l179
  3532  0596                     u109_20:
  3533  0596                     i1l182:
  3534  0596  1283               	bcf	3,5	;RP0=0, select bank0
  3535  0597  1D8C               	btfss	12,3	;volatile
  3536  0598  2D9A               	goto	u110_21
  3537  0599  2D9B               	goto	u110_20
  3538  059A                     u110_21:
  3539  059A  2D96               	goto	i1l182
  3540  059B                     u110_20:
  3541  059B                     i1l184:
  3542                           
  3543                           ;i2c.c: 26:     SSPIF = 0;
  3544  059B  118C               	bcf	12,3	;volatile
  3545  059C                     i1l185:
  3546  059C  0008               	return
  3547  059D                     __end_of_i2c_start:
  3548                           
  3549                           	psect	text22
  3550  0563                     __ptext22:	
  3551 ;; *************** function _i2c_read *****************
  3552 ;; Defined at:
  3553 ;;		line 44 in file "i2c.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;		None
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;		None
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  1    wreg      unsigned char 
  3560 ;; Registers used:
  3561 ;;		wreg, status,2, status,0, pclath, cstack
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3567 ;;      Params:         0       0       0       0       0
  3568 ;;      Locals:         0       0       0       0       0
  3569 ;;      Temps:          0       0       0       0       0
  3570 ;;      Totals:         0       0       0       0       0
  3571 ;;Total ram usage:        0 bytes
  3572 ;; Hardware stack levels used:    1
  3573 ;; Hardware stack levels required when called:    1
  3574 ;; This function calls:
  3575 ;;		_i2c_idle
  3576 ;; This function is called by:
  3577 ;;		_myISR
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           
  3582                           ;psect for function _i2c_read
  3583  0563                     _i2c_read:
  3584  0563                     i1l1581:	
  3585                           ;incstack = 0
  3586                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  3587                           
  3588                           
  3589                           ;i2c.c: 45:     i2c_idle();
  3590  0563  120A  118A  25B9  120A  118A  	fcall	_i2c_idle
  3591  0568                     i1l1583:
  3592                           
  3593                           ;i2c.c: 46:     SSPCON2bits.RCEN = 1;
  3594  0568  1683               	bsf	3,5	;RP0=1, select bank1
  3595  0569  1303               	bcf	3,6	;RP1=0, select bank1
  3596  056A  1591               	bsf	17,3	;volatile
  3597  056B                     i1l206:	
  3598                           ;i2c.c: 47:     while(SSPCON2bits.RCEN == 1);
  3599                           
  3600  056B  1991               	btfsc	17,3	;volatile
  3601  056C  2D6E               	goto	u112_21
  3602  056D  2D6F               	goto	u112_20
  3603  056E                     u112_21:
  3604  056E  2D6B               	goto	i1l206
  3605  056F                     u112_20:
  3606  056F                     i1l209:
  3607  056F  1C14               	btfss	20,0	;volatile
  3608  0570  2D72               	goto	u113_21
  3609  0571  2D73               	goto	u113_20
  3610  0572                     u113_21:
  3611  0572  2D6F               	goto	i1l209
  3612  0573                     u113_20:
  3613  0573                     i1l1585:
  3614                           
  3615                           ;i2c.c: 49:     return SSPBUF;
  3616  0573  1283               	bcf	3,5	;RP0=0, select bank0
  3617  0574  1303               	bcf	3,6	;RP1=0, select bank0
  3618  0575  0813               	movf	19,w	;volatile
  3619  0576                     i1l212:
  3620  0576  0008               	return
  3621  0577                     __end_of_i2c_read:
  3622                           
  3623                           	psect	text23
  3624  05B9                     __ptext23:	
  3625 ;; *************** function _i2c_idle *****************
  3626 ;; Defined at:
  3627 ;;		line 81 in file "i2c.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;		None
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;		None
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  1    wreg      void 
  3634 ;; Registers used:
  3635 ;;		wreg, status,2
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3641 ;;      Params:         0       0       0       0       0
  3642 ;;      Locals:         0       0       0       0       0
  3643 ;;      Temps:          0       0       0       0       0
  3644 ;;      Totals:         0       0       0       0       0
  3645 ;;Total ram usage:        0 bytes
  3646 ;; Hardware stack levels used:    1
  3647 ;; This function calls:
  3648 ;;		Nothing
  3649 ;; This function is called by:
  3650 ;;		_i2c_start
  3651 ;;		_i2c_read
  3652 ;;		_i2c_write
  3653 ;;		_i2c_restart
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           
  3658                           ;psect for function _i2c_idle
  3659  05B9                     _i2c_idle:
  3660  05B9                     i1l1437:	
  3661                           ;incstack = 0
  3662                           ; Regs used in _i2c_idle: [wreg+status,2]
  3663                           
  3664  05B9                     i1l1439:	
  3665                           ;i2c.c: 82:     while((SSPCON2 & 0x1F)|| (SSPSTAT & 0x04));
  3666                           
  3667  05B9  1683               	bsf	3,5	;RP0=1, select bank1
  3668  05BA  1303               	bcf	3,6	;RP1=0, select bank1
  3669  05BB  0811               	movf	17,w	;volatile
  3670  05BC  391F               	andlw	31
  3671  05BD  1D03               	btfss	3,2
  3672  05BE  2DC0               	goto	u79_21
  3673  05BF  2DC1               	goto	u79_20
  3674  05C0                     u79_21:
  3675  05C0  2DB9               	goto	i1l1439
  3676  05C1                     u79_20:
  3677  05C1                     i1l1441:
  3678  05C1  1914               	btfsc	20,2	;volatile
  3679  05C2  2DC4               	goto	u80_21
  3680  05C3  2DC5               	goto	u80_20
  3681  05C4                     u80_21:
  3682  05C4  2DB9               	goto	i1l1439
  3683  05C5                     u80_20:
  3684  05C5                     i1l236:
  3685  05C5  0008               	return
  3686  05C6                     __end_of_i2c_idle:
  3687  007E                     btemp	set	126	;btemp
  3688  007E                     wtemp0	set	126
  3689                           
  3690                           	psect	config
  3691                           
  3692                           ;Config register CONFIG1 @ 0x2007
  3693                           ;	Oscillator Selection bits
  3694                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  3695                           ;	Watchdog Timer Enable bit
  3696                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3697                           ;	Power-up Timer Enable bit
  3698                           ;	PWRTE = OFF, PWRT disabled
  3699                           ;	RE3/MCLR pin function select bit
  3700                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  3701                           ;	Code Protection bit
  3702                           ;	CP = OFF, Program memory code protection is disabled
  3703                           ;	Data Code Protection bit
  3704                           ;	CPD = OFF, Data memory code protection is disabled
  3705                           ;	Brown Out Reset Selection bits
  3706                           ;	BOREN = ON, BOR enabled
  3707                           ;	Internal External Switchover bit
  3708                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3709                           ;	Fail-Safe Clock Monitor Enabled bit
  3710                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3711                           ;	Low Voltage Programming Enable bit
  3712                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  3713                           ;	In-Circuit Debugger Mode bit
  3714                           ;	DEBUG = 0x1, unprogrammed default
  3715  2007                     	org	8199
  3716  2007  3FF2               	dw	16370
  3717                           
  3718                           ;Config register CONFIG2 @ 0x2008
  3719                           ;	Brown-out Reset Selection bit
  3720                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3721                           ;	Flash Program Memory Self Write Enable bits
  3722                           ;	WRT = OFF, Write protection off
  3723  2008                     	org	8200
  3724  2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    10
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     45      59
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_7(CODE[2]), STR_6(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), data(BANK0[10]), 

    strchr@ptr	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_7(CODE[2]), STR_6(CODE[2]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 2
		 -> STR_7(CODE[2]), STR_6(CODE[2]), NULL(NULL[0]), 

    strcspn@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_7(CODE[2]), STR_6(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), data(BANK0[10]), 

    strtok@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_7(CODE[2]), STR_6(CODE[2]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), data(BANK0[10]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), data(BANK0[10]), 

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_4(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), data(BANK0[10]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_5(CODE[4]), STR_3(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), data(BANK0[10]), 

    token@cmd	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    token@tok	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), data(BANK0[10]), 

    recivedCMD@cmd	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    usart_TxStr@str	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    dir	PTR unsigned char [3] size(1) Largest target is 10
		 -> NULL(NULL[0]), data(BANK0[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myISR in COMMON

    _usart_TxStr->_usart_Tx
    _token->_strtok
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    _main->_usart_init
    _usart_init->___aldiv

Critical Paths under _myISR in BANK0

    _myISR->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     725
                                             42 BANK0      3     3      0
                           _i2c_init
                    _usart_Interrupt
                         _usart_init
 ---------------------------------------------------------------------------------
 (1) _usart_init                                           8     4      4     725
                                             34 BANK0      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                             19 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _usart_Interrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _myISR                                                6     6      0    3618
                                             13 BANK0      6     6      0
                           _i2c_read
                          _i2c_start
                           _i2c_stop
                          _i2c_write
                         _recivedCMD
                            _sprintf
                             _strcmp
                              _token
                        _usart_TxStr
 ---------------------------------------------------------------------------------
 (4) _usart_TxStr                                          1     1      0     133
                                              1 COMMON     1     1      0
                           _usart_Tx
 ---------------------------------------------------------------------------------
 (5) _usart_Tx                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _token                                                4     4      0    1556
                                              0 BANK0      4     4      0
                             _strtok
 ---------------------------------------------------------------------------------
 (5) _strtok                                               2     1      1    1430
                                             10 COMMON     2     1      1
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (6) _strspn                                               7     5      2     506
                                              3 COMMON     7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (6) _strcspn                                              7     5      2     506
                                              3 COMMON     7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (8) _strchr                                               3     1      2     306
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (5) _strcmp                                               6     4      2     418
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             21    18      3    1320
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) _recivedCMD                                           4     4      0     169
                                              0 COMMON     4     4      0
                               _get1
 ---------------------------------------------------------------------------------
 (5) _get1                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_read                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (5) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_init
   _usart_Interrupt
   _usart_init
     ___aldiv

 _myISR (ROOT)
   _i2c_read
     _i2c_idle
   _i2c_start
     _i2c_idle
   _i2c_stop
   _i2c_write
     _i2c_idle
   _recivedCMD
     _get1
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _strcmp
   _token
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr
   _usart_TxStr
     _usart_Tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      48       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      3B       5       73.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      48      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Sep 18 22:41:43 2021

                       pc 0002               _SSPSTATbits 0094                        l98 0309  
                      fsr 0004                       l116 05DA                       l176 05AA  
                     l418 0232                       l428 02BA                       u810 0225  
                     u811 0224                       u900 02A7                       u820 0236  
                     u901 02A6                       u821 0235                       u830 0255  
                     u831 0254                       u850 0269                       u851 0268  
                     u845 025A                       u870 0284                       u871 0283  
                     u865 026B                       u890 02A2                       u891 02A1  
                     u875 0280                       u885 0294                       _dir 004D  
                     fsr0 0004                       indf 0000                      l1451 0241  
                    l1443 021E                      l1461 0261                      l1453 0245  
                    l1445 0221                      l1471 0292                      l1463 0265  
                    l1455 024D                      l1447 0225                      l1481 02B2  
                    l1473 0293                      l1465 0269                      l1457 0255  
                    l1449 0236                      l1475 029C                      l1467 0272  
                    l1459 0258                      l1469 0284                      l1477 02A2  
                    l1741 0362                      l1479 02A7                      l1671 0302  
                    l1663 02BB                      l1751 038B                      l1743 036F  
                    l1681 05D2                      l1673 0303                      l1665 02BF  
                    l1753 038E                      l1745 0374                      l1683 059D  
                    l1675 0304                      l1667 02FC                      l1747 0379  
                    l1739 0356                      l1685 05A1                      l1677 0307  
                    l1669 02FF                      l1749 037C                      l1687 05A5  
                    l1679 0308                      l1689 05A6                      STR_1 0541  
                    STR_2 0544                      STR_3 053D                      STR_4 0547  
                    STR_5 053D                      STR_6 054A                      STR_7 054A  
                    u1317 0384                      u1327 0396                      i1l61 012B  
             _usart_TxStr 054C                      _get1 05DB                      _data 0051  
                    _main 0356                      btemp 007E                      start 0012  
                   ?_get1 0070           __end_of___aldiv 02BB                     ?_main 0070  
         __end_of___lwdiv 03E5                     i1l101 05CB                     i1l200 05B2  
                   i1l104 05D1                     i1l113 0562                     i1l202 05B7  
                   i1l203 05B8                     i1l123 050C                     i1l212 0576  
                   i1l206 056B                     i1l126 05DB                     i1l135 0456  
                   i1l209 056F                     i1l129 05E2                     i1l218 0589  
                   i1l236 05C5                     i1l182 0596                     i1l184 059B  
                   i1l185 059C           __end_of___lwmod 041F                     i1l179 0592  
                   i1l197 05AE                     i1l349 021D                     i1l625 03E4  
                   i1l635 041E                     i1l820 0355                     i1l809 04E2  
                   i1l833 04B4                     i1l836 050E                     i1l838 052C  
                   i1l849 0485                     _RCREG 001A                     _SPBRG 0099  
                   _PORTB 0006                     _PORTD 0008                     u70_20 0481  
                   u70_21 0480                     u71_20 049C                     u71_21 049B  
                   u80_20 05C5                     u72_20 04B0                     u80_21 05C4  
                   u72_21 04AF                     u73_20 05D1                     u73_21 05D0  
                   _TRISB 0086                     _TRISD 0088                     u74_20 05E1  
                   _SSPIF 0063                     u74_21 05E0                     u91_20 03A9  
                   u67_20 051A                     u75_20 0310                     u91_21 03A8  
                   u67_21 0519                     u75_21 030F                     u68_20 052B  
                   u76_20 0319                     u68_21 052A                     u76_21 0318  
                   u92_25 03AD                     u93_20 03BB                     u69_20 046D  
                   u77_20 0331                     u93_21 03BA                     u69_21 046C  
                   u77_21 0330                     u78_20 034B                     u78_21 034A  
                   u94_25 03BC                     u79_20 05C1                     u95_20 03CC  
                   u79_21 05C0                     u95_21 03CB                     u95_25 03C8  
                   u96_25 03D4                     u97_20 03E0                     u97_21 03DF  
                   _TXREG 0019                     u98_20 03EB                     u98_21 03EA  
                   u99_25 03EF           __end_of_dpowers 053D                     _myISR 002A  
                   _token 041F                     pclath 000A                     status 0003  
                   wtemp0 007E           __end_of_sprintf 021E           __end_of_strcspn 04B5  
         __initialization 0015              __end_of_get1 05E3              __end_of_main 03A1  
        __end_of_i2c_idle 05C6          __end_of_i2c_init 05AB          __end_of_i2c_read 0577  
        __end_of_i2c_stop 05B9                    ??_get1 0070                    ??_main 004A  
                  ?_myISR 0070                    ?_token 0070                    u100_20 03FD  
                  u100_21 03FC                    u101_20 0407                    u101_21 0406  
                  u101_25 0403                    u110_20 059B                    u110_21 059A  
                  u102_25 040E                    u111_20 0589                    u103_20 041A  
                  u111_21 0588                    i1l1401 05E1                    u103_21 0419  
                  i1l1411 0319                    i1l1501 03D2                    i1l1405 030B  
                  i1l1503 03D3                    i1l1511 03E5                    i1l1431 0353  
                  i1l1423 0334                    i1l1415 031B                    i1l1407 0310  
                  u112_20 056F                    u104_20 0506                    u120_20 01B5  
                  i1l1441 05C1                    u112_21 056E                    u104_21 0505  
                  i1l1505 03DA                    i1l1521 03FD                    i1l1513 03EB  
                  u120_21 01B4                    i1l1361 050E                    i1l1433 0354  
                  i1l1425 0343                    i1l1417 0329                    i1l1409 0314  
                  i1l1507 03E0                    i1l1523 0407                    i1l1515 03EE  
                  i1l1611 017E                    i1l1603 0151                    i1l1363 051A  
                  i1l1427 034B                    i1l1419 0331                    i1l1437 05B9  
                  i1l1541 0500                    i1l1533 04E4                    i1l1525 040D  
                  i1l1517 03F5                    i1l1621 0189                    i1l1613 0182  
                  i1l1605 016E                    i1l1381 0481                    i1l1373 0458  
                  i1l1429 034E                    i1l1701 007A                    i1l1439 05B9  
                  i1l1543 0506                    i1l1535 04E5                    i1l1527 0414  
                  i1l1519 03F9                    i1l1631 01B5                    i1l1615 0187  
                  i1l1607 0176                    i1l1367 051C                    i1l1391 049C  
                  i1l1375 045B                    i1l1551 043C                    i1l1711 00AE  
                  i1l1703 0084                    u113_20 0573                    u105_20 050C  
                  u121_20 0207                    u113_21 0572                    u105_21 050B  
                  i1l1537 04F3                    i1l1529 041A                    u121_21 0206  
                  i1l1641 01FA                    i1l1633 01BC                    i1l1625 01A5  
                  i1l1609 017A                    i1l1561 04BB                    i1l1369 052B  
                  i1l1393 04B0                    i1l1385 0487                    i1l1377 0465  
                  i1l1553 044B                    i1l1545 0422                    i1l1721 00E7  
                  i1l1713 00B9                    i1l1705 0089                    i1l1571 058A  
                  i1l1539 04FC                    i1l1491 03AC                    i1l1643 01FE  
                  i1l1635 01C0                    i1l1627 01A9                    i1l1563 04BF  
                  i1l1387 048A                    i1l1379 046D                    i1l1555 0451  
                  i1l1547 0424                    i1l1731 011B                    i1l1723 00F1  
                  i1l1707 009C                    i1l1715 00BF                    i1l1581 0563  
                  i1l1573 058F                    i1l1493 03B3                    i1l1485 03A1  
                  i1l1637 01C5                    i1l1629 01AF                    i1l1645 0207  
                  i1l1565 04D6                    i1l1557 04B6                    i1l1389 0494  
                  i1l1549 0434                    i1l1397 05C7                    i1l1661 055A  
                  i1l1725 00F6                    i1l1717 00D1                    i1l1709 00A3  
                  i1l1583 0568                    i1l1575 0578                    i1l1399 05DB  
                  i1l1495 03B7                    i1l1487 03A3                    i1l1639 01F3  
                  i1l1647 0219                    i1l1591 0139                    i1l1567 04DD  
                  i1l1559 04B7                    i1l1655 054D                    i1l1727 0109  
                  i1l1719 00DC                    i1l1735 0127                    u114_20 05B2  
                  u122_20 0219                    u106_20 0456                    i1l1585 0573  
                  u114_21 05B1                    i1l1577 057D                    i1l1497 03BB  
                  i1l1489 03A9                    u122_21 0218                    i1l1593 013E  
                  u106_21 0455                    i1l1657 054E                    i1l1737 012A  
                  i1l1729 0110                    i1l1579 0581                    i1l1499 03CC  
                  i1l1595 0144                    i1l1659 0556                    i1l1691 002A  
                  i1l1589 05AB                    i1l1597 014B                    i1l1693 0048  
                  i1l1599 0150                    i1l1695 0054                    u115_20 05B7  
                  u107_20 04D6                    u123_20 0562                    u115_21 05B6  
                  u107_21 04D5                    u123_21 0561                    i1l1697 0064  
                  i1l1779 0163                    i1l1699 006F                    u116_20 0144  
                  u108_20 04DD                    u124_20 0048                    u116_21 0143  
                  u108_21 04DC                    u124_21 0047                    u109_20 0596  
                  u117_20 017E                    u125_20 0064                    u109_21 0595  
                  u117_21 017D                    u125_21 0063                    u118_20 01A4  
                  u126_20 006F                    u118_21 01A3                    u126_21 006E  
                  u118_25 01A0                    u119_20 01AF                    u127_20 00D1  
                  u119_21 01AE                    u127_21 00D0                    u128_20 00DC  
                  u128_21 00DB                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC4 043C                    _SSPCON 0014                    _SSPBUF 0013  
      __size_of_i2c_start 0013        __size_of_i2c_write 0013             recivedCMD@cmd 0071  
               ??___aldiv 003B                 ??___lwdiv 0074                 ??___lwmod 007B  
                  _strchr 050D                    _strcmp 04B5                    _strtok 030A  
                  _strspn 0457                    saved_w 007E                    token@i 0020  
               ??_sprintf 0023          __end_of_usart_Tx 05D2                 ??_strcspn 0075  
 __end_of__initialization 0026            __pcstackCOMMON 0070            usart_TxStr@str 0071  
           __end_of_myISR 0136             __end_of_token 0457         __end_of_i2c_start 059D  
       __end_of_i2c_write 058A               recivedCMD@i 0072               recivedCMD@j 0073  
__size_of_usart_Interrupt 0009                   ??_myISR 002D                   ??_token 007C  
            ?_usart_TxStr 0070                __pbssBANK0 004D              usart_Tx@send 0070  
               ?_i2c_idle 0070                 ?_i2c_init 0070                 ?_i2c_read 0070  
               ?_i2c_stop 0070                __pmaintext 0356            usart_init@BAUD 0042  
              __pintentry 0004                   ?_strchr 0070                   ?_strcmp 0070  
                 ?_strtok 007A                   ?_strspn 0073                   _SSPCON2 0091  
                 _SSPSTAT 0094                __stringtab 052D                ??_i2c_idle 0070  
              ??_i2c_init 0033                ??_i2c_read 0070                ??_i2c_stop 0070  
                 ___aldiv 021E                   ___lwdiv 03A1                   ___lwmod 03E5  
               ?_usart_Tx 0070                   __ptext1 02BB                   __ptext2 021E  
                 __ptext3 05D2                   __ptext4 059D                   __ptext5 002A  
                 __ptext6 054C                   __ptext7 05C6                   __ptext8 041F  
                 __ptext9 030A           __size_of_strchr 0020           __size_of_strcmp 002E  
         __size_of_strtok 004C           __size_of_strspn 002F                   _lectura 0050  
                 _dpowers 0533          ___aldiv@dividend 0037                _recivedCMD 04E3  
                 _sprintf 0136                   _strcspn 0486      end_of_initialization 0026  
       ??_usart_Interrupt 0033                 _RCSTAbits 0018          ___aldiv@quotient 003E  
                 strcmp@r 0074                ??_usart_Tx 0070                   strspn@i 0077  
               _PORTBbits 0006                 _PORTDbits 0008             i2c_write@dato 0070  
               _TRISBbits 0086                 _TRISCbits 0087      __size_of_usart_TxStr 0017  
               _TXSTAbits 0098                _usart_init 02BB            __end_of_strchr 052D  
          __end_of_strcmp 04E3            __end_of_strtok 0356            __end_of_strspn 0486  
     start_initialization 0015               ?_recivedCMD 0070                 _i2c_start 058A  
               _i2c_write 0577         __size_of_i2c_idle 000D         __size_of_i2c_init 000E  
       __size_of_i2c_read 0014         __size_of_i2c_stop 000E                  ??_strchr 0072  
                ??_strcmp 0072                  ??_strtok 007B                  ??_strspn 0075  
             __pbssCOMMON 007C                 ___latbits 0002             __pcstackBANK0 0020  
              ?_i2c_start 0070                ?_i2c_write 0070               sprintf@flag 0027  
             sprintf@prec 0028               ?_usart_init 0042          ___lwdiv@dividend 0072  
     __size_of_recivedCMD 002A                  ?___aldiv 0033                  ?___lwdiv 0070  
                ?___lwmod 0077                 __pstrings 052D         __size_of_usart_Tx 000C  
         _usart_Interrupt 05D2          ___lwdiv@quotient 0074            __size_of_myISR 010C  
                ?_sprintf 0020                  ?_strcspn 0073            __size_of_token 0038  
         ___aldiv@divisor 0033         interrupt_function 0004           ___aldiv@counter 003C  
                _PIE1bits 008C                  _PIR1bits 000C               __stringbase 0532  
     __size_of_usart_init 004F               ??_i2c_start 0070               ??_i2c_write 0070  
                _i2c_idle 05B9                  _i2c_init 059D                  _i2c_read 0563  
                _i2c_stop 05AB           _usart_init$1374 0046          __size_of___aldiv 009D  
 __end_of_usart_Interrupt 05DB          __size_of___lwdiv 0044          __size_of___lwmod 003A  
      __end_of__stringtab 0533                sprintf@val 0029              ??_recivedCMD 0070  
         ___lwdiv@divisor 0070           ___lwdiv@counter 0076                  __ptext10 0457  
                __ptext11 0486                  __ptext20 05AB                  __ptext12 050D  
                __ptext21 058A                  __ptext13 04B5                  __ptext22 0563  
                __ptext14 0136                  __ptext23 05B9                  __ptext15 03E5  
                __ptext16 03A1                  __ptext17 04E3                  __ptext18 05DB  
                __ptext19 0577             ??_usart_TxStr 0071          __size_of_sprintf 00E8  
        __size_of_strcspn 002F             __size_of_get1 0008             __size_of_main 004B  
      __end_of_recivedCMD 050D                  _usart_Tx 05C6                _INTCONbits 000B  
                intlevel1 0000                 sprintf@ap 0026                 sprintf@sp 002B  
               strchr@chr 0070          ___lwmod@dividend 0079                 strchr@ptr 0072  
            ??_usart_init 0046                 strcspn@s1 0079                 strcspn@s2 0073  
     __end_of_usart_TxStr 0563                 stringcode 052D                  token@cmd 0022  
                token@tok 0023          ?_usart_Interrupt 0070                  sprintf@c 002C  
                sprintf@f 0020                  strcmp@s1 0075                  strcmp@s2 0070  
         ___lwmod@divisor 0077           ___lwmod@counter 007B                  strcspn@i 0077  
                stringdir 052D                  stringtab 052D              ___aldiv@sign 003D  
      __end_of_usart_init 030A                  strtok@s1 007B                  strtok@s2 007A  
                strspn@s1 0079                  strspn@s2 0073                  strtok@sp 007C  
             _SSPCON2bits 0091                _SSPCONbits 0014  
