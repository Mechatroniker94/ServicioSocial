

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Sep 19 11:21:10 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0008                     _PORTD	set	8
   378  0008                     _PORTDbits	set	8
   379  001A                     _RCREG	set	26
   380  0019                     _TXREG	set	25
   381  0018                     _RCSTAbits	set	24
   382  0006                     _PORTB	set	6
   383  0009                     _PORTE	set	9
   384  000C                     _PIR1bits	set	12
   385  000B                     _INTCONbits	set	11
   386  0088                     _TRISD	set	136
   387  0088                     _TRISDbits	set	136
   388  008C                     _PIE1bits	set	140
   389  0098                     _TXSTAbits	set	152
   390  0099                     _SPBRG	set	153
   391  0086                     _TRISBbits	set	134
   392  0089                     _TRISE	set	137
   393  0086                     _TRISB	set	134
   394  0189                     _ANSELH	set	393
   395  0188                     _ANSEL	set	392
   396                           
   397                           	psect	strings
   398  0200                     __pstrings:
   399  0200                     stringtab:
   400  0200                     __stringtab:
   401                           
   402                           ;	String table - string pointers are 1 byte each
   403  0200  1BFF               	btfsc	btemp+1,7
   404  0201  2A0A               	ljmp	stringcode
   405  0202  1383               	bcf	3,7
   406  0203  187F               	btfsc	btemp+1,0
   407  0204  1783               	bsf	3,7
   408  0205  0800               	movf	0,w
   409  0206  0A84               	incf	4,f
   410  0207  1903               	skipnz
   411  0208  0AFF               	incf	btemp+1,f
   412  0209  0008               	return
   413  020A                     stringcode:
   414  020A                     stringdir:
   415  020A  3002               	movlw	high stringdir
   416  020B  008A               	movwf	10
   417  020C  0804               	movf	4,w
   418  020D  0A84               	incf	4,f
   419  020E  0782               	addwf	2,f
   420  020F                     __stringbase:
   421  020F  3400               	retlw	0
   422  0210                     __end_of__stringtab:
   423  0210                     STR_1:
   424  0210  3448               	retlw	72	;'H'
   425  0211  346F               	retlw	111	;'o'
   426  0212  346C               	retlw	108	;'l'
   427  0213  3461               	retlw	97	;'a'
   428  0214  3420               	retlw	32	;' '
   429  0215  346D               	retlw	109	;'m'
   430  0216  3475               	retlw	117	;'u'
   431  0217  346E               	retlw	110	;'n'
   432  0218  3464               	retlw	100	;'d'
   433  0219  346F               	retlw	111	;'o'
   434  021A  3400               	retlw	0
   435  021B                     STR_5:
   436  021B  344D               	retlw	77	;'M'
   437  021C  3431               	retlw	49	;'1'
   438  021D  342C               	retlw	44	;','
   439  021E  3450               	retlw	80	;'P'
   440  021F  3431               	retlw	49	;'1'
   441  0220  342C               	retlw	44	;','
   442  0221  3461               	retlw	97	;'a'
   443  0222  340A               	retlw	10
   444  0223  3400               	retlw	0
   445  0224                     STR_13:
   446  0224  344D               	retlw	77	;'M'
   447  0225  3432               	retlw	50	;'2'
   448  0226  342C               	retlw	44	;','
   449  0227  3450               	retlw	80	;'P'
   450  0228  3431               	retlw	49	;'1'
   451  0229  342C               	retlw	44	;','
   452  022A  3461               	retlw	97	;'a'
   453  022B  340A               	retlw	10
   454  022C  3400               	retlw	0
   455  022D                     STR_21:
   456  022D  344D               	retlw	77	;'M'
   457  022E  3433               	retlw	51	;'3'
   458  022F  342C               	retlw	44	;','
   459  0230  3450               	retlw	80	;'P'
   460  0231  3431               	retlw	49	;'1'
   461  0232  342C               	retlw	44	;','
   462  0233  3461               	retlw	97	;'a'
   463  0234  340A               	retlw	10
   464  0235  3400               	retlw	0
   465  0236                     STR_9:
   466  0236  344D               	retlw	77	;'M'
   467  0237  3431               	retlw	49	;'1'
   468  0238  342C               	retlw	44	;','
   469  0239  3450               	retlw	80	;'P'
   470  023A  3432               	retlw	50	;'2'
   471  023B  342C               	retlw	44	;','
   472  023C  3461               	retlw	97	;'a'
   473  023D  340A               	retlw	10
   474  023E  3400               	retlw	0
   475  023F                     STR_17:
   476  023F  344D               	retlw	77	;'M'
   477  0240  3432               	retlw	50	;'2'
   478  0241  342C               	retlw	44	;','
   479  0242  3450               	retlw	80	;'P'
   480  0243  3432               	retlw	50	;'2'
   481  0244  342C               	retlw	44	;','
   482  0245  3461               	retlw	97	;'a'
   483  0246  340A               	retlw	10
   484  0247  3400               	retlw	0
   485  0248                     STR_26:
   486  0248  344D               	retlw	77	;'M'
   487  0249  3433               	retlw	51	;'3'
   488  024A  342C               	retlw	44	;','
   489  024B  3450               	retlw	80	;'P'
   490  024C  3432               	retlw	50	;'2'
   491  024D  342C               	retlw	44	;','
   492  024E  3461               	retlw	97	;'a'
   493  024F  340A               	retlw	10
   494  0250  3400               	retlw	0
   495  0251                     STR_4:
   496  0251  344D               	retlw	77	;'M'
   497  0252  3431               	retlw	49	;'1'
   498  0253  342C               	retlw	44	;','
   499  0254  3450               	retlw	80	;'P'
   500  0255  3431               	retlw	49	;'1'
   501  0256  342C               	retlw	44	;','
   502  0257  3462               	retlw	98	;'b'
   503  0258  340A               	retlw	10
   504  0259  3400               	retlw	0
   505  025A                     STR_12:
   506  025A  344D               	retlw	77	;'M'
   507  025B  3432               	retlw	50	;'2'
   508  025C  342C               	retlw	44	;','
   509  025D  3450               	retlw	80	;'P'
   510  025E  3431               	retlw	49	;'1'
   511  025F  342C               	retlw	44	;','
   512  0260  3462               	retlw	98	;'b'
   513  0261  340A               	retlw	10
   514  0262  3400               	retlw	0
   515  0263                     STR_20:
   516  0263  344D               	retlw	77	;'M'
   517  0264  3433               	retlw	51	;'3'
   518  0265  342C               	retlw	44	;','
   519  0266  3450               	retlw	80	;'P'
   520  0267  3431               	retlw	49	;'1'
   521  0268  342C               	retlw	44	;','
   522  0269  3462               	retlw	98	;'b'
   523  026A  340A               	retlw	10
   524  026B  3400               	retlw	0
   525  026C                     STR_8:
   526  026C  344D               	retlw	77	;'M'
   527  026D  3431               	retlw	49	;'1'
   528  026E  342C               	retlw	44	;','
   529  026F  3450               	retlw	80	;'P'
   530  0270  3432               	retlw	50	;'2'
   531  0271  342C               	retlw	44	;','
   532  0272  3462               	retlw	98	;'b'
   533  0273  340A               	retlw	10
   534  0274  3400               	retlw	0
   535  0275                     STR_16:
   536  0275  344D               	retlw	77	;'M'
   537  0276  3432               	retlw	50	;'2'
   538  0277  342C               	retlw	44	;','
   539  0278  3450               	retlw	80	;'P'
   540  0279  3432               	retlw	50	;'2'
   541  027A  342C               	retlw	44	;','
   542  027B  3462               	retlw	98	;'b'
   543  027C  340A               	retlw	10
   544  027D  3400               	retlw	0
   545  027E                     STR_24:
   546  027E  344D               	retlw	77	;'M'
   547  027F  3433               	retlw	51	;'3'
   548  0280  342C               	retlw	44	;','
   549  0281  3450               	retlw	80	;'P'
   550  0282  3432               	retlw	50	;'2'
   551  0283  342C               	retlw	44	;','
   552  0284  3462               	retlw	98	;'b'
   553  0285  340A               	retlw	10
   554  0286  3400               	retlw	0
   555  0287                     STR_3:
   556  0287  344D               	retlw	77	;'M'
   557  0288  3431               	retlw	49	;'1'
   558  0289  342C               	retlw	44	;','
   559  028A  3450               	retlw	80	;'P'
   560  028B  3431               	retlw	49	;'1'
   561  028C  342C               	retlw	44	;','
   562  028D  3467               	retlw	103	;'g'
   563  028E  340A               	retlw	10
   564  028F  3400               	retlw	0
   565  0290                     STR_11:
   566  0290  344D               	retlw	77	;'M'
   567  0291  3432               	retlw	50	;'2'
   568  0292  342C               	retlw	44	;','
   569  0293  3450               	retlw	80	;'P'
   570  0294  3431               	retlw	49	;'1'
   571  0295  342C               	retlw	44	;','
   572  0296  3467               	retlw	103	;'g'
   573  0297  340A               	retlw	10
   574  0298  3400               	retlw	0
   575  0299                     STR_19:
   576  0299  344D               	retlw	77	;'M'
   577  029A  3433               	retlw	51	;'3'
   578  029B  342C               	retlw	44	;','
   579  029C  3450               	retlw	80	;'P'
   580  029D  3431               	retlw	49	;'1'
   581  029E  342C               	retlw	44	;','
   582  029F  3467               	retlw	103	;'g'
   583  02A0  340A               	retlw	10
   584  02A1  3400               	retlw	0
   585  02A2                     STR_7:
   586  02A2  344D               	retlw	77	;'M'
   587  02A3  3431               	retlw	49	;'1'
   588  02A4  342C               	retlw	44	;','
   589  02A5  3450               	retlw	80	;'P'
   590  02A6  3432               	retlw	50	;'2'
   591  02A7  342C               	retlw	44	;','
   592  02A8  3467               	retlw	103	;'g'
   593  02A9  340A               	retlw	10
   594  02AA  3400               	retlw	0
   595  02AB                     STR_15:
   596  02AB  344D               	retlw	77	;'M'
   597  02AC  3432               	retlw	50	;'2'
   598  02AD  342C               	retlw	44	;','
   599  02AE  3450               	retlw	80	;'P'
   600  02AF  3432               	retlw	50	;'2'
   601  02B0  342C               	retlw	44	;','
   602  02B1  3467               	retlw	103	;'g'
   603  02B2  340A               	retlw	10
   604  02B3  3400               	retlw	0
   605  02B4                     STR_23:
   606  02B4  344D               	retlw	77	;'M'
   607  02B5  3433               	retlw	51	;'3'
   608  02B6  342C               	retlw	44	;','
   609  02B7  3450               	retlw	80	;'P'
   610  02B8  3432               	retlw	50	;'2'
   611  02B9  342C               	retlw	44	;','
   612  02BA  3467               	retlw	103	;'g'
   613  02BB  340A               	retlw	10
   614  02BC  3400               	retlw	0
   615  02BD                     STR_2:
   616  02BD  344D               	retlw	77	;'M'
   617  02BE  3431               	retlw	49	;'1'
   618  02BF  342C               	retlw	44	;','
   619  02C0  3450               	retlw	80	;'P'
   620  02C1  3431               	retlw	49	;'1'
   621  02C2  342C               	retlw	44	;','
   622  02C3  3472               	retlw	114	;'r'
   623  02C4  340A               	retlw	10
   624  02C5  3400               	retlw	0
   625  02C6                     STR_10:
   626  02C6  344D               	retlw	77	;'M'
   627  02C7  3432               	retlw	50	;'2'
   628  02C8  342C               	retlw	44	;','
   629  02C9  3450               	retlw	80	;'P'
   630  02CA  3431               	retlw	49	;'1'
   631  02CB  342C               	retlw	44	;','
   632  02CC  3472               	retlw	114	;'r'
   633  02CD  340A               	retlw	10
   634  02CE  3400               	retlw	0
   635  02CF                     STR_18:
   636  02CF  344D               	retlw	77	;'M'
   637  02D0  3433               	retlw	51	;'3'
   638  02D1  342C               	retlw	44	;','
   639  02D2  3450               	retlw	80	;'P'
   640  02D3  3431               	retlw	49	;'1'
   641  02D4  342C               	retlw	44	;','
   642  02D5  3472               	retlw	114	;'r'
   643  02D6  340A               	retlw	10
   644  02D7  3400               	retlw	0
   645  02D8                     STR_6:
   646  02D8  344D               	retlw	77	;'M'
   647  02D9  3431               	retlw	49	;'1'
   648  02DA  342C               	retlw	44	;','
   649  02DB  3450               	retlw	80	;'P'
   650  02DC  3432               	retlw	50	;'2'
   651  02DD  342C               	retlw	44	;','
   652  02DE  3472               	retlw	114	;'r'
   653  02DF  340A               	retlw	10
   654  02E0  3400               	retlw	0
   655  02E1                     STR_14:
   656  02E1  344D               	retlw	77	;'M'
   657  02E2  3432               	retlw	50	;'2'
   658  02E3  342C               	retlw	44	;','
   659  02E4  3450               	retlw	80	;'P'
   660  02E5  3432               	retlw	50	;'2'
   661  02E6  342C               	retlw	44	;','
   662  02E7  3472               	retlw	114	;'r'
   663  02E8  340A               	retlw	10
   664  02E9  3400               	retlw	0
   665  02EA                     STR_22:
   666  02EA  344D               	retlw	77	;'M'
   667  02EB  3433               	retlw	51	;'3'
   668  02EC  342C               	retlw	44	;','
   669  02ED  3450               	retlw	80	;'P'
   670  02EE  3432               	retlw	50	;'2'
   671  02EF  342C               	retlw	44	;','
   672  02F0  3472               	retlw	114	;'r'
   673  02F1  340A               	retlw	10
   674  02F2  3400               	retlw	0
   675  02F3                     STR_27:
   676  02F3  342C               	retlw	44	;','
   677  02F4  3400               	retlw	0
   678  027E                     
   679                           	psect	cinit
   680  0015                     start_initialization:	
   681                           ; #config settings
   682                           
   683  0015                     __initialization:
   684                           
   685                           ; Clear objects allocated to COMMON
   686  0015  01F9               	clrf	__pbssCOMMON& (0+127)
   687  0016  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   688  0017  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   689  0018  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   690  0019  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   691                           
   692                           ; Clear objects allocated to BANK0
   693  001A  1283               	bcf	3,5	;RP0=0, select bank0
   694  001B  1303               	bcf	3,6	;RP1=0, select bank0
   695  001C  01BB               	clrf	__pbssBANK0& (0+127)
   696  001D  01BC               	clrf	(__pbssBANK0+1)& (0+127)
   697  001E  01BD               	clrf	(__pbssBANK0+2)& (0+127)
   698  001F  01BE               	clrf	(__pbssBANK0+3)& (0+127)
   699  0020  01BF               	clrf	(__pbssBANK0+4)& (0+127)
   700  0021  01C0               	clrf	(__pbssBANK0+5)& (0+127)
   701  0022  01C1               	clrf	(__pbssBANK0+6)& (0+127)
   702  0023  01C2               	clrf	(__pbssBANK0+7)& (0+127)
   703  0024  01C3               	clrf	(__pbssBANK0+8)& (0+127)
   704  0025  01C4               	clrf	(__pbssBANK0+9)& (0+127)
   705  0026  01C5               	clrf	(__pbssBANK0+10)& (0+127)
   706  0027  01C6               	clrf	(__pbssBANK0+11)& (0+127)
   707  0028                     end_of_initialization:	
   708                           ;End of C runtime variable initialization code
   709                           
   710  0028                     __end_of__initialization:
   711  0028  0183               	clrf	3
   712  0029  120A  118A  282C   	ljmp	_main	;jump to C main() function
   713                           
   714                           	psect	bssCOMMON
   715  0079                     __pbssCOMMON:
   716  0079                     _dir:
   717  0079                     	ds	3
   718  007C                     strtok@sp:
   719  007C                     	ds	1
   720  007D                     _ptrCmd:
   721  007D                     	ds	1
   722                           
   723                           	psect	bssBANK0
   724  003B                     __pbssBANK0:
   725  003B                     _data:
   726  003B                     	ds	12
   727                           
   728                           	psect	cstackCOMMON
   729  0070                     __pcstackCOMMON:
   730  0070                     ?_recivedCMD:
   731  0070                     ??_recivedCMD:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?_lcd_init:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_lcd_print:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ?_usart_Interrupt:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?_get1:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ??_get1:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ?_lcd_cmd:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ?_lcd_clear:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ?_en_pulse:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?_myISR:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ?_main:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ?_usart_Tx:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ?_lcd_putc:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ?i1_usart_Tx:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ??i1_usart_Tx:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     i1usart_Tx@send:	
   777                           ; 1 bytes @ 0x0
   778                           
   779                           
   780                           ; 1 bytes @ 0x0
   781  0070                     	ds	1
   782  0071                     ?i1_usart_TxStr:
   783  0071                     i1usart_TxStr@str:	
   784                           ; 1 bytes @ 0x1
   785                           
   786                           
   787                           ; 2 bytes @ 0x1
   788  0071                     	ds	1
   789  0072                     recivedCMD@cmd:
   790                           
   791                           ; 1 bytes @ 0x2
   792  0072                     	ds	1
   793  0073                     ??i1_usart_TxStr:
   794  0073                     recivedCMD@i:	
   795                           ; 1 bytes @ 0x3
   796                           
   797                           
   798                           ; 1 bytes @ 0x3
   799  0073                     	ds	1
   800  0074                     recivedCMD@j:
   801                           
   802                           ; 1 bytes @ 0x4
   803  0074                     	ds	1
   804  0075                     ??_myISR:
   805                           
   806                           ; 1 bytes @ 0x5
   807  0075                     	ds	4
   808                           
   809                           	psect	cstackBANK0
   810  0020                     __pcstackBANK0:
   811  0020                     ??_usart_Interrupt:
   812  0020                     ??_en_pulse:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0020                     ??_usart_Tx:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0020                     ?___aldiv:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0020                     usart_Tx@send:	
   822                           ; 4 bytes @ 0x0
   823                           
   824  0020                     ___aldiv@divisor:	
   825                           ; 1 bytes @ 0x0
   826                           
   827                           
   828                           ; 4 bytes @ 0x0
   829  0020                     	ds	1
   830  0021                     ?_usart_TxStr:
   831  0021                     ??_lcd_cmd:	
   832                           ; 1 bytes @ 0x1
   833                           
   834  0021                     ??_lcd_putc:	
   835                           ; 1 bytes @ 0x1
   836                           
   837  0021                     usart_TxStr@str:	
   838                           ; 1 bytes @ 0x1
   839                           
   840                           
   841                           ; 2 bytes @ 0x1
   842  0021                     	ds	1
   843  0022                     lcd_putc@c:
   844                           
   845                           ; 1 bytes @ 0x2
   846  0022                     	ds	1
   847  0023                     ??_usart_TxStr:
   848  0023                     ??_lcd_print:	
   849                           ; 1 bytes @ 0x3
   850                           
   851  0023                     lcd_cmd@data:	
   852                           ; 1 bytes @ 0x3
   853                           
   854                           
   855                           ; 1 bytes @ 0x3
   856  0023                     	ds	1
   857  0024                     ??_lcd_init:
   858  0024                     ??_lcd_clear:	
   859                           ; 1 bytes @ 0x4
   860                           
   861  0024                     lcd_print@data:	
   862                           ; 1 bytes @ 0x4
   863                           
   864  0024                     ___aldiv@dividend:	
   865                           ; 1 bytes @ 0x4
   866                           
   867                           
   868                           ; 4 bytes @ 0x4
   869  0024                     	ds	4
   870  0028                     ??___aldiv:
   871                           
   872                           ; 1 bytes @ 0x8
   873  0028                     	ds	1
   874  0029                     ___aldiv@counter:
   875                           
   876                           ; 1 bytes @ 0x9
   877  0029                     	ds	1
   878  002A                     ___aldiv@sign:
   879                           
   880                           ; 1 bytes @ 0xA
   881  002A                     	ds	1
   882  002B                     ___aldiv@quotient:
   883                           
   884                           ; 4 bytes @ 0xB
   885  002B                     	ds	4
   886  002F                     ?_usart_init:
   887  002F                     usart_init@BAUD:	
   888                           ; 1 bytes @ 0xF
   889                           
   890                           
   891                           ; 4 bytes @ 0xF
   892  002F                     	ds	4
   893  0033                     ??_usart_init:
   894  0033                     _usart_init$1117:	
   895                           ; 1 bytes @ 0x13
   896                           
   897                           
   898                           ; 4 bytes @ 0x13
   899  0033                     	ds	4
   900  0037                     ??_main:
   901                           
   902                           ; 1 bytes @ 0x17
   903  0037                     	ds	3
   904  003A                     main@entrada:
   905                           
   906                           ; 1 bytes @ 0x1A
   907  003A                     	ds	1
   908                           
   909                           	psect	maintext
   910  002C                     __pmaintext:	
   911 ;;
   912 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   913 ;;
   914 ;; *************** function _main *****************
   915 ;; Defined at:
   916 ;;		line 22 in file "main.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;		None
   919 ;; Auto vars:     Size  Location     Type
   920 ;;  entrada         1   26[BANK0 ] unsigned char 
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      void 
   923 ;; Registers used:
   924 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   925 ;; Tracked objects:
   926 ;;		On entry : B00/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   930 ;;      Params:         0       0       0       0       0
   931 ;;      Locals:         0       1       0       0       0
   932 ;;      Temps:          0       3       0       0       0
   933 ;;      Totals:         0       4       0       0       0
   934 ;;Total ram usage:        4 bytes
   935 ;; Hardware stack levels required when called:    7
   936 ;; This function calls:
   937 ;;		_lcd_init
   938 ;;		_lcd_print
   939 ;;		_usart_Interrupt
   940 ;;		_usart_TxStr
   941 ;;		_usart_init
   942 ;; This function is called by:
   943 ;;		Startup code after reset
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           
   948                           ;psect for function _main
   949  002C                     _main:
   950  002C                     l1395:	
   951                           ;incstack = 0
   952                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   953                           
   954                           
   955                           ;main.c: 23:     ANSEL = 0x00;
   956  002C  1683               	bsf	3,5	;RP0=1, select bank3
   957  002D  1703               	bsf	3,6	;RP1=1, select bank3
   958  002E  0188               	clrf	8	;volatile
   959                           
   960                           ;main.c: 24:     ANSELH = 0x00;
   961  002F  0189               	clrf	9	;volatile
   962  0030                     l1397:
   963                           
   964                           ;main.c: 25:     TRISB = 0xFF;
   965  0030  30FF               	movlw	255
   966  0031  1683               	bsf	3,5	;RP0=1, select bank1
   967  0032  1303               	bcf	3,6	;RP1=0, select bank1
   968  0033  0086               	movwf	6	;volatile
   969  0034                     l1399:
   970                           
   971                           ;main.c: 26:     TRISE = 0x00;
   972  0034  0189               	clrf	9	;volatile
   973  0035                     l1401:
   974                           
   975                           ;main.c: 27:     PORTE = 0x00;
   976  0035  1283               	bcf	3,5	;RP0=0, select bank0
   977  0036  1303               	bcf	3,6	;RP1=0, select bank0
   978  0037  0189               	clrf	9	;volatile
   979  0038                     l1403:
   980                           
   981                           ;main.c: 28:     lcd_init();
   982  0038  120A  118A  2392  120A  118A  	fcall	_lcd_init
   983  003D                     l1405:
   984                           
   985                           ;main.c: 29:     lcd_print("Hola mundo");
   986  003D  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   987  003E  120A  118A  252D  120A  118A  	fcall	_lcd_print
   988  0043                     l1407:
   989                           
   990                           ;main.c: 30:     usart_init(9600);
   991  0043  3000               	movlw	0
   992  0044  1283               	bcf	3,5	;RP0=0, select bank0
   993  0045  1303               	bcf	3,6	;RP1=0, select bank0
   994  0046  00B2               	movwf	usart_init@BAUD+3
   995  0047  3000               	movlw	0
   996  0048  00B1               	movwf	usart_init@BAUD+2
   997  0049  3025               	movlw	37
   998  004A  00B0               	movwf	usart_init@BAUD+1
   999  004B  3080               	movlw	128
  1000  004C  00AF               	movwf	usart_init@BAUD
  1001  004D  120A  118A  2414  120A  118A  	fcall	_usart_init
  1002  0052                     l1409:
  1003                           
  1004                           ;main.c: 31:     usart_Interrupt();
  1005  0052  120A  118A  259C  120A  118A  	fcall	_usart_Interrupt
  1006  0057                     l1411:
  1007  0057                     l1413:
  1008                           
  1009                           ;main.c: 35:         entrada = PORTB;
  1010  0057  1283               	bcf	3,5	;RP0=0, select bank0
  1011  0058  1303               	bcf	3,6	;RP1=0, select bank0
  1012  0059  0806               	movf	6,w	;volatile
  1013  005A  00B7               	movwf	??_main
  1014  005B  0837               	movf	??_main,w
  1015  005C  00BA               	movwf	main@entrada
  1016  005D                     l1415:
  1017                           
  1018                           ;main.c: 36:         _delay((unsigned long)((1000)*(20000000/4000.0)));
  1019  005D  301A               	movlw	26
  1020  005E  1283               	bcf	3,5	;RP0=0, select bank0
  1021  005F  1303               	bcf	3,6	;RP1=0, select bank0
  1022  0060  00B9               	movwf	??_main+2
  1023  0061  305E               	movlw	94
  1024  0062  00B8               	movwf	??_main+1
  1025  0063  306D               	movlw	109
  1026  0064  00B7               	movwf	??_main
  1027  0065                     u467:
  1028  0065  0BB7               	decfsz	??_main,f
  1029  0066  2865               	goto	u467
  1030  0067  0BB8               	decfsz	??_main+1,f
  1031  0068  2865               	goto	u467
  1032  0069  0BB9               	decfsz	??_main+2,f
  1033  006A  2865               	goto	u467
  1034  006B  286C               	nop2
  1035                           
  1036                           ;main.c: 38:         switch(entrada){
  1037  006C  2971               	goto	l1481
  1038  006D                     l1417:
  1039                           
  1040                           ;main.c: 43:                 usart_TxStr("M1,P1,r\n");
  1041  006D  30AE               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1042  006E  00A1               	movwf	usart_TxStr@str
  1043  006F  3080               	movlw	128
  1044  0070  00A2               	movwf	usart_TxStr@str+1
  1045  0071  120A  118A  24B7  120A  118A  	fcall	_usart_TxStr
  1046                           
  1047                           ;main.c: 44:                 break;
  1048  0076  2857               	goto	l1413
  1049  0077                     l1419:
  1050                           
  1051                           ;main.c: 46:                 usart_TxStr("M1,P1,g\n");
  1052  0077  3078               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1053  0078  00A1               	movwf	usart_TxStr@str
  1054  0079  3080               	movlw	128
  1055  007A  00A2               	movwf	usart_TxStr@str+1
  1056  007B  120A  118A  24B7  120A  118A  	fcall	_usart_TxStr
  1057                           
  1058                           ;main.c: 47:                 break;
  1059  0080  2857               	goto	l1413
  1060  0081                     l1421:
  1061                           
  1062                           ;main.c: 49:                 usart_TxStr("M1,P1,b\n");
  1063  0081  3042               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1064  0082  00A1               	movwf	usart_TxStr@str
  1065  0083  3080               	movlw	128
  1066  0084  00A2               	movwf	usart_TxStr@str+1
  1067  0085  120A  118A  24B7  120A  118A  	fcall	_usart_TxStr
  1068                           
  1069                           ;main.c: 50:                 break;
  1070  008A  2857               	goto	l1413
  1071  008B                     l1423:
  1072                           
  1073                           ;main.c: 52:                 PORTE = 0x00;
  1074  008B  0189               	clrf	9	;volatile
  1075  008C                     l1425:
  1076                           
  1077                           ;main.c: 53:                 usart_TxStr("M1,P1,a\n");
  1078  008C  300C               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1079  008D  00A1               	movwf	usart_TxStr@str
  1080  008E  3080               	movlw	128
  1081  008F  00A2               	movwf	usart_TxStr@str+1
  1082  0090  120A  118A  24B7  120A  118A  	fcall	_usart_TxStr
  1083                           
  1084                           ;main.c: 55:                 break;
  1085  0095  2857               	goto	l1413
  1086  0096                     l1427:
  1087                           
  1088                           ;main.c: 57:                 usart_TxStr("M1,P2,r\n");
  1089  0096  30C9               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1090  0097  00A1               	movwf	usart_TxStr@str
  1091  0098  3080               	movlw	128
  1092  0099  00A2               	movwf	usart_TxStr@str+1
  1093  009A  120A  118A  24B7  120A  118A  	fcall	_usart_TxStr
  1094                           
  1095                           ;main.c: 58:                 break;
  1096  009F  2857               	goto	l1413
  1097  00A0                     l1429:
  1098                           
  1099                           ;main.c: 60:                 usart_TxStr("M1,P2,g\n");
  1100  00A0  3093               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1101  00A1  00A1               	movwf	usart_TxStr@str
  1102  00A2  3080               	movlw	128
  1103  00A3  00A2               	movwf	usart_TxStr@str+1
  1104  00A4  120A  118A  24B7  120A  118A  	fcall	_usart_TxStr
  1105                           
  1106                           ;main.c: 61:                 break;
  1107  00A9  2857               	goto	l1413
  1108  00AA                     l1431:
  1109                           
  1110                           ;main.c: 63:                 usart_TxStr("M1,P2,b\n");
  1111  00AA  305D               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1112  00AB  00A1               	movwf	usart_TxStr@str
  1113  00AC  3080               	movlw	128
  1114  00AD  00A2               	movwf	usart_TxStr@str+1
  1115  00AE  120A  118A  24B7  120A  118A  	fcall	_usart_TxStr
  1116                           
  1117                           ;main.c: 64:                 break;
  1118  00B3  2857               	goto	l1413
  1119  00B4                     l1433:
  1120                           
  1121                           ;main.c: 66:                  PORTE = 0x00;
  1122  00B4  0189               	clrf	9	;volatile
  1123  00B5                     l1435:
  1124                           
  1125                           ;main.c: 67:                 usart_TxStr("M1,P2,a\n");
  1126  00B5  3027               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1127  00B6  00A1               	movwf	usart_TxStr@str
  1128  00B7  3080               	movlw	128
  1129  00B8  00A2               	movwf	usart_TxStr@str+1
  1130  00B9  120A  118A  24B7  120A  118A  	fcall	_usart_TxStr
  1131                           
  1132                           ;main.c: 68:                 break;
  1133  00BE  2857               	goto	l1413
  1134  00BF                     l1437:
  1135                           
  1136                           ;main.c: 70:                usart_TxStr("M2,P1,r\n");
  1137  00BF  30B7               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1138  00C0  00A1               	movwf	usart_TxStr@str
  1139  00C1  3080               	movlw	128
  1140  00C2  00A2               	movwf	usart_TxStr@str+1
  1141  00C3  120A  118A  24B7  120A  118A  	fcall	_usart_TxStr
  1142                           
  1143                           ;main.c: 71:                break;
  1144  00C8  2857               	goto	l1413
  1145  00C9                     l1439:
  1146                           
  1147                           ;main.c: 73:                usart_TxStr("M2,P1,g\n");
  1148  00C9  3081               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1149  00CA  00A1               	movwf	usart_TxStr@str
  1150  00CB  3080               	movlw	128
  1151  00CC  00A2               	movwf	usart_TxStr@str+1
  1152  00CD  120A  118A  24B7  120A  118A  	fcall	_usart_TxStr
  1153                           
  1154                           ;main.c: 74:                break;
  1155  00D2  2857               	goto	l1413
  1156  00D3                     l1441:
  1157                           
  1158                           ;main.c: 76:                usart_TxStr("M2,P1,b\n");
  1159  00D3  304B               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1160  00D4  00A1               	movwf	usart_TxStr@str
  1161  00D5  3080               	movlw	128
  1162  00D6  00A2               	movwf	usart_TxStr@str+1
  1163  00D7  120A  118A  24B7  120A  118A  	fcall	_usart_TxStr
  1164                           
  1165                           ;main.c: 77:                break;
  1166  00DC  2857               	goto	l1413
  1167  00DD                     l1443:
  1168                           
  1169                           ;main.c: 79:                 PORTE = 0x01;
  1170  00DD  3001               	movlw	1
  1171  00DE  0089               	movwf	9	;volatile
  1172  00DF                     l1445:
  1173                           
  1174                           ;main.c: 80:                usart_TxStr("M2,P1,a\n");
  1175  00DF  3015               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1176  00E0  00A1               	movwf	usart_TxStr@str
  1177  00E1  3080               	movlw	128
  1178  00E2  00A2               	movwf	usart_TxStr@str+1
  1179  00E3  120A  118A  24B7  120A  118A  	fcall	_usart_TxStr
  1180                           
  1181                           ;main.c: 81:                break;
  1182  00E8  2857               	goto	l1413
  1183  00E9                     l1447:
  1184                           
  1185                           ;main.c: 83:                usart_TxStr("M2,P2,r\n");
  1186  00E9  30D2               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1187  00EA  00A1               	movwf	usart_TxStr@str
  1188  00EB  3080               	movlw	128
  1189  00EC  00A2               	movwf	usart_TxStr@str+1
  1190  00ED  120A  118A  24B7  120A  118A  	fcall	_usart_TxStr
  1191                           
  1192                           ;main.c: 84:                break;
  1193  00F2  2857               	goto	l1413
  1194  00F3                     l1449:
  1195                           
  1196                           ;main.c: 86:                usart_TxStr("M2,P2,g\n");
  1197  00F3  309C               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1198  00F4  00A1               	movwf	usart_TxStr@str
  1199  00F5  3080               	movlw	128
  1200  00F6  00A2               	movwf	usart_TxStr@str+1
  1201  00F7  120A  118A  24B7  120A  118A  	fcall	_usart_TxStr
  1202                           
  1203                           ;main.c: 87:                break;
  1204  00FC  2857               	goto	l1413
  1205  00FD                     l1451:
  1206                           
  1207                           ;main.c: 89:                usart_TxStr("M2,P2,b\n");
  1208  00FD  3066               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  1209  00FE  00A1               	movwf	usart_TxStr@str
  1210  00FF  3080               	movlw	128
  1211  0100  00A2               	movwf	usart_TxStr@str+1
  1212  0101  120A  118A  24B7  120A  118A  	fcall	_usart_TxStr
  1213                           
  1214                           ;main.c: 90:                break;
  1215  0106  2857               	goto	l1413
  1216  0107                     l1453:
  1217                           
  1218                           ;main.c: 92:                 PORTE = 0x01;
  1219  0107  3001               	movlw	1
  1220  0108  0089               	movwf	9	;volatile
  1221  0109                     l1455:
  1222                           
  1223                           ;main.c: 93:                usart_TxStr("M2,P2,a\n");
  1224  0109  3030               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  1225  010A  00A1               	movwf	usart_TxStr@str
  1226  010B  3080               	movlw	128
  1227  010C  00A2               	movwf	usart_TxStr@str+1
  1228  010D  120A  118A  24B7  120A  118A  	fcall	_usart_TxStr
  1229                           
  1230                           ;main.c: 94:                break;
  1231  0112  2857               	goto	l1413
  1232  0113                     l1457:
  1233                           
  1234                           ;main.c: 96:                usart_TxStr("M3,P1,r\n");
  1235  0113  30C0               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  1236  0114  00A1               	movwf	usart_TxStr@str
  1237  0115  3080               	movlw	128
  1238  0116  00A2               	movwf	usart_TxStr@str+1
  1239  0117  120A  118A  24B7  120A  118A  	fcall	_usart_TxStr
  1240                           
  1241                           ;main.c: 97:                break;
  1242  011C  2857               	goto	l1413
  1243  011D                     l1459:
  1244                           
  1245                           ;main.c: 99:                usart_TxStr("M3,P1,g\n");
  1246  011D  308A               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  1247  011E  00A1               	movwf	usart_TxStr@str
  1248  011F  3080               	movlw	128
  1249  0120  00A2               	movwf	usart_TxStr@str+1
  1250  0121  120A  118A  24B7  120A  118A  	fcall	_usart_TxStr
  1251                           
  1252                           ;main.c: 100:                break;
  1253  0126  2857               	goto	l1413
  1254  0127                     l1461:
  1255                           
  1256                           ;main.c: 102:                usart_TxStr("M3,P1,b\n");
  1257  0127  3054               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
  1258  0128  00A1               	movwf	usart_TxStr@str
  1259  0129  3080               	movlw	128
  1260  012A  00A2               	movwf	usart_TxStr@str+1
  1261  012B  120A  118A  24B7  120A  118A  	fcall	_usart_TxStr
  1262                           
  1263                           ;main.c: 103:                break;
  1264  0130  2857               	goto	l1413
  1265  0131                     l1463:
  1266                           
  1267                           ;main.c: 105:                PORTE = 0x02;
  1268  0131  3002               	movlw	2
  1269  0132  0089               	movwf	9	;volatile
  1270  0133                     l1465:
  1271                           
  1272                           ;main.c: 106:                usart_TxStr("M3,P1,a\n");
  1273  0133  301E               	movlw	(low ((STR_21-__stringbase)| (0+32768)))& (0+255)
  1274  0134  00A1               	movwf	usart_TxStr@str
  1275  0135  3080               	movlw	128
  1276  0136  00A2               	movwf	usart_TxStr@str+1
  1277  0137  120A  118A  24B7  120A  118A  	fcall	_usart_TxStr
  1278                           
  1279                           ;main.c: 107:                break;
  1280  013C  2857               	goto	l1413
  1281  013D                     l1467:
  1282                           
  1283                           ;main.c: 109:                usart_TxStr("M3,P2,r\n");
  1284  013D  30DB               	movlw	(low ((STR_22-__stringbase)| (0+32768)))& (0+255)
  1285  013E  00A1               	movwf	usart_TxStr@str
  1286  013F  3080               	movlw	128
  1287  0140  00A2               	movwf	usart_TxStr@str+1
  1288  0141  120A  118A  24B7  120A  118A  	fcall	_usart_TxStr
  1289                           
  1290                           ;main.c: 110:                break;
  1291  0146  2857               	goto	l1413
  1292  0147                     l1469:
  1293                           
  1294                           ;main.c: 112:                usart_TxStr("M3,P2,g\n");
  1295  0147  30A5               	movlw	(low ((STR_23-__stringbase)| (0+32768)))& (0+255)
  1296  0148  00A1               	movwf	usart_TxStr@str
  1297  0149  3080               	movlw	128
  1298  014A  00A2               	movwf	usart_TxStr@str+1
  1299  014B  120A  118A  24B7  120A  118A  	fcall	_usart_TxStr
  1300                           
  1301                           ;main.c: 113:                break;
  1302  0150  2857               	goto	l1413
  1303  0151                     l1471:
  1304                           
  1305                           ;main.c: 115:                usart_TxStr("M3,P2,b\n");
  1306  0151  306F               	movlw	(low ((STR_24-__stringbase)| (0+32768)))& (0+255)
  1307  0152  00A1               	movwf	usart_TxStr@str
  1308  0153  3080               	movlw	128
  1309  0154  00A2               	movwf	usart_TxStr@str+1
  1310  0155  120A  118A  24B7  120A  118A  	fcall	_usart_TxStr
  1311                           
  1312                           ;main.c: 116:                break;
  1313  015A  2857               	goto	l1413
  1314  015B                     l1473:
  1315                           
  1316                           ;main.c: 118:                usart_TxStr("M3,P2,b\n");
  1317  015B  306F               	movlw	(low ((STR_24-__stringbase)| (0+32768)))& (0+255)
  1318  015C  00A1               	movwf	usart_TxStr@str
  1319  015D  3080               	movlw	128
  1320  015E  00A2               	movwf	usart_TxStr@str+1
  1321  015F  120A  118A  24B7  120A  118A  	fcall	_usart_TxStr
  1322                           
  1323                           ;main.c: 119:                break;
  1324  0164  2857               	goto	l1413
  1325  0165                     l1475:
  1326                           
  1327                           ;main.c: 121:                 PORTE = 0x02;
  1328  0165  3002               	movlw	2
  1329  0166  0089               	movwf	9	;volatile
  1330  0167                     l1477:
  1331                           
  1332                           ;main.c: 122:                usart_TxStr("M3,P2,a\n");
  1333  0167  3039               	movlw	(low ((STR_26-__stringbase)| (0+32768)))& (0+255)
  1334  0168  00A1               	movwf	usart_TxStr@str
  1335  0169  3080               	movlw	128
  1336  016A  00A2               	movwf	usart_TxStr@str+1
  1337  016B  120A  118A  24B7  120A  118A  	fcall	_usart_TxStr
  1338                           
  1339                           ;main.c: 123:                break;
  1340  0170  2857               	goto	l1413
  1341  0171                     l1481:
  1342  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1343  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1344  0173  083A               	movf	main@entrada,w
  1345  0174  00B7               	movwf	??_main
  1346  0175  01B8               	clrf	??_main+1
  1347                           
  1348                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1349                           ; Switch size 1, requested type "simple"
  1350                           ; Number of cases is 1, Range of values is 0 to 0
  1351                           ; switch strategies available:
  1352                           ; Name         Instructions Cycles
  1353                           ; simple_byte            4     3 (average)
  1354                           ; direct_byte           11     8 (fixed)
  1355                           ; jumptable            260     6 (fixed)
  1356                           ;	Chosen strategy is simple_byte
  1357  0176  0838               	movf	??_main+1,w
  1358  0177  3A00               	xorlw	0	; case 0
  1359  0178  1903               	skipnz
  1360  0179  297B               	goto	l1553
  1361  017A  2857               	goto	l1413
  1362  017B                     l1553:
  1363                           
  1364                           ; Switch size 1, requested type "simple"
  1365                           ; Number of cases is 26, Range of values is 0 to 25
  1366                           ; switch strategies available:
  1367                           ; Name         Instructions Cycles
  1368                           ; simple_byte           79    40 (average)
  1369                           ; direct_byte           86     8 (fixed)
  1370                           ; jumptable            260     6 (fixed)
  1371                           ;	Chosen strategy is simple_byte
  1372  017B  0837               	movf	??_main,w
  1373  017C  3A00               	xorlw	0	; case 0
  1374  017D  1903               	skipnz
  1375  017E  2857               	goto	l1413
  1376  017F  3A01               	xorlw	1	; case 1
  1377  0180  1903               	skipnz
  1378  0181  286D               	goto	l1417
  1379  0182  3A03               	xorlw	3	; case 2
  1380  0183  1903               	skipnz
  1381  0184  2877               	goto	l1419
  1382  0185  3A01               	xorlw	1	; case 3
  1383  0186  1903               	skipnz
  1384  0187  2881               	goto	l1421
  1385  0188  3A07               	xorlw	7	; case 4
  1386  0189  1903               	skipnz
  1387  018A  288B               	goto	l1423
  1388  018B  3A01               	xorlw	1	; case 5
  1389  018C  1903               	skipnz
  1390  018D  2896               	goto	l1427
  1391  018E  3A03               	xorlw	3	; case 6
  1392  018F  1903               	skipnz
  1393  0190  28A0               	goto	l1429
  1394  0191  3A01               	xorlw	1	; case 7
  1395  0192  1903               	skipnz
  1396  0193  28AA               	goto	l1431
  1397  0194  3A0F               	xorlw	15	; case 8
  1398  0195  1903               	skipnz
  1399  0196  28B4               	goto	l1433
  1400  0197  3A01               	xorlw	1	; case 9
  1401  0198  1903               	skipnz
  1402  0199  28BF               	goto	l1437
  1403  019A  3A03               	xorlw	3	; case 10
  1404  019B  1903               	skipnz
  1405  019C  28C9               	goto	l1439
  1406  019D  3A01               	xorlw	1	; case 11
  1407  019E  1903               	skipnz
  1408  019F  28D3               	goto	l1441
  1409  01A0  3A07               	xorlw	7	; case 12
  1410  01A1  1903               	skipnz
  1411  01A2  28DD               	goto	l1443
  1412  01A3  3A01               	xorlw	1	; case 13
  1413  01A4  1903               	skipnz
  1414  01A5  28E9               	goto	l1447
  1415  01A6  3A03               	xorlw	3	; case 14
  1416  01A7  1903               	skipnz
  1417  01A8  28F3               	goto	l1449
  1418  01A9  3A01               	xorlw	1	; case 15
  1419  01AA  1903               	skipnz
  1420  01AB  28FD               	goto	l1451
  1421  01AC  3A1F               	xorlw	31	; case 16
  1422  01AD  1903               	skipnz
  1423  01AE  2907               	goto	l1453
  1424  01AF  3A01               	xorlw	1	; case 17
  1425  01B0  1903               	skipnz
  1426  01B1  2913               	goto	l1457
  1427  01B2  3A03               	xorlw	3	; case 18
  1428  01B3  1903               	skipnz
  1429  01B4  291D               	goto	l1459
  1430  01B5  3A01               	xorlw	1	; case 19
  1431  01B6  1903               	skipnz
  1432  01B7  2927               	goto	l1461
  1433  01B8  3A07               	xorlw	7	; case 20
  1434  01B9  1903               	skipnz
  1435  01BA  2931               	goto	l1463
  1436  01BB  3A01               	xorlw	1	; case 21
  1437  01BC  1903               	skipnz
  1438  01BD  293D               	goto	l1467
  1439  01BE  3A03               	xorlw	3	; case 22
  1440  01BF  1903               	skipnz
  1441  01C0  2947               	goto	l1469
  1442  01C1  3A01               	xorlw	1	; case 23
  1443  01C2  1903               	skipnz
  1444  01C3  2951               	goto	l1471
  1445  01C4  3A0F               	xorlw	15	; case 24
  1446  01C5  1903               	skipnz
  1447  01C6  295B               	goto	l1473
  1448  01C7  3A01               	xorlw	1	; case 25
  1449  01C8  1903               	skipnz
  1450  01C9  2965               	goto	l1475
  1451  01CA  2857               	goto	l1413
  1452  01CB  120A  118A  2812   	ljmp	start
  1453  01CE                     __end_of_main:
  1454                           
  1455                           	psect	text1
  1456  0414                     __ptext1:	
  1457 ;; *************** function _usart_init *****************
  1458 ;; Defined at:
  1459 ;;		line 4 in file "usart.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;  BAUD            4   15[BANK0 ] long 
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;		None
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		wreg, status,2, status,0, pclath, cstack
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1473 ;;      Params:         0       4       0       0       0
  1474 ;;      Locals:         0       4       0       0       0
  1475 ;;      Temps:          0       0       0       0       0
  1476 ;;      Totals:         0       8       0       0       0
  1477 ;;Total ram usage:        8 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; Hardware stack levels required when called:    4
  1480 ;; This function calls:
  1481 ;;		___aldiv
  1482 ;; This function is called by:
  1483 ;;		_main
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           
  1488                           ;psect for function _usart_init
  1489  0414                     _usart_init:
  1490  0414                     l1357:	
  1491                           ;incstack = 0
  1492                           ; Regs used in _usart_init: [wreg+status,2+status,0+pclath+cstack]
  1493                           
  1494                           
  1495                           ;usart.c: 6:     TRISBbits.TRISB1 = 1;
  1496  0414  1683               	bsf	3,5	;RP0=1, select bank1
  1497  0415  1303               	bcf	3,6	;RP1=0, select bank1
  1498  0416  1486               	bsf	6,1	;volatile
  1499                           
  1500                           ;usart.c: 7:     TRISBbits.TRISB2 = 0;
  1501  0417  1106               	bcf	6,2	;volatile
  1502  0418                     l1359:
  1503                           
  1504                           ;usart.c: 8:     SPBRG = (unsigned char)(((20000000/BAUD)/64) - 1);
  1505  0418  1283               	bcf	3,5	;RP0=0, select bank0
  1506  0419  1303               	bcf	3,6	;RP1=0, select bank0
  1507  041A  0832               	movf	usart_init@BAUD+3,w
  1508  041B  00A3               	movwf	___aldiv@divisor+3
  1509  041C  0831               	movf	usart_init@BAUD+2,w
  1510  041D  00A2               	movwf	___aldiv@divisor+2
  1511  041E  0830               	movf	usart_init@BAUD+1,w
  1512  041F  00A1               	movwf	___aldiv@divisor+1
  1513  0420  082F               	movf	usart_init@BAUD,w
  1514  0421  00A0               	movwf	___aldiv@divisor
  1515  0422  3001               	movlw	1
  1516  0423  00A7               	movwf	___aldiv@dividend+3
  1517  0424  3031               	movlw	49
  1518  0425  00A6               	movwf	___aldiv@dividend+2
  1519  0426  302D               	movlw	45
  1520  0427  00A5               	movwf	___aldiv@dividend+1
  1521  0428  3000               	movlw	0
  1522  0429  00A4               	movwf	___aldiv@dividend
  1523  042A  120A  118A  22F5  120A  118A  	fcall	___aldiv
  1524  042F  1283               	bcf	3,5	;RP0=0, select bank0
  1525  0430  1303               	bcf	3,6	;RP1=0, select bank0
  1526  0431  0823               	movf	?___aldiv+3,w
  1527  0432  00B6               	movwf	_usart_init$1117+3
  1528  0433  0822               	movf	?___aldiv+2,w
  1529  0434  00B5               	movwf	_usart_init$1117+2
  1530  0435  0821               	movf	?___aldiv+1,w
  1531  0436  00B4               	movwf	_usart_init$1117+1
  1532  0437  0820               	movf	?___aldiv,w
  1533  0438  00B3               	movwf	_usart_init$1117
  1534                           
  1535                           ;usart.c: 8:     SPBRG = (unsigned char)(((20000000/BAUD)/64) - 1);
  1536  0439  3000               	movlw	0
  1537  043A  00A3               	movwf	___aldiv@divisor+3
  1538  043B  3000               	movlw	0
  1539  043C  00A2               	movwf	___aldiv@divisor+2
  1540  043D  3000               	movlw	0
  1541  043E  00A1               	movwf	___aldiv@divisor+1
  1542  043F  3040               	movlw	64
  1543  0440  00A0               	movwf	___aldiv@divisor
  1544  0441  0836               	movf	_usart_init$1117+3,w
  1545  0442  00A7               	movwf	___aldiv@dividend+3
  1546  0443  0835               	movf	_usart_init$1117+2,w
  1547  0444  00A6               	movwf	___aldiv@dividend+2
  1548  0445  0834               	movf	_usart_init$1117+1,w
  1549  0446  00A5               	movwf	___aldiv@dividend+1
  1550  0447  0833               	movf	_usart_init$1117,w
  1551  0448  00A4               	movwf	___aldiv@dividend
  1552  0449  120A  118A  22F5  120A  118A  	fcall	___aldiv
  1553  044E  1283               	bcf	3,5	;RP0=0, select bank0
  1554  044F  1303               	bcf	3,6	;RP1=0, select bank0
  1555  0450  0820               	movf	?___aldiv,w
  1556  0451  3EFF               	addlw	255
  1557  0452  1683               	bsf	3,5	;RP0=1, select bank1
  1558  0453  1303               	bcf	3,6	;RP1=0, select bank1
  1559  0454  0099               	movwf	25	;volatile
  1560  0455                     l1361:
  1561                           
  1562                           ;usart.c: 13:     RCSTAbits.SPEN = 1;
  1563  0455  1283               	bcf	3,5	;RP0=0, select bank0
  1564  0456  1303               	bcf	3,6	;RP1=0, select bank0
  1565  0457  1798               	bsf	24,7	;volatile
  1566  0458                     l1363:
  1567                           
  1568                           ;usart.c: 14:     TXSTAbits.SYNC = 0;
  1569  0458  1683               	bsf	3,5	;RP0=1, select bank1
  1570  0459  1303               	bcf	3,6	;RP1=0, select bank1
  1571  045A  1218               	bcf	24,4	;volatile
  1572  045B                     l1365:
  1573                           
  1574                           ;usart.c: 15:     TXSTAbits.TX9 = 0;
  1575  045B  1318               	bcf	24,6	;volatile
  1576  045C                     l1367:
  1577                           
  1578                           ;usart.c: 16:     TXSTAbits.TXEN = 1;
  1579  045C  1698               	bsf	24,5	;volatile
  1580  045D                     l1369:
  1581                           
  1582                           ;usart.c: 17:     RCSTAbits.RX9 = 0;
  1583  045D  1283               	bcf	3,5	;RP0=0, select bank0
  1584  045E  1303               	bcf	3,6	;RP1=0, select bank0
  1585  045F  1318               	bcf	24,6	;volatile
  1586  0460                     l1371:
  1587                           
  1588                           ;usart.c: 18:     RCSTAbits.CREN = 1;
  1589  0460  1618               	bsf	24,4	;volatile
  1590  0461                     l1373:
  1591                           
  1592                           ;usart.c: 19:     RCSTAbits.SPEN = 1;
  1593  0461  1798               	bsf	24,7	;volatile
  1594  0462                     l111:
  1595  0462  0008               	return
  1596  0463                     __end_of_usart_init:
  1597                           
  1598                           	psect	text2
  1599  02F5                     __ptext2:	
  1600 ;; *************** function ___aldiv *****************
  1601 ;; Defined at:
  1602 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  divisor         4    0[BANK0 ] long 
  1605 ;;  dividend        4    4[BANK0 ] long 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;  quotient        4   11[BANK0 ] long 
  1608 ;;  sign            1   10[BANK0 ] unsigned char 
  1609 ;;  counter         1    9[BANK0 ] unsigned char 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  4    0[BANK0 ] long 
  1612 ;; Registers used:
  1613 ;;		wreg, status,2, status,0
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1619 ;;      Params:         0       8       0       0       0
  1620 ;;      Locals:         0       6       0       0       0
  1621 ;;      Temps:          0       1       0       0       0
  1622 ;;      Totals:         0      15       0       0       0
  1623 ;;Total ram usage:       15 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; Hardware stack levels required when called:    3
  1626 ;; This function calls:
  1627 ;;		Nothing
  1628 ;; This function is called by:
  1629 ;;		_usart_init
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           
  1634                           ;psect for function ___aldiv
  1635  02F5                     ___aldiv:
  1636  02F5                     l1245:	
  1637                           ;incstack = 0
  1638                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1639                           
  1640  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  1641  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  1642  02F7  01AA               	clrf	___aldiv@sign
  1643  02F8                     l1247:
  1644  02F8  1FA3               	btfss	___aldiv@divisor+3,7
  1645  02F9  2AFB               	goto	u281
  1646  02FA  2AFC               	goto	u280
  1647  02FB                     u281:
  1648  02FB  2B09               	goto	l356
  1649  02FC                     u280:
  1650  02FC                     l1249:
  1651  02FC  09A0               	comf	___aldiv@divisor,f
  1652  02FD  09A1               	comf	___aldiv@divisor+1,f
  1653  02FE  09A2               	comf	___aldiv@divisor+2,f
  1654  02FF  09A3               	comf	___aldiv@divisor+3,f
  1655  0300  0AA0               	incf	___aldiv@divisor,f
  1656  0301  1903               	skipnz
  1657  0302  0AA1               	incf	___aldiv@divisor+1,f
  1658  0303  1903               	skipnz
  1659  0304  0AA2               	incf	___aldiv@divisor+2,f
  1660  0305  1903               	skipnz
  1661  0306  0AA3               	incf	___aldiv@divisor+3,f
  1662  0307  01AA               	clrf	___aldiv@sign
  1663  0308  0AAA               	incf	___aldiv@sign,f
  1664  0309                     l356:
  1665  0309  1FA7               	btfss	___aldiv@dividend+3,7
  1666  030A  2B0C               	goto	u291
  1667  030B  2B0D               	goto	u290
  1668  030C                     u291:
  1669  030C  2B1C               	goto	l1255
  1670  030D                     u290:
  1671  030D                     l1251:
  1672  030D  09A4               	comf	___aldiv@dividend,f
  1673  030E  09A5               	comf	___aldiv@dividend+1,f
  1674  030F  09A6               	comf	___aldiv@dividend+2,f
  1675  0310  09A7               	comf	___aldiv@dividend+3,f
  1676  0311  0AA4               	incf	___aldiv@dividend,f
  1677  0312  1903               	skipnz
  1678  0313  0AA5               	incf	___aldiv@dividend+1,f
  1679  0314  1903               	skipnz
  1680  0315  0AA6               	incf	___aldiv@dividend+2,f
  1681  0316  1903               	skipnz
  1682  0317  0AA7               	incf	___aldiv@dividend+3,f
  1683  0318                     l1253:
  1684  0318  3001               	movlw	1
  1685  0319  00A8               	movwf	??___aldiv
  1686  031A  0828               	movf	??___aldiv,w
  1687  031B  06AA               	xorwf	___aldiv@sign,f
  1688  031C                     l1255:
  1689  031C  3000               	movlw	0
  1690  031D  00AE               	movwf	___aldiv@quotient+3
  1691  031E  3000               	movlw	0
  1692  031F  00AD               	movwf	___aldiv@quotient+2
  1693  0320  3000               	movlw	0
  1694  0321  00AC               	movwf	___aldiv@quotient+1
  1695  0322  3000               	movlw	0
  1696  0323  00AB               	movwf	___aldiv@quotient
  1697  0324                     l1257:
  1698  0324  0823               	movf	___aldiv@divisor+3,w
  1699  0325  0422               	iorwf	___aldiv@divisor+2,w
  1700  0326  0421               	iorwf	___aldiv@divisor+1,w
  1701  0327  0420               	iorwf	___aldiv@divisor,w
  1702  0328  1903               	skipnz
  1703  0329  2B2B               	goto	u301
  1704  032A  2B2C               	goto	u300
  1705  032B                     u301:
  1706  032B  2B79               	goto	l1277
  1707  032C                     u300:
  1708  032C                     l1259:
  1709  032C  01A9               	clrf	___aldiv@counter
  1710  032D  0AA9               	incf	___aldiv@counter,f
  1711  032E  2B3C               	goto	l1263
  1712  032F                     l1261:
  1713  032F  3001               	movlw	1
  1714  0330  00A8               	movwf	??___aldiv
  1715  0331                     u315:
  1716  0331  1003               	clrc
  1717  0332  0DA0               	rlf	___aldiv@divisor,f
  1718  0333  0DA1               	rlf	___aldiv@divisor+1,f
  1719  0334  0DA2               	rlf	___aldiv@divisor+2,f
  1720  0335  0DA3               	rlf	___aldiv@divisor+3,f
  1721  0336  0BA8               	decfsz	??___aldiv,f
  1722  0337  2B31               	goto	u315
  1723  0338  3001               	movlw	1
  1724  0339  00A8               	movwf	??___aldiv
  1725  033A  0828               	movf	??___aldiv,w
  1726  033B  07A9               	addwf	___aldiv@counter,f
  1727  033C                     l1263:
  1728  033C  1FA3               	btfss	___aldiv@divisor+3,7
  1729  033D  2B3F               	goto	u321
  1730  033E  2B40               	goto	u320
  1731  033F                     u321:
  1732  033F  2B2F               	goto	l1261
  1733  0340                     u320:
  1734  0340                     l1265:
  1735  0340  3001               	movlw	1
  1736  0341  00A8               	movwf	??___aldiv
  1737  0342                     u335:
  1738  0342  1003               	clrc
  1739  0343  0DAB               	rlf	___aldiv@quotient,f
  1740  0344  0DAC               	rlf	___aldiv@quotient+1,f
  1741  0345  0DAD               	rlf	___aldiv@quotient+2,f
  1742  0346  0DAE               	rlf	___aldiv@quotient+3,f
  1743  0347  0BA8               	decfsz	??___aldiv,f
  1744  0348  2B42               	goto	u335
  1745  0349                     l1267:
  1746  0349  0823               	movf	___aldiv@divisor+3,w
  1747  034A  0227               	subwf	___aldiv@dividend+3,w
  1748  034B  1D03               	skipz
  1749  034C  2B57               	goto	u345
  1750  034D  0822               	movf	___aldiv@divisor+2,w
  1751  034E  0226               	subwf	___aldiv@dividend+2,w
  1752  034F  1D03               	skipz
  1753  0350  2B57               	goto	u345
  1754  0351  0821               	movf	___aldiv@divisor+1,w
  1755  0352  0225               	subwf	___aldiv@dividend+1,w
  1756  0353  1D03               	skipz
  1757  0354  2B57               	goto	u345
  1758  0355  0820               	movf	___aldiv@divisor,w
  1759  0356  0224               	subwf	___aldiv@dividend,w
  1760  0357                     u345:
  1761  0357  1C03               	skipc
  1762  0358  2B5A               	goto	u341
  1763  0359  2B5B               	goto	u340
  1764  035A                     u341:
  1765  035A  2B6A               	goto	l1273
  1766  035B                     u340:
  1767  035B                     l1269:
  1768  035B  0820               	movf	___aldiv@divisor,w
  1769  035C  02A4               	subwf	___aldiv@dividend,f
  1770  035D  0821               	movf	___aldiv@divisor+1,w
  1771  035E  1C03               	skipc
  1772  035F  0F21               	incfsz	___aldiv@divisor+1,w
  1773  0360  02A5               	subwf	___aldiv@dividend+1,f
  1774  0361  0822               	movf	___aldiv@divisor+2,w
  1775  0362  1C03               	skipc
  1776  0363  0F22               	incfsz	___aldiv@divisor+2,w
  1777  0364  02A6               	subwf	___aldiv@dividend+2,f
  1778  0365  0823               	movf	___aldiv@divisor+3,w
  1779  0366  1C03               	skipc
  1780  0367  0F23               	incfsz	___aldiv@divisor+3,w
  1781  0368  02A7               	subwf	___aldiv@dividend+3,f
  1782  0369                     l1271:
  1783  0369  142B               	bsf	___aldiv@quotient,0
  1784  036A                     l1273:
  1785  036A  3001               	movlw	1
  1786  036B                     u355:
  1787  036B  1003               	clrc
  1788  036C  0CA3               	rrf	___aldiv@divisor+3,f
  1789  036D  0CA2               	rrf	___aldiv@divisor+2,f
  1790  036E  0CA1               	rrf	___aldiv@divisor+1,f
  1791  036F  0CA0               	rrf	___aldiv@divisor,f
  1792  0370  3EFF               	addlw	-1
  1793  0371  1D03               	skipz
  1794  0372  2B6B               	goto	u355
  1795  0373                     l1275:
  1796  0373  3001               	movlw	1
  1797  0374  02A9               	subwf	___aldiv@counter,f
  1798  0375  1D03               	btfss	3,2
  1799  0376  2B78               	goto	u361
  1800  0377  2B79               	goto	u360
  1801  0378                     u361:
  1802  0378  2B40               	goto	l1265
  1803  0379                     u360:
  1804  0379                     l1277:
  1805  0379  082A               	movf	___aldiv@sign,w
  1806  037A  1903               	btfsc	3,2
  1807  037B  2B7D               	goto	u371
  1808  037C  2B7E               	goto	u370
  1809  037D                     u371:
  1810  037D  2B89               	goto	l1281
  1811  037E                     u370:
  1812  037E                     l1279:
  1813  037E  09AB               	comf	___aldiv@quotient,f
  1814  037F  09AC               	comf	___aldiv@quotient+1,f
  1815  0380  09AD               	comf	___aldiv@quotient+2,f
  1816  0381  09AE               	comf	___aldiv@quotient+3,f
  1817  0382  0AAB               	incf	___aldiv@quotient,f
  1818  0383  1903               	skipnz
  1819  0384  0AAC               	incf	___aldiv@quotient+1,f
  1820  0385  1903               	skipnz
  1821  0386  0AAD               	incf	___aldiv@quotient+2,f
  1822  0387  1903               	skipnz
  1823  0388  0AAE               	incf	___aldiv@quotient+3,f
  1824  0389                     l1281:
  1825  0389  082E               	movf	___aldiv@quotient+3,w
  1826  038A  00A3               	movwf	?___aldiv+3
  1827  038B  082D               	movf	___aldiv@quotient+2,w
  1828  038C  00A2               	movwf	?___aldiv+2
  1829  038D  082C               	movf	___aldiv@quotient+1,w
  1830  038E  00A1               	movwf	?___aldiv+1
  1831  038F  082B               	movf	___aldiv@quotient,w
  1832  0390  00A0               	movwf	?___aldiv
  1833  0391                     l366:
  1834  0391  0008               	return
  1835  0392                     __end_of___aldiv:
  1836                           
  1837                           	psect	text3
  1838  04B7                     __ptext3:	
  1839 ;; *************** function _usart_TxStr *****************
  1840 ;; Defined at:
  1841 ;;		line 33 in file "usart.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  str             2    1[BANK0 ] PTR unsigned char 
  1844 ;;		 -> STR_26(9), STR_25(9), STR_24(9), STR_23(9), 
  1845 ;;		 -> STR_22(9), STR_21(9), STR_20(9), STR_19(9), 
  1846 ;;		 -> STR_18(9), STR_17(9), STR_16(9), STR_15(9), 
  1847 ;;		 -> STR_14(9), STR_13(9), STR_12(9), STR_11(9), 
  1848 ;;		 -> STR_10(9), STR_9(9), STR_8(9), STR_7(9), 
  1849 ;;		 -> STR_6(9), STR_5(9), STR_4(9), STR_3(9), 
  1850 ;;		 -> STR_2(9), data(12), 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;		None
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  1    wreg      void 
  1855 ;; Registers used:
  1856 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1862 ;;      Params:         0       2       0       0       0
  1863 ;;      Locals:         0       0       0       0       0
  1864 ;;      Temps:          0       0       0       0       0
  1865 ;;      Totals:         0       2       0       0       0
  1866 ;;Total ram usage:        2 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    4
  1869 ;; This function calls:
  1870 ;;		_usart_Tx
  1871 ;; This function is called by:
  1872 ;;		_main
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           
  1877                           ;psect for function _usart_TxStr
  1878  04B7                     _usart_TxStr:
  1879  04B7                     l1299:	
  1880                           ;incstack = 0
  1881                           ; Regs used in _usart_TxStr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1882                           
  1883                           
  1884                           ;usart.c: 34:     while(*str != '\0'){
  1885  04B7  2CCE               	goto	l1305
  1886  04B8                     l1301:
  1887                           
  1888                           ;usart.c: 35:         usart_Tx(*str);
  1889  04B8  0822               	movf	usart_TxStr@str+1,w
  1890  04B9  00FF               	movwf	btemp+1
  1891  04BA  0821               	movf	usart_TxStr@str,w
  1892  04BB  0084               	movwf	4
  1893  04BC  120A  118A  2200  120A  118A  	fcall	stringtab
  1894  04C1  120A  118A  2584  120A  118A  	fcall	_usart_Tx
  1895  04C6                     l1303:
  1896                           
  1897                           ;usart.c: 36:         str++;
  1898  04C6  3001               	movlw	1
  1899  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  1900  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  1901  04C9  07A1               	addwf	usart_TxStr@str,f
  1902  04CA  1803               	skipnc
  1903  04CB  0AA2               	incf	usart_TxStr@str+1,f
  1904  04CC  3000               	movlw	0
  1905  04CD  07A2               	addwf	usart_TxStr@str+1,f
  1906  04CE                     l1305:
  1907                           
  1908                           ;usart.c: 34:     while(*str != '\0'){
  1909  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  1910  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  1911  04D0  0822               	movf	usart_TxStr@str+1,w
  1912  04D1  00FF               	movwf	btemp+1
  1913  04D2  0821               	movf	usart_TxStr@str,w
  1914  04D3  0084               	movwf	4
  1915  04D4  120A  118A  2200  120A  118A  	fcall	stringtab
  1916  04D9  3A00               	xorlw	0
  1917  04DA  1D03               	skipz
  1918  04DB  2CDD               	goto	u411
  1919  04DC  2CDE               	goto	u410
  1920  04DD                     u411:
  1921  04DD  2CB8               	goto	l1301
  1922  04DE                     u410:
  1923  04DE                     l126:
  1924  04DE  0008               	return
  1925  04DF                     __end_of_usart_TxStr:
  1926                           
  1927                           	psect	text4
  1928  0584                     __ptext4:	
  1929 ;; *************** function _usart_Tx *****************
  1930 ;; Defined at:
  1931 ;;		line 24 in file "usart.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;  send            1    wreg     unsigned char 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  send            1    0[BANK0 ] unsigned char 
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		wreg
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1945 ;;      Params:         0       0       0       0       0
  1946 ;;      Locals:         0       1       0       0       0
  1947 ;;      Temps:          0       0       0       0       0
  1948 ;;      Totals:         0       1       0       0       0
  1949 ;;Total ram usage:        1 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; Hardware stack levels required when called:    3
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_usart_TxStr
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           
  1960                           ;psect for function _usart_Tx
  1961  0584                     _usart_Tx:
  1962                           
  1963                           ;incstack = 0
  1964                           ; Regs used in _usart_Tx: [wreg]
  1965                           ;usart_Tx@send stored from wreg
  1966  0584  1283               	bcf	3,5	;RP0=0, select bank0
  1967  0585  1303               	bcf	3,6	;RP1=0, select bank0
  1968  0586  00A0               	movwf	usart_Tx@send
  1969  0587                     l1221:
  1970                           
  1971                           ;usart.c: 25:     TXREG = send;
  1972  0587  0820               	movf	usart_Tx@send,w
  1973  0588  0099               	movwf	25	;volatile
  1974  0589                     l114:	
  1975                           ;usart.c: 26:     while (!TXSTAbits.TRMT);
  1976                           
  1977  0589  1683               	bsf	3,5	;RP0=1, select bank1
  1978  058A  1303               	bcf	3,6	;RP1=0, select bank1
  1979  058B  1C98               	btfss	24,1	;volatile
  1980  058C  2D8E               	goto	u251
  1981  058D  2D8F               	goto	u250
  1982  058E                     u251:
  1983  058E  2D89               	goto	l114
  1984  058F                     u250:
  1985  058F                     l117:
  1986  058F  0008               	return
  1987  0590                     __end_of_usart_Tx:
  1988                           
  1989                           	psect	text5
  1990  059C                     __ptext5:	
  1991 ;; *************** function _usart_Interrupt *****************
  1992 ;; Defined at:
  1993 ;;		line 41 in file "usart.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;		None
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;		None
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		None
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2007 ;;      Params:         0       0       0       0       0
  2008 ;;      Locals:         0       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0
  2010 ;;      Totals:         0       0       0       0       0
  2011 ;;Total ram usage:        0 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:    3
  2014 ;; This function calls:
  2015 ;;		Nothing
  2016 ;; This function is called by:
  2017 ;;		_main
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           
  2022                           ;psect for function _usart_Interrupt
  2023  059C                     _usart_Interrupt:
  2024  059C                     l1375:	
  2025                           ;incstack = 0
  2026                           ; Regs used in _usart_Interrupt: []
  2027                           
  2028                           
  2029                           ;usart.c: 42:     PIR1bits.RCIF = 0;
  2030  059C  1283               	bcf	3,5	;RP0=0, select bank0
  2031  059D  1303               	bcf	3,6	;RP1=0, select bank0
  2032  059E  128C               	bcf	12,5	;volatile
  2033                           
  2034                           ;usart.c: 43:     PIE1bits.RCIE = 1;
  2035  059F  1683               	bsf	3,5	;RP0=1, select bank1
  2036  05A0  1303               	bcf	3,6	;RP1=0, select bank1
  2037  05A1  168C               	bsf	12,5	;volatile
  2038                           
  2039                           ;usart.c: 44:     INTCONbits.PEIE = 1;
  2040  05A2  170B               	bsf	11,6	;volatile
  2041                           
  2042                           ;usart.c: 45:     INTCONbits.GIE = 1;
  2043  05A3  178B               	bsf	11,7	;volatile
  2044  05A4                     l129:
  2045  05A4  0008               	return
  2046  05A5                     __end_of_usart_Interrupt:
  2047                           
  2048                           	psect	text6
  2049  052D                     __ptext6:	
  2050 ;; *************** function _lcd_print *****************
  2051 ;; Defined at:
  2052 ;;		line 106 in file "lcd.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;  data            1    wreg     PTR unsigned char 
  2055 ;;		 -> STR_1(11), 
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;  data            1    4[BANK0 ] PTR unsigned char 
  2058 ;;		 -> STR_1(11), 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  1    wreg      void 
  2061 ;; Registers used:
  2062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2068 ;;      Params:         0       0       0       0       0
  2069 ;;      Locals:         0       1       0       0       0
  2070 ;;      Temps:          0       1       0       0       0
  2071 ;;      Totals:         0       2       0       0       0
  2072 ;;Total ram usage:        2 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; Hardware stack levels required when called:    5
  2075 ;; This function calls:
  2076 ;;		_lcd_putc
  2077 ;; This function is called by:
  2078 ;;		_main
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           
  2083                           ;psect for function _lcd_print
  2084  052D                     _lcd_print:
  2085                           
  2086                           ;incstack = 0
  2087                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2088                           ;lcd_print@data stored from wreg
  2089  052D  1283               	bcf	3,5	;RP0=0, select bank0
  2090  052E  1303               	bcf	3,6	;RP1=0, select bank0
  2091  052F  00A4               	movwf	lcd_print@data
  2092  0530                     l1349:
  2093                           
  2094                           ;lcd.c: 107:     while (*data)
  2095  0530  2D43               	goto	l1355
  2096  0531                     l1351:
  2097                           
  2098                           ;lcd.c: 108:     {;lcd.c: 109:         lcd_putc(*data);
  2099  0531  0824               	movf	lcd_print@data,w
  2100  0532  0084               	movwf	4
  2101  0533  120A  118A  220A  120A  118A  	fcall	stringdir
  2102  0538  120A  118A  24DF  120A  118A  	fcall	_lcd_putc
  2103  053D                     l1353:
  2104                           
  2105                           ;lcd.c: 110:         data++;
  2106  053D  3001               	movlw	1
  2107  053E  1283               	bcf	3,5	;RP0=0, select bank0
  2108  053F  1303               	bcf	3,6	;RP1=0, select bank0
  2109  0540  00A3               	movwf	??_lcd_print
  2110  0541  0823               	movf	??_lcd_print,w
  2111  0542  07A4               	addwf	lcd_print@data,f
  2112  0543                     l1355:
  2113                           
  2114                           ;lcd.c: 107:     while (*data)
  2115  0543  0824               	movf	lcd_print@data,w
  2116  0544  0084               	movwf	4
  2117  0545  120A  118A  220A  120A  118A  	fcall	stringdir
  2118  054A  3A00               	xorlw	0
  2119  054B  1D03               	skipz
  2120  054C  2D4E               	goto	u421
  2121  054D  2D4F               	goto	u420
  2122  054E                     u421:
  2123  054E  2D31               	goto	l1351
  2124  054F                     u420:
  2125  054F                     l186:
  2126  054F  0008               	return
  2127  0550                     __end_of_lcd_print:
  2128                           
  2129                           	psect	text7
  2130  04DF                     __ptext7:	
  2131 ;; *************** function _lcd_putc *****************
  2132 ;; Defined at:
  2133 ;;		line 62 in file "lcd.c"
  2134 ;; Parameters:    Size  Location     Type
  2135 ;;  c               1    wreg     unsigned char 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;  c               1    2[BANK0 ] unsigned char 
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  1    wreg      void 
  2140 ;; Registers used:
  2141 ;;		wreg, status,2, status,0, pclath, cstack
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2147 ;;      Params:         0       0       0       0       0
  2148 ;;      Locals:         0       1       0       0       0
  2149 ;;      Temps:          0       1       0       0       0
  2150 ;;      Totals:         0       2       0       0       0
  2151 ;;Total ram usage:        2 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; Hardware stack levels required when called:    4
  2154 ;; This function calls:
  2155 ;;		_en_pulse
  2156 ;; This function is called by:
  2157 ;;		_lcd_print
  2158 ;;		_lcd_save_char
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           
  2163                           ;psect for function _lcd_putc
  2164  04DF                     _lcd_putc:
  2165                           
  2166                           ;incstack = 0
  2167                           ; Regs used in _lcd_putc: [wreg+status,2+status,0+pclath+cstack]
  2168                           ;lcd_putc@c stored from wreg
  2169  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  2170  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  2171  04E1  00A2               	movwf	lcd_putc@c
  2172  04E2                     l1231:
  2173                           
  2174                           ;lcd.c: 63:     PORTD = 0;
  2175  04E2  0188               	clrf	8	;volatile
  2176  04E3                     l1233:
  2177                           
  2178                           ;lcd.c: 64:     PORTDbits.RD0 = 1;
  2179  04E3  1408               	bsf	8,0	;volatile
  2180  04E4                     l1235:
  2181                           
  2182                           ;lcd.c: 65:     PORTD = c & 0xF0;
  2183  04E4  0822               	movf	lcd_putc@c,w
  2184  04E5  39F0               	andlw	240
  2185  04E6  0088               	movwf	8	;volatile
  2186  04E7                     l1237:
  2187                           
  2188                           ;lcd.c: 66:     en_pulse();
  2189  04E7  120A  118A  256F  120A  118A  	fcall	_en_pulse
  2190  04EC                     l1239:
  2191                           
  2192                           ;lcd.c: 67:     PORTD = ((c & 0x0F) << 4);
  2193  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  2194  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  2195  04EE  0822               	movf	lcd_putc@c,w
  2196  04EF  390F               	andlw	15
  2197  04F0  00A1               	movwf	??_lcd_putc
  2198  04F1  3003               	movlw	3
  2199  04F2                     u275:
  2200  04F2  1003               	clrc
  2201  04F3  0DA1               	rlf	??_lcd_putc,f
  2202  04F4  3EFF               	addlw	-1
  2203  04F5  1D03               	skipz
  2204  04F6  2CF2               	goto	u275
  2205  04F7  1003               	clrc
  2206  04F8  0D21               	rlf	??_lcd_putc,w
  2207  04F9  0088               	movwf	8	;volatile
  2208  04FA                     l1241:
  2209                           
  2210                           ;lcd.c: 68:     en_pulse();
  2211  04FA  120A  118A  256F  120A  118A  	fcall	_en_pulse
  2212  04FF                     l1243:
  2213                           
  2214                           ;lcd.c: 69:     _delay((unsigned long)((50)*(20000000/4000000.0)));
  2215  04FF  3052               	movlw	82
  2216  0500  1283               	bcf	3,5	;RP0=0, select bank0
  2217  0501  1303               	bcf	3,6	;RP1=0, select bank0
  2218  0502  00A1               	movwf	??_lcd_putc
  2219  0503                     u477:
  2220  0503  0BA1               	decfsz	??_lcd_putc,f
  2221  0504  2D03               	goto	u477
  2222  0505  0000               	nop
  2223  0506                     l174:
  2224  0506  0008               	return
  2225  0507                     __end_of_lcd_putc:
  2226                           
  2227                           	psect	text8
  2228  0392                     __ptext8:	
  2229 ;; *************** function _lcd_init *****************
  2230 ;; Defined at:
  2231 ;;		line 12 in file "lcd.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;		None
  2234 ;; Auto vars:     Size  Location     Type
  2235 ;;		None
  2236 ;; Return value:  Size  Location     Type
  2237 ;;                  1    wreg      void 
  2238 ;; Registers used:
  2239 ;;		wreg, status,2, status,0, pclath, cstack
  2240 ;; Tracked objects:
  2241 ;;		On entry : 0/0
  2242 ;;		On exit  : 0/0
  2243 ;;		Unchanged: 0/0
  2244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2245 ;;      Params:         0       0       0       0       0
  2246 ;;      Locals:         0       0       0       0       0
  2247 ;;      Temps:          0       3       0       0       0
  2248 ;;      Totals:         0       3       0       0       0
  2249 ;;Total ram usage:        3 bytes
  2250 ;; Hardware stack levels used:    1
  2251 ;; Hardware stack levels required when called:    6
  2252 ;; This function calls:
  2253 ;;		_lcd_clear
  2254 ;;		_lcd_cmd
  2255 ;; This function is called by:
  2256 ;;		_main
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260                           
  2261                           ;psect for function _lcd_init
  2262  0392                     _lcd_init:
  2263  0392                     l1307:	
  2264                           ;incstack = 0
  2265                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2266                           
  2267                           
  2268                           ;lcd.c: 14:     TRISDbits.TRISD0 = 0;
  2269  0392  1683               	bsf	3,5	;RP0=1, select bank1
  2270  0393  1303               	bcf	3,6	;RP1=0, select bank1
  2271  0394  1008               	bcf	8,0	;volatile
  2272                           
  2273                           ;lcd.c: 15:     TRISDbits.TRISD1 = 0;
  2274  0395  1088               	bcf	8,1	;volatile
  2275  0396                     l1309:
  2276                           
  2277                           ;lcd.c: 16:     TRISD = 0x00;
  2278  0396  0188               	clrf	8	;volatile
  2279  0397                     l1311:
  2280                           
  2281                           ;lcd.c: 17:     PORTDbits.RD0 = 0;
  2282  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2283  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2284  0399  1008               	bcf	8,0	;volatile
  2285  039A                     l1313:
  2286                           
  2287                           ;lcd.c: 18:     PORTDbits.RD1 = 0;
  2288  039A  1088               	bcf	8,1	;volatile
  2289                           
  2290                           ;lcd.c: 19:     PORTD = 0;
  2291  039B  0188               	clrf	8	;volatile
  2292  039C                     l1315:
  2293                           
  2294                           ;lcd.c: 21:     _delay((unsigned long)((120)*(20000000/4000.0)));
  2295  039C  3004               	movlw	4
  2296  039D  1283               	bcf	3,5	;RP0=0, select bank0
  2297  039E  1303               	bcf	3,6	;RP1=0, select bank0
  2298  039F  00A6               	movwf	??_lcd_init+2
  2299  03A0  300C               	movlw	12
  2300  03A1  00A5               	movwf	??_lcd_init+1
  2301  03A2  3033               	movlw	51
  2302  03A3  00A4               	movwf	??_lcd_init
  2303  03A4                     u487:
  2304  03A4  0BA4               	decfsz	??_lcd_init,f
  2305  03A5  2BA4               	goto	u487
  2306  03A6  0BA5               	decfsz	??_lcd_init+1,f
  2307  03A7  2BA4               	goto	u487
  2308  03A8  0BA6               	decfsz	??_lcd_init+2,f
  2309  03A9  2BA4               	goto	u487
  2310  03AA                     l1317:
  2311                           
  2312                           ;lcd.c: 25:     lcd_cmd(0x30);
  2313  03AA  3030               	movlw	48
  2314  03AB  120A  118A  2463  120A  118A  	fcall	_lcd_cmd
  2315  03B0                     l1319:
  2316                           
  2317                           ;lcd.c: 26:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2318  03B0  3021               	movlw	33
  2319  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2320  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  2321  03B3  00A5               	movwf	??_lcd_init+1
  2322  03B4  3075               	movlw	117
  2323  03B5  00A4               	movwf	??_lcd_init
  2324  03B6                     u497:
  2325  03B6  0BA4               	decfsz	??_lcd_init,f
  2326  03B7  2BB6               	goto	u497
  2327  03B8  0BA5               	decfsz	??_lcd_init+1,f
  2328  03B9  2BB6               	goto	u497
  2329  03BA  2BBB               	nop2
  2330  03BB                     l1321:
  2331                           
  2332                           ;lcd.c: 27:     lcd_cmd(0x30);
  2333  03BB  3030               	movlw	48
  2334  03BC  120A  118A  2463  120A  118A  	fcall	_lcd_cmd
  2335  03C1                     l1323:
  2336                           
  2337                           ;lcd.c: 28:     _delay((unsigned long)((120)*(20000000/4000000.0)));
  2338  03C1  30C7               	movlw	199
  2339  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  2340  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  2341  03C4  00A4               	movwf	??_lcd_init
  2342  03C5                     u507:
  2343  03C5  0BA4               	decfsz	??_lcd_init,f
  2344  03C6  2BC5               	goto	u507
  2345  03C7                     l1325:
  2346                           
  2347                           ;lcd.c: 29:     lcd_cmd(0x32);
  2348  03C7  3032               	movlw	50
  2349  03C8  120A  118A  2463  120A  118A  	fcall	_lcd_cmd
  2350  03CD                     l1327:
  2351                           
  2352                           ;lcd.c: 30:     _delay((unsigned long)((120)*(20000000/4000000.0)));
  2353  03CD  30C7               	movlw	199
  2354  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  2355  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  2356  03D0  00A4               	movwf	??_lcd_init
  2357  03D1                     u517:
  2358  03D1  0BA4               	decfsz	??_lcd_init,f
  2359  03D2  2BD1               	goto	u517
  2360  03D3                     l1329:
  2361                           
  2362                           ;lcd.c: 34:     lcd_cmd(0b00101100 & 0b00111000);
  2363  03D3  3028               	movlw	40
  2364  03D4  120A  118A  2463  120A  118A  	fcall	_lcd_cmd
  2365  03D9                     l1331:
  2366                           
  2367                           ;lcd.c: 35:     _delay((unsigned long)((60)*(20000000/4000000.0)));
  2368  03D9  3063               	movlw	99
  2369  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  2370  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  2371  03DC  00A4               	movwf	??_lcd_init
  2372  03DD                     u527:
  2373  03DD  0BA4               	decfsz	??_lcd_init,f
  2374  03DE  2BDD               	goto	u527
  2375  03DF                     l1333:
  2376                           
  2377                           ;lcd.c: 37:     lcd_cmd(0b00001011& 0b00001111 & 0b00001110);
  2378  03DF  300A               	movlw	10
  2379  03E0  120A  118A  2463  120A  118A  	fcall	_lcd_cmd
  2380  03E5                     l1335:
  2381                           
  2382                           ;lcd.c: 38:     _delay((unsigned long)((60)*(20000000/4000000.0)));
  2383  03E5  3063               	movlw	99
  2384  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2385  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  2386  03E8  00A4               	movwf	??_lcd_init
  2387  03E9                     u537:
  2388  03E9  0BA4               	decfsz	??_lcd_init,f
  2389  03EA  2BE9               	goto	u537
  2390  03EB                     l1337:
  2391                           
  2392                           ;lcd.c: 40:     lcd_clear();
  2393  03EB  120A  118A  25AD  120A  118A  	fcall	_lcd_clear
  2394  03F0                     l1339:
  2395                           
  2396                           ;lcd.c: 41:     _delay((unsigned long)((4)*(20000000/4000.0)));
  2397  03F0  301A               	movlw	26
  2398  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  2399  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  2400  03F3  00A5               	movwf	??_lcd_init+1
  2401  03F4  30F7               	movlw	247
  2402  03F5  00A4               	movwf	??_lcd_init
  2403  03F6                     u547:
  2404  03F6  0BA4               	decfsz	??_lcd_init,f
  2405  03F7  2BF6               	goto	u547
  2406  03F8  0BA5               	decfsz	??_lcd_init+1,f
  2407  03F9  2BF6               	goto	u547
  2408  03FA  2BFB               	nop2
  2409  03FB                     l1341:
  2410                           
  2411                           ;lcd.c: 44:     lcd_cmd(0x06);
  2412  03FB  3006               	movlw	6
  2413  03FC  120A  118A  2463  120A  118A  	fcall	_lcd_cmd
  2414  0401                     l1343:
  2415                           
  2416                           ;lcd.c: 45:     _delay((unsigned long)((60)*(20000000/4000000.0)));
  2417  0401  3063               	movlw	99
  2418  0402  1283               	bcf	3,5	;RP0=0, select bank0
  2419  0403  1303               	bcf	3,6	;RP1=0, select bank0
  2420  0404  00A4               	movwf	??_lcd_init
  2421  0405                     u557:
  2422  0405  0BA4               	decfsz	??_lcd_init,f
  2423  0406  2C05               	goto	u557
  2424  0407                     l1345:
  2425                           
  2426                           ;lcd.c: 48:     lcd_cmd(0b00001111 & 0b00001101 & 0b00001110);
  2427  0407  300C               	movlw	12
  2428  0408  120A  118A  2463  120A  118A  	fcall	_lcd_cmd
  2429  040D                     l1347:
  2430                           
  2431                           ;lcd.c: 49:     _delay((unsigned long)((60)*(20000000/4000000.0)));
  2432  040D  3063               	movlw	99
  2433  040E  1283               	bcf	3,5	;RP0=0, select bank0
  2434  040F  1303               	bcf	3,6	;RP1=0, select bank0
  2435  0410  00A4               	movwf	??_lcd_init
  2436  0411                     u567:
  2437  0411  0BA4               	decfsz	??_lcd_init,f
  2438  0412  2C11               	goto	u567
  2439  0413                     l171:
  2440  0413  0008               	return
  2441  0414                     __end_of_lcd_init:
  2442                           
  2443                           	psect	text9
  2444  05AD                     __ptext9:	
  2445 ;; *************** function _lcd_clear *****************
  2446 ;; Defined at:
  2447 ;;		line 80 in file "lcd.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;		None
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;		None
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  1    wreg      void 
  2454 ;; Registers used:
  2455 ;;		wreg, status,2, status,0, pclath, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2461 ;;      Params:         0       0       0       0       0
  2462 ;;      Locals:         0       0       0       0       0
  2463 ;;      Temps:          0       0       0       0       0
  2464 ;;      Totals:         0       0       0       0       0
  2465 ;;Total ram usage:        0 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; Hardware stack levels required when called:    5
  2468 ;; This function calls:
  2469 ;;		_lcd_cmd
  2470 ;; This function is called by:
  2471 ;;		_lcd_init
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           
  2476                           ;psect for function _lcd_clear
  2477  05AD                     _lcd_clear:
  2478  05AD                     l1229:	
  2479                           ;incstack = 0
  2480                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2481                           
  2482                           
  2483                           ;lcd.c: 81:     lcd_cmd(0x01);
  2484  05AD  3001               	movlw	1
  2485  05AE  120A  118A  2463  120A  118A  	fcall	_lcd_cmd
  2486  05B3                     l177:
  2487  05B3  0008               	return
  2488  05B4                     __end_of_lcd_clear:
  2489                           
  2490                           	psect	text10
  2491  0463                     __ptext10:	
  2492 ;; *************** function _lcd_cmd *****************
  2493 ;; Defined at:
  2494 ;;		line 150 in file "lcd.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;  data            1    wreg     unsigned char 
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;  data            1    3[BANK0 ] unsigned char 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      void 
  2501 ;; Registers used:
  2502 ;;		wreg, status,2, status,0, pclath, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2508 ;;      Params:         0       0       0       0       0
  2509 ;;      Locals:         0       1       0       0       0
  2510 ;;      Temps:          0       2       0       0       0
  2511 ;;      Totals:         0       3       0       0       0
  2512 ;;Total ram usage:        3 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; Hardware stack levels required when called:    4
  2515 ;; This function calls:
  2516 ;;		_en_pulse
  2517 ;; This function is called by:
  2518 ;;		_lcd_init
  2519 ;;		_lcd_clear
  2520 ;;		_lcd_home
  2521 ;;		_lcd_goto
  2522 ;;		_lcd_save_char
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           
  2527                           ;psect for function _lcd_cmd
  2528  0463                     _lcd_cmd:
  2529                           
  2530                           ;incstack = 0
  2531                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  2532                           ;lcd_cmd@data stored from wreg
  2533  0463  1283               	bcf	3,5	;RP0=0, select bank0
  2534  0464  1303               	bcf	3,6	;RP1=0, select bank0
  2535  0465  00A3               	movwf	lcd_cmd@data
  2536  0466                     l1209:
  2537                           
  2538                           ;lcd.c: 151:     PORTDbits.RD0 = 0;
  2539  0466  1008               	bcf	8,0	;volatile
  2540  0467                     l1211:
  2541                           
  2542                           ;lcd.c: 152:     PORTD = data & 0xF0;
  2543  0467  0823               	movf	lcd_cmd@data,w
  2544  0468  39F0               	andlw	240
  2545  0469  0088               	movwf	8	;volatile
  2546  046A                     l1213:
  2547                           
  2548                           ;lcd.c: 153:     en_pulse();
  2549  046A  120A  118A  256F  120A  118A  	fcall	_en_pulse
  2550  046F                     l1215:
  2551                           
  2552                           ;lcd.c: 154:     PORTD = ((data & 0x0F) << 4);
  2553  046F  1283               	bcf	3,5	;RP0=0, select bank0
  2554  0470  1303               	bcf	3,6	;RP1=0, select bank0
  2555  0471  0823               	movf	lcd_cmd@data,w
  2556  0472  390F               	andlw	15
  2557  0473  00A1               	movwf	??_lcd_cmd
  2558  0474  3003               	movlw	3
  2559  0475                     u245:
  2560  0475  1003               	clrc
  2561  0476  0DA1               	rlf	??_lcd_cmd,f
  2562  0477  3EFF               	addlw	-1
  2563  0478  1D03               	skipz
  2564  0479  2C75               	goto	u245
  2565  047A  1003               	clrc
  2566  047B  0D21               	rlf	??_lcd_cmd,w
  2567  047C  0088               	movwf	8	;volatile
  2568  047D                     l1217:
  2569                           
  2570                           ;lcd.c: 155:     en_pulse();
  2571  047D  120A  118A  256F  120A  118A  	fcall	_en_pulse
  2572  0482                     l1219:
  2573                           
  2574                           ;lcd.c: 156:     _delay((unsigned long)((2)*(20000000/4000.0)));
  2575  0482  300D               	movlw	13
  2576  0483  1283               	bcf	3,5	;RP0=0, select bank0
  2577  0484  1303               	bcf	3,6	;RP1=0, select bank0
  2578  0485  00A2               	movwf	??_lcd_cmd+1
  2579  0486  30FB               	movlw	251
  2580  0487  00A1               	movwf	??_lcd_cmd
  2581  0488                     u577:
  2582  0488  0BA1               	decfsz	??_lcd_cmd,f
  2583  0489  2C88               	goto	u577
  2584  048A  0BA2               	decfsz	??_lcd_cmd+1,f
  2585  048B  2C88               	goto	u577
  2586  048C                     l197:
  2587  048C  0008               	return
  2588  048D                     __end_of_lcd_cmd:
  2589                           
  2590                           	psect	text11
  2591  056F                     __ptext11:	
  2592 ;; *************** function _en_pulse *****************
  2593 ;; Defined at:
  2594 ;;		line 176 in file "lcd.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;		None
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;		None
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  1    wreg      void 
  2601 ;; Registers used:
  2602 ;;		wreg
  2603 ;; Tracked objects:
  2604 ;;		On entry : 0/0
  2605 ;;		On exit  : 0/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2608 ;;      Params:         0       0       0       0       0
  2609 ;;      Locals:         0       0       0       0       0
  2610 ;;      Temps:          0       1       0       0       0
  2611 ;;      Totals:         0       1       0       0       0
  2612 ;;Total ram usage:        1 bytes
  2613 ;; Hardware stack levels used:    1
  2614 ;; Hardware stack levels required when called:    3
  2615 ;; This function calls:
  2616 ;;		Nothing
  2617 ;; This function is called by:
  2618 ;;		_lcd_putc
  2619 ;;		_lcd_cmd
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           
  2624                           ;psect for function _en_pulse
  2625  056F                     _en_pulse:
  2626  056F                     l1203:	
  2627                           ;incstack = 0
  2628                           ; Regs used in _en_pulse: [wreg]
  2629                           
  2630                           
  2631                           ;lcd.c: 177:     PORTDbits.RD1 = 1;
  2632  056F  1283               	bcf	3,5	;RP0=0, select bank0
  2633  0570  1303               	bcf	3,6	;RP1=0, select bank0
  2634  0571  1488               	bsf	8,1	;volatile
  2635  0572                     l1205:
  2636                           
  2637                           ;lcd.c: 178:     _delay((unsigned long)((5)*(20000000/4000000.0)));
  2638  0572  3007               	movlw	7
  2639  0573  1283               	bcf	3,5	;RP0=0, select bank0
  2640  0574  1303               	bcf	3,6	;RP1=0, select bank0
  2641  0575  00A0               	movwf	??_en_pulse
  2642  0576                     u587:
  2643  0576  0BA0               	decfsz	??_en_pulse,f
  2644  0577  2D76               	goto	u587
  2645  0578  0000               	nop
  2646  0579                     l1207:
  2647                           
  2648                           ;lcd.c: 179:     PORTDbits.RD1 = 0;
  2649  0579  1283               	bcf	3,5	;RP0=0, select bank0
  2650  057A  1303               	bcf	3,6	;RP1=0, select bank0
  2651  057B  1088               	bcf	8,1	;volatile
  2652                           
  2653                           ;lcd.c: 180:      _delay((unsigned long)((5)*(20000000/4000000.0)));
  2654  057C  3007               	movlw	7
  2655  057D  1283               	bcf	3,5	;RP0=0, select bank0
  2656  057E  1303               	bcf	3,6	;RP1=0, select bank0
  2657  057F  00A0               	movwf	??_en_pulse
  2658  0580                     u597:
  2659  0580  0BA0               	decfsz	??_en_pulse,f
  2660  0581  2D80               	goto	u597
  2661  0582  0000               	nop
  2662  0583                     l200:
  2663  0583  0008               	return
  2664  0584                     __end_of_en_pulse:
  2665                           
  2666                           	psect	text12
  2667  0550                     __ptext12:	
  2668 ;; *************** function _myISR *****************
  2669 ;; Defined at:
  2670 ;;		line 12 in file "main.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;		None
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;		None
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  1    wreg      void 
  2677 ;; Registers used:
  2678 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2684 ;;      Params:         0       0       0       0       0
  2685 ;;      Locals:         0       0       0       0       0
  2686 ;;      Temps:          4       0       0       0       0
  2687 ;;      Totals:         4       0       0       0       0
  2688 ;;Total ram usage:        4 bytes
  2689 ;; Hardware stack levels used:    1
  2690 ;; Hardware stack levels required when called:    2
  2691 ;; This function calls:
  2692 ;;		_recivedCMD
  2693 ;;		i1_usart_TxStr
  2694 ;; This function is called by:
  2695 ;;		Interrupt level 1
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           
  2700                           ;psect for function _myISR
  2701  0550                     _myISR:
  2702  0550                     i1l1385:
  2703                           
  2704                           ;main.c: 13:     INTCONbits.GIE = 0;
  2705  0550  138B               	bcf	11,7	;volatile
  2706  0551                     i1l1387:
  2707                           
  2708                           ;main.c: 14:     recivedCMD(data);
  2709  0551  303B               	movlw	(low (_data| 0))& (0+255)
  2710  0552  120A  118A  248D  120A  118A  	fcall	_recivedCMD
  2711  0557                     i1l1389:
  2712                           
  2713                           ;main.c: 15:     usart_TxStr(data);
  2714  0557  303B               	movlw	(low (_data| 0))& (0+255)
  2715  0558  00F1               	movwf	i1usart_TxStr@str
  2716  0559  3000               	movlw	0
  2717  055A  00F2               	movwf	i1usart_TxStr@str+1
  2718  055B  120A  118A  2507  120A  118A  	fcall	i1_usart_TxStr
  2719  0560                     i1l1391:
  2720                           
  2721                           ;main.c: 16:     PIR1bits.RCIF = 0;
  2722  0560  1283               	bcf	3,5	;RP0=0, select bank0
  2723  0561  1303               	bcf	3,6	;RP1=0, select bank0
  2724  0562  128C               	bcf	12,5	;volatile
  2725  0563                     i1l1393:
  2726                           
  2727                           ;main.c: 17:     INTCONbits.GIE = 1;
  2728  0563  178B               	bsf	11,7	;volatile
  2729  0564                     i1l43:
  2730  0564  0878               	movf	??_myISR+3,w
  2731  0565  00FF               	movwf	btemp+1
  2732  0566  0877               	movf	??_myISR+2,w
  2733  0567  008A               	movwf	10
  2734  0568  0876               	movf	??_myISR+1,w
  2735  0569  0084               	movwf	4
  2736  056A  0E75               	swapf	??_myISR,w
  2737  056B  0083               	movwf	3
  2738  056C  0EFE               	swapf	btemp,f
  2739  056D  0E7E               	swapf	btemp,w
  2740  056E  0009               	retfie
  2741  056F                     __end_of_myISR:
  2742                           
  2743                           	psect	intentry
  2744  0004                     __pintentry:	
  2745                           ;incstack = 0
  2746                           ; Regs used in _myISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2747                           
  2748  0004                     interrupt_function:
  2749  007E                     saved_w	set	btemp
  2750  0004  00FE               	movwf	btemp
  2751  0005  0E03               	swapf	3,w
  2752  0006  00F5               	movwf	??_myISR
  2753  0007  0804               	movf	4,w
  2754  0008  00F6               	movwf	??_myISR+1
  2755  0009  080A               	movf	10,w
  2756  000A  00F7               	movwf	??_myISR+2
  2757  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2758  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2759  000D  087F               	movf	btemp+1,w
  2760  000E  00F8               	movwf	??_myISR+3
  2761  000F  120A  118A  2D50   	ljmp	_myISR
  2762                           
  2763                           	psect	text13
  2764  0507                     __ptext13:	
  2765 ;; *************** function i1_usart_TxStr *****************
  2766 ;; Defined at:
  2767 ;;		line 33 in file "usart.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;  str             2    1[COMMON] PTR unsigned char 
  2770 ;;		 -> STR_26(9), STR_25(9), STR_24(9), STR_23(9), 
  2771 ;;		 -> STR_22(9), STR_21(9), STR_20(9), STR_19(9), 
  2772 ;;		 -> STR_18(9), STR_17(9), STR_16(9), STR_15(9), 
  2773 ;;		 -> STR_14(9), STR_13(9), STR_12(9), STR_11(9), 
  2774 ;;		 -> STR_10(9), STR_9(9), STR_8(9), STR_7(9), 
  2775 ;;		 -> STR_6(9), STR_5(9), STR_4(9), STR_3(9), 
  2776 ;;		 -> STR_2(9), data(12), 
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      void 
  2781 ;; Registers used:
  2782 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2788 ;;      Params:         2       0       0       0       0
  2789 ;;      Locals:         0       0       0       0       0
  2790 ;;      Temps:          0       0       0       0       0
  2791 ;;      Totals:         2       0       0       0       0
  2792 ;;Total ram usage:        2 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    1
  2795 ;; This function calls:
  2796 ;;		i1_usart_Tx
  2797 ;; This function is called by:
  2798 ;;		_myISR
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           
  2803                           ;psect for function i1_usart_TxStr
  2804  0507                     i1_usart_TxStr:
  2805  0507                     i1l1377:	
  2806                           ;incstack = 0
  2807                           ; Regs used in i1_usart_TxStr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2808                           
  2809                           
  2810                           ;usart.c: 34:     while(*str != '\0'){
  2811  0507  2D1C               	goto	i1l1383
  2812  0508                     i1l1379:
  2813                           
  2814                           ;usart.c: 35:         usart_Tx(*str);
  2815  0508  0872               	movf	i1usart_TxStr@str+1,w
  2816  0509  00FF               	movwf	btemp+1
  2817  050A  0871               	movf	i1usart_TxStr@str,w
  2818  050B  0084               	movwf	4
  2819  050C  120A  118A  2200  120A  118A  	fcall	stringtab
  2820  0511  120A  118A  2590  120A  118A  	fcall	i1_usart_Tx
  2821  0516                     i1l1381:
  2822                           
  2823                           ;usart.c: 36:         str++;
  2824  0516  3001               	movlw	1
  2825  0517  07F1               	addwf	i1usart_TxStr@str,f
  2826  0518  1803               	skipnc
  2827  0519  0AF2               	incf	i1usart_TxStr@str+1,f
  2828  051A  3000               	movlw	0
  2829  051B  07F2               	addwf	i1usart_TxStr@str+1,f
  2830  051C                     i1l1383:
  2831                           
  2832                           ;usart.c: 34:     while(*str != '\0'){
  2833  051C  0872               	movf	i1usart_TxStr@str+1,w
  2834  051D  1283               	bcf	3,5	;RP0=0, select bank0
  2835  051E  1303               	bcf	3,6	;RP1=0, select bank0
  2836  051F  00FF               	movwf	btemp+1
  2837  0520  0871               	movf	i1usart_TxStr@str,w
  2838  0521  0084               	movwf	4
  2839  0522  120A  118A  2200  120A  118A  	fcall	stringtab
  2840  0527  3A00               	xorlw	0
  2841  0528  1D03               	skipz
  2842  0529  2D2B               	goto	u43_21
  2843  052A  2D2C               	goto	u43_20
  2844  052B                     u43_21:
  2845  052B  2D08               	goto	i1l1379
  2846  052C                     u43_20:
  2847  052C                     i1l126:
  2848  052C  0008               	return
  2849  052D                     __end_ofi1_usart_TxStr:
  2850                           
  2851                           	psect	text14
  2852  0590                     __ptext14:	
  2853 ;; *************** function i1_usart_Tx *****************
  2854 ;; Defined at:
  2855 ;;		line 24 in file "usart.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;  send            1    wreg     unsigned char 
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;  send            1    0[COMMON] unsigned char 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      void 
  2862 ;; Registers used:
  2863 ;;		wreg
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2869 ;;      Params:         0       0       0       0       0
  2870 ;;      Locals:         1       0       0       0       0
  2871 ;;      Temps:          0       0       0       0       0
  2872 ;;      Totals:         1       0       0       0       0
  2873 ;;Total ram usage:        1 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; This function calls:
  2876 ;;		Nothing
  2877 ;; This function is called by:
  2878 ;;		i1_usart_TxStr
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           
  2883                           ;psect for function i1_usart_Tx
  2884  0590                     i1_usart_Tx:
  2885                           
  2886                           ;incstack = 0
  2887                           ; Regs used in i1_usart_Tx: [wreg]
  2888                           ;i1usart_Tx@send stored from wreg
  2889  0590  00F0               	movwf	i1usart_Tx@send
  2890  0591                     i1l1285:
  2891                           
  2892                           ;usart.c: 25:     TXREG = send;
  2893  0591  0870               	movf	i1usart_Tx@send,w
  2894  0592  1283               	bcf	3,5	;RP0=0, select bank0
  2895  0593  1303               	bcf	3,6	;RP1=0, select bank0
  2896  0594  0099               	movwf	25	;volatile
  2897  0595                     i1l114:	
  2898                           ;usart.c: 26:     while (!TXSTAbits.TRMT);
  2899                           
  2900  0595  1683               	bsf	3,5	;RP0=1, select bank1
  2901  0596  1303               	bcf	3,6	;RP1=0, select bank1
  2902  0597  1C98               	btfss	24,1	;volatile
  2903  0598  2D9A               	goto	u38_21
  2904  0599  2D9B               	goto	u38_20
  2905  059A                     u38_21:
  2906  059A  2D95               	goto	i1l114
  2907  059B                     u38_20:
  2908  059B                     i1l117:
  2909  059B  0008               	return
  2910  059C                     __end_ofi1_usart_Tx:
  2911                           
  2912                           	psect	text15
  2913  048D                     __ptext15:	
  2914 ;; *************** function _recivedCMD *****************
  2915 ;; Defined at:
  2916 ;;		line 48 in file "usart.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  cmd             1    wreg     PTR unsigned char 
  2919 ;;		 -> data(12), 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;  cmd             1    2[COMMON] PTR unsigned char 
  2922 ;;		 -> data(12), 
  2923 ;;  j               1    4[COMMON] unsigned char 
  2924 ;;  i               1    3[COMMON] unsigned char 
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      void 
  2927 ;; Registers used:
  2928 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2934 ;;      Params:         0       0       0       0       0
  2935 ;;      Locals:         3       0       0       0       0
  2936 ;;      Temps:          2       0       0       0       0
  2937 ;;      Totals:         5       0       0       0       0
  2938 ;;Total ram usage:        5 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:    1
  2941 ;; This function calls:
  2942 ;;		_get1
  2943 ;; This function is called by:
  2944 ;;		_myISR
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           
  2949                           ;psect for function _recivedCMD
  2950  048D                     _recivedCMD:
  2951                           
  2952                           ;incstack = 0
  2953                           ; Regs used in _recivedCMD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2954                           ;recivedCMD@cmd stored from wreg
  2955  048D  00F2               	movwf	recivedCMD@cmd
  2956  048E                     i1l1287:
  2957                           
  2958                           ;usart.c: 49:     unsigned char i = 0;
  2959  048E  01F3               	clrf	recivedCMD@i
  2960  048F                     i1l1289:
  2961                           
  2962                           ;usart.c: 52:         cmd[i] = get1();
  2963  048F  120A  118A  25A5  120A  118A  	fcall	_get1
  2964  0494  00F0               	movwf	??_recivedCMD
  2965  0495  0873               	movf	recivedCMD@i,w
  2966  0496  0772               	addwf	recivedCMD@cmd,w
  2967  0497  00F1               	movwf	??_recivedCMD+1
  2968  0498  0871               	movf	??_recivedCMD+1,w
  2969  0499  0084               	movwf	4
  2970  049A  0870               	movf	??_recivedCMD,w
  2971  049B  1383               	bcf	3,7	;select IRP bank0
  2972  049C  0080               	movwf	0
  2973  049D                     i1l1291:
  2974                           
  2975                           ;usart.c: 53:         j = cmd[i];
  2976  049D  0873               	movf	recivedCMD@i,w
  2977  049E  0772               	addwf	recivedCMD@cmd,w
  2978  049F  00F0               	movwf	??_recivedCMD
  2979  04A0  0870               	movf	??_recivedCMD,w
  2980  04A1  0084               	movwf	4
  2981  04A2  0800               	movf	0,w
  2982  04A3  00F1               	movwf	??_recivedCMD+1
  2983  04A4  0871               	movf	??_recivedCMD+1,w
  2984  04A5  00F4               	movwf	recivedCMD@j
  2985  04A6                     i1l1293:
  2986                           
  2987                           ;usart.c: 54:         i++;
  2988  04A6  3001               	movlw	1
  2989  04A7  00F0               	movwf	??_recivedCMD
  2990  04A8  0870               	movf	??_recivedCMD,w
  2991  04A9  07F3               	addwf	recivedCMD@i,f
  2992  04AA                     i1l1295:
  2993                           
  2994                           ;usart.c: 55:         }
  2995  04AA  300A               	movlw	10
  2996  04AB  0674               	xorwf	recivedCMD@j,w
  2997  04AC  1903               	btfsc	3,2
  2998  04AD  2CAF               	goto	u39_21
  2999  04AE  2CB0               	goto	u39_20
  3000  04AF                     u39_21:
  3001  04AF  2CB6               	goto	i1l136
  3002  04B0                     u39_20:
  3003  04B0                     i1l1297:
  3004  04B0  300D               	movlw	13
  3005  04B1  0674               	xorwf	recivedCMD@j,w
  3006  04B2  1D03               	btfss	3,2
  3007  04B3  2CB5               	goto	u40_21
  3008  04B4  2CB6               	goto	u40_20
  3009  04B5                     u40_21:
  3010  04B5  2C8F               	goto	i1l1289
  3011  04B6                     u40_20:
  3012  04B6                     i1l136:
  3013  04B6  0008               	return
  3014  04B7                     __end_of_recivedCMD:
  3015                           
  3016                           	psect	text16
  3017  05A5                     __ptext16:	
  3018 ;; *************** function _get1 *****************
  3019 ;; Defined at:
  3020 ;;		line 61 in file "usart.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;		None
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;		None
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  1    wreg      unsigned char 
  3027 ;; Registers used:
  3028 ;;		wreg
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3034 ;;      Params:         0       0       0       0       0
  3035 ;;      Locals:         0       0       0       0       0
  3036 ;;      Temps:          0       0       0       0       0
  3037 ;;      Totals:         0       0       0       0       0
  3038 ;;Total ram usage:        0 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; This function calls:
  3041 ;;		Nothing
  3042 ;; This function is called by:
  3043 ;;		_recivedCMD
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           
  3048                           ;psect for function _get1
  3049  05A5                     _get1:
  3050  05A5                     i1l1223:	
  3051                           ;incstack = 0
  3052                           ; Regs used in _get1: [wreg]
  3053                           
  3054  05A5                     i1l139:	
  3055                           ;usart.c: 64:     }
  3056                           
  3057                           
  3058                           ;usart.c: 62:     while(!PIR1bits.RCIF){
  3059  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  3060  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  3061  05A7  1E8C               	btfss	12,5	;volatile
  3062  05A8  2DAA               	goto	u26_21
  3063  05A9  2DAB               	goto	u26_20
  3064  05AA                     u26_21:
  3065  05AA  2DA5               	goto	i1l139
  3066  05AB                     u26_20:
  3067  05AB                     i1l1225:
  3068                           
  3069                           ;usart.c: 65:     return RCREG;
  3070  05AB  081A               	movf	26,w	;volatile
  3071  05AC                     i1l142:
  3072  05AC  0008               	return
  3073  05AD                     __end_of_get1:
  3074  007E                     btemp	set	126	;btemp
  3075  007E                     wtemp0	set	126
  3076                           
  3077                           	psect	config
  3078                           
  3079                           ;Config register CONFIG1 @ 0x2007
  3080                           ;	Oscillator Selection bits
  3081                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  3082                           ;	Watchdog Timer Enable bit
  3083                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3084                           ;	Power-up Timer Enable bit
  3085                           ;	PWRTE = OFF, PWRT disabled
  3086                           ;	RE3/MCLR pin function select bit
  3087                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  3088                           ;	Code Protection bit
  3089                           ;	CP = OFF, Program memory code protection is disabled
  3090                           ;	Data Code Protection bit
  3091                           ;	CPD = OFF, Data memory code protection is disabled
  3092                           ;	Brown Out Reset Selection bits
  3093                           ;	BOREN = ON, BOR enabled
  3094                           ;	Internal External Switchover bit
  3095                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3096                           ;	Fail-Safe Clock Monitor Enabled bit
  3097                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3098                           ;	Low Voltage Programming Enable bit
  3099                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  3100                           ;	In-Circuit Debugger Mode bit
  3101                           ;	DEBUG = 0x1, unprogrammed default
  3102  2007                     	org	8199
  3103  2007  3FF2               	dw	16370
  3104                           
  3105                           ;Config register CONFIG2 @ 0x2008
  3106                           ;	Brown-out Reset Selection bit
  3107                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3108                           ;	Flash Program Memory Self Write Enable bits
  3109                           ;	WRT = OFF, Write protection off
  3110  2008                     	org	8200
  3111  2008  3FFF               	dw	16383

Data Sizes:
    Strings     229
    Constant    0
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     27      39
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ptrCmd	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 2
		 -> STR_28(CODE[2]), STR_27(CODE[2]), NULL(NULL[0]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    lcd_print@data	PTR unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), 

    dir	PTR unsigned char [3] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    recivedCMD@cmd	PTR unsigned char  size(1) Largest target is 12
		 -> data(BANK0[12]), 

    usart_TxStr@str	PTR unsigned char  size(2) Largest target is 12
		 -> STR_26(CODE[9]), STR_25(CODE[9]), STR_24(CODE[9]), STR_23(CODE[9]), 
		 -> STR_22(CODE[9]), STR_21(CODE[9]), STR_20(CODE[9]), STR_19(CODE[9]), 
		 -> STR_18(CODE[9]), STR_17(CODE[9]), STR_16(CODE[9]), STR_15(CODE[9]), 
		 -> STR_14(CODE[9]), STR_13(CODE[9]), STR_12(CODE[9]), STR_11(CODE[9]), 
		 -> STR_10(CODE[9]), STR_9(CODE[9]), STR_8(CODE[9]), STR_7(CODE[9]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[9]), STR_3(CODE[9]), 
		 -> STR_2(CODE[9]), data(BANK0[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myISR in COMMON

    _myISR->_recivedCMD
    i1_usart_TxStr->i1_usart_Tx

Critical Paths under _main in BANK0

    _main->_usart_init
    _usart_init->___aldiv
    _usart_TxStr->_usart_Tx
    _lcd_print->_lcd_putc
    _lcd_putc->_en_pulse
    _lcd_init->_lcd_cmd
    _lcd_clear->_lcd_cmd
    _lcd_cmd->_en_pulse

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    2976
                                             23 BANK0      4     4      0
                           _lcd_init
                          _lcd_print
                    _usart_Interrupt
                        _usart_TxStr
                         _usart_init
 ---------------------------------------------------------------------------------
 (1) _usart_init                                           8     4      4     725
                                             15 BANK0      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _usart_TxStr                                          2     0      2    2017
                                              1 BANK0      2     0      2
                           _usart_Tx
 ---------------------------------------------------------------------------------
 (2) _usart_Tx                                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _usart_Interrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            2     2      0     122
                                              3 BANK0      2     2      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             2     2      0      44
                                              1 BANK0      2     2      0
                           _en_pulse
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0      88
                                              4 BANK0      3     3      0
                          _lcd_clear
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0      44
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      44
                                              1 BANK0      3     3      0
                           _en_pulse
 ---------------------------------------------------------------------------------
 (3) _en_pulse                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _myISR                                                4     4      0     262
                                              5 COMMON     4     4      0
                         _recivedCMD
                      i1_usart_TxStr
 ---------------------------------------------------------------------------------
 (6) i1_usart_TxStr                                        2     0      2      93
                                              1 COMMON     2     0      2
                         i1_usart_Tx
 ---------------------------------------------------------------------------------
 (7) i1_usart_Tx                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _recivedCMD                                           5     5      0     169
                                              0 COMMON     5     5      0
                               _get1
 ---------------------------------------------------------------------------------
 (7) _get1                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _lcd_clear
       _lcd_cmd
         _en_pulse
     _lcd_cmd
       _en_pulse
   _lcd_print
     _lcd_putc
       _en_pulse
   _usart_Interrupt
   _usart_TxStr
     _usart_Tx
   _usart_init
     ___aldiv

 _myISR (ROOT)
   _recivedCMD
     _get1
   i1_usart_TxStr
     i1_usart_Tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      35       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1B      27       5       48.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      35      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Sep 19 11:21:10 2021

             lcd_cmd@data 0023                         pc 0002                        fsr 0004  
                     l111 0462                       l200 0583                       l114 0589  
                     l117 058F                       l126 04DE                       l129 05A4  
                     l171 0413                       l174 0506                       l177 05B3  
                     l186 054F                       l356 0309                       l197 048C  
                     l366 0391                       u300 032C                       u301 032B  
                     u320 0340                       u321 033F                       u250 058F  
                     u410 04DE                       u251 058E                       u411 04DD  
                     u315 0331                       u420 054F                       u340 035B  
                     u245 0475                       u421 054E                       u341 035A  
                     u335 0342                       u360 0379                       u280 02FC  
                     u361 0378                       u345 0357                       u281 02FB  
                     u370 037E                       u290 030D                       u507 03C5  
                     u275 04F2                       u371 037D                       u355 036B  
                     u291 030C                       u517 03D1                       u527 03DD  
                     u537 03E9                       u547 03F6                       u467 0065  
                     u557 0405                       u477 0503                       u567 0411  
                     u487 03A4                       u577 0488                       u497 03B6  
                     u587 0576                       u597 0580                       _dir 0079  
                     fsr0 0004                       indf 0000                      l1203 056F  
                    l1211 0467                      l1205 0572                      l1213 046A  
                    l1221 0587                      l1301 04B8                      l1207 0579  
                    l1215 046F                      l1311 0397                      l1231 04E2  
                    l1303 04C6                      l1217 047D                      l1209 0466  
                    l1321 03BB                      l1313 039A                      l1241 04FA  
                    l1233 04E3                      l1305 04CE                      l1401 0035  
                    l1219 0482                      l1331 03D9                      l1323 03C1  
                    l1315 039C                      l1307 0392                      l1243 04FF  
                    l1235 04E4                      l1251 030D                      l1411 0057  
                    l1403 0038                      l1229 05AD                      l1341 03FB  
                    l1333 03DF                      l1325 03C7                      l1317 03AA  
                    l1309 0396                      l1237 04E7                      l1261 032F  
                    l1253 0318                      l1245 02F5                      l1421 0081  
                    l1413 0057                      l1405 003D                      l1343 0401  
                    l1335 03E5                      l1327 03CD                      l1319 03B0  
                    l1239 04EC                      l1351 0531                      l1271 0369  
                    l1263 033C                      l1255 031C                      l1247 02F8  
                    l1431 00AA                      l1423 008B                      l1415 005D  
                    l1407 0043                      l1345 0407                      l1337 03EB  
                    l1329 03D3                      l1353 053D                      l1281 0389  
                    l1273 036A                      l1265 0340                      l1257 0324  
                    l1249 02FC                      l1361 0455                      l1441 00D3  
                    l1433 00B4                      l1425 008C                      l1417 006D  
                    l1409 0052                      l1347 040D                      l1339 03F0  
                    l1355 0543                      l1275 0373                      l1267 0349  
                    l1259 032C                      l1371 0460                      l1363 0458  
                    l1451 00FD                      l1443 00DD                      l1435 00B5  
                    l1427 0096                      l1419 0077                      l1349 0530  
                    l1269 035B                      l1277 0379                      l1373 0461  
                    l1365 045B                      l1357 0414                      l1461 0127  
                    l1453 0107                      l1445 00DF                      l1437 00BF  
                    l1429 00A0                      l1375 059C                      l1279 037E  
                    l1367 045C                      l1359 0418                      l1471 0151  
                    l1463 0131                      l1455 0109                      l1447 00E9  
                    l1439 00C9                      l1369 045D                      l1553 017B  
                    l1473 015B                      l1465 0133                      l1457 0113  
                    l1449 00F3                      l1481 0171                      l1299 04B7  
                    l1475 0165                      l1467 013D                      l1459 011D  
                    l1395 002C                      l1477 0167                      l1469 0147  
                    l1397 0030                      l1399 0034                      STR_1 0210  
                    STR_2 02BD                      STR_3 0287                      STR_4 0251  
                    STR_5 021B                      STR_6 02D8                      STR_7 02A2  
                    STR_8 026C                      STR_9 0236               main@entrada 003A  
                    i1l43 0564               _usart_TxStr 04B7                      _get1 05A5  
                    _data 003B                      _main 002C                      btemp 007E  
                    start 0012                i1_usart_Tx 0590                     ?_get1 0070  
         __end_of___aldiv 0392                     ?_main 0070                     STR_10 02C6  
                   STR_11 0290                     STR_20 0263                     STR_12 025A  
                   STR_21 022D                     STR_13 0224                     STR_22 02EA  
                   STR_14 02E1                     STR_23 02B4                     STR_15 02AB  
                   STR_24 027E                     STR_16 0275                     STR_25 027E  
                   STR_17 023F                     STR_18 02CF                     STR_26 0248  
                   STR_27 02F3                     STR_19 0299                     _ANSEL 0188  
                   i1l114 0595                     i1l117 059B                     i1l142 05AC  
                   i1l126 052C                     i1l136 04B6                     i1l139 05A5  
                   _RCREG 001A                     u40_20 04B6                     u40_21 04B5  
                   u26_20 05AB                     u26_21 05AA                     _SPBRG 0099  
                   u43_20 052C                     u43_21 052B                     _PORTB 0006  
                   _PORTD 0008                     _PORTE 0009                     u38_20 059B  
                   u38_21 059A                     u39_20 04B0                     u39_21 04AF  
                   _TRISB 0086                     _TRISD 0088                     _TRISE 0089  
                   _TXREG 0019           __end_of_lcd_cmd 048D                     _myISR 0550  
   __end_ofi1_usart_TxStr 052D                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 0015              __end_of_get1 05AD  
            __end_of_main 01CE                    ??_get1 0070                    ??_main 0037  
                  ?_myISR 0070                    _ANSELH 0189                    i1l1223 05A5  
                  i1l1225 05AB                    i1l1291 049D                    i1l1293 04A6  
                  i1l1285 0591                    i1l1381 0516                    i1l1295 04AA  
                  i1l1287 048E                    i1l1383 051C                    i1l1391 0560  
                  i1l1297 04B0                    i1l1289 048F                    i1l1377 0507  
                  i1l1393 0563                    i1l1385 0550                    i1l1379 0508  
                  i1l1387 0551                    i1l1389 0557             recivedCMD@cmd 0072  
           lcd_print@data 0024          __end_of_lcd_init 0414          __end_of_en_pulse 0584  
        __end_of_lcd_putc 0507                 ??___aldiv 0028               ?i1_usart_Tx 0070  
                  _ptrCmd 007D                 ??_lcd_cmd 0021                    saved_w 007E  
        __end_of_usart_Tx 0590   __end_of__initialization 0028            __pcstackCOMMON 0070  
          usart_TxStr@str 0021             __end_of_myISR 056F               recivedCMD@i 0073  
             recivedCMD@j 0074        __size_of_lcd_clear 0007  __size_of_usart_Interrupt 0009  
      __size_of_lcd_print 0023                   ??_myISR 0075       __size_ofi1_usart_Tx 000C  
            ?_usart_TxStr 0021                __pbssBANK0 003B              usart_Tx@send 0020  
              __pmaintext 002C            usart_init@BAUD 002F                __pintentry 0004  
               ?_lcd_init 0070                 ?_en_pulse 0070                 ?_lcd_putc 0070  
              __stringtab 0200            i1usart_Tx@send 0070         __end_of_lcd_clear 05B4  
                 ___aldiv 02F5         __end_of_lcd_print 0550                 ?_usart_Tx 0070  
                 __ptext1 0414                   __ptext2 02F5                   __ptext3 04B7  
                 __ptext4 0584                   __ptext5 059C                   __ptext6 052D  
                 __ptext7 04DF                   __ptext8 0392                   __ptext9 05AD  
                 _lcd_cmd 0463          ___aldiv@dividend 0024                _recivedCMD 048D  
              ??_lcd_init 0024                ??_en_pulse 0020                ??_lcd_putc 0021  
    end_of_initialization 0028         ??_usart_Interrupt 0020                 _RCSTAbits 0018  
        ___aldiv@quotient 002B              ??i1_usart_Tx 0070                ??_usart_Tx 0020  
  __size_ofi1_usart_TxStr 0026                 _PORTDbits 0008                 _TRISBbits 0086  
               _TRISDbits 0088        __end_ofi1_usart_Tx 059C      __size_of_usart_TxStr 0028  
               _TXSTAbits 0098                _usart_init 0414       start_initialization 0015  
        i1usart_TxStr@str 0071               ?_recivedCMD 0070             i1_usart_TxStr 0507  
             __pbssCOMMON 0079                 ___latbits 0002             __pcstackBANK0 0020  
          ?i1_usart_TxStr 0071         __size_of_lcd_init 0082         __size_of_en_pulse 0015  
       __size_of_lcd_putc 0028               ?_usart_init 002F       __size_of_recivedCMD 002A  
                ?___aldiv 0020                 _lcd_clear 05AD                 __pstrings 0200  
               _lcd_print 052D                  ?_lcd_cmd 0070         __size_of_usart_Tx 000C  
         _usart_Interrupt 059C            __size_of_myISR 001F           ___aldiv@divisor 0020  
       interrupt_function 0004           ___aldiv@counter 0029                  _PIE1bits 008C  
                _PIR1bits 000C                ?_lcd_clear 0070                ?_lcd_print 0070  
             __stringbase 020F                 lcd_putc@c 0022       __size_of_usart_init 004F  
         ??i1_usart_TxStr 0073           _usart_init$1117 0033          __size_of___aldiv 009D  
 __end_of_usart_Interrupt 05A5        __end_of__stringtab 0210          __size_of_lcd_cmd 002A  
            ??_recivedCMD 0070                  __ptext10 0463                  __ptext11 056F  
                __ptext12 0550                  __ptext13 0507                  __ptext14 0590  
                __ptext15 048D                  __ptext16 05A5                  _lcd_init 0392  
                _en_pulse 056F             ??_usart_TxStr 0023                  _lcd_putc 04DF  
           __size_of_get1 0008             __size_of_main 01A2        __end_of_recivedCMD 04B7  
             ??_lcd_clear 0024                  _usart_Tx 0584               ??_lcd_print 0023  
              _INTCONbits 000B                  intlevel1 0000              ??_usart_init 0033  
     __end_of_usart_TxStr 04DF                 stringcode 020A          ?_usart_Interrupt 0070  
                stringdir 020A                  stringtab 0200              ___aldiv@sign 002A  
      __end_of_usart_init 0463                  strtok@sp 007C  
