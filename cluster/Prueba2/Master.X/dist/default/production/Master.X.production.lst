

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon May 24 21:40:46 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,merge=1,delta=2
    13                           	psect	text7,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  000C                     _PIR1bits	set	12
   286  000B                     _INTCONbits	set	11
   287  0014                     _SSPCONbits	set	20
   288  0013                     _SSPBUF	set	19
   289  0014                     _SSPCON	set	20
   290  0006                     _PORTB	set	6
   291  005E                     _PEIE	set	94
   292  005F                     _GIE	set	95
   293  0063                     _SSPIF	set	99
   294  008C                     _PIE1bits	set	140
   295  0094                     _SSPSTATbits	set	148
   296  0091                     _SSPCON2bits	set	145
   297  0091                     _SSPCON2	set	145
   298  0094                     _SSPSTAT	set	148
   299  0093                     _SSPADD	set	147
   300  0087                     _TRISCbits	set	135
   301  0086                     _TRISB	set	134
   302  0463                     _SSPIE	set	1123
   303  0189                     _ANSELH	set	393
   304                           
   305                           	psect	cinit
   306  07FC                     start_initialization:	
   307                           ; #config settings
   308                           
   309  07FC                     __initialization:
   310  07FC                     end_of_initialization:	
   311                           ;End of C runtime variable initialization code
   312                           
   313  07FC                     __end_of__initialization:
   314  07FC  0183               	clrf	3
   315  07FD  120A  118A  2FD8   	ljmp	_main	;jump to C main() function
   316                           
   317                           	psect	cstackCOMMON
   318  0070                     __pcstackCOMMON:
   319  0070                     ?_i2c_init:
   320  0070                     ??_i2c_init:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_readV:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?_i2c_start:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ??_i2c_start:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_i2c_write:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ??_i2c_write:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_i2c_read:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ??_i2c_read:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_i2c_stop:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ??_i2c_stop:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_i2c_idle:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ??_i2c_idle:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_main:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     i2c_write@dato:	
   360                           ; 1 bytes @ 0x0
   361                           
   362                           
   363                           ; 1 bytes @ 0x0
   364  0070                     	ds	1
   365  0071                     ??_readV:
   366  0071                     ??_main:	
   367                           ; 1 bytes @ 0x1
   368                           
   369                           
   370                           ; 1 bytes @ 0x1
   371  0071                     	ds	3
   372                           
   373                           	psect	maintext
   374  07D8                     __pmaintext:	
   375 ;;
   376 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   377 ;;
   378 ;; *************** function _main *****************
   379 ;; Defined at:
   380 ;;		line 13 in file "main.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;		None
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg, status,2, status,0, pclath, cstack
   389 ;; Tracked objects:
   390 ;;		On entry : B00/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   394 ;;      Params:         0       0       0       0       0
   395 ;;      Locals:         0       0       0       0       0
   396 ;;      Temps:          3       0       0       0       0
   397 ;;      Totals:         3       0       0       0       0
   398 ;;Total ram usage:        3 bytes
   399 ;; Hardware stack levels required when called:    3
   400 ;; This function calls:
   401 ;;		_i2c_init
   402 ;;		_readV
   403 ;; This function is called by:
   404 ;;		Startup code after reset
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408                           
   409                           ;psect for function _main
   410  07D8                     _main:
   411  07D8                     l761:	
   412                           ;incstack = 0
   413                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   414                           
   415                           
   416                           ;main.c: 14:     ANSELH = 0x00;
   417  07D8  1683               	bsf	3,5	;RP0=1, select bank3
   418  07D9  1703               	bsf	3,6	;RP1=1, select bank3
   419  07DA  0189               	clrf	9	;volatile
   420                           
   421                           ;main.c: 15:     TRISB = 0x00;
   422  07DB  1683               	bsf	3,5	;RP0=1, select bank1
   423  07DC  1303               	bcf	3,6	;RP1=0, select bank1
   424  07DD  0186               	clrf	6	;volatile
   425                           
   426                           ;main.c: 16:     PORTB = 0x00;
   427  07DE  1283               	bcf	3,5	;RP0=0, select bank0
   428  07DF  1303               	bcf	3,6	;RP1=0, select bank0
   429  07E0  0186               	clrf	6	;volatile
   430  07E1                     l763:
   431                           
   432                           ;main.c: 17:     i2c_init();
   433  07E1  120A  118A  2769  120A  118A  	fcall	_i2c_init
   434  07E6                     l765:
   435                           
   436                           ;main.c: 20:         readV();
   437  07E6  120A  118A  27BF  120A  118A  	fcall	_readV
   438  07EB                     l767:
   439                           
   440                           ;main.c: 21:         _delay((unsigned long)((2000)*(20000000/4000.0)));
   441  07EB  3033               	movlw	51
   442  07EC  00F3               	movwf	??_main+2
   443  07ED  30BB               	movlw	187
   444  07EE  00F2               	movwf	??_main+1
   445  07EF  30DF               	movlw	223
   446  07F0  00F1               	movwf	??_main
   447  07F1                     u147:
   448  07F1  0BF1               	decfsz	??_main,f
   449  07F2  2FF1               	goto	u147
   450  07F3  0BF2               	decfsz	??_main+1,f
   451  07F4  2FF1               	goto	u147
   452  07F5  0BF3               	decfsz	??_main+2,f
   453  07F6  2FF1               	goto	u147
   454  07F7  2FF8               	nop2
   455  07F8  2FE6               	goto	l765
   456  07F9  120A  118A  2800   	ljmp	start
   457  07FC                     __end_of_main:
   458                           
   459                           	psect	text1
   460  07BF                     __ptext1:	
   461 ;; *************** function _readV *****************
   462 ;; Defined at:
   463 ;;		line 28 in file "main.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;		None
   466 ;; Auto vars:     Size  Location     Type
   467 ;;		None
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, status,2, status,0, pclath, cstack
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   477 ;;      Params:         0       0       0       0       0
   478 ;;      Locals:         0       0       0       0       0
   479 ;;      Temps:          0       0       0       0       0
   480 ;;      Totals:         0       0       0       0       0
   481 ;;Total ram usage:        0 bytes
   482 ;; Hardware stack levels used:    1
   483 ;; Hardware stack levels required when called:    2
   484 ;; This function calls:
   485 ;;		_i2c_read
   486 ;;		_i2c_start
   487 ;;		_i2c_stop
   488 ;;		_i2c_write
   489 ;; This function is called by:
   490 ;;		_main
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           
   495                           ;psect for function _readV
   496  07BF                     _readV:
   497  07BF                     l757:	
   498                           ;incstack = 0
   499                           ; Regs used in _readV: [wreg+status,2+status,0+pclath+cstack]
   500                           
   501                           
   502                           ;main.c: 34:     i2c_start();
   503  07BF  120A  118A  2785  120A  118A  	fcall	_i2c_start
   504                           
   505                           ;main.c: 35:     i2c_write(0x31);
   506  07C4  3031               	movlw	49
   507  07C5  120A  118A  2798  120A  118A  	fcall	_i2c_write
   508                           
   509                           ;main.c: 36:     PORTB = i2c_read();
   510  07CA  120A  118A  27AB  120A  118A  	fcall	_i2c_read
   511  07CF  1283               	bcf	3,5	;RP0=0, select bank0
   512  07D0  1303               	bcf	3,6	;RP1=0, select bank0
   513  07D1  0086               	movwf	6	;volatile
   514  07D2                     l759:
   515                           
   516                           ;main.c: 37:     i2c_stop();
   517  07D2  120A  118A  2777  120A  118A  	fcall	_i2c_stop
   518  07D7                     l31:
   519  07D7  0008               	return
   520  07D8                     __end_of_readV:
   521                           
   522                           	psect	text2
   523  0798                     __ptext2:	
   524 ;; *************** function _i2c_write *****************
   525 ;; Defined at:
   526 ;;		line 52 in file "i2c.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;  dato            1    wreg     unsigned char 
   529 ;; Auto vars:     Size  Location     Type
   530 ;;  dato            1    0[COMMON] unsigned char 
   531 ;; Return value:  Size  Location     Type
   532 ;;                  1    wreg      unsigned char 
   533 ;; Registers used:
   534 ;;		wreg, status,2, status,0, pclath, cstack
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   540 ;;      Params:         0       0       0       0       0
   541 ;;      Locals:         1       0       0       0       0
   542 ;;      Temps:          0       0       0       0       0
   543 ;;      Totals:         1       0       0       0       0
   544 ;;Total ram usage:        1 bytes
   545 ;; Hardware stack levels used:    1
   546 ;; Hardware stack levels required when called:    1
   547 ;; This function calls:
   548 ;;		_i2c_idle
   549 ;; This function is called by:
   550 ;;		_readV
   551 ;; This function uses a non-reentrant model
   552 ;;
   553                           
   554                           
   555                           ;psect for function _i2c_write
   556  0798                     _i2c_write:
   557                           
   558                           ;incstack = 0
   559                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
   560                           ;i2c_write@dato stored from wreg
   561  0798  00F0               	movwf	i2c_write@dato
   562  0799                     l733:
   563                           
   564                           ;i2c.c: 53:     i2c_idle();
   565  0799  120A  118A  275C  120A  118A  	fcall	_i2c_idle
   566  079E                     l735:
   567                           
   568                           ;i2c.c: 54:     SSPBUF = dato;
   569  079E  0870               	movf	i2c_write@dato,w
   570  079F  1283               	bcf	3,5	;RP0=0, select bank0
   571  07A0  1303               	bcf	3,6	;RP1=0, select bank0
   572  07A1  0093               	movwf	19	;volatile
   573  07A2                     l737:	
   574                           ;i2c.c: 55:     while(SSPSTAT & 0x05);
   575                           
   576  07A2  1683               	bsf	3,5	;RP0=1, select bank1
   577  07A3  1303               	bcf	3,6	;RP1=0, select bank1
   578  07A4  0814               	movf	20,w	;volatile
   579  07A5  3905               	andlw	5
   580  07A6  1D03               	btfss	3,2
   581  07A7  2FA9               	goto	u51
   582  07A8  2FAA               	goto	u50
   583  07A9                     u51:
   584  07A9  2FA2               	goto	l737
   585  07AA                     u50:
   586  07AA                     l110:
   587  07AA  0008               	return
   588  07AB                     __end_of_i2c_write:
   589                           
   590                           	psect	text3
   591  0777                     __ptext3:	
   592 ;; *************** function _i2c_stop *****************
   593 ;; Defined at:
   594 ;;		line 37 in file "i2c.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;		None
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      void 
   601 ;; Registers used:
   602 ;;		None
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   608 ;;      Params:         0       0       0       0       0
   609 ;;      Locals:         0       0       0       0       0
   610 ;;      Temps:          0       0       0       0       0
   611 ;;      Totals:         0       0       0       0       0
   612 ;;Total ram usage:        0 bytes
   613 ;; Hardware stack levels used:    1
   614 ;; This function calls:
   615 ;;		Nothing
   616 ;; This function is called by:
   617 ;;		_readV
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           
   622                           ;psect for function _i2c_stop
   623  0777                     _i2c_stop:
   624  0777                     l747:	
   625                           ;incstack = 0
   626                           ; Regs used in _i2c_stop: []
   627                           
   628                           
   629                           ;i2c.c: 38:     SSPCON2bits.PEN = 1;
   630  0777  1683               	bsf	3,5	;RP0=1, select bank1
   631  0778  1303               	bcf	3,6	;RP1=0, select bank1
   632  0779  1511               	bsf	17,2	;volatile
   633  077A                     l89:	
   634                           ;i2c.c: 39:     while(SSPCON2bits.PEN);
   635                           
   636  077A  1911               	btfsc	17,2	;volatile
   637  077B  2F7D               	goto	u81
   638  077C  2F7E               	goto	u80
   639  077D                     u81:
   640  077D  2F7A               	goto	l89
   641  077E                     u80:
   642  077E                     l92:
   643  077E  1283               	bcf	3,5	;RP0=0, select bank0
   644  077F  1D8C               	btfss	12,3	;volatile
   645  0780  2F82               	goto	u91
   646  0781  2F83               	goto	u90
   647  0782                     u91:
   648  0782  2F7E               	goto	l92
   649  0783                     u90:
   650  0783                     l94:
   651                           
   652                           ;i2c.c: 41:     SSPIF = 0;
   653  0783  118C               	bcf	12,3	;volatile
   654  0784                     l95:
   655  0784  0008               	return
   656  0785                     __end_of_i2c_stop:
   657                           
   658                           	psect	text4
   659  0785                     __ptext4:	
   660 ;; *************** function _i2c_start *****************
   661 ;; Defined at:
   662 ;;		line 20 in file "i2c.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;		None
   667 ;; Return value:  Size  Location     Type
   668 ;;                  1    wreg      void 
   669 ;; Registers used:
   670 ;;		wreg, status,2, status,0, pclath, cstack
   671 ;; Tracked objects:
   672 ;;		On entry : 0/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   676 ;;      Params:         0       0       0       0       0
   677 ;;      Locals:         0       0       0       0       0
   678 ;;      Temps:          0       0       0       0       0
   679 ;;      Totals:         0       0       0       0       0
   680 ;;Total ram usage:        0 bytes
   681 ;; Hardware stack levels used:    1
   682 ;; Hardware stack levels required when called:    1
   683 ;; This function calls:
   684 ;;		_i2c_idle
   685 ;; This function is called by:
   686 ;;		_readV
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           
   691                           ;psect for function _i2c_start
   692  0785                     _i2c_start:
   693  0785                     l729:	
   694                           ;incstack = 0
   695                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
   696                           
   697                           
   698                           ;i2c.c: 22:     i2c_idle();
   699  0785  120A  118A  275C  120A  118A  	fcall	_i2c_idle
   700  078A                     l731:
   701                           
   702                           ;i2c.c: 23:     SSPCON2bits.SEN = 1;
   703  078A  1683               	bsf	3,5	;RP0=1, select bank1
   704  078B  1303               	bcf	3,6	;RP1=0, select bank1
   705  078C  1411               	bsf	17,0	;volatile
   706  078D                     l71:	
   707                           ;i2c.c: 24:     while(SSPCON2bits.SEN == 1);
   708                           
   709  078D  1811               	btfsc	17,0	;volatile
   710  078E  2F90               	goto	u31
   711  078F  2F91               	goto	u30
   712  0790                     u31:
   713  0790  2F8D               	goto	l71
   714  0791                     u30:
   715  0791                     l74:
   716  0791  1283               	bcf	3,5	;RP0=0, select bank0
   717  0792  1D8C               	btfss	12,3	;volatile
   718  0793  2F95               	goto	u41
   719  0794  2F96               	goto	u40
   720  0795                     u41:
   721  0795  2F91               	goto	l74
   722  0796                     u40:
   723  0796                     l76:
   724                           
   725                           ;i2c.c: 26:     SSPIF = 0;
   726  0796  118C               	bcf	12,3	;volatile
   727  0797                     l77:
   728  0797  0008               	return
   729  0798                     __end_of_i2c_start:
   730                           
   731                           	psect	text5
   732  07AB                     __ptext5:	
   733 ;; *************** function _i2c_read *****************
   734 ;; Defined at:
   735 ;;		line 44 in file "i2c.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;		None
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      unsigned char 
   742 ;; Registers used:
   743 ;;		wreg, status,2, status,0, pclath, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   749 ;;      Params:         0       0       0       0       0
   750 ;;      Locals:         0       0       0       0       0
   751 ;;      Temps:          0       0       0       0       0
   752 ;;      Totals:         0       0       0       0       0
   753 ;;Total ram usage:        0 bytes
   754 ;; Hardware stack levels used:    1
   755 ;; Hardware stack levels required when called:    1
   756 ;; This function calls:
   757 ;;		_i2c_idle
   758 ;; This function is called by:
   759 ;;		_readV
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           
   764                           ;psect for function _i2c_read
   765  07AB                     _i2c_read:
   766  07AB                     l739:	
   767                           ;incstack = 0
   768                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
   769                           
   770                           
   771                           ;i2c.c: 45:     i2c_idle();
   772  07AB  120A  118A  275C  120A  118A  	fcall	_i2c_idle
   773  07B0                     l741:
   774                           
   775                           ;i2c.c: 46:     SSPCON2bits.RCEN = 1;
   776  07B0  1683               	bsf	3,5	;RP0=1, select bank1
   777  07B1  1303               	bcf	3,6	;RP1=0, select bank1
   778  07B2  1591               	bsf	17,3	;volatile
   779  07B3                     l98:	
   780                           ;i2c.c: 47:     while(SSPCON2bits.RCEN == 1);
   781                           
   782  07B3  1991               	btfsc	17,3	;volatile
   783  07B4  2FB6               	goto	u61
   784  07B5  2FB7               	goto	u60
   785  07B6                     u61:
   786  07B6  2FB3               	goto	l98
   787  07B7                     u60:
   788  07B7                     l101:
   789  07B7  1C14               	btfss	20,0	;volatile
   790  07B8  2FBA               	goto	u71
   791  07B9  2FBB               	goto	u70
   792  07BA                     u71:
   793  07BA  2FB7               	goto	l101
   794  07BB                     u70:
   795  07BB                     l743:
   796                           
   797                           ;i2c.c: 49:     return SSPBUF;
   798  07BB  1283               	bcf	3,5	;RP0=0, select bank0
   799  07BC  1303               	bcf	3,6	;RP1=0, select bank0
   800  07BD  0813               	movf	19,w	;volatile
   801  07BE                     l104:
   802  07BE  0008               	return
   803  07BF                     __end_of_i2c_read:
   804                           
   805                           	psect	text6
   806  075C                     __ptext6:	
   807 ;; *************** function _i2c_idle *****************
   808 ;; Defined at:
   809 ;;		line 81 in file "i2c.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;		None
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg, status,2
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   823 ;;      Params:         0       0       0       0       0
   824 ;;      Locals:         0       0       0       0       0
   825 ;;      Temps:          0       0       0       0       0
   826 ;;      Totals:         0       0       0       0       0
   827 ;;Total ram usage:        0 bytes
   828 ;; Hardware stack levels used:    1
   829 ;; This function calls:
   830 ;;		Nothing
   831 ;; This function is called by:
   832 ;;		_i2c_start
   833 ;;		_i2c_read
   834 ;;		_i2c_write
   835 ;;		_i2c_restart
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           
   840                           ;psect for function _i2c_idle
   841  075C                     _i2c_idle:
   842  075C                     l723:	
   843                           ;incstack = 0
   844                           ; Regs used in _i2c_idle: [wreg+status,2]
   845                           
   846  075C                     l725:	
   847                           ;i2c.c: 82:     while((SSPCON2 & 0x1F)|| (SSPSTAT & 0x04));
   848                           
   849  075C  1683               	bsf	3,5	;RP0=1, select bank1
   850  075D  1303               	bcf	3,6	;RP1=0, select bank1
   851  075E  0811               	movf	17,w	;volatile
   852  075F  391F               	andlw	31
   853  0760  1D03               	btfss	3,2
   854  0761  2F63               	goto	u11
   855  0762  2F64               	goto	u10
   856  0763                     u11:
   857  0763  2F5C               	goto	l725
   858  0764                     u10:
   859  0764                     l727:
   860  0764  1914               	btfsc	20,2	;volatile
   861  0765  2F67               	goto	u21
   862  0766  2F68               	goto	u20
   863  0767                     u21:
   864  0767  2F5C               	goto	l725
   865  0768                     u20:
   866  0768                     l128:
   867  0768  0008               	return
   868  0769                     __end_of_i2c_idle:
   869                           
   870                           	psect	text7
   871  0769                     __ptext7:	
   872 ;; *************** function _i2c_init *****************
   873 ;; Defined at:
   874 ;;		line 10 in file "i2c.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;		None
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, status,2
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   888 ;;      Params:         0       0       0       0       0
   889 ;;      Locals:         0       0       0       0       0
   890 ;;      Temps:          0       0       0       0       0
   891 ;;      Totals:         0       0       0       0       0
   892 ;;Total ram usage:        0 bytes
   893 ;; Hardware stack levels used:    1
   894 ;; This function calls:
   895 ;;		Nothing
   896 ;; This function is called by:
   897 ;;		_main
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           
   902                           ;psect for function _i2c_init
   903  0769                     _i2c_init:
   904  0769                     l749:	
   905                           ;incstack = 0
   906                           ; Regs used in _i2c_init: [wreg+status,2]
   907                           
   908                           
   909                           ;i2c.c: 12:     TRISCbits.TRISC3 = 1;
   910  0769  1683               	bsf	3,5	;RP0=1, select bank1
   911  076A  1303               	bcf	3,6	;RP1=0, select bank1
   912  076B  1587               	bsf	7,3	;volatile
   913                           
   914                           ;i2c.c: 13:     TRISCbits.TRISC4 = 1;
   915  076C  1607               	bsf	7,4	;volatile
   916  076D                     l751:
   917                           
   918                           ;i2c.c: 14:     SSPADD = 0x09;
   919  076D  3009               	movlw	9
   920  076E  0093               	movwf	19	;volatile
   921                           
   922                           ;i2c.c: 15:     SSPSTAT = 0x80;
   923  076F  3080               	movlw	128
   924  0770  0094               	movwf	20	;volatile
   925  0771                     l753:
   926                           
   927                           ;i2c.c: 16:     SSPCON2 = 0x00;
   928  0771  0191               	clrf	17	;volatile
   929  0772                     l755:
   930                           
   931                           ;i2c.c: 17:     SSPCON = 0x28;
   932  0772  3028               	movlw	40
   933  0773  1283               	bcf	3,5	;RP0=0, select bank0
   934  0774  1303               	bcf	3,6	;RP1=0, select bank0
   935  0775  0094               	movwf	20	;volatile
   936  0776                     l68:
   937  0776  0008               	return
   938  0777                     __end_of_i2c_init:
   939  007E                     btemp	set	126	;btemp
   940  007E                     wtemp0	set	126
   941                           
   942                           	psect	config
   943                           
   944                           ;Config register CONFIG1 @ 0x2007
   945                           ;	Oscillator Selection bits
   946                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   947                           ;	Watchdog Timer Enable bit
   948                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   949                           ;	Power-up Timer Enable bit
   950                           ;	PWRTE = OFF, PWRT disabled
   951                           ;	RE3/MCLR pin function select bit
   952                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   953                           ;	Code Protection bit
   954                           ;	CP = OFF, Program memory code protection is disabled
   955                           ;	Data Code Protection bit
   956                           ;	CPD = OFF, Data memory code protection is disabled
   957                           ;	Brown Out Reset Selection bits
   958                           ;	BOREN = ON, BOR enabled
   959                           ;	Internal External Switchover bit
   960                           ;	IESO = ON, Internal/External Switchover mode is enabled
   961                           ;	Fail-Safe Clock Monitor Enabled bit
   962                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   963                           ;	Low Voltage Programming Enable bit
   964                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
   965                           ;	In-Circuit Debugger Mode bit
   966                           ;	DEBUG = 0x1, unprogrammed default
   967  2007                     	org	8199
   968  2007  3FF2               	dw	16370
   969                           
   970                           ;Config register CONFIG2 @ 0x2008
   971                           ;	Brown-out Reset Selection bit
   972                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   973                           ;	Flash Program Memory Self Write Enable bits
   974                           ;	WRT = OFF, Write protection off
   975  2008                     	org	8200
   976  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _readV->_i2c_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      15
                                              1 COMMON     3     3      0
                           _i2c_init
                              _readV
 ---------------------------------------------------------------------------------
 (1) _readV                                                0     0      0      15
                           _i2c_read
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      15
                                              0 COMMON     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_init
   _readV
     _i2c_read
       _i2c_idle
     _i2c_start
       _i2c_idle
     _i2c_stop
     _i2c_write
       _i2c_idle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon May 24 21:40:46 2021

            _SSPSTATbits 0094                       l31 07D7                       l71 078D  
                     l74 0791                       l68 0776                       l76 0796  
                     l92 077E                       l77 0797                       l94 0783  
                     l95 0784                       l89 077A                       l98 07B3  
                     u10 0764                       u11 0763                       u20 0768  
                     u21 0767                       u30 0791                       u31 0790  
                     u40 0796                       u41 0795                       u50 07AA  
                     u51 07A9                       u60 07B7                       u61 07B6  
                     u70 07BB                       u71 07BA                       u80 077E  
                     u81 077D                       u90 0783                       u91 0782  
                    l101 07B7                      l110 07AA                      l104 07BE  
                    l128 0768                      l723 075C                      l731 078A  
                    l725 075C                      l741 07B0                      l733 0799  
                    l751 076D                      l727 0764                      l743 07BB  
                    l735 079E                      l753 0771                      l729 0785  
                    l737 07A2                      l761 07D8                      l755 0772  
                    l739 07AB                      l747 0777                      l763 07E1  
                    l749 0769                      l757 07BF                      l765 07E6  
                    l759 07D2                      l767 07EB                      _GIE 005F  
                    u147 07F1                     _PEIE 005E                     _main 07D8  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTB 0006                    _TRISB 0086                    _SSPIE 0463  
                  _SSPIF 0063                    _readV 07BF                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
       __end_of_i2c_idle 0769         __end_of_i2c_init 0777         __end_of_i2c_read 07BF  
       __end_of_i2c_stop 0785                   ??_main 0071                   ?_readV 0070  
                 _ANSELH 0189                   _SSPADD 0093                   _SSPCON 0014  
                 _SSPBUF 0013       __size_of_i2c_start 0013       __size_of_i2c_write 0013  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_readV 07D8  
      __end_of_i2c_start 0798        __end_of_i2c_write 07AB                  ??_readV 0071  
              ?_i2c_idle 0070                ?_i2c_init 0070                ?_i2c_read 0070  
              ?_i2c_stop 0070               __pmaintext 07D8                  _SSPCON2 0091  
                _SSPSTAT 0094               ??_i2c_idle 0070               ??_i2c_init 0070  
             ??_i2c_read 0070               ??_i2c_stop 0070                  __ptext1 07BF  
                __ptext2 0798                  __ptext3 0777                  __ptext4 0785  
                __ptext5 07AB                  __ptext6 075C                  __ptext7 0769  
   end_of_initialization 07FC            i2c_write@dato 0070                _TRISCbits 0087  
    start_initialization 07FC                _i2c_start 0785                _i2c_write 0798  
      __size_of_i2c_idle 000D        __size_of_i2c_init 000E        __size_of_i2c_read 0014  
      __size_of_i2c_stop 000E                ___latbits 0002               ?_i2c_start 0070  
             ?_i2c_write 0070           __size_of_readV 0019                 _PIE1bits 008C  
               _PIR1bits 000C              ??_i2c_start 0070              ??_i2c_write 0070  
               _i2c_idle 075C                 _i2c_init 0769                 _i2c_read 07AB  
               _i2c_stop 0777            __size_of_main 0024               _INTCONbits 000B  
            _SSPCON2bits 0091               _SSPCONbits 0014  
